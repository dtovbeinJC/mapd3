{"version":3,"sources":["webpack:///webpack/universalModuleDefinition","webpack:///mapd3.min.js","webpack:///webpack/bootstrap 43b7664c9911dda89288","webpack:///./src/bundle.js","webpack:///./src/charts/chart.js","webpack:///./src/charts/helpers/d3-service.js","webpack:///./~/d3/build/d3.js","webpack:///./src/charts/helpers/colors.js","webpack:///./src/charts/helpers/constants.js","webpack:///./src/charts/helpers/common.js","webpack:///./src/charts/scale.js","webpack:///./src/charts/line.js","webpack:///./src/charts/bar.js","webpack:///./src/charts/sunburst.js","webpack:///./src/charts/axis.js","webpack:///./src/charts/tooltip.js","webpack:///./src/charts/legend.js","webpack:///./src/charts/brush.js","webpack:///./src/charts/hover.js","webpack:///./src/charts/binning.js","webpack:///./src/charts/interactors.js","webpack:///./src/charts/domain-editor.js","webpack:///./src/charts/brush-range-editor.js","webpack:///./src/charts/label.js","webpack:///./src/charts/data-manager.js","webpack:///./src/charts/observer.js"],"names":["root","factory","exports","module","define","amd","this","modules","__webpack_require__","moduleId","installedModules","id","loaded","call","m","c","p","_interopRequireDefault","obj","__esModule","default","Object","defineProperty","value","Sunburst","colors","Interactors","Hover","Brush","Label","BrushRangeEditor","DomainEditor","Binning","Observer","DataManager","Legend","Tooltip","Chart","undefined","_chart","_chart2","_tooltip","_tooltip2","_legend","_legend2","_dataManager","_dataManager2","_observer","_observer2","_binning","_binning2","_domainEditor","_domainEditor2","_brushRangeEditor","_brushRangeEditor2","_label","_label2","_brush","_brush2","_hover","_hover2","_interactors","_interactors2","_colors","_sunburst","_sunburst2","_interopRequireWildcard","newObj","key","prototype","hasOwnProperty","_container","render","buildSVG","dataObject","dataBySeries","console","log","buildChart","config","chartType","w","width","cache","container","clientWidth","h","height","clientHeight","chartWidth","Math","max","margin","left","right","chartHeight","top","bottom","template","svg","base","d3","select","html","style","headerGroup","panel","chart","addEvents","assign","components","scale","_scale2","axis","_axis2","line","_line2","bar","_bar2","sunburst","tooltip","legend","brush","hover","binning","domainEditor","brushRangeEditor","label","eventCollector","onBrush","_common","rebind","onHover","onBinning","onDomainEditor","onBrushRangeEditor","onLabel","onPanel","dispatcher","attr","setConfig","setData","scales","getScales","setScales","drawAxis","drawGridLines","loadData","drawMarks","bindEvents","setVisibility","tooltipIsEnabled","legendContent","map","d","setTitle","legendTitle","setContent","setXPosition","legendXPosition","setYPosition","legendYPosition","drawTooltip","legendIsEnabled","setBrushExtent","brushRangeMin","brushRangeMax","brushIsEnabled","drawBrush","setBinning","binningResolution","setAuto","binningIsAuto","drawBinning","binningIsEnabled","drawDomainEditor","domainEditorIsEnabled","setRangeMin","setRangeMax","drawRangeEditor","brushRangeIsEnabled","setXLabels","xLabel","setYLabels","yLabel","setY2Labels","y2Label","drawLabels","triggerIntroAnimation","_data","data","cloneData","_constants","keys","SERIES","cleanedData","dataManager","cleanData","keyType","fileData","Error","text","csv","csvParseRows","buildHierarchy","isAnimated","maskingRectangle","transition","duration","animationDuration","ease","on","remove","THROTTLE_DELAY","throttledDispatch","throttle","apply","arguments","mouse","node","_d3$mouse","_d3$mouse2","_slicedToArray","mouseX","mouseY","xPosition","dataPoint","getNearestDataPoint","dataPointXPosition","xScale","DATA","getEvents","_config","override","destroy","csvToJson","json","series","labels","addLabel","forEach","row","index","push","getObjectToPush","__index__","group","values","easeLinear","colorSchema","mapdColors","defaultColor","xDomain","yDomain","y2Domain","tickPadding","xAxisFormat","yAxisFormat","y2AxisFormat","tickSizes","yTicks","y2Ticks","xTickSkip","grid","axisTransitionDuration","xTitle","yTitle","dotRadius","mouseChaseDuration","tooltipEase","easeQuadInOut","tooltipHeight","tooltipWidth","seriesOrder","dateFormat","numberFormat","binningToggles","yScale","y2Scale","hasSecondAxis","colorScale","xAxis","yAxis","yAxis2","dataByKey","groupKeys","stackData","stack","flatDataSorted","dispatch","sliceIterator","arr","i","_arr","_n","_d","_e","_s","_i","Symbol","iterator","next","done","length","err","Array","isArray","TypeError","_d3Service","_scale","_line","_bar","_axis","enumerable","get","axisBottom","axisLeft","axisRight","timeFormat","utcFormat","format","bisector","extent","sum","range","merge","nest","event","randomUniform","randomNormal","timeDay","timeMonth","area","curveCatmullRom","stackOffsetNone","stackOrderNone","scaleTime","scalePoint","scaleBand","scaleLinear","scaleOrdinal","brushX","arc","partition","hierarchy","entries","selectAll","global","ascendingComparator","f","x","ascending","pair","a","b","tickIncrement","start","stop","count","step","power","floor","LN10","error","pow","e10","e5","e2","tickStep","step0","abs","step1","translateX","translateY","y","number$1","center","offset","bandwidth","round","entering","__axis","orient","context","tickValues","ticks","tickArguments","domain","tickFormat","identity$1","spacing","tickSizeInner","range0","range1","position","copy","selection","path","tick","order","tickExit","exit","tickEnter","enter","append","insert","k","epsilon","isFinite","transform","getAttribute","parentNode","tickSizeOuter","filter","each","_","slice$1","slice","tickSize","axisTop","t","n","Dispatch","parseTypenames","typenames","types","trim","split","name","indexOf","type","set","callback","noop","concat","creatorInherit","document","ownerDocument","uri","namespaceURI","xhtml","documentElement","createElement","createElementNS","creatorFixed","fullname","space","local","local$1","Local","nextId","toString","filterContextListener","listener","contextListener","related","relatedTarget","compareDocumentPosition","event1","event0","__data__","parseTypenames$1","onRemove","typename","__on","o","j","removeEventListener","capture","onAdd","wrap","filterEvents","addEventListener","customEvent","that","args","sourceEvent","none","empty$1","EnterNode","parent","datum","_next","_parent","bindIndex","update","groupLength","dataLength","bindKey","keyValue","nodeByKeyValue","keyValues","keyPrefix","ascending$1","NaN","attrRemove","removeAttribute","attrRemoveNS","removeAttributeNS","attrConstant","setAttribute","attrConstantNS","setAttributeNS","attrFunction","v","attrFunctionNS","styleRemove","removeProperty","styleConstant","priority","setProperty","styleFunction","styleValue","getPropertyValue","defaultView","getComputedStyle","propertyRemove","propertyConstant","propertyFunction","classArray","string","classList","ClassList","_node","_names","classedAdd","names","list","add","classedRemove","classedTrue","classedFalse","classedFunction","textRemove","textContent","textConstant","textFunction","htmlRemove","innerHTML","htmlConstant","htmlFunction","raise","nextSibling","appendChild","lower","previousSibling","insertBefore","firstChild","constantNull","removeChild","dispatchEvent","params","window","CustomEvent","createEvent","initEvent","bubbles","cancelable","detail","dispatchConstant","dispatchFunction","Selection","groups","parents","_groups","_parents","nopropagation","stopImmediatePropagation","yesdrag","view","noclick","noevent","setTimeout","MozUserSelect","__noselect","DragEvent","target","subject","active","dx","dy","identifier","defaultFilter$1","button","defaultContainer","defaultSubject","defaultTouchable","extend","definition","create","Color","color","toLowerCase","reHex3","exec","parseInt","Rgb","reHex6","rgbn","reRgbInteger","reRgbPercent","reRgbaInteger","rgba","reRgbaPercent","reHslPercent","hsla","reHslaPercent","named","r","g","rgbConvert","rgb","opacity","s","l","Hsl","hslConvert","min","hsl","hsl2rgb","m1","m2","labConvert","Lab","Hcl","deg2rad","cos","sin","rgb2xyz","xyz2lab","Xn","Yn","z","Zn","lab","t3","t2","t0","lab2xyz","t1","xyz2rgb","hclConvert","atan2","rad2deg","sqrt","hcl","cubehelixConvert","Cubehelix","BC_DA","ED","EB","bl","E","C","D","cubehelix","basis","v0","v1","v2","v3","linear","exponential","hue","constant$3","isNaN","gamma","nogamma","rgbSpline","spline","color$$1","zero","one","parseCss","identity$2","cssNode","cssRoot","cssView","decompose","parseSvg","svgNode","baseVal","consolidate","matrix","e","interpolateTransform","parse","pxComma","pxParen","degParen","pop","translate","xa","ya","xb","yb","q","reinterpolate","rotate","skewX","scaleX","scaleY","join","cosh","exp","sinh","tanh","hsl$1","hue$$1","end","lab$1","hcl$1","cubehelix$1","cubehelixGamma","cubehelix$$1","now","clockNow","setFrame","clearNow","clock","clockSkew","Timer","_call","_time","timer","delay","time","restart","timerFlush","frame","taskHead","wake","clockLast","timeout","nap","poke","pokeDelay","Infinity","taskTail","sleep","clearTimeout","interval","clearInterval","setInterval","init","schedule","__transition","state","CREATED","set$1","STARTING","get$1","self","elapsed","SCHEDULED","schedules","STARTED","timeout$1","RUNNING","ENDED","tween","ENDING","tweenRemove","tween0","tween1","schedule$$1","splice","tweenFunction","tweenValue","_id","attrRemove$1","attrRemoveNS$1","attrConstant$1","interpolate$$1","value1","value00","interpolate0","value0","attrConstantNS$1","getAttributeNS","attrFunction$1","value10","attrFunctionNS$1","attrTweenNS","_value","attrTween","delayFunction","delayConstant","durationFunction","durationConstant","easeConstant","every","onFunction","on0","on1","sit","removeFunction","styleRemove$1","styleRemoveEnd","styleConstant$1","styleFunction$1","styleTween","textConstant$1","textFunction$1","Transition","_name","newId","linear$1","quadIn","quadOut","quadInOut","cubicIn","cubicOut","cubicInOut","sinIn","halfPi","sinOut","sinInOut","pi","expIn","expOut","expInOut","circleIn","circleOut","circleInOut","bounceIn","bounceOut","b1","b0","b3","b2","b4","b6","b5","b7","b8","b9","bounceInOut","inherit","timing","defaultTiming","nopropagation$1","defaultFilter","defaultExtent","ownerSVGElement","__brush","empty","brushSelection","dim","output","brush$1","X","brushY","Y","overlay","property","initialize","cursors","handle","handles","redraw","started","handleSize","emitter","Emitter","moved","point1","shifting","lockX","lockY","point","moving","noevent$1","move","point0","mode","MODE_SPACE","MODE_DRAG","signX","W","w0","e0","w1","e1","signY","N","n0","S","s0","n1","s1","MODE_HANDLE","MODE_CENTER","flipX","flipY","emit","ended","touches","touchending","keydowned","keyCode","keyupped","altKey","changedTouches","metaKey","signsX","signsY","shiftKey","beforestart","dragDisable","interrupt","listeners","selection1","selection0","input","interpolateValue","starting","BrushEvent","constant$4","compareValue","compare","source","Path","_x0","_y0","_x1","_y1","defaultSource","defaultTarget","defaultRadius","radius","defaultStartAngle","startAngle","defaultEndAngle","endAngle","Map","map$1","object","createObject","setObject","createMap","setMap","Set","set$2","objectConverter","columns","Function","JSON","stringify","customConverter","inferColumns","rows","columnSet","column","tree","xm","ym","xp","yp","_root","leaf","x0","y0","x1","y1","_x","_y","addAll","xz","yz","cover","removeAll","defaultX","defaultY","quadtree","nodes","Quadtree","leaf_copy","vx","vy","find","nodeById","nodeId","x$1","y$1","formatSpecifier","specifier","FormatSpecifier","match","re","fill","align","sign","symbol","comma","precision","formatTypes","defaultLocale","locale","formatLocale","formatPrefix","Adder","reset","add$1","adder","bv","av","acos","pi$3","asin","halfPi$2","haversin","sin$1","noop$1","streamGeometry","geometry","stream","streamGeometryType","streamLine","coordinates","closed","coordinate","lineStart","lineEnd","streamPolygon","polygonStart","polygonEnd","areaRingStart","areaStream","areaPointFirst","areaRingEnd","areaPoint","lambda00","phi00","lambda","phi","radians","lambda0","cosPhi0","cos$1","quarterPi","sinPhi0","dLambda","sdLambda","adLambda","cosPhi","sinPhi","u","areaRingSum","spherical","cartesian","cartesianDot","cartesianCross","cartesianAddInPlace","cartesianScale","vector","cartesianNormalizeInPlace","boundsPoint","ranges","lambda0$1","lambda1","phi0","phi1","linePoint","p0","normal","equatorial","inflection","phii","delta","lambda2","sign$$1","lambdai","degrees$1","antimeridian","angle","boundsLineStart","boundsStream","boundsLineEnd","boundsRingPoint","deltaSum","lambda00$1","phi00$1","boundsRingStart","boundsRingEnd","epsilon$2","rangeCompare","rangeContains","centroidPoint","centroidPointCartesian","W0","X0","Y0","Z0","centroidLineStart","centroidStream","centroidLinePointFirst","z0","centroidLinePoint","W1","X1","Y1","Z1","centroidLineEnd","centroidRingStart","centroidRingPointFirst","centroidRingEnd","centroidRingPoint","lambda00$2","phi00$2","cx","cy","cz","X2","Y2","Z2","rotationIdentity","tau$3","rotateRadians","deltaLambda","deltaPhi","deltaGamma","compose","rotationLambda","rotationPhiGamma","forwardRotationLambda","rotation","invert","cosDeltaPhi","sinDeltaPhi","cosDeltaGamma","sinDeltaGamma","circleStream","direction","cosRadius","sinRadius","circleRadius","Intersection","points","other","entry","link$1","array","validSegment","segment","compareIntersection","clipAntimeridianLine","clean","sign0","sign1","clipAntimeridianIntersect","cosPhi1","sinLambda0Lambda1","atan","clipAntimeridianInterpolate","from","to","clipRectangle","visible","interpolate","a1","corner","comparePoint","ca","cb","activeStream","polygonInside","winding","polygon","a0","ring","bufferStream","segments","startInside","cleanInside","clipRejoin","clipStream","first","v_","x_","y_","x__","y__","v__","rejoin","result","clipMin","clipMax","clipLine","clipBuffer","lengthLineStart","lengthStream","lengthPointFirst","lengthLineEnd","lambda0$2","sinPhi0$1","cosPhi0$1","lengthPoint","cosDelta","sinDelta","lengthSum","containsGeometry","containsGeometryType","containsPoint","distance","containsLine","ab","ao","ob","containsPolygon","polygonContains","ringRadians","pointRadians","graticuleX","sequence","graticuleY","graticule","lines","ceil","DX","DY","outline","reverse","extentMajor","extentMinor","stepMajor","stepMinor","graticule10","areaRingStart$1","areaStream$1","areaPointFirst$1","areaPoint$1","x00","x0$1","y00","y0$1","areaRingSum$1","areaRingEnd$1","boundsPoint$1","x0$2","y0$2","centroidPoint$1","X0$1","Y0$1","Z0$1","centroidLineStart$1","centroidStream$1","centroidPointFirstLine","centroidPointLine","x0$3","y0$3","X1$1","Y1$1","Z1$1","centroidLineEnd$1","centroidRingStart$1","centroidPointFirstRing","centroidRingEnd$1","centroidPointRing","x00$1","y00$1","X2$1","Y2$1","Z2$1","PathContext","_context","lengthPointFirst$1","lengthStream$1","lengthPoint$1","x00$2","x0$4","y00$2","y0$4","lengthSum$1","PathString","_string","circle$1","transformer","methods","TransformStream","fitExtent","projection","clip","clipExtent","geoStream","boundsStream$1","fitSize","size","resampleNone","project","resample$1","delta2","resampleLineTo","c0","c1","depth","d2","phi2","x2","y2","dx2","dy2","dz","cosMinDistance","resampleStream","maxDepth","ringStart","ringPoint","ringEnd","a00","b00","c00","transformRotate","projectionMutator","projectAt","projectRotate","projectTransform","recenter","cacheStream","theta","preclip","clipAntimeridian","postclip","identity$4","projectResample","resample","transformRadians","clipAngle","clipCircle","conicProjection","parallels","cylindricalEqualAreaRaw","forward","conicEqualAreaRaw","r0","sy0","r0y","multiplex","streams","sphere","azimuthalRaw","azimuthalInvert","sc","cc","mercatorRaw","tan","mercatorProjection","reclip","tany","conicConformalRaw","cy0","fy","equirectangularRaw","conicEquidistantRaw","gy","nx","gnomonicRaw","scaleTranslate","kx","ky","tx","ty","naturalEarth1Raw","phi4","orthographicRaw","stereographicRaw","transverseMercatorRaw","defaultSeparation","meanX","children","reduce","meanXReduce","maxY","maxYReduce","leafLeft","leafRight","leastCommonAncestor","aNodes","ancestors","bNodes","child","childs","Node","valued","defaultChildren","eachBefore","computeHeight","node_copy","copyData","shuffle$1","random","extendBasis","B","enclosesWeakAll","enclosesNot","encloseBasis2","encloseBasis3","dr","enclosesWeak","encloseBasis","encloseBasis1","r1","r2","x21","y21","r21","x3","y3","r3","a2","a3","c2","c3","d1","A","place","ax","ay","da","db","dc","intersects","score","Node$1","circle","previous","packEnclose","circles","aa","sj","sk","pack","enclose","optional","required","constantZero","defaultRadius$1","radiusLeaf","packChildren","padding","translateChild","defaultId","defaultParentId","parentId","defaultSeparation$1","nextLeft","nextRight","moveSubtree","wm","wp","shift","change","executeShifts","nextAncestor","vim","ancestor","TreeNode","treeRoot","squarifyRatio","ratio","nodeValue","sumValue","minValue","maxValue","newRatio","minRatio","alpha","beta","i0","i1","dice","treemapDice","treemapSlice","lexicographicOrder","computeUpperHullIndexes","indexes","cross$1","Queue","_size","_error","_tasks","_waiting","_active","_ended","_start","poke$1","start$1","abort","noabort","maybeNotify","queue","concurrency","fixCallback","xhr","hasResponse","responseType","response","responseText","responseOf","request$$1","ordinal","unknown","implicit","slice$5","has","band","rescale","range$$1","paddingInner","paddingOuter","ordinalRange","rangeRound","pointish","point$1","deinterpolateLinear","constant$9","deinterpolateClamp","deinterpolate","reinterpolateClamp","bimap","d0","polymap","bisectRight","clamp","continuous","piecewise","unit","map$3","number$2","interpolateRound","linearish","nice","linear$2","identity$6","reinterpolate$1","pow10","powp","logp","log10","log2","reflect","log$1","logs","pows","raise$1","exponent","pow$1","sqrt$1","quantile$$1","thresholds","threshold","invertExtent","sort","quantiles","quantize$1","threshold$1","newInterval","floori","offseti","field","date","Date","test","setTime","t0$1","t1$1","weekday","setDate","getDate","getDay","setHours","getTimezoneOffset","durationMinute$1","durationWeek$1","utcWeekday","setUTCDate","getUTCDate","getUTCDay","setUTCHours","localDate","H","M","L","setFullYear","utcDate","UTC","setUTCFullYear","newYear","formatLocale$1","newFormat","formats","pad","charCodeAt","pads","charAt","newParse","newDate","parseSpecifier","day$$1","U","Z","parses","parsePeriod","periodRe","periodLookup","parseShortWeekday","shortWeekdayRe","shortWeekdayLookup","parseWeekday","weekdayRe","weekdayLookup","parseShortMonth","shortMonthRe","shortMonthLookup","parseMonth","monthRe","monthLookup","parseLocaleDateTime","locale_dateTime","parseLocaleDate","locale_date","parseLocaleTime","locale_time","formatShortWeekday","locale_shortWeekdays","formatWeekday","locale_weekdays","formatShortMonth","locale_shortMonths","getMonth","formatMonth","locale_months","formatPeriod","locale_periods","getHours","formatUTCShortWeekday","formatUTCWeekday","formatUTCShortMonth","getUTCMonth","formatUTCMonth","formatUTCPeriod","getUTCHours","dateTime","periods","days","shortDays","months","shortMonths","formatRe","formatLookup","formatDayOfMonth","formatHour24","I","formatHour12","formatDayOfYear","formatMilliseconds","formatMonthNumber","formatMinutes","formatSeconds","formatWeekNumberSunday","formatWeekdayNumber","formatWeekNumberMonday","formatYear","formatFullYear","formatZone","%","formatLiteralPercent","utcFormats","formatUTCDayOfMonth","formatUTCHour24","formatUTCHour12","formatUTCDayOfYear","formatUTCMilliseconds","formatUTCMonthNumber","formatUTCMinutes","formatUTCSeconds","formatUTCWeekNumberSunday","formatUTCWeekdayNumber","formatUTCWeekNumberMonday","formatUTCYear","formatUTCFullYear","formatUTCZone","parseDayOfMonth","parseHour24","parseDayOfYear","parseMilliseconds","parseMonthNumber","parseMinutes","parseSeconds","parseWeekNumberSunday","parseWeekdayNumber","parseWeekNumberMonday","parseYear","parseFullYear","parseZone","parseLiteralPercent","utcParse","requote","replace","requoteRe","RegExp","numberRe","percentRe","day","year","getMilliseconds","getMinutes","getSeconds","sunday","monday","getFullYear","utcDay","utcYear","getUTCMilliseconds","getUTCMinutes","getUTCSeconds","utcSunday","utcMonday","getUTCFullYear","defaultLocale$1","locale$1","timeParse","formatIsoNative","toISOString","parseIsoNative","date$1","number$3","calendar","year$$1","month$$1","week","hour$$1","minute$$1","second$$1","millisecond$$1","formatMillisecond","formatSecond","formatMinute","formatHour","formatDay","formatWeek","tickInterval","tickIntervals","durationYear","durationSecond","durationMinute","durationHour","durationDay","durationWeek","durationMonth","ramp","sequential","interpolator","acos$1","pi$4","asin$1","halfPi$3","arcInnerRadius","innerRadius","arcOuterRadius","outerRadius","arcStartAngle","arcEndAngle","arcPadAngle","padAngle","intersect","x10","y10","x32","y32","cornerTangents","rc","cw","x01","y01","lo","sqrt$2","ox","oy","x11","y11","max$2","cx0","cx1","cy1","dx0","dy0","dx1","dy1","Linear","x$3","y$3","Radial","curve","_curve","curveRadial","radial","lineRadial","linkSource","linkTarget","link$2","link","buffer","argv","slice$6","x$$1","y$$1","constant$10","curveHorizontal","moveTo","bezierCurveTo","curveVertical","curveRadial$1","pointRadial","p1","p2","p3","linkHorizontal","linkVertical","linkRadial","point$2","Basis","BasisClosed","BasisOpen","Bundle","_basis","_beta","point$3","_k","_x2","_y2","Cardinal","tension","CardinalClosed","CardinalOpen","point$4","_l01_a","epsilon$3","_l01_2a","_l12_a","_l12_2a","_l23_a","_l23_2a","CatmullRom","_alpha","CatmullRomClosed","CatmullRomOpen","LinearClosed","sign$1","slope3","h0","h1","slope2","point$5","MonotoneX","MonotoneY","ReflectContext","monotoneX","monotoneY","Natural","controlPoints","Step","_t","stepBefore","stepAfter","stackValue","sum$2","x$4","y$4","RedBlackTree","RedBlackNode","R","P","RedBlackRotateLeft","RedBlackRotateRight","RedBlackFirst","createEdge","edge","edges","setEdgeEnd","cells","halfedges","createBorderEdge","vertex","clipEdge","bx","by","connectEdge","fm","fb","lx","ly","rx","ry","fx","clipEdges","epsilon$4","createCell","site","cellHalfedgeAngle","cell","va","vb","cellHalfedgeStart","cellHalfedgeEnd","sortCellHalfedges","clipCells","iCell","iHalfedge","nHalfedges","startX","startY","endX","endY","nCells","v00","v01","v11","v10","Circle","attachCircle","lArc","rArc","lSite","cSite","rSite","epsilon2$2","ha","hc","circlePool","before","firstCircle","detachCircle","Beach","createBeach","beach","beachPool","detachBeach","beaches","removeBeach","disappearing","unshift","iArc","nArcs","addBeach","dxl","dxr","directrix","leftBreakPoint","rightBreakPoint","newArc","hb","rfocx","rfocy","pby2","lfocx","lfocy","plby2","hl","aby2","triangleArea","lexicographic","Diagram","sites","ZoomEvent","Transform","transform$1","__zoom","identity$8","nopropagation$2","defaultFilter$2","defaultExtent$1","SVGElement","defaultTransform","defaultWheelDelta","deltaY","deltaMode","defaultTouchable$1","version","hi","mid","ascendingBisect","bisectLeft","pairs","cross","values0","values1","descending","number","variance","valueof","mean","deviation","constant","identity","sturges","LN2","histogram","tz","bin","bins","freedmanDiaconis","scott","median","numbers","arrays","merged","permute","permutes","scan","xi","xj","shuffle","transpose","zip","constructor","T","namespaces","xlink","xml","xmlns","namespace","prefix","creator","matcher","selector","matches","element","vendorMatches","webkitMatchesSelector","msMatchesSelector","mozMatchesSelector","oMatchesSelector","matcher$1","element$1","mouseenter","mouseleave","selection_on","current","createSVGPoint","clientX","clientY","matrixTransform","getScreenCTM","inverse","rect","getBoundingClientRect","clientLeft","clientTop","querySelector","selection_select","subgroups","subnode","subgroup","selectorAll","querySelectorAll","selection_selectAll","selection_filter","sparse","selection_enter","_enter","constant$1","selection_data","bind","enterGroup","updateGroup","exitGroup","_exit","selection_exit","selection_merge","selection$$1","groups0","groups1","m0","merges","group0","group1","selection_order","selection_sort","compareNode","sortgroups","sortgroup","selection_call","selection_nodes","selection_node","selection_size","selection_empty","selection_each","selection_attr","selection_style","selection_property","contains","selection_classed","selection_text","selection_html","selection_raise","selection_lower","selection_append","selection_insert","selection_remove","selection_datum","selection_dispatch","classed","touch","preventDefault","constant$2","drag","mousedowned","touchable","touchstarted","touchmoved","touchended","gesture","mousemoved","mouseupped","mousemoving","mousedownx","mousedowny","clickDistance2","gestures","sublisteners","clickDistance","darker","brighter","reI","reN","reP","aliceblue","antiquewhite","aqua","aquamarine","azure","beige","bisque","black","blanchedalmond","blue","blueviolet","brown","burlywood","cadetblue","chartreuse","chocolate","coral","cornflowerblue","cornsilk","crimson","cyan","darkblue","darkcyan","darkgoldenrod","darkgray","darkgreen","darkgrey","darkkhaki","darkmagenta","darkolivegreen","darkorange","darkorchid","darkred","darksalmon","darkseagreen","darkslateblue","darkslategray","darkslategrey","darkturquoise","darkviolet","deeppink","deepskyblue","dimgray","dimgrey","dodgerblue","firebrick","floralwhite","forestgreen","fuchsia","gainsboro","ghostwhite","gold","goldenrod","gray","green","greenyellow","grey","honeydew","hotpink","indianred","indigo","ivory","khaki","lavender","lavenderblush","lawngreen","lemonchiffon","lightblue","lightcoral","lightcyan","lightgoldenrodyellow","lightgray","lightgreen","lightgrey","lightpink","lightsalmon","lightseagreen","lightskyblue","lightslategray","lightslategrey","lightsteelblue","lightyellow","lime","limegreen","linen","magenta","maroon","mediumaquamarine","mediumblue","mediumorchid","mediumpurple","mediumseagreen","mediumslateblue","mediumspringgreen","mediumturquoise","mediumvioletred","midnightblue","mintcream","mistyrose","moccasin","navajowhite","navy","oldlace","olive","olivedrab","orange","orangered","orchid","palegoldenrod","palegreen","paleturquoise","palevioletred","papayawhip","peachpuff","peru","pink","plum","powderblue","purple","rebeccapurple","red","rosybrown","royalblue","saddlebrown","salmon","sandybrown","seagreen","seashell","sienna","silver","skyblue","slateblue","slategray","slategrey","snow","springgreen","steelblue","teal","thistle","tomato","turquoise","violet","wheat","white","whitesmoke","yellow","yellowgreen","displayable","PI","Kn","basis$1","basisClosed","interpolateRgb","rgbGamma","rgb$$1","rgbBasis","rgbBasisClosed","array$1","nb","na","reA","reB","interpolateString","am","bm","bs","bi","lastIndex","valueOf","degrees","interpolateTransformCss","interpolateTransformSvg","rho","SQRT2","rho2","rho4","epsilon2","interpolateZoom","ux0","uy0","ux1","uy1","coshr0","hsl$2","hslLong","hcl$2","hclLong","cubehelix$2","cubehelixLong","quantize","samples","performance","requestAnimationFrame","interval$1","total","emptyOn","emptyTween","selection_interrupt","transition_tween","transition_attr","transition_attrTween","transition_delay","transition_duration","transition_ease","transition_filter","transition_merge","transition$$1","transition_on","transition_remove","transition_select","transition_selectAll","Selection$1","transition_selection","transition_style","transition_styleTween","transition_text","transition_transition","id0","id1","selection_prototype","polyIn","custom","polyOut","polyInOut","overshoot","backIn","backOut","backInOut","tau","amplitude","period","elasticIn","elasticOut","elasticInOut","selection_transition","root$1","xy","XY","nw","ne","se","sw","pi$1","halfPi$1","tau$1","max$1","chord","groupSums","groupIndex","subgroupIndex","chords","sortGroups","sortSubgroups","di","dj","subindex","sortChords","slice$2","constant$5","pi$2","tau$2","epsilon$1","tauEpsilon","closePath","lineTo","quadraticCurveTo","arcTo","l01_2","x20","y20","l21_2","l20_2","l21","l01","t01","t21","ccw","ribbon","sr","sa0","sa1","sx0","tr","ta0","ta1","clear","createResult","setResult","sortValues","rollup","valuesByKey","sortKey","sortKeys","proto","EOL","EOF","QUOTE","NEWLINE","RETURN","dsv","delimiter","convert","parseRows","token","eof","eol","DELIMITER","formatValue","formatRows","formatRow","reFormat","csvParse","csvFormat","csvFormatRows","tsv","tsvParse","tsvParseRows","tsvFormat","tsvFormatRows","center$1","force","sx","sy","constant$6","jiggle","tree_add","tree_cover","tree_data","visit","tree_extent","Quad","tree_find","quads","tree_remove","retainer","tree_root","tree_size","tree_visit","tree_visitAfter","tree_x","tree_y","treeProto","visitAfter","prefixExponent","collide","quad","rj","ri","yi","strength","ri2","iterations","prepare","radii","links","defaultStrength","distances","strengths","bias","initializeStrength","initializeDistance","initialRadius","initialAngle","simulation","alphaMin","stepper","alphaTarget","alphaDecay","forces","velocityDecay","initializeNodes","initializeForce","closest","manyBody","accumulate","weight","theta2","distanceMax2","distanceMin2","distanceMin","distanceMax","radiuses","x$2","y$2","formatDecimal","toExponential","coefficient","exponent$1","formatGroup","grouping","thousands","substring","formatNumerals","numerals","formatDefault","toPrecision","out","formatPrefixAuto","formatRounded","","toFixed","toUpperCase","identity$3","prefixes","valuePrefix","valueSuffix","suffix","formatType","valueNegative","maybeSuffix","decimal","currency","percent","precisionFixed","precisionPrefix","precisionRound","temp","epsilon2$1","streamObjectType","Feature","FeatureCollection","features","Sphere","Point","MultiPoint","LineString","MultiLineString","Polygon","MultiPolygon","GeometryCollection","geometries","areaSum","areaRing","bounds","feature","deltaMax","centroid","constant$7","pointEqual","isSubject","sum$1","sinPhi1","absDelta","intersection","phiArc","pointVisible","sink","pointLine","pointRing","ringSink","ringSegments","ringBuffer","polygonStarted","cr","point2","smallRadius","code","notHemisphere","two","pa","pb","n2","n2n2","n1n2","determinant","n1xn2","uu","polar","meridian","q1","extent$1","length$1","object$1","containsObjectType","interpolate$1","sy1","kx0","ky0","kx1","ky1","areaSum$1","_radius","pointRadius","_point","lengthRing","_circle","index$1","contextStream","projectionStream","measure","conicEqualArea","albers","albersUsa","lower48Point","alaskaPoint","hawaiiPoint","lower48","alaska","hawaii","pointStream","azimuthalEqualAreaRaw","cxcy","azimuthalEqualArea","azimuthalEquidistantRaw","azimuthalEquidistant","mercator","conicConformal","equirectangular","conicEquidistant","gnomonic","identity$5","transform$$1","reflectX","reflectY","naturalEarth1","orthographic","stereographic","transverseMercator","cluster","previousNode","eachAfter","separation","nodeSize","node_count","node_each","node_eachBefore","node_eachAfter","node_sum","node_sort","node_path","node_ancestors","node_descendants","node_leaves","leaves","node_links","descendants","slice$3","siblings","constant$8","index$2","roundNode","positionNode","keyPrefix$1","preroot","ambiguous","stratify","nodeKey","nodeByKey","firstWalk","secondWalk","sizeNode","midpoint","apportion","vip","vop","vom","sip","sop","sim","som","squarify","index$3","treemap","paddingStack","paddingLeft","paddingTop","paddingRight","paddingBottom","tile","binary","valueOffset","sums","valueTarget","valueLeft","valueRight","xk","yk","sliceDice","resquarify","_squarify","area$1","centroid$1","hull","sortedPoints","flippedPoints","upperIndexes","lowerIndexes","skipLeft","skipRight","contains$1","inside","length$2","perimeter","slice$4","defer","await","results","awaitAll","defaultSource$1","uniform","sourceRandomUniform","sourceRandomNormal","mu","sigma","logNormal","sourceRandomLogNormal","randomLogNormal","irwinHall","sourceRandomIrwinHall","randomIrwinHall","bates","sourceRandomBates","randomBates","exponential$1","sourceRandomExponential","randomExponential","request","url","respond","status","mimeType","headers","XMLHttpRequest","user","password","XDomainRequest","onload","onerror","ontimeout","onreadystatechange","readyState","onprogress","header","send","post","method","open","setRequestHeader","overrideMimeType","type$1","defaultMimeType","createRange","createContextualFragment","responseXML","dsv$1","csv$1","tsv$1","array$2","millisecond","milliseconds","durationSecond$1","durationHour$1","durationDay$1","second","seconds","minute","minutes","hour","hours","tuesday","wednesday","thursday","friday","saturday","sundays","mondays","tuesdays","wednesdays","thursdays","fridays","saturdays","month","setMonth","years","utcMinute","setUTCSeconds","utcMinutes","utcHour","setUTCMinutes","utcHours","utcDays","utcTuesday","utcWednesday","utcThursday","utcFriday","utcSaturday","utcSundays","utcMondays","utcTuesdays","utcWednesdays","utcThursdays","utcFridays","utcSaturdays","utcMonth","setUTCMonth","utcMonths","utcYears","-","0","isoSpecifier","formatIso","parseIso","utcTime","category10","category20b","category20c","category20","cubehelix$3","warm","cool","rainbow","rainbow$1","ts","viridis","magma","inferno","plasma","abs$1","atan2$1","cos$2","min$1","sin$2","tau$4","a01","a11","a10","da0","da1","ap","rp","padRadius","cornerRadius","rc0","rc1","oc","kc","lc","areaStart","areaEnd","curveLinear","defined0","defined","area$2","x0z","y0z","arealine","lineX0","lineY0","lineY1","lineX1","descending$1","identity$7","pie","arcs","curveRadialLinear","lineRadial$1","areaRadial","lineStartAngle","lineEndAngle","lineInnerRadius","lineOuterRadius","circle$2","draw","cross$2","tan30","tan30_2","diamond","ka","kr","star","square","sqrt3","triangle","wye","symbols","noop$2","basis$2","_x3","_x4","_y3","_y4","basisClosed$1","basisOpen","bundle","cardinal","_x5","_y5","cardinalClosed","cardinal$$1","cardinalOpen","x23","y23","catmullRom","catmullRomClosed","catmullRom$$1","catmullRomOpen","linearClosed","_t0","px","py","natural","none$1","none$2","oz","kz","sz","sij","ki","si","expand","diverging","yn","silhouette","wiggle","s2","sij0","sij1","s3","skj0","skj1","ascending$2","descending$2","insideOut","tops","bottoms","constant$11","after","grandpa","uncle","sibling","polygons","triangles","_found","voronoi","constant$12","applyX","applyY","location","invertX","invertY","rescaleX","rescaleY","noevent$2","zoom","wheeled","dblclicked","k0","k1","constrain","Gesture","wheelidled","wheel","wheelDelta","wheelDelay","touch0","touch1","touchstarting","touchDelay","l0","l1","dp","dl","collection","scaleBy","scaleTo","translateBy","translateTo","scaleExtent","translateExtent","bisect","thresholdFreedmanDiaconis","thresholdScott","thresholdSturges","quantile","dragEnable","dsvFormat","easeQuad","easeQuadIn","easeQuadOut","easeCubic","easeCubicIn","easeCubicOut","easeCubicInOut","easePoly","easePolyIn","easePolyOut","easePolyInOut","easeSin","easeSinIn","easeSinOut","easeSinInOut","easeExp","easeExpIn","easeExpOut","easeExpInOut","easeCircle","easeCircleIn","easeCircleOut","easeCircleInOut","easeBounce","easeBounceIn","easeBounceOut","easeBounceInOut","easeBack","easeBackIn","easeBackOut","easeBackInOut","easeElastic","easeElasticIn","easeElasticOut","easeElasticInOut","forceCenter","forceCollide","forceLink","forceManyBody","forceRadial","forceSimulation","forceX","forceY","formatDefaultLocale","geoArea","geoBounds","geoCentroid","geoCircle","geoClipAntimeridian","geoClipCircle","geoClipExtent","geoClipRectangle","geoContains","geoDistance","geoGraticule","geoGraticule10","geoInterpolate","geoLength","geoPath","geoAlbers","geoAlbersUsa","geoAzimuthalEqualArea","geoAzimuthalEqualAreaRaw","geoAzimuthalEquidistant","geoAzimuthalEquidistantRaw","geoConicConformal","geoConicConformalRaw","geoConicEqualArea","geoConicEqualAreaRaw","geoConicEquidistant","geoConicEquidistantRaw","geoEquirectangular","geoEquirectangularRaw","geoGnomonic","geoGnomonicRaw","geoIdentity","geoProjection","geoProjectionMutator","geoMercator","geoMercatorRaw","geoNaturalEarth1","geoNaturalEarth1Raw","geoOrthographic","geoOrthographicRaw","geoStereographic","geoStereographicRaw","geoTransverseMercator","geoTransverseMercatorRaw","geoRotation","geoTransform","packSiblings","treemapBinary","treemapSliceDice","treemapSquarify","treemapResquarify","interpolateArray","interpolateBasis","interpolateBasisClosed","interpolateDate","interpolateNumber","interpolateObject","interpolateRgbBasis","interpolateRgbBasisClosed","interpolateHsl","interpolateHslLong","interpolateLab","interpolateHcl","interpolateHclLong","interpolateCubehelix","interpolateCubehelixLong","polygonArea","polygonCentroid","polygonHull","polygonLength","scaleIdentity","scaleLog","scaleImplicit","scalePow","scaleSqrt","scaleQuantile","scaleQuantize","scaleThreshold","scaleUtc","schemeCategory10","schemeCategory20b","schemeCategory20c","schemeCategory20","interpolateCubehelixDefault","interpolateRainbow","interpolateWarm","interpolateCool","interpolateViridis","interpolateMagma","interpolateInferno","interpolatePlasma","scaleSequential","radialArea","radialLine","symbolCircle","symbolCross","symbolDiamond","symbolSquare","symbolStar","symbolTriangle","symbolWye","curveBasisClosed","curveBasisOpen","curveBasis","curveBundle","curveCardinalClosed","curveCardinalOpen","curveCardinal","curveCatmullRomClosed","curveCatmullRomOpen","curveLinearClosed","curveMonotoneX","curveMonotoneY","curveNatural","curveStep","curveStepAfter","curveStepBefore","stackOffsetExpand","stackOffsetDiverging","stackOffsetSilhouette","stackOffsetWiggle","stackOrderAscending","stackOrderDescending","stackOrderInsideOut","stackOrderReverse","timeInterval","timeMillisecond","timeMilliseconds","utcMillisecond","utcMilliseconds","timeSecond","timeSeconds","utcSecond","utcSeconds","timeMinute","timeMinutes","timeHour","timeHours","timeDays","timeWeek","timeWeeks","timeSunday","timeSundays","timeMonday","timeMondays","timeTuesday","timeTuesdays","timeWednesday","timeWednesdays","timeThursday","timeThursdays","timeFriday","timeFridays","timeSaturday","timeSaturdays","timeMonths","timeYear","timeYears","utcWeek","utcWeeks","timeFormatDefaultLocale","timeFormatLocale","isoFormat","isoParse","zoomTransform","zoomIdentity","mapdUI","skyBlue","VALUE","ID","LABEL","GROUP","VALUES","_toConsumableArray","arr2","_dataToClone","sortData","_keyType","sortedData","getTime","localeCompare","numeric","getUnique","invertScale","_mouseX","bandStep","accum","limit","wait","_len","_key","_len2","_key2","stringToType","str","converted","Number","Scale","buildXScale","_allKeys","buildYScale","_extent","buildColorScale","ids","getID","splitByGroups","allValues","allKeys","getValue","getKey","getStackedScales","allStackHeights","dB","allUniqueKeys","valuesExtent","getHorizontalScales","groupAxis1","groupAxis2","Line","drawLines","seriesLine","seriesLine2","getColor","drawAreas","seriesArea","seriesArea2","areas","drawStackedAreas","_scales","Bar","drawBars","bars","drawStackedBars","stackedBarGroups","stackedUpdate","stackedBars","containers","vis","initializeBreadcrumbTrail","drawLegend","toggleLegend","mouseover","totalSize","trail","breadcrumbPoints","updateBreadcrumbs","nodeArray","percentageString","legend_item","percentage","sequenceArray","parts","currentNode","nodeName","childNode","foundChild","yScale2","(MK)","(JJ GO)","(CJ GO)","(CHURN)","(OR)","(PP GO)","(GG GO)","(CJ IOS)","Axis","formatXAxis","formatter","formatYAxis","yFormat","yExtent","buildAxis","isInteger","tickSpacing","y2Axis","horizontalGridLines","verticalGridLines","hoverZoneSize","background","isLegend","tooltipTitle","tooltipBody","calculateTooltipPosition","_mouseY","OFFSET","tooltipSize","tooltipX","avoidanceOffset","tooltipY","yPosition","drawContent","content","tooltipItems","tooltipItemsUpdate","tooltipItem","legendData","drawTitle","title","_typeof","setupContent","_series","sortByTopicsOrder","sortByAlpha","_order","orderName","_ref","hide","show","_shouldBeVisible","isEnabled","setupTooltip","_dataPoint","_xPosition","_yPosition","_calculateTooltipPosi","_calculateTooltipPosi2","_dispatcher","_title","_content","tooltipDivider","tooltipBackground","IS_LEGEND","buildBrush","handleBrushStart","handleBrushMove","handleBrushEnd","chartBrush","moveBrush","getDataExtent","dataExtent","validateExtent","_brushExtent","clampBrush","_dataExtent","brushExtent","_isEnabled","dateRange","drawHover","_dataPointXPosition","moveVerticalMarker","drawVerticalMarker","highlightStackedDataPoints","highlightDataPoints","dotsData","drawHighlightDataPoints","_dotsData","dots","stackedDataPoint","dotsStack","dot","verticalMarkerLine","_verticalMarkerXPosition","autoItem","isSelected","toggled","autoLabel","binningItems","LINE_HEIGHT","changeBinning","selectedBin","toggleAuto","isAuto","_selectedItemName","exclusiveToggle","_shouldBeSelected","_selectedBin","_isAuto","toggleOnOff","bool","shouldBeSelected","othersSelection","toggle","toggleOffIsEnabled","toggleMultipleIsEnabled","options","hasSelection","selectionNode","hasJustBeenClicked","blurOnEnter","blur","xFormatter","yFormatter","y2Formatter","xHitZone","showXEditor","hideXEditor","yHitZone","showYEditor","hideYEditor","y2HitZone","showY2Editor","hideY2Editor","yMaxInput","innerText","yMinInput","yLockIcon","isLocked","y2MaxInput","y2MinInput","y2LockIcon","xMinInput","xMaxInput","xLockIcon","HOVER_ZONE_SIZE","LOCK_SIZE","INPUT_HEIGHT","PADDING","INPUT_WIDTH","yLock","y2Lock","xLock","inputMax","rangeMax","inputMin","rangeMin","_rangeMin","_rangeMax","xAxisLabel","yAxisLabel","y2AxisLabel","textHeight","textWidth","_xLabel","_yLabel","_y2Label","generateRandomString","_length","substr","generateSeries","_dataKeys","_range","_allowNegative","variabilityRatio","randomWalkStepSize","rnd","generateTestDataset","dataKeys","baseDate","previousDate","DAY_IN_MS","pointCount","lineCount","groupCount","_dataType","flatData","serie","_dataObject","keyFromInvertedX","dataEntryIndex","dataEntryForXPosition","dataEntryForXPositionPrev","nearestDataPoint","filterByKey","extentMinIndex","extentMaxIndex","filterByDate","_dateExtent","epoch","loadCSVData","filename","Promise","resolve","reject","sub","pub","_channelName","_brushConfig","filtered"],"mappings":"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","file":"mapd3.min.js","sourcesContent":["(function webpackUniversalModuleDefinition(root, factory) {\n\tif(typeof exports === 'object' && typeof module === 'object')\n\t\tmodule.exports = factory();\n\telse if(typeof define === 'function' && define.amd)\n\t\tdefine([], factory);\n\telse if(typeof exports === 'object')\n\t\texports[\"mapd3\"] = factory();\n\telse\n\t\troot[\"mapd3\"] = factory();\n})(this, function() {\nreturn \n\n\n// WEBPACK FOOTER //\n// webpack/universalModuleDefinition","(function webpackUniversalModuleDefinition(root, factory) {\n\tif(typeof exports === 'object' && typeof module === 'object')\n\t\tmodule.exports = factory();\n\telse if(typeof define === 'function' && define.amd)\n\t\tdefine([], factory);\n\telse if(typeof exports === 'object')\n\t\texports[\"mapd3\"] = factory();\n\telse\n\t\troot[\"mapd3\"] = factory();\n})(this, function() {\nreturn /******/ (function(modules) { // webpackBootstrap\n/******/ \t// The module cache\n/******/ \tvar installedModules = {};\n/******/\n/******/ \t// The require function\n/******/ \tfunction __webpack_require__(moduleId) {\n/******/\n/******/ \t\t// Check if module is in cache\n/******/ \t\tif(installedModules[moduleId])\n/******/ \t\t\treturn installedModules[moduleId].exports;\n/******/\n/******/ \t\t// Create a new module (and put it into the cache)\n/******/ \t\tvar module = installedModules[moduleId] = {\n/******/ \t\t\texports: {},\n/******/ \t\t\tid: moduleId,\n/******/ \t\t\tloaded: false\n/******/ \t\t};\n/******/\n/******/ \t\t// Execute the module function\n/******/ \t\tmodules[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n/******/\n/******/ \t\t// Flag the module as loaded\n/******/ \t\tmodule.loaded = true;\n/******/\n/******/ \t\t// Return the exports of the module\n/******/ \t\treturn module.exports;\n/******/ \t}\n/******/\n/******/\n/******/ \t// expose the modules object (__webpack_modules__)\n/******/ \t__webpack_require__.m = modules;\n/******/\n/******/ \t// expose the module cache\n/******/ \t__webpack_require__.c = installedModules;\n/******/\n/******/ \t// __webpack_public_path__\n/******/ \t__webpack_require__.p = \"\";\n/******/\n/******/ \t// Load entry module and return exports\n/******/ \treturn __webpack_require__(0);\n/******/ })\n/************************************************************************/\n/******/ ([\n/* 0 */\n/***/ (function(module, exports, __webpack_require__) {\n\n\t\"use strict\";\n\t\n\tObject.defineProperty(exports, \"__esModule\", {\n\t  value: true\n\t});\n\texports.Sunburst = exports.colors = exports.Interactors = exports.Hover = exports.Brush = exports.Label = exports.BrushRangeEditor = exports.DomainEditor = exports.Binning = exports.Observer = exports.DataManager = exports.Legend = exports.Tooltip = exports.Chart = undefined;\n\t\n\tvar _chart = __webpack_require__(1);\n\t\n\tvar _chart2 = _interopRequireDefault(_chart);\n\t\n\tvar _tooltip = __webpack_require__(12);\n\t\n\tvar _tooltip2 = _interopRequireDefault(_tooltip);\n\t\n\tvar _legend = __webpack_require__(13);\n\t\n\tvar _legend2 = _interopRequireDefault(_legend);\n\t\n\tvar _dataManager = __webpack_require__(21);\n\t\n\tvar _dataManager2 = _interopRequireDefault(_dataManager);\n\t\n\tvar _observer = __webpack_require__(22);\n\t\n\tvar _observer2 = _interopRequireDefault(_observer);\n\t\n\tvar _binning = __webpack_require__(16);\n\t\n\tvar _binning2 = _interopRequireDefault(_binning);\n\t\n\tvar _domainEditor = __webpack_require__(18);\n\t\n\tvar _domainEditor2 = _interopRequireDefault(_domainEditor);\n\t\n\tvar _brushRangeEditor = __webpack_require__(19);\n\t\n\tvar _brushRangeEditor2 = _interopRequireDefault(_brushRangeEditor);\n\t\n\tvar _label = __webpack_require__(20);\n\t\n\tvar _label2 = _interopRequireDefault(_label);\n\t\n\tvar _brush = __webpack_require__(14);\n\t\n\tvar _brush2 = _interopRequireDefault(_brush);\n\t\n\tvar _hover = __webpack_require__(15);\n\t\n\tvar _hover2 = _interopRequireDefault(_hover);\n\t\n\tvar _interactors = __webpack_require__(17);\n\t\n\tvar _interactors2 = _interopRequireDefault(_interactors);\n\t\n\tvar _colors = __webpack_require__(4);\n\t\n\tvar _sunburst = __webpack_require__(10);\n\t\n\tvar _sunburst2 = _interopRequireDefault(_sunburst);\n\t\n\tfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\t\n\texports.Chart = _chart2.default;\n\texports.Tooltip = _tooltip2.default;\n\texports.Legend = _legend2.default;\n\texports.DataManager = _dataManager2.default;\n\texports.Observer = _observer2.default;\n\texports.Binning = _binning2.default;\n\texports.DomainEditor = _domainEditor2.default;\n\texports.BrushRangeEditor = _brushRangeEditor2.default;\n\texports.Label = _label2.default;\n\texports.Brush = _brush2.default;\n\texports.Hover = _hover2.default;\n\texports.Interactors = _interactors2.default;\n\texports.colors = _colors.colors;\n\texports.Sunburst = _sunburst2.default;\n\n/***/ }),\n/* 1 */\n/***/ (function(module, exports, __webpack_require__) {\n\n\t\"use strict\";\n\t\n\tObject.defineProperty(exports, \"__esModule\", {\n\t  value: true\n\t});\n\t\n\tvar _slicedToArray = function () { function sliceIterator(arr, i) { var _arr = []; var _n = true; var _d = false; var _e = undefined; try { for (var _i = arr[Symbol.iterator](), _s; !(_n = (_s = _i.next()).done); _n = true) { _arr.push(_s.value); if (i && _arr.length === i) break; } } catch (err) { _d = true; _e = err; } finally { try { if (!_n && _i[\"return\"]) _i[\"return\"](); } finally { if (_d) throw _e; } } return _arr; } return function (arr, i) { if (Array.isArray(arr)) { return arr; } else if (Symbol.iterator in Object(arr)) { return sliceIterator(arr, i); } else { throw new TypeError(\"Invalid attempt to destructure non-iterable instance\"); } }; }();\n\t\n\texports.default = Chart;\n\t\n\tvar _d3Service = __webpack_require__(2);\n\t\n\tvar d3 = _interopRequireWildcard(_d3Service);\n\t\n\tvar _colors = __webpack_require__(4);\n\t\n\tvar _constants = __webpack_require__(5);\n\t\n\tvar _common = __webpack_require__(6);\n\t\n\tvar _scale = __webpack_require__(7);\n\t\n\tvar _scale2 = _interopRequireDefault(_scale);\n\t\n\tvar _line = __webpack_require__(8);\n\t\n\tvar _line2 = _interopRequireDefault(_line);\n\t\n\tvar _bar = __webpack_require__(9);\n\t\n\tvar _bar2 = _interopRequireDefault(_bar);\n\t\n\tvar _sunburst = __webpack_require__(10);\n\t\n\tvar _sunburst2 = _interopRequireDefault(_sunburst);\n\t\n\tvar _axis = __webpack_require__(11);\n\t\n\tvar _axis2 = _interopRequireDefault(_axis);\n\t\n\tvar _tooltip = __webpack_require__(12);\n\t\n\tvar _tooltip2 = _interopRequireDefault(_tooltip);\n\t\n\tvar _legend = __webpack_require__(13);\n\t\n\tvar _legend2 = _interopRequireDefault(_legend);\n\t\n\tvar _brush = __webpack_require__(14);\n\t\n\tvar _brush2 = _interopRequireDefault(_brush);\n\t\n\tvar _hover = __webpack_require__(15);\n\t\n\tvar _hover2 = _interopRequireDefault(_hover);\n\t\n\tvar _binning = __webpack_require__(16);\n\t\n\tvar _binning2 = _interopRequireDefault(_binning);\n\t\n\tvar _domainEditor = __webpack_require__(18);\n\t\n\tvar _domainEditor2 = _interopRequireDefault(_domainEditor);\n\t\n\tvar _brushRangeEditor = __webpack_require__(19);\n\t\n\tvar _brushRangeEditor2 = _interopRequireDefault(_brushRangeEditor);\n\t\n\tvar _label = __webpack_require__(20);\n\t\n\tvar _label2 = _interopRequireDefault(_label);\n\t\n\tvar _dataManager = __webpack_require__(21);\n\t\n\tvar _dataManager2 = _interopRequireDefault(_dataManager);\n\t\n\tfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\t\n\tfunction _interopRequireWildcard(obj) { if (obj && obj.__esModule) { return obj; } else { var newObj = {}; if (obj != null) { for (var key in obj) { if (Object.prototype.hasOwnProperty.call(obj, key)) newObj[key] = obj[key]; } } newObj.default = obj; return newObj; } }\n\t\n\tfunction Chart(_container) {\n\t\n\t  var config = {\n\t    // common\n\t    margin: {\n\t      top: 48,\n\t      right: 32,\n\t      bottom: 48,\n\t      left: 32\n\t    },\n\t    width: 800,\n\t    height: 500,\n\t    keyType: \"time\",\n\t    chartType: null, // line, area, stackedLine, stackedArea\n\t    ease: d3.easeLinear,\n\t\n\t    // intro animation\n\t    isAnimated: false,\n\t    animationDuration: 1500,\n\t\n\t    // scale\n\t    colorSchema: _colors.colors.mapdColors.map(function (d) {\n\t      return { value: d };\n\t    }),\n\t    defaultColor: \"skyblue\",\n\t    xDomain: \"auto\",\n\t    yDomain: \"auto\",\n\t    y2Domain: \"auto\",\n\t\n\t    // axis\n\t    tickPadding: 5,\n\t    xAxisFormat: \"auto\",\n\t    yAxisFormat: \".2f\",\n\t    y2AxisFormat: \".2f\",\n\t    tickSizes: 8,\n\t    yTicks: \"auto\",\n\t    y2Ticks: \"auto\",\n\t    xTickSkip: 0,\n\t    grid: null,\n\t    axisTransitionDuration: 0,\n\t\n\t    xTitle: \"\",\n\t    yTitle: \"\",\n\t\n\t    // hover\n\t    dotRadius: 4,\n\t\n\t    // tooltip\n\t    mouseChaseDuration: 0,\n\t    tooltipEase: d3.easeQuadInOut,\n\t    tooltipHeight: 48,\n\t    tooltipWidth: 160,\n\t    seriesOrder: [],\n\t\n\t    // format\n\t    dateFormat: \"%b %d, %Y\",\n\t    numberFormat: \".2f\",\n\t\n\t    // legend\n\t    legendXPosition: \"auto\",\n\t    legendYPosition: \"auto\",\n\t    legendTitle: \"\",\n\t    legendIsEnabled: true,\n\t\n\t    // binning\n\t    binningResolution: \"1mo\",\n\t    binningIsAuto: true,\n\t    binningToggles: [\"10y\", \"1y\", \"1q\", \"1mo\"],\n\t    binningIsEnabled: true,\n\t\n\t    // domain\n\t    domainEditorIsEnabled: true,\n\t\n\t    // brush range\n\t    brushRangeMin: null,\n\t    brushRangeMax: null,\n\t    brushRangeIsEnabled: true,\n\t\n\t    // brush\n\t    brushIsEnabled: true,\n\t\n\t    // label\n\t    xLabel: \"\",\n\t    yLabel: \"\",\n\t    y2Label: \"\",\n\t    fileData: null\n\t  };\n\t\n\t  var scales = {\n\t    xScale: null,\n\t    yScale: null,\n\t    y2Scale: null,\n\t    hasSecondAxis: null,\n\t    colorScale: null\n\t  };\n\t\n\t  var cache = {\n\t    container: _container,\n\t    svg: null,\n\t    panel: null,\n\t    margin: null,\n\t    maskingRectangle: null,\n\t    chartWidth: null, chartHeight: null,\n\t    xAxis: null, yAxis: null, yAxis2: null\n\t  };\n\t\n\t  var dataObject = {\n\t    dataBySeries: null,\n\t    dataByKey: null,\n\t    data: null,\n\t    groupKeys: {},\n\t    hasSecondAxis: false,\n\t    stackData: null,\n\t    stack: null,\n\t    flatDataSorted: null\n\t  };\n\t\n\t  var components = {};\n\t  var eventCollector = {};\n\t\n\t  // events\n\t  var dispatcher = d3.dispatch(\"mouseOverPanel\", \"mouseOutPanel\", \"mouseMovePanel\");\n\t  var dataManager = (0, _dataManager2.default)();\n\t\n\t  function render() {\n\t\n\t    buildSVG();\n\t\n\t    if (dataObject.dataBySeries) {\n\t      console.log(\"buildChart\");\n\t      buildChart();\n\t    }\n\t\n\t    return this;\n\t  }\n\t\n\t  function buildSVG() {\n\t    console.log(\"chart > buildSVG \" + config.chartType);\n\t\n\t    var w = config.width === \"auto\" ? cache.container.clientWidth : config.width;\n\t    var h = config.height === \"auto\" ? cache.container.clientHeight : config.height;\n\t    cache.chartWidth = Math.max(w - config.margin.left - config.margin.right, 0);\n\t    cache.chartHeight = Math.max(h - config.margin.top - config.margin.bottom, 0);\n\t\n\t    var template = void 0;\n\t\n\t    if (!cache.svg) {\n\t\n\t      //if (config.chartType === \"line\" || config.chartType === \"area\" || config.chartType === \"stackedArea\") {\n\t\n\t      template = \"<div class=\\\"mapd3 mapd3-container\\\">\\n          <div class=\\\"header-group\\\" style=\\\"display: none;\\\"></div>\\n            <svg class=\\\"chart\\\">\\n              <g class=\\\"chart-group\\\"></g>\\n              <g class=\\\"panel-group\\\">\\n                <rect class=\\\"panel-background\\\"></rect>\\n              </g>\\n              <rect class=\\\"masking-rectangle\\\"></rect>\\n            </svg>\\n        </div>\";\n\t      //} else {\n\t      /*template = `<div id=\"main\">\n\t        <div id=\"sequence\"></div>\n\t        <div id=\"chart\">\n\t          <div id=\"explanation\" style=\"visibility: hidden;\">\n\t            <span id=\"percentage\"></span><br/>\n\t            of visits begin with this sequence of pages\n\t          </div>\n\t        </div>\n\t      </div>\n\t      <div id=\"sidebar\">\n\t        <input type=\"checkbox\" id=\"togglelegend\"> Legend<br/>\n\t        <div id=\"legend\" style=\"visibility: hidden;\"></div>\n\t      </div>`*/\n\t      //}\n\t\n\t      var base = d3.select(cache.container).html(template);\n\t\n\t      cache.container = base.select(\".mapd3-container\").style(\"position\", \"relative\");\n\t\n\t      cache.svg = base.select(\"svg\");\n\t      cache.headerGroup = base.select(\".header-group\").style(\"position\", \"absolute\");\n\t      cache.panel = cache.svg.select(\".panel-group\");\n\t      cache.chart = cache.svg.select(\".chart-group\");\n\t\n\t      addEvents();\n\t\n\t      Object.assign(components, {\n\t        scale: (0, _scale2.default)(),\n\t        axis: config.chartType === \"line\" || config.chartType === \"area\" || config.chartType === \"stackedArea\" ? (0, _axis2.default)(cache.chart) : null,\n\t        line: config.chartType === \"line\" || config.chartType === \"area\" || config.chartType === \"stackedArea\" ? (0, _line2.default)(cache.panel) : null,\n\t        bar: config.chartType === \"bar\" ? (0, _bar2.default)(cache.panel) : null,\n\t        sunburst: config.chartType === \"sunburst\" ? (0, _sunburst2.default)(cache.panel) : null,\n\t        tooltip: (0, _tooltip2.default)(cache.container),\n\t        legend: (0, _legend2.default)(cache.container),\n\t        brush: (0, _brush2.default)(cache.panel),\n\t        hover: (0, _hover2.default)(cache.panel),\n\t        binning: (0, _binning2.default)(cache.headerGroup),\n\t        domainEditor: (0, _domainEditor2.default)(cache.container),\n\t        brushRangeEditor: (0, _brushRangeEditor2.default)(cache.headerGroup),\n\t        label: (0, _label2.default)(cache.container)\n\t      });\n\t\n\t      Object.assign(eventCollector, {\n\t        onBrush: (0, _common.rebind)(components.brush),\n\t        onHover: (0, _common.rebind)(components.hover),\n\t        onBinning: (0, _common.rebind)(components.binning),\n\t        onDomainEditor: (0, _common.rebind)(components.domainEditor),\n\t        onBrushRangeEditor: (0, _common.rebind)(components.brushRangeEditor),\n\t        onLabel: (0, _common.rebind)(components.label),\n\t        onPanel: (0, _common.rebind)(dispatcher)\n\t      });\n\t    }\n\t\n\t    cache.svg.attr(\"width\", config.width).attr(\"height\", config.height);\n\t\n\t    cache.headerGroup.style(\"width\", cache.chartWidth + \"px\").style(\"left\", config.margin.left + \"px\");\n\t\n\t    cache.panel.attr(\"transform\", \"translate(\" + config.margin.left + \",\" + config.margin.top + \")\").select(\".panel-background\").attr(\"width\", cache.chartWidth).attr(\"height\", cache.chartHeight).attr(\"fill\", \"transparent\");\n\t\n\t    return this;\n\t  }\n\t\n\t  function buildChart() {\n\t\n\t    if (components.scale) {\n\t      components.scale.setConfig(config).setData(dataObject);\n\t      scales = components.scale.getScales();\n\t    }\n\t\n\t    if (components.axis) {\n\t      components.axis.setConfig(config).setScales(scales).drawAxis().drawGridLines();\n\t    }\n\t\n\t    /*\n\t    // TODO refactor 'config.chartType'\n\t    if (components[config.chartType]) {\n\t      components[config.chartType]\n\t        .setConfig(config)\n\t        .setScales(scales)\n\t        .loadData()\n\t        .setData(dataObject)\n\t        .drawMarks()\n\t    }\n\t    */\n\t\n\t    if (components.line) {\n\t      components.line.setConfig(config).setScales(scales).loadData().setData(dataObject).drawMarks();\n\t    }\n\t\n\t    if (components.bar) {\n\t      components.bar.setConfig(config).setScales(scales).loadData().setData(dataObject).drawMarks();\n\t    }\n\t\n\t    if (components.sunburst) {\n\t      console.log(\"ENTRA A SUNBURST!!!!\");\n\t      components.sunburst.setConfig(config).setScales(scales).loadData().setData(dataObject);\n\t      //.drawMarks()\n\t    }\n\t\n\t    components.tooltip.setConfig(config).setScales(scales).bindEvents(dispatcher).setVisibility(config.tooltipIsEnabled);\n\t\n\t    var legendContent = dataObject.dataBySeries.map(function (d) {\n\t      return {\n\t        id: d.id,\n\t        key: d.key,\n\t        label: d.label\n\t      };\n\t    });\n\t\n\t    components.legend.setConfig(config).setScales(scales).setTitle(config.legendTitle).setContent(legendContent).setXPosition(config.legendXPosition).setYPosition(config.legendYPosition).drawTooltip().setVisibility(config.legendIsEnabled);\n\t\n\t    components.brush.setConfig(config).setScales(scales).setData(dataObject).setBrushExtent([config.brushRangeMin, config.brushRangeMax]).setVisibility(config.brushIsEnabled).drawBrush();\n\t\n\t    components.hover.setConfig(config).setScales(scales).setData(dataObject).bindEvents(dispatcher);\n\t\n\t    components.binning.setConfig(config).setBinning(config.binningResolution).setAuto(config.binningIsAuto).drawBinning().setVisibility(config.binningIsEnabled);\n\t\n\t    components.domainEditor.setConfig(config).setScales(scales).drawDomainEditor().setVisibility(config.domainEditorIsEnabled);\n\t\n\t    components.brushRangeEditor.setConfig(config).setScales(scales).setRangeMin(config.brushRangeMin).setRangeMax(config.brushRangeMax).drawRangeEditor().setVisibility(config.brushRangeIsEnabled);\n\t\n\t    components.label.setConfig(config).setXLabels(config.xLabel).setYLabels(config.yLabel).setY2Labels(config.y2Label).drawLabels();\n\t\n\t    triggerIntroAnimation();\n\t    return this;\n\t  }\n\t\n\t  function setData(_data) {\n\t    console.log(_data);\n\t    dataObject.data = (0, _common.cloneData)(_data[_constants.keys.SERIES]);\n\t    var cleanedData = dataManager.cleanData(_data, config.keyType);\n\t    Object.assign(dataObject, cleanedData);\n\t\n\t    render();\n\t    return this;\n\t  }\n\t\n\t  function loadData() {\n\t    if (config.fileData === null) throw new Error(\"There is no file to be loaded. `fileData` variable should be set.\");\n\t\n\t    d3.text(config.fileData, function (text) {\n\t      console.log(\"entra\");\n\t      var csv = d3.csvParseRows(text);\n\t      var json = buildHierarchy(csv);\n\t      console.log(csv);\n\t      //createVisualization(json);\n\t    });\n\t    return this;\n\t  }\n\t\n\t  function triggerIntroAnimation() {\n\t    if (config.isAnimated) {\n\t      cache.maskingRectangle = cache.svg.select(\".masking-rectangle\").attr(\"width\", cache.chartWidth - 2).attr(\"height\", cache.chartHeight).attr(\"x\", config.margin.left + 1).attr(\"y\", config.margin.top);\n\t\n\t      cache.maskingRectangle.transition().duration(config.animationDuration).ease(config.ease).attr(\"width\", 0).attr(\"x\", config.width - config.margin.right).on(\"end\", function () {\n\t        return cache.maskingRectangle.remove();\n\t      });\n\t    }\n\t  }\n\t\n\t  function addEvents() {\n\t    var THROTTLE_DELAY = 20;\n\t    var throttledDispatch = (0, _common.throttle)(function () {\n\t      dispatcher.call.apply(dispatcher, arguments);\n\t    }, THROTTLE_DELAY);\n\t\n\t    cache.panel.on(\"mouseover.dispatch\", function () {\n\t      dispatcher.call(\"mouseOverPanel\", null, d3.mouse(cache.panel.node()));\n\t    }).on(\"mouseout.dispatch\", function () {\n\t      dispatcher.call(\"mouseOutPanel\", null, d3.mouse(cache.panel.node()));\n\t    }).on(\"mousemove.dispatch\", function () {\n\t      var _d3$mouse = d3.mouse(cache.panel.node()),\n\t          _d3$mouse2 = _slicedToArray(_d3$mouse, 2),\n\t          mouseX = _d3$mouse2[0],\n\t          mouseY = _d3$mouse2[1];\n\t\n\t      if (!dataObject.data) {\n\t        return;\n\t      }\n\t      var xPosition = mouseX;\n\t      var dataPoint = dataManager.getNearestDataPoint(xPosition, dataObject, scales, config.keyType);\n\t\n\t      if (dataPoint) {\n\t        var dataPointXPosition = scales.xScale(dataPoint[_constants.keys.DATA]);\n\t        throttledDispatch(\"mouseMovePanel\", null, dataPoint, dataPointXPosition, mouseY);\n\t      }\n\t    });\n\t  }\n\t\n\t  function getEvents() {\n\t    if (!cache.svg) {\n\t      render();\n\t    }\n\t    return eventCollector;\n\t  }\n\t\n\t  function on() {\n\t    dispatcher.on.apply(dispatcher, arguments);\n\t    return this;\n\t  }\n\t\n\t  function setConfig(_config) {\n\t    config = (0, _common.override)(config, _config);\n\t    return this;\n\t  }\n\t\n\t  function destroy() {\n\t    cache.svg.on(\".\", null).remove();\n\t  }\n\t\n\t  function csvToJson(csv) {\n\t    var json = { \"series\": [] };\n\t    var labels = [];\n\t\n\t    var addLabel = void 0;\n\t\n\t    csv.forEach(function (row, index) {\n\t      if (index === 0) {\n\t        labels.push(getObjectToPush(row[0], index, 0, []));\n\t      } else {\n\t        addLabel = true;\n\t        labels.forEach(function (label) {\n\t          if (row[0] === label[\"label\"]) {\n\t            addLabel = false;\n\t          }\n\t        });\n\t\n\t        if (addLabel) {\n\t          labels.push(getObjectToPush(row[0], index, 0, []));\n\t        }\n\t      }\n\t    });\n\t\n\t    var __index__ = void 0;\n\t    labels.forEach(function (label, index) {\n\t      __index__ = 0;\n\t      csv.forEach(function (key, value) {\n\t        if (label[\"label\"] === key[0]) {\n\t          label[\"values\"].push({\n\t            value: key[1],\n\t            key: __index__\n\t          });\n\t          __index__++;\n\t        }\n\t      });\n\t    });\n\t\n\t    json[\"series\"] = labels;\n\t    console.log(json);\n\t    return json;\n\t  }\n\t\n\t  function getObjectToPush(label, id, group, values) {\n\t    return {\n\t      label: label,\n\t      id: id,\n\t      group: group,\n\t      values: values\n\t    };\n\t  }\n\t\n\t  return {\n\t    render: render,\n\t    setConfig: setConfig,\n\t    setData: setData,\n\t    on: on,\n\t    destroy: destroy,\n\t    getEvents: getEvents,\n\t    loadData: loadData,\n\t    csvToJson: csvToJson\n\t  };\n\t}\n\n/***/ }),\n/* 2 */\n/***/ (function(module, exports, __webpack_require__) {\n\n\t\"use strict\";\n\t\n\tObject.defineProperty(exports, \"__esModule\", {\n\t\tvalue: true\n\t});\n\t\n\tvar _d = __webpack_require__(3);\n\t\n\tObject.defineProperty(exports, \"axisBottom\", {\n\t\tenumerable: true,\n\t\tget: function get() {\n\t\t\treturn _d.axisBottom;\n\t\t}\n\t});\n\tObject.defineProperty(exports, \"axisLeft\", {\n\t\tenumerable: true,\n\t\tget: function get() {\n\t\t\treturn _d.axisLeft;\n\t\t}\n\t});\n\tObject.defineProperty(exports, \"axisRight\", {\n\t\tenumerable: true,\n\t\tget: function get() {\n\t\t\treturn _d.axisRight;\n\t\t}\n\t});\n\tObject.defineProperty(exports, \"timeFormat\", {\n\t\tenumerable: true,\n\t\tget: function get() {\n\t\t\treturn _d.timeFormat;\n\t\t}\n\t});\n\tObject.defineProperty(exports, \"utcFormat\", {\n\t\tenumerable: true,\n\t\tget: function get() {\n\t\t\treturn _d.utcFormat;\n\t\t}\n\t});\n\tObject.defineProperty(exports, \"format\", {\n\t\tenumerable: true,\n\t\tget: function get() {\n\t\t\treturn _d.format;\n\t\t}\n\t});\n\tObject.defineProperty(exports, \"bisector\", {\n\t\tenumerable: true,\n\t\tget: function get() {\n\t\t\treturn _d.bisector;\n\t\t}\n\t});\n\tObject.defineProperty(exports, \"extent\", {\n\t\tenumerable: true,\n\t\tget: function get() {\n\t\t\treturn _d.extent;\n\t\t}\n\t});\n\tObject.defineProperty(exports, \"sum\", {\n\t\tenumerable: true,\n\t\tget: function get() {\n\t\t\treturn _d.sum;\n\t\t}\n\t});\n\tObject.defineProperty(exports, \"range\", {\n\t\tenumerable: true,\n\t\tget: function get() {\n\t\t\treturn _d.range;\n\t\t}\n\t});\n\tObject.defineProperty(exports, \"merge\", {\n\t\tenumerable: true,\n\t\tget: function get() {\n\t\t\treturn _d.merge;\n\t\t}\n\t});\n\tObject.defineProperty(exports, \"nest\", {\n\t\tenumerable: true,\n\t\tget: function get() {\n\t\t\treturn _d.nest;\n\t\t}\n\t});\n\tObject.defineProperty(exports, \"dispatch\", {\n\t\tenumerable: true,\n\t\tget: function get() {\n\t\t\treturn _d.dispatch;\n\t\t}\n\t});\n\tObject.defineProperty(exports, \"easeLinear\", {\n\t\tenumerable: true,\n\t\tget: function get() {\n\t\t\treturn _d.easeLinear;\n\t\t}\n\t});\n\tObject.defineProperty(exports, \"easeQuadInOut\", {\n\t\tenumerable: true,\n\t\tget: function get() {\n\t\t\treturn _d.easeQuadInOut;\n\t\t}\n\t});\n\tObject.defineProperty(exports, \"select\", {\n\t\tenumerable: true,\n\t\tget: function get() {\n\t\t\treturn _d.select;\n\t\t}\n\t});\n\tObject.defineProperty(exports, \"mouse\", {\n\t\tenumerable: true,\n\t\tget: function get() {\n\t\t\treturn _d.mouse;\n\t\t}\n\t});\n\tObject.defineProperty(exports, \"event\", {\n\t\tenumerable: true,\n\t\tget: function get() {\n\t\t\treturn _d.event;\n\t\t}\n\t});\n\tObject.defineProperty(exports, \"transition\", {\n\t\tenumerable: true,\n\t\tget: function get() {\n\t\t\treturn _d.transition;\n\t\t}\n\t});\n\tObject.defineProperty(exports, \"randomUniform\", {\n\t\tenumerable: true,\n\t\tget: function get() {\n\t\t\treturn _d.randomUniform;\n\t\t}\n\t});\n\tObject.defineProperty(exports, \"randomNormal\", {\n\t\tenumerable: true,\n\t\tget: function get() {\n\t\t\treturn _d.randomNormal;\n\t\t}\n\t});\n\tObject.defineProperty(exports, \"timeDay\", {\n\t\tenumerable: true,\n\t\tget: function get() {\n\t\t\treturn _d.timeDay;\n\t\t}\n\t});\n\tObject.defineProperty(exports, \"timeMonth\", {\n\t\tenumerable: true,\n\t\tget: function get() {\n\t\t\treturn _d.timeMonth;\n\t\t}\n\t});\n\tObject.defineProperty(exports, \"area\", {\n\t\tenumerable: true,\n\t\tget: function get() {\n\t\t\treturn _d.area;\n\t\t}\n\t});\n\tObject.defineProperty(exports, \"curveCatmullRom\", {\n\t\tenumerable: true,\n\t\tget: function get() {\n\t\t\treturn _d.curveCatmullRom;\n\t\t}\n\t});\n\tObject.defineProperty(exports, \"line\", {\n\t\tenumerable: true,\n\t\tget: function get() {\n\t\t\treturn _d.line;\n\t\t}\n\t});\n\tObject.defineProperty(exports, \"stack\", {\n\t\tenumerable: true,\n\t\tget: function get() {\n\t\t\treturn _d.stack;\n\t\t}\n\t});\n\tObject.defineProperty(exports, \"stackOffsetNone\", {\n\t\tenumerable: true,\n\t\tget: function get() {\n\t\t\treturn _d.stackOffsetNone;\n\t\t}\n\t});\n\tObject.defineProperty(exports, \"stackOrderNone\", {\n\t\tenumerable: true,\n\t\tget: function get() {\n\t\t\treturn _d.stackOrderNone;\n\t\t}\n\t});\n\tObject.defineProperty(exports, \"scaleTime\", {\n\t\tenumerable: true,\n\t\tget: function get() {\n\t\t\treturn _d.scaleTime;\n\t\t}\n\t});\n\tObject.defineProperty(exports, \"scalePoint\", {\n\t\tenumerable: true,\n\t\tget: function get() {\n\t\t\treturn _d.scalePoint;\n\t\t}\n\t});\n\tObject.defineProperty(exports, \"scaleBand\", {\n\t\tenumerable: true,\n\t\tget: function get() {\n\t\t\treturn _d.scaleBand;\n\t\t}\n\t});\n\tObject.defineProperty(exports, \"scaleLinear\", {\n\t\tenumerable: true,\n\t\tget: function get() {\n\t\t\treturn _d.scaleLinear;\n\t\t}\n\t});\n\tObject.defineProperty(exports, \"scaleOrdinal\", {\n\t\tenumerable: true,\n\t\tget: function get() {\n\t\t\treturn _d.scaleOrdinal;\n\t\t}\n\t});\n\tObject.defineProperty(exports, \"brushX\", {\n\t\tenumerable: true,\n\t\tget: function get() {\n\t\t\treturn _d.brushX;\n\t\t}\n\t});\n\tObject.defineProperty(exports, \"arc\", {\n\t\tenumerable: true,\n\t\tget: function get() {\n\t\t\treturn _d.arc;\n\t\t}\n\t});\n\tObject.defineProperty(exports, \"partition\", {\n\t\tenumerable: true,\n\t\tget: function get() {\n\t\t\treturn _d.partition;\n\t\t}\n\t});\n\tObject.defineProperty(exports, \"csvParseRows\", {\n\t\tenumerable: true,\n\t\tget: function get() {\n\t\t\treturn _d.csvParseRows;\n\t\t}\n\t});\n\tObject.defineProperty(exports, \"text\", {\n\t\tenumerable: true,\n\t\tget: function get() {\n\t\t\treturn _d.text;\n\t\t}\n\t});\n\tObject.defineProperty(exports, \"hierarchy\", {\n\t\tenumerable: true,\n\t\tget: function get() {\n\t\t\treturn _d.hierarchy;\n\t\t}\n\t});\n\tObject.defineProperty(exports, \"keys\", {\n\t\tenumerable: true,\n\t\tget: function get() {\n\t\t\treturn _d.keys;\n\t\t}\n\t});\n\tObject.defineProperty(exports, \"entries\", {\n\t\tenumerable: true,\n\t\tget: function get() {\n\t\t\treturn _d.entries;\n\t\t}\n\t});\n\tObject.defineProperty(exports, \"selectAll\", {\n\t\tenumerable: true,\n\t\tget: function get() {\n\t\t\treturn _d.selectAll;\n\t\t}\n\t});\n\n/***/ }),\n/* 3 */\n/***/ (function(module, exports, __webpack_require__) {\n\n\t// https://d3js.org Version 4.11.0. Copyright 2017 Mike Bostock.\n\t(function (global, factory) {\n\t\t true ? factory(exports) :\n\t\ttypeof define === 'function' && define.amd ? define(['exports'], factory) :\n\t\t(factory((global.d3 = global.d3 || {})));\n\t}(this, (function (exports) { 'use strict';\n\t\n\tvar version = \"4.11.0\";\n\t\n\tvar ascending = function(a, b) {\n\t  return a < b ? -1 : a > b ? 1 : a >= b ? 0 : NaN;\n\t};\n\t\n\tvar bisector = function(compare) {\n\t  if (compare.length === 1) compare = ascendingComparator(compare);\n\t  return {\n\t    left: function(a, x, lo, hi) {\n\t      if (lo == null) lo = 0;\n\t      if (hi == null) hi = a.length;\n\t      while (lo < hi) {\n\t        var mid = lo + hi >>> 1;\n\t        if (compare(a[mid], x) < 0) lo = mid + 1;\n\t        else hi = mid;\n\t      }\n\t      return lo;\n\t    },\n\t    right: function(a, x, lo, hi) {\n\t      if (lo == null) lo = 0;\n\t      if (hi == null) hi = a.length;\n\t      while (lo < hi) {\n\t        var mid = lo + hi >>> 1;\n\t        if (compare(a[mid], x) > 0) hi = mid;\n\t        else lo = mid + 1;\n\t      }\n\t      return lo;\n\t    }\n\t  };\n\t};\n\t\n\tfunction ascendingComparator(f) {\n\t  return function(d, x) {\n\t    return ascending(f(d), x);\n\t  };\n\t}\n\t\n\tvar ascendingBisect = bisector(ascending);\n\tvar bisectRight = ascendingBisect.right;\n\tvar bisectLeft = ascendingBisect.left;\n\t\n\tvar pairs = function(array, f) {\n\t  if (f == null) f = pair;\n\t  var i = 0, n = array.length - 1, p = array[0], pairs = new Array(n < 0 ? 0 : n);\n\t  while (i < n) pairs[i] = f(p, p = array[++i]);\n\t  return pairs;\n\t};\n\t\n\tfunction pair(a, b) {\n\t  return [a, b];\n\t}\n\t\n\tvar cross = function(values0, values1, reduce) {\n\t  var n0 = values0.length,\n\t      n1 = values1.length,\n\t      values = new Array(n0 * n1),\n\t      i0,\n\t      i1,\n\t      i,\n\t      value0;\n\t\n\t  if (reduce == null) reduce = pair;\n\t\n\t  for (i0 = i = 0; i0 < n0; ++i0) {\n\t    for (value0 = values0[i0], i1 = 0; i1 < n1; ++i1, ++i) {\n\t      values[i] = reduce(value0, values1[i1]);\n\t    }\n\t  }\n\t\n\t  return values;\n\t};\n\t\n\tvar descending = function(a, b) {\n\t  return b < a ? -1 : b > a ? 1 : b >= a ? 0 : NaN;\n\t};\n\t\n\tvar number = function(x) {\n\t  return x === null ? NaN : +x;\n\t};\n\t\n\tvar variance = function(values, valueof) {\n\t  var n = values.length,\n\t      m = 0,\n\t      i = -1,\n\t      mean = 0,\n\t      value,\n\t      delta,\n\t      sum = 0;\n\t\n\t  if (valueof == null) {\n\t    while (++i < n) {\n\t      if (!isNaN(value = number(values[i]))) {\n\t        delta = value - mean;\n\t        mean += delta / ++m;\n\t        sum += delta * (value - mean);\n\t      }\n\t    }\n\t  }\n\t\n\t  else {\n\t    while (++i < n) {\n\t      if (!isNaN(value = number(valueof(values[i], i, values)))) {\n\t        delta = value - mean;\n\t        mean += delta / ++m;\n\t        sum += delta * (value - mean);\n\t      }\n\t    }\n\t  }\n\t\n\t  if (m > 1) return sum / (m - 1);\n\t};\n\t\n\tvar deviation = function(array, f) {\n\t  var v = variance(array, f);\n\t  return v ? Math.sqrt(v) : v;\n\t};\n\t\n\tvar extent = function(values, valueof) {\n\t  var n = values.length,\n\t      i = -1,\n\t      value,\n\t      min,\n\t      max;\n\t\n\t  if (valueof == null) {\n\t    while (++i < n) { // Find the first comparable value.\n\t      if ((value = values[i]) != null && value >= value) {\n\t        min = max = value;\n\t        while (++i < n) { // Compare the remaining values.\n\t          if ((value = values[i]) != null) {\n\t            if (min > value) min = value;\n\t            if (max < value) max = value;\n\t          }\n\t        }\n\t      }\n\t    }\n\t  }\n\t\n\t  else {\n\t    while (++i < n) { // Find the first comparable value.\n\t      if ((value = valueof(values[i], i, values)) != null && value >= value) {\n\t        min = max = value;\n\t        while (++i < n) { // Compare the remaining values.\n\t          if ((value = valueof(values[i], i, values)) != null) {\n\t            if (min > value) min = value;\n\t            if (max < value) max = value;\n\t          }\n\t        }\n\t      }\n\t    }\n\t  }\n\t\n\t  return [min, max];\n\t};\n\t\n\tvar array = Array.prototype;\n\t\n\tvar slice = array.slice;\n\tvar map = array.map;\n\t\n\tvar constant = function(x) {\n\t  return function() {\n\t    return x;\n\t  };\n\t};\n\t\n\tvar identity = function(x) {\n\t  return x;\n\t};\n\t\n\tvar sequence = function(start, stop, step) {\n\t  start = +start, stop = +stop, step = (n = arguments.length) < 2 ? (stop = start, start = 0, 1) : n < 3 ? 1 : +step;\n\t\n\t  var i = -1,\n\t      n = Math.max(0, Math.ceil((stop - start) / step)) | 0,\n\t      range = new Array(n);\n\t\n\t  while (++i < n) {\n\t    range[i] = start + i * step;\n\t  }\n\t\n\t  return range;\n\t};\n\t\n\tvar e10 = Math.sqrt(50);\n\tvar e5 = Math.sqrt(10);\n\tvar e2 = Math.sqrt(2);\n\t\n\tvar ticks = function(start, stop, count) {\n\t  var reverse,\n\t      i = -1,\n\t      n,\n\t      ticks,\n\t      step;\n\t\n\t  stop = +stop, start = +start, count = +count;\n\t  if (start === stop && count > 0) return [start];\n\t  if (reverse = stop < start) n = start, start = stop, stop = n;\n\t  if ((step = tickIncrement(start, stop, count)) === 0 || !isFinite(step)) return [];\n\t\n\t  if (step > 0) {\n\t    start = Math.ceil(start / step);\n\t    stop = Math.floor(stop / step);\n\t    ticks = new Array(n = Math.ceil(stop - start + 1));\n\t    while (++i < n) ticks[i] = (start + i) * step;\n\t  } else {\n\t    start = Math.floor(start * step);\n\t    stop = Math.ceil(stop * step);\n\t    ticks = new Array(n = Math.ceil(start - stop + 1));\n\t    while (++i < n) ticks[i] = (start - i) / step;\n\t  }\n\t\n\t  if (reverse) ticks.reverse();\n\t\n\t  return ticks;\n\t};\n\t\n\tfunction tickIncrement(start, stop, count) {\n\t  var step = (stop - start) / Math.max(0, count),\n\t      power = Math.floor(Math.log(step) / Math.LN10),\n\t      error = step / Math.pow(10, power);\n\t  return power >= 0\n\t      ? (error >= e10 ? 10 : error >= e5 ? 5 : error >= e2 ? 2 : 1) * Math.pow(10, power)\n\t      : -Math.pow(10, -power) / (error >= e10 ? 10 : error >= e5 ? 5 : error >= e2 ? 2 : 1);\n\t}\n\t\n\tfunction tickStep(start, stop, count) {\n\t  var step0 = Math.abs(stop - start) / Math.max(0, count),\n\t      step1 = Math.pow(10, Math.floor(Math.log(step0) / Math.LN10)),\n\t      error = step0 / step1;\n\t  if (error >= e10) step1 *= 10;\n\t  else if (error >= e5) step1 *= 5;\n\t  else if (error >= e2) step1 *= 2;\n\t  return stop < start ? -step1 : step1;\n\t}\n\t\n\tvar sturges = function(values) {\n\t  return Math.ceil(Math.log(values.length) / Math.LN2) + 1;\n\t};\n\t\n\tvar histogram = function() {\n\t  var value = identity,\n\t      domain = extent,\n\t      threshold = sturges;\n\t\n\t  function histogram(data) {\n\t    var i,\n\t        n = data.length,\n\t        x,\n\t        values = new Array(n);\n\t\n\t    for (i = 0; i < n; ++i) {\n\t      values[i] = value(data[i], i, data);\n\t    }\n\t\n\t    var xz = domain(values),\n\t        x0 = xz[0],\n\t        x1 = xz[1],\n\t        tz = threshold(values, x0, x1);\n\t\n\t    // Convert number of thresholds into uniform thresholds.\n\t    if (!Array.isArray(tz)) {\n\t      tz = tickStep(x0, x1, tz);\n\t      tz = sequence(Math.ceil(x0 / tz) * tz, Math.floor(x1 / tz) * tz, tz); // exclusive\n\t    }\n\t\n\t    // Remove any thresholds outside the domain.\n\t    var m = tz.length;\n\t    while (tz[0] <= x0) tz.shift(), --m;\n\t    while (tz[m - 1] > x1) tz.pop(), --m;\n\t\n\t    var bins = new Array(m + 1),\n\t        bin;\n\t\n\t    // Initialize bins.\n\t    for (i = 0; i <= m; ++i) {\n\t      bin = bins[i] = [];\n\t      bin.x0 = i > 0 ? tz[i - 1] : x0;\n\t      bin.x1 = i < m ? tz[i] : x1;\n\t    }\n\t\n\t    // Assign data to bins by value, ignoring any outside the domain.\n\t    for (i = 0; i < n; ++i) {\n\t      x = values[i];\n\t      if (x0 <= x && x <= x1) {\n\t        bins[bisectRight(tz, x, 0, m)].push(data[i]);\n\t      }\n\t    }\n\t\n\t    return bins;\n\t  }\n\t\n\t  histogram.value = function(_) {\n\t    return arguments.length ? (value = typeof _ === \"function\" ? _ : constant(_), histogram) : value;\n\t  };\n\t\n\t  histogram.domain = function(_) {\n\t    return arguments.length ? (domain = typeof _ === \"function\" ? _ : constant([_[0], _[1]]), histogram) : domain;\n\t  };\n\t\n\t  histogram.thresholds = function(_) {\n\t    return arguments.length ? (threshold = typeof _ === \"function\" ? _ : Array.isArray(_) ? constant(slice.call(_)) : constant(_), histogram) : threshold;\n\t  };\n\t\n\t  return histogram;\n\t};\n\t\n\tvar threshold = function(values, p, valueof) {\n\t  if (valueof == null) valueof = number;\n\t  if (!(n = values.length)) return;\n\t  if ((p = +p) <= 0 || n < 2) return +valueof(values[0], 0, values);\n\t  if (p >= 1) return +valueof(values[n - 1], n - 1, values);\n\t  var n,\n\t      i = (n - 1) * p,\n\t      i0 = Math.floor(i),\n\t      value0 = +valueof(values[i0], i0, values),\n\t      value1 = +valueof(values[i0 + 1], i0 + 1, values);\n\t  return value0 + (value1 - value0) * (i - i0);\n\t};\n\t\n\tvar freedmanDiaconis = function(values, min, max) {\n\t  values = map.call(values, number).sort(ascending);\n\t  return Math.ceil((max - min) / (2 * (threshold(values, 0.75) - threshold(values, 0.25)) * Math.pow(values.length, -1 / 3)));\n\t};\n\t\n\tvar scott = function(values, min, max) {\n\t  return Math.ceil((max - min) / (3.5 * deviation(values) * Math.pow(values.length, -1 / 3)));\n\t};\n\t\n\tvar max = function(values, valueof) {\n\t  var n = values.length,\n\t      i = -1,\n\t      value,\n\t      max;\n\t\n\t  if (valueof == null) {\n\t    while (++i < n) { // Find the first comparable value.\n\t      if ((value = values[i]) != null && value >= value) {\n\t        max = value;\n\t        while (++i < n) { // Compare the remaining values.\n\t          if ((value = values[i]) != null && value > max) {\n\t            max = value;\n\t          }\n\t        }\n\t      }\n\t    }\n\t  }\n\t\n\t  else {\n\t    while (++i < n) { // Find the first comparable value.\n\t      if ((value = valueof(values[i], i, values)) != null && value >= value) {\n\t        max = value;\n\t        while (++i < n) { // Compare the remaining values.\n\t          if ((value = valueof(values[i], i, values)) != null && value > max) {\n\t            max = value;\n\t          }\n\t        }\n\t      }\n\t    }\n\t  }\n\t\n\t  return max;\n\t};\n\t\n\tvar mean = function(values, valueof) {\n\t  var n = values.length,\n\t      m = n,\n\t      i = -1,\n\t      value,\n\t      sum = 0;\n\t\n\t  if (valueof == null) {\n\t    while (++i < n) {\n\t      if (!isNaN(value = number(values[i]))) sum += value;\n\t      else --m;\n\t    }\n\t  }\n\t\n\t  else {\n\t    while (++i < n) {\n\t      if (!isNaN(value = number(valueof(values[i], i, values)))) sum += value;\n\t      else --m;\n\t    }\n\t  }\n\t\n\t  if (m) return sum / m;\n\t};\n\t\n\tvar median = function(values, valueof) {\n\t  var n = values.length,\n\t      i = -1,\n\t      value,\n\t      numbers = [];\n\t\n\t  if (valueof == null) {\n\t    while (++i < n) {\n\t      if (!isNaN(value = number(values[i]))) {\n\t        numbers.push(value);\n\t      }\n\t    }\n\t  }\n\t\n\t  else {\n\t    while (++i < n) {\n\t      if (!isNaN(value = number(valueof(values[i], i, values)))) {\n\t        numbers.push(value);\n\t      }\n\t    }\n\t  }\n\t\n\t  return threshold(numbers.sort(ascending), 0.5);\n\t};\n\t\n\tvar merge = function(arrays) {\n\t  var n = arrays.length,\n\t      m,\n\t      i = -1,\n\t      j = 0,\n\t      merged,\n\t      array;\n\t\n\t  while (++i < n) j += arrays[i].length;\n\t  merged = new Array(j);\n\t\n\t  while (--n >= 0) {\n\t    array = arrays[n];\n\t    m = array.length;\n\t    while (--m >= 0) {\n\t      merged[--j] = array[m];\n\t    }\n\t  }\n\t\n\t  return merged;\n\t};\n\t\n\tvar min = function(values, valueof) {\n\t  var n = values.length,\n\t      i = -1,\n\t      value,\n\t      min;\n\t\n\t  if (valueof == null) {\n\t    while (++i < n) { // Find the first comparable value.\n\t      if ((value = values[i]) != null && value >= value) {\n\t        min = value;\n\t        while (++i < n) { // Compare the remaining values.\n\t          if ((value = values[i]) != null && min > value) {\n\t            min = value;\n\t          }\n\t        }\n\t      }\n\t    }\n\t  }\n\t\n\t  else {\n\t    while (++i < n) { // Find the first comparable value.\n\t      if ((value = valueof(values[i], i, values)) != null && value >= value) {\n\t        min = value;\n\t        while (++i < n) { // Compare the remaining values.\n\t          if ((value = valueof(values[i], i, values)) != null && min > value) {\n\t            min = value;\n\t          }\n\t        }\n\t      }\n\t    }\n\t  }\n\t\n\t  return min;\n\t};\n\t\n\tvar permute = function(array, indexes) {\n\t  var i = indexes.length, permutes = new Array(i);\n\t  while (i--) permutes[i] = array[indexes[i]];\n\t  return permutes;\n\t};\n\t\n\tvar scan = function(values, compare) {\n\t  if (!(n = values.length)) return;\n\t  var n,\n\t      i = 0,\n\t      j = 0,\n\t      xi,\n\t      xj = values[j];\n\t\n\t  if (compare == null) compare = ascending;\n\t\n\t  while (++i < n) {\n\t    if (compare(xi = values[i], xj) < 0 || compare(xj, xj) !== 0) {\n\t      xj = xi, j = i;\n\t    }\n\t  }\n\t\n\t  if (compare(xj, xj) === 0) return j;\n\t};\n\t\n\tvar shuffle = function(array, i0, i1) {\n\t  var m = (i1 == null ? array.length : i1) - (i0 = i0 == null ? 0 : +i0),\n\t      t,\n\t      i;\n\t\n\t  while (m) {\n\t    i = Math.random() * m-- | 0;\n\t    t = array[m + i0];\n\t    array[m + i0] = array[i + i0];\n\t    array[i + i0] = t;\n\t  }\n\t\n\t  return array;\n\t};\n\t\n\tvar sum = function(values, valueof) {\n\t  var n = values.length,\n\t      i = -1,\n\t      value,\n\t      sum = 0;\n\t\n\t  if (valueof == null) {\n\t    while (++i < n) {\n\t      if (value = +values[i]) sum += value; // Note: zero and null are equivalent.\n\t    }\n\t  }\n\t\n\t  else {\n\t    while (++i < n) {\n\t      if (value = +valueof(values[i], i, values)) sum += value;\n\t    }\n\t  }\n\t\n\t  return sum;\n\t};\n\t\n\tvar transpose = function(matrix) {\n\t  if (!(n = matrix.length)) return [];\n\t  for (var i = -1, m = min(matrix, length), transpose = new Array(m); ++i < m;) {\n\t    for (var j = -1, n, row = transpose[i] = new Array(n); ++j < n;) {\n\t      row[j] = matrix[j][i];\n\t    }\n\t  }\n\t  return transpose;\n\t};\n\t\n\tfunction length(d) {\n\t  return d.length;\n\t}\n\t\n\tvar zip = function() {\n\t  return transpose(arguments);\n\t};\n\t\n\tvar slice$1 = Array.prototype.slice;\n\t\n\tvar identity$1 = function(x) {\n\t  return x;\n\t};\n\t\n\tvar top = 1;\n\tvar right = 2;\n\tvar bottom = 3;\n\tvar left = 4;\n\tvar epsilon = 1e-6;\n\t\n\tfunction translateX(x) {\n\t  return \"translate(\" + (x + 0.5) + \",0)\";\n\t}\n\t\n\tfunction translateY(y) {\n\t  return \"translate(0,\" + (y + 0.5) + \")\";\n\t}\n\t\n\tfunction number$1(scale) {\n\t  return function(d) {\n\t    return +scale(d);\n\t  };\n\t}\n\t\n\tfunction center(scale) {\n\t  var offset = Math.max(0, scale.bandwidth() - 1) / 2; // Adjust for 0.5px offset.\n\t  if (scale.round()) offset = Math.round(offset);\n\t  return function(d) {\n\t    return +scale(d) + offset;\n\t  };\n\t}\n\t\n\tfunction entering() {\n\t  return !this.__axis;\n\t}\n\t\n\tfunction axis(orient, scale) {\n\t  var tickArguments = [],\n\t      tickValues = null,\n\t      tickFormat = null,\n\t      tickSizeInner = 6,\n\t      tickSizeOuter = 6,\n\t      tickPadding = 3,\n\t      k = orient === top || orient === left ? -1 : 1,\n\t      x = orient === left || orient === right ? \"x\" : \"y\",\n\t      transform = orient === top || orient === bottom ? translateX : translateY;\n\t\n\t  function axis(context) {\n\t    var values = tickValues == null ? (scale.ticks ? scale.ticks.apply(scale, tickArguments) : scale.domain()) : tickValues,\n\t        format = tickFormat == null ? (scale.tickFormat ? scale.tickFormat.apply(scale, tickArguments) : identity$1) : tickFormat,\n\t        spacing = Math.max(tickSizeInner, 0) + tickPadding,\n\t        range = scale.range(),\n\t        range0 = +range[0] + 0.5,\n\t        range1 = +range[range.length - 1] + 0.5,\n\t        position = (scale.bandwidth ? center : number$1)(scale.copy()),\n\t        selection = context.selection ? context.selection() : context,\n\t        path = selection.selectAll(\".domain\").data([null]),\n\t        tick = selection.selectAll(\".tick\").data(values, scale).order(),\n\t        tickExit = tick.exit(),\n\t        tickEnter = tick.enter().append(\"g\").attr(\"class\", \"tick\"),\n\t        line = tick.select(\"line\"),\n\t        text = tick.select(\"text\");\n\t\n\t    path = path.merge(path.enter().insert(\"path\", \".tick\")\n\t        .attr(\"class\", \"domain\")\n\t        .attr(\"stroke\", \"#000\"));\n\t\n\t    tick = tick.merge(tickEnter);\n\t\n\t    line = line.merge(tickEnter.append(\"line\")\n\t        .attr(\"stroke\", \"#000\")\n\t        .attr(x + \"2\", k * tickSizeInner));\n\t\n\t    text = text.merge(tickEnter.append(\"text\")\n\t        .attr(\"fill\", \"#000\")\n\t        .attr(x, k * spacing)\n\t        .attr(\"dy\", orient === top ? \"0em\" : orient === bottom ? \"0.71em\" : \"0.32em\"));\n\t\n\t    if (context !== selection) {\n\t      path = path.transition(context);\n\t      tick = tick.transition(context);\n\t      line = line.transition(context);\n\t      text = text.transition(context);\n\t\n\t      tickExit = tickExit.transition(context)\n\t          .attr(\"opacity\", epsilon)\n\t          .attr(\"transform\", function(d) { return isFinite(d = position(d)) ? transform(d) : this.getAttribute(\"transform\"); });\n\t\n\t      tickEnter\n\t          .attr(\"opacity\", epsilon)\n\t          .attr(\"transform\", function(d) { var p = this.parentNode.__axis; return transform(p && isFinite(p = p(d)) ? p : position(d)); });\n\t    }\n\t\n\t    tickExit.remove();\n\t\n\t    path\n\t        .attr(\"d\", orient === left || orient == right\n\t            ? \"M\" + k * tickSizeOuter + \",\" + range0 + \"H0.5V\" + range1 + \"H\" + k * tickSizeOuter\n\t            : \"M\" + range0 + \",\" + k * tickSizeOuter + \"V0.5H\" + range1 + \"V\" + k * tickSizeOuter);\n\t\n\t    tick\n\t        .attr(\"opacity\", 1)\n\t        .attr(\"transform\", function(d) { return transform(position(d)); });\n\t\n\t    line\n\t        .attr(x + \"2\", k * tickSizeInner);\n\t\n\t    text\n\t        .attr(x, k * spacing)\n\t        .text(format);\n\t\n\t    selection.filter(entering)\n\t        .attr(\"fill\", \"none\")\n\t        .attr(\"font-size\", 10)\n\t        .attr(\"font-family\", \"sans-serif\")\n\t        .attr(\"text-anchor\", orient === right ? \"start\" : orient === left ? \"end\" : \"middle\");\n\t\n\t    selection\n\t        .each(function() { this.__axis = position; });\n\t  }\n\t\n\t  axis.scale = function(_) {\n\t    return arguments.length ? (scale = _, axis) : scale;\n\t  };\n\t\n\t  axis.ticks = function() {\n\t    return tickArguments = slice$1.call(arguments), axis;\n\t  };\n\t\n\t  axis.tickArguments = function(_) {\n\t    return arguments.length ? (tickArguments = _ == null ? [] : slice$1.call(_), axis) : tickArguments.slice();\n\t  };\n\t\n\t  axis.tickValues = function(_) {\n\t    return arguments.length ? (tickValues = _ == null ? null : slice$1.call(_), axis) : tickValues && tickValues.slice();\n\t  };\n\t\n\t  axis.tickFormat = function(_) {\n\t    return arguments.length ? (tickFormat = _, axis) : tickFormat;\n\t  };\n\t\n\t  axis.tickSize = function(_) {\n\t    return arguments.length ? (tickSizeInner = tickSizeOuter = +_, axis) : tickSizeInner;\n\t  };\n\t\n\t  axis.tickSizeInner = function(_) {\n\t    return arguments.length ? (tickSizeInner = +_, axis) : tickSizeInner;\n\t  };\n\t\n\t  axis.tickSizeOuter = function(_) {\n\t    return arguments.length ? (tickSizeOuter = +_, axis) : tickSizeOuter;\n\t  };\n\t\n\t  axis.tickPadding = function(_) {\n\t    return arguments.length ? (tickPadding = +_, axis) : tickPadding;\n\t  };\n\t\n\t  return axis;\n\t}\n\t\n\tfunction axisTop(scale) {\n\t  return axis(top, scale);\n\t}\n\t\n\tfunction axisRight(scale) {\n\t  return axis(right, scale);\n\t}\n\t\n\tfunction axisBottom(scale) {\n\t  return axis(bottom, scale);\n\t}\n\t\n\tfunction axisLeft(scale) {\n\t  return axis(left, scale);\n\t}\n\t\n\tvar noop = {value: function() {}};\n\t\n\tfunction dispatch() {\n\t  for (var i = 0, n = arguments.length, _ = {}, t; i < n; ++i) {\n\t    if (!(t = arguments[i] + \"\") || (t in _)) throw new Error(\"illegal type: \" + t);\n\t    _[t] = [];\n\t  }\n\t  return new Dispatch(_);\n\t}\n\t\n\tfunction Dispatch(_) {\n\t  this._ = _;\n\t}\n\t\n\tfunction parseTypenames(typenames, types) {\n\t  return typenames.trim().split(/^|\\s+/).map(function(t) {\n\t    var name = \"\", i = t.indexOf(\".\");\n\t    if (i >= 0) name = t.slice(i + 1), t = t.slice(0, i);\n\t    if (t && !types.hasOwnProperty(t)) throw new Error(\"unknown type: \" + t);\n\t    return {type: t, name: name};\n\t  });\n\t}\n\t\n\tDispatch.prototype = dispatch.prototype = {\n\t  constructor: Dispatch,\n\t  on: function(typename, callback) {\n\t    var _ = this._,\n\t        T = parseTypenames(typename + \"\", _),\n\t        t,\n\t        i = -1,\n\t        n = T.length;\n\t\n\t    // If no callback was specified, return the callback of the given type and name.\n\t    if (arguments.length < 2) {\n\t      while (++i < n) if ((t = (typename = T[i]).type) && (t = get(_[t], typename.name))) return t;\n\t      return;\n\t    }\n\t\n\t    // If a type was specified, set the callback for the given type and name.\n\t    // Otherwise, if a null callback was specified, remove callbacks of the given name.\n\t    if (callback != null && typeof callback !== \"function\") throw new Error(\"invalid callback: \" + callback);\n\t    while (++i < n) {\n\t      if (t = (typename = T[i]).type) _[t] = set(_[t], typename.name, callback);\n\t      else if (callback == null) for (t in _) _[t] = set(_[t], typename.name, null);\n\t    }\n\t\n\t    return this;\n\t  },\n\t  copy: function() {\n\t    var copy = {}, _ = this._;\n\t    for (var t in _) copy[t] = _[t].slice();\n\t    return new Dispatch(copy);\n\t  },\n\t  call: function(type, that) {\n\t    if ((n = arguments.length - 2) > 0) for (var args = new Array(n), i = 0, n, t; i < n; ++i) args[i] = arguments[i + 2];\n\t    if (!this._.hasOwnProperty(type)) throw new Error(\"unknown type: \" + type);\n\t    for (t = this._[type], i = 0, n = t.length; i < n; ++i) t[i].value.apply(that, args);\n\t  },\n\t  apply: function(type, that, args) {\n\t    if (!this._.hasOwnProperty(type)) throw new Error(\"unknown type: \" + type);\n\t    for (var t = this._[type], i = 0, n = t.length; i < n; ++i) t[i].value.apply(that, args);\n\t  }\n\t};\n\t\n\tfunction get(type, name) {\n\t  for (var i = 0, n = type.length, c; i < n; ++i) {\n\t    if ((c = type[i]).name === name) {\n\t      return c.value;\n\t    }\n\t  }\n\t}\n\t\n\tfunction set(type, name, callback) {\n\t  for (var i = 0, n = type.length; i < n; ++i) {\n\t    if (type[i].name === name) {\n\t      type[i] = noop, type = type.slice(0, i).concat(type.slice(i + 1));\n\t      break;\n\t    }\n\t  }\n\t  if (callback != null) type.push({name: name, value: callback});\n\t  return type;\n\t}\n\t\n\tvar xhtml = \"http://www.w3.org/1999/xhtml\";\n\t\n\tvar namespaces = {\n\t  svg: \"http://www.w3.org/2000/svg\",\n\t  xhtml: xhtml,\n\t  xlink: \"http://www.w3.org/1999/xlink\",\n\t  xml: \"http://www.w3.org/XML/1998/namespace\",\n\t  xmlns: \"http://www.w3.org/2000/xmlns/\"\n\t};\n\t\n\tvar namespace = function(name) {\n\t  var prefix = name += \"\", i = prefix.indexOf(\":\");\n\t  if (i >= 0 && (prefix = name.slice(0, i)) !== \"xmlns\") name = name.slice(i + 1);\n\t  return namespaces.hasOwnProperty(prefix) ? {space: namespaces[prefix], local: name} : name;\n\t};\n\t\n\tfunction creatorInherit(name) {\n\t  return function() {\n\t    var document = this.ownerDocument,\n\t        uri = this.namespaceURI;\n\t    return uri === xhtml && document.documentElement.namespaceURI === xhtml\n\t        ? document.createElement(name)\n\t        : document.createElementNS(uri, name);\n\t  };\n\t}\n\t\n\tfunction creatorFixed(fullname) {\n\t  return function() {\n\t    return this.ownerDocument.createElementNS(fullname.space, fullname.local);\n\t  };\n\t}\n\t\n\tvar creator = function(name) {\n\t  var fullname = namespace(name);\n\t  return (fullname.local\n\t      ? creatorFixed\n\t      : creatorInherit)(fullname);\n\t};\n\t\n\tvar nextId = 0;\n\t\n\tfunction local$1() {\n\t  return new Local;\n\t}\n\t\n\tfunction Local() {\n\t  this._ = \"@\" + (++nextId).toString(36);\n\t}\n\t\n\tLocal.prototype = local$1.prototype = {\n\t  constructor: Local,\n\t  get: function(node) {\n\t    var id = this._;\n\t    while (!(id in node)) if (!(node = node.parentNode)) return;\n\t    return node[id];\n\t  },\n\t  set: function(node, value) {\n\t    return node[this._] = value;\n\t  },\n\t  remove: function(node) {\n\t    return this._ in node && delete node[this._];\n\t  },\n\t  toString: function() {\n\t    return this._;\n\t  }\n\t};\n\t\n\tvar matcher = function(selector) {\n\t  return function() {\n\t    return this.matches(selector);\n\t  };\n\t};\n\t\n\tif (typeof document !== \"undefined\") {\n\t  var element = document.documentElement;\n\t  if (!element.matches) {\n\t    var vendorMatches = element.webkitMatchesSelector\n\t        || element.msMatchesSelector\n\t        || element.mozMatchesSelector\n\t        || element.oMatchesSelector;\n\t    matcher = function(selector) {\n\t      return function() {\n\t        return vendorMatches.call(this, selector);\n\t      };\n\t    };\n\t  }\n\t}\n\t\n\tvar matcher$1 = matcher;\n\t\n\tvar filterEvents = {};\n\t\n\texports.event = null;\n\t\n\tif (typeof document !== \"undefined\") {\n\t  var element$1 = document.documentElement;\n\t  if (!(\"onmouseenter\" in element$1)) {\n\t    filterEvents = {mouseenter: \"mouseover\", mouseleave: \"mouseout\"};\n\t  }\n\t}\n\t\n\tfunction filterContextListener(listener, index, group) {\n\t  listener = contextListener(listener, index, group);\n\t  return function(event) {\n\t    var related = event.relatedTarget;\n\t    if (!related || (related !== this && !(related.compareDocumentPosition(this) & 8))) {\n\t      listener.call(this, event);\n\t    }\n\t  };\n\t}\n\t\n\tfunction contextListener(listener, index, group) {\n\t  return function(event1) {\n\t    var event0 = exports.event; // Events can be reentrant (e.g., focus).\n\t    exports.event = event1;\n\t    try {\n\t      listener.call(this, this.__data__, index, group);\n\t    } finally {\n\t      exports.event = event0;\n\t    }\n\t  };\n\t}\n\t\n\tfunction parseTypenames$1(typenames) {\n\t  return typenames.trim().split(/^|\\s+/).map(function(t) {\n\t    var name = \"\", i = t.indexOf(\".\");\n\t    if (i >= 0) name = t.slice(i + 1), t = t.slice(0, i);\n\t    return {type: t, name: name};\n\t  });\n\t}\n\t\n\tfunction onRemove(typename) {\n\t  return function() {\n\t    var on = this.__on;\n\t    if (!on) return;\n\t    for (var j = 0, i = -1, m = on.length, o; j < m; ++j) {\n\t      if (o = on[j], (!typename.type || o.type === typename.type) && o.name === typename.name) {\n\t        this.removeEventListener(o.type, o.listener, o.capture);\n\t      } else {\n\t        on[++i] = o;\n\t      }\n\t    }\n\t    if (++i) on.length = i;\n\t    else delete this.__on;\n\t  };\n\t}\n\t\n\tfunction onAdd(typename, value, capture) {\n\t  var wrap = filterEvents.hasOwnProperty(typename.type) ? filterContextListener : contextListener;\n\t  return function(d, i, group) {\n\t    var on = this.__on, o, listener = wrap(value, i, group);\n\t    if (on) for (var j = 0, m = on.length; j < m; ++j) {\n\t      if ((o = on[j]).type === typename.type && o.name === typename.name) {\n\t        this.removeEventListener(o.type, o.listener, o.capture);\n\t        this.addEventListener(o.type, o.listener = listener, o.capture = capture);\n\t        o.value = value;\n\t        return;\n\t      }\n\t    }\n\t    this.addEventListener(typename.type, listener, capture);\n\t    o = {type: typename.type, name: typename.name, value: value, listener: listener, capture: capture};\n\t    if (!on) this.__on = [o];\n\t    else on.push(o);\n\t  };\n\t}\n\t\n\tvar selection_on = function(typename, value, capture) {\n\t  var typenames = parseTypenames$1(typename + \"\"), i, n = typenames.length, t;\n\t\n\t  if (arguments.length < 2) {\n\t    var on = this.node().__on;\n\t    if (on) for (var j = 0, m = on.length, o; j < m; ++j) {\n\t      for (i = 0, o = on[j]; i < n; ++i) {\n\t        if ((t = typenames[i]).type === o.type && t.name === o.name) {\n\t          return o.value;\n\t        }\n\t      }\n\t    }\n\t    return;\n\t  }\n\t\n\t  on = value ? onAdd : onRemove;\n\t  if (capture == null) capture = false;\n\t  for (i = 0; i < n; ++i) this.each(on(typenames[i], value, capture));\n\t  return this;\n\t};\n\t\n\tfunction customEvent(event1, listener, that, args) {\n\t  var event0 = exports.event;\n\t  event1.sourceEvent = exports.event;\n\t  exports.event = event1;\n\t  try {\n\t    return listener.apply(that, args);\n\t  } finally {\n\t    exports.event = event0;\n\t  }\n\t}\n\t\n\tvar sourceEvent = function() {\n\t  var current = exports.event, source;\n\t  while (source = current.sourceEvent) current = source;\n\t  return current;\n\t};\n\t\n\tvar point = function(node, event) {\n\t  var svg = node.ownerSVGElement || node;\n\t\n\t  if (svg.createSVGPoint) {\n\t    var point = svg.createSVGPoint();\n\t    point.x = event.clientX, point.y = event.clientY;\n\t    point = point.matrixTransform(node.getScreenCTM().inverse());\n\t    return [point.x, point.y];\n\t  }\n\t\n\t  var rect = node.getBoundingClientRect();\n\t  return [event.clientX - rect.left - node.clientLeft, event.clientY - rect.top - node.clientTop];\n\t};\n\t\n\tvar mouse = function(node) {\n\t  var event = sourceEvent();\n\t  if (event.changedTouches) event = event.changedTouches[0];\n\t  return point(node, event);\n\t};\n\t\n\tfunction none() {}\n\t\n\tvar selector = function(selector) {\n\t  return selector == null ? none : function() {\n\t    return this.querySelector(selector);\n\t  };\n\t};\n\t\n\tvar selection_select = function(select) {\n\t  if (typeof select !== \"function\") select = selector(select);\n\t\n\t  for (var groups = this._groups, m = groups.length, subgroups = new Array(m), j = 0; j < m; ++j) {\n\t    for (var group = groups[j], n = group.length, subgroup = subgroups[j] = new Array(n), node, subnode, i = 0; i < n; ++i) {\n\t      if ((node = group[i]) && (subnode = select.call(node, node.__data__, i, group))) {\n\t        if (\"__data__\" in node) subnode.__data__ = node.__data__;\n\t        subgroup[i] = subnode;\n\t      }\n\t    }\n\t  }\n\t\n\t  return new Selection(subgroups, this._parents);\n\t};\n\t\n\tfunction empty$1() {\n\t  return [];\n\t}\n\t\n\tvar selectorAll = function(selector) {\n\t  return selector == null ? empty$1 : function() {\n\t    return this.querySelectorAll(selector);\n\t  };\n\t};\n\t\n\tvar selection_selectAll = function(select) {\n\t  if (typeof select !== \"function\") select = selectorAll(select);\n\t\n\t  for (var groups = this._groups, m = groups.length, subgroups = [], parents = [], j = 0; j < m; ++j) {\n\t    for (var group = groups[j], n = group.length, node, i = 0; i < n; ++i) {\n\t      if (node = group[i]) {\n\t        subgroups.push(select.call(node, node.__data__, i, group));\n\t        parents.push(node);\n\t      }\n\t    }\n\t  }\n\t\n\t  return new Selection(subgroups, parents);\n\t};\n\t\n\tvar selection_filter = function(match) {\n\t  if (typeof match !== \"function\") match = matcher$1(match);\n\t\n\t  for (var groups = this._groups, m = groups.length, subgroups = new Array(m), j = 0; j < m; ++j) {\n\t    for (var group = groups[j], n = group.length, subgroup = subgroups[j] = [], node, i = 0; i < n; ++i) {\n\t      if ((node = group[i]) && match.call(node, node.__data__, i, group)) {\n\t        subgroup.push(node);\n\t      }\n\t    }\n\t  }\n\t\n\t  return new Selection(subgroups, this._parents);\n\t};\n\t\n\tvar sparse = function(update) {\n\t  return new Array(update.length);\n\t};\n\t\n\tvar selection_enter = function() {\n\t  return new Selection(this._enter || this._groups.map(sparse), this._parents);\n\t};\n\t\n\tfunction EnterNode(parent, datum) {\n\t  this.ownerDocument = parent.ownerDocument;\n\t  this.namespaceURI = parent.namespaceURI;\n\t  this._next = null;\n\t  this._parent = parent;\n\t  this.__data__ = datum;\n\t}\n\t\n\tEnterNode.prototype = {\n\t  constructor: EnterNode,\n\t  appendChild: function(child) { return this._parent.insertBefore(child, this._next); },\n\t  insertBefore: function(child, next) { return this._parent.insertBefore(child, next); },\n\t  querySelector: function(selector) { return this._parent.querySelector(selector); },\n\t  querySelectorAll: function(selector) { return this._parent.querySelectorAll(selector); }\n\t};\n\t\n\tvar constant$1 = function(x) {\n\t  return function() {\n\t    return x;\n\t  };\n\t};\n\t\n\tvar keyPrefix = \"$\"; // Protect against keys like “__proto__”.\n\t\n\tfunction bindIndex(parent, group, enter, update, exit, data) {\n\t  var i = 0,\n\t      node,\n\t      groupLength = group.length,\n\t      dataLength = data.length;\n\t\n\t  // Put any non-null nodes that fit into update.\n\t  // Put any null nodes into enter.\n\t  // Put any remaining data into enter.\n\t  for (; i < dataLength; ++i) {\n\t    if (node = group[i]) {\n\t      node.__data__ = data[i];\n\t      update[i] = node;\n\t    } else {\n\t      enter[i] = new EnterNode(parent, data[i]);\n\t    }\n\t  }\n\t\n\t  // Put any non-null nodes that don’t fit into exit.\n\t  for (; i < groupLength; ++i) {\n\t    if (node = group[i]) {\n\t      exit[i] = node;\n\t    }\n\t  }\n\t}\n\t\n\tfunction bindKey(parent, group, enter, update, exit, data, key) {\n\t  var i,\n\t      node,\n\t      nodeByKeyValue = {},\n\t      groupLength = group.length,\n\t      dataLength = data.length,\n\t      keyValues = new Array(groupLength),\n\t      keyValue;\n\t\n\t  // Compute the key for each node.\n\t  // If multiple nodes have the same key, the duplicates are added to exit.\n\t  for (i = 0; i < groupLength; ++i) {\n\t    if (node = group[i]) {\n\t      keyValues[i] = keyValue = keyPrefix + key.call(node, node.__data__, i, group);\n\t      if (keyValue in nodeByKeyValue) {\n\t        exit[i] = node;\n\t      } else {\n\t        nodeByKeyValue[keyValue] = node;\n\t      }\n\t    }\n\t  }\n\t\n\t  // Compute the key for each datum.\n\t  // If there a node associated with this key, join and add it to update.\n\t  // If there is not (or the key is a duplicate), add it to enter.\n\t  for (i = 0; i < dataLength; ++i) {\n\t    keyValue = keyPrefix + key.call(parent, data[i], i, data);\n\t    if (node = nodeByKeyValue[keyValue]) {\n\t      update[i] = node;\n\t      node.__data__ = data[i];\n\t      nodeByKeyValue[keyValue] = null;\n\t    } else {\n\t      enter[i] = new EnterNode(parent, data[i]);\n\t    }\n\t  }\n\t\n\t  // Add any remaining nodes that were not bound to data to exit.\n\t  for (i = 0; i < groupLength; ++i) {\n\t    if ((node = group[i]) && (nodeByKeyValue[keyValues[i]] === node)) {\n\t      exit[i] = node;\n\t    }\n\t  }\n\t}\n\t\n\tvar selection_data = function(value, key) {\n\t  if (!value) {\n\t    data = new Array(this.size()), j = -1;\n\t    this.each(function(d) { data[++j] = d; });\n\t    return data;\n\t  }\n\t\n\t  var bind = key ? bindKey : bindIndex,\n\t      parents = this._parents,\n\t      groups = this._groups;\n\t\n\t  if (typeof value !== \"function\") value = constant$1(value);\n\t\n\t  for (var m = groups.length, update = new Array(m), enter = new Array(m), exit = new Array(m), j = 0; j < m; ++j) {\n\t    var parent = parents[j],\n\t        group = groups[j],\n\t        groupLength = group.length,\n\t        data = value.call(parent, parent && parent.__data__, j, parents),\n\t        dataLength = data.length,\n\t        enterGroup = enter[j] = new Array(dataLength),\n\t        updateGroup = update[j] = new Array(dataLength),\n\t        exitGroup = exit[j] = new Array(groupLength);\n\t\n\t    bind(parent, group, enterGroup, updateGroup, exitGroup, data, key);\n\t\n\t    // Now connect the enter nodes to their following update node, such that\n\t    // appendChild can insert the materialized enter node before this node,\n\t    // rather than at the end of the parent node.\n\t    for (var i0 = 0, i1 = 0, previous, next; i0 < dataLength; ++i0) {\n\t      if (previous = enterGroup[i0]) {\n\t        if (i0 >= i1) i1 = i0 + 1;\n\t        while (!(next = updateGroup[i1]) && ++i1 < dataLength);\n\t        previous._next = next || null;\n\t      }\n\t    }\n\t  }\n\t\n\t  update = new Selection(update, parents);\n\t  update._enter = enter;\n\t  update._exit = exit;\n\t  return update;\n\t};\n\t\n\tvar selection_exit = function() {\n\t  return new Selection(this._exit || this._groups.map(sparse), this._parents);\n\t};\n\t\n\tvar selection_merge = function(selection$$1) {\n\t\n\t  for (var groups0 = this._groups, groups1 = selection$$1._groups, m0 = groups0.length, m1 = groups1.length, m = Math.min(m0, m1), merges = new Array(m0), j = 0; j < m; ++j) {\n\t    for (var group0 = groups0[j], group1 = groups1[j], n = group0.length, merge = merges[j] = new Array(n), node, i = 0; i < n; ++i) {\n\t      if (node = group0[i] || group1[i]) {\n\t        merge[i] = node;\n\t      }\n\t    }\n\t  }\n\t\n\t  for (; j < m0; ++j) {\n\t    merges[j] = groups0[j];\n\t  }\n\t\n\t  return new Selection(merges, this._parents);\n\t};\n\t\n\tvar selection_order = function() {\n\t\n\t  for (var groups = this._groups, j = -1, m = groups.length; ++j < m;) {\n\t    for (var group = groups[j], i = group.length - 1, next = group[i], node; --i >= 0;) {\n\t      if (node = group[i]) {\n\t        if (next && next !== node.nextSibling) next.parentNode.insertBefore(node, next);\n\t        next = node;\n\t      }\n\t    }\n\t  }\n\t\n\t  return this;\n\t};\n\t\n\tvar selection_sort = function(compare) {\n\t  if (!compare) compare = ascending$1;\n\t\n\t  function compareNode(a, b) {\n\t    return a && b ? compare(a.__data__, b.__data__) : !a - !b;\n\t  }\n\t\n\t  for (var groups = this._groups, m = groups.length, sortgroups = new Array(m), j = 0; j < m; ++j) {\n\t    for (var group = groups[j], n = group.length, sortgroup = sortgroups[j] = new Array(n), node, i = 0; i < n; ++i) {\n\t      if (node = group[i]) {\n\t        sortgroup[i] = node;\n\t      }\n\t    }\n\t    sortgroup.sort(compareNode);\n\t  }\n\t\n\t  return new Selection(sortgroups, this._parents).order();\n\t};\n\t\n\tfunction ascending$1(a, b) {\n\t  return a < b ? -1 : a > b ? 1 : a >= b ? 0 : NaN;\n\t}\n\t\n\tvar selection_call = function() {\n\t  var callback = arguments[0];\n\t  arguments[0] = this;\n\t  callback.apply(null, arguments);\n\t  return this;\n\t};\n\t\n\tvar selection_nodes = function() {\n\t  var nodes = new Array(this.size()), i = -1;\n\t  this.each(function() { nodes[++i] = this; });\n\t  return nodes;\n\t};\n\t\n\tvar selection_node = function() {\n\t\n\t  for (var groups = this._groups, j = 0, m = groups.length; j < m; ++j) {\n\t    for (var group = groups[j], i = 0, n = group.length; i < n; ++i) {\n\t      var node = group[i];\n\t      if (node) return node;\n\t    }\n\t  }\n\t\n\t  return null;\n\t};\n\t\n\tvar selection_size = function() {\n\t  var size = 0;\n\t  this.each(function() { ++size; });\n\t  return size;\n\t};\n\t\n\tvar selection_empty = function() {\n\t  return !this.node();\n\t};\n\t\n\tvar selection_each = function(callback) {\n\t\n\t  for (var groups = this._groups, j = 0, m = groups.length; j < m; ++j) {\n\t    for (var group = groups[j], i = 0, n = group.length, node; i < n; ++i) {\n\t      if (node = group[i]) callback.call(node, node.__data__, i, group);\n\t    }\n\t  }\n\t\n\t  return this;\n\t};\n\t\n\tfunction attrRemove(name) {\n\t  return function() {\n\t    this.removeAttribute(name);\n\t  };\n\t}\n\t\n\tfunction attrRemoveNS(fullname) {\n\t  return function() {\n\t    this.removeAttributeNS(fullname.space, fullname.local);\n\t  };\n\t}\n\t\n\tfunction attrConstant(name, value) {\n\t  return function() {\n\t    this.setAttribute(name, value);\n\t  };\n\t}\n\t\n\tfunction attrConstantNS(fullname, value) {\n\t  return function() {\n\t    this.setAttributeNS(fullname.space, fullname.local, value);\n\t  };\n\t}\n\t\n\tfunction attrFunction(name, value) {\n\t  return function() {\n\t    var v = value.apply(this, arguments);\n\t    if (v == null) this.removeAttribute(name);\n\t    else this.setAttribute(name, v);\n\t  };\n\t}\n\t\n\tfunction attrFunctionNS(fullname, value) {\n\t  return function() {\n\t    var v = value.apply(this, arguments);\n\t    if (v == null) this.removeAttributeNS(fullname.space, fullname.local);\n\t    else this.setAttributeNS(fullname.space, fullname.local, v);\n\t  };\n\t}\n\t\n\tvar selection_attr = function(name, value) {\n\t  var fullname = namespace(name);\n\t\n\t  if (arguments.length < 2) {\n\t    var node = this.node();\n\t    return fullname.local\n\t        ? node.getAttributeNS(fullname.space, fullname.local)\n\t        : node.getAttribute(fullname);\n\t  }\n\t\n\t  return this.each((value == null\n\t      ? (fullname.local ? attrRemoveNS : attrRemove) : (typeof value === \"function\"\n\t      ? (fullname.local ? attrFunctionNS : attrFunction)\n\t      : (fullname.local ? attrConstantNS : attrConstant)))(fullname, value));\n\t};\n\t\n\tvar defaultView = function(node) {\n\t  return (node.ownerDocument && node.ownerDocument.defaultView) // node is a Node\n\t      || (node.document && node) // node is a Window\n\t      || node.defaultView; // node is a Document\n\t};\n\t\n\tfunction styleRemove(name) {\n\t  return function() {\n\t    this.style.removeProperty(name);\n\t  };\n\t}\n\t\n\tfunction styleConstant(name, value, priority) {\n\t  return function() {\n\t    this.style.setProperty(name, value, priority);\n\t  };\n\t}\n\t\n\tfunction styleFunction(name, value, priority) {\n\t  return function() {\n\t    var v = value.apply(this, arguments);\n\t    if (v == null) this.style.removeProperty(name);\n\t    else this.style.setProperty(name, v, priority);\n\t  };\n\t}\n\t\n\tvar selection_style = function(name, value, priority) {\n\t  return arguments.length > 1\n\t      ? this.each((value == null\n\t            ? styleRemove : typeof value === \"function\"\n\t            ? styleFunction\n\t            : styleConstant)(name, value, priority == null ? \"\" : priority))\n\t      : styleValue(this.node(), name);\n\t};\n\t\n\tfunction styleValue(node, name) {\n\t  return node.style.getPropertyValue(name)\n\t      || defaultView(node).getComputedStyle(node, null).getPropertyValue(name);\n\t}\n\t\n\tfunction propertyRemove(name) {\n\t  return function() {\n\t    delete this[name];\n\t  };\n\t}\n\t\n\tfunction propertyConstant(name, value) {\n\t  return function() {\n\t    this[name] = value;\n\t  };\n\t}\n\t\n\tfunction propertyFunction(name, value) {\n\t  return function() {\n\t    var v = value.apply(this, arguments);\n\t    if (v == null) delete this[name];\n\t    else this[name] = v;\n\t  };\n\t}\n\t\n\tvar selection_property = function(name, value) {\n\t  return arguments.length > 1\n\t      ? this.each((value == null\n\t          ? propertyRemove : typeof value === \"function\"\n\t          ? propertyFunction\n\t          : propertyConstant)(name, value))\n\t      : this.node()[name];\n\t};\n\t\n\tfunction classArray(string) {\n\t  return string.trim().split(/^|\\s+/);\n\t}\n\t\n\tfunction classList(node) {\n\t  return node.classList || new ClassList(node);\n\t}\n\t\n\tfunction ClassList(node) {\n\t  this._node = node;\n\t  this._names = classArray(node.getAttribute(\"class\") || \"\");\n\t}\n\t\n\tClassList.prototype = {\n\t  add: function(name) {\n\t    var i = this._names.indexOf(name);\n\t    if (i < 0) {\n\t      this._names.push(name);\n\t      this._node.setAttribute(\"class\", this._names.join(\" \"));\n\t    }\n\t  },\n\t  remove: function(name) {\n\t    var i = this._names.indexOf(name);\n\t    if (i >= 0) {\n\t      this._names.splice(i, 1);\n\t      this._node.setAttribute(\"class\", this._names.join(\" \"));\n\t    }\n\t  },\n\t  contains: function(name) {\n\t    return this._names.indexOf(name) >= 0;\n\t  }\n\t};\n\t\n\tfunction classedAdd(node, names) {\n\t  var list = classList(node), i = -1, n = names.length;\n\t  while (++i < n) list.add(names[i]);\n\t}\n\t\n\tfunction classedRemove(node, names) {\n\t  var list = classList(node), i = -1, n = names.length;\n\t  while (++i < n) list.remove(names[i]);\n\t}\n\t\n\tfunction classedTrue(names) {\n\t  return function() {\n\t    classedAdd(this, names);\n\t  };\n\t}\n\t\n\tfunction classedFalse(names) {\n\t  return function() {\n\t    classedRemove(this, names);\n\t  };\n\t}\n\t\n\tfunction classedFunction(names, value) {\n\t  return function() {\n\t    (value.apply(this, arguments) ? classedAdd : classedRemove)(this, names);\n\t  };\n\t}\n\t\n\tvar selection_classed = function(name, value) {\n\t  var names = classArray(name + \"\");\n\t\n\t  if (arguments.length < 2) {\n\t    var list = classList(this.node()), i = -1, n = names.length;\n\t    while (++i < n) if (!list.contains(names[i])) return false;\n\t    return true;\n\t  }\n\t\n\t  return this.each((typeof value === \"function\"\n\t      ? classedFunction : value\n\t      ? classedTrue\n\t      : classedFalse)(names, value));\n\t};\n\t\n\tfunction textRemove() {\n\t  this.textContent = \"\";\n\t}\n\t\n\tfunction textConstant(value) {\n\t  return function() {\n\t    this.textContent = value;\n\t  };\n\t}\n\t\n\tfunction textFunction(value) {\n\t  return function() {\n\t    var v = value.apply(this, arguments);\n\t    this.textContent = v == null ? \"\" : v;\n\t  };\n\t}\n\t\n\tvar selection_text = function(value) {\n\t  return arguments.length\n\t      ? this.each(value == null\n\t          ? textRemove : (typeof value === \"function\"\n\t          ? textFunction\n\t          : textConstant)(value))\n\t      : this.node().textContent;\n\t};\n\t\n\tfunction htmlRemove() {\n\t  this.innerHTML = \"\";\n\t}\n\t\n\tfunction htmlConstant(value) {\n\t  return function() {\n\t    this.innerHTML = value;\n\t  };\n\t}\n\t\n\tfunction htmlFunction(value) {\n\t  return function() {\n\t    var v = value.apply(this, arguments);\n\t    this.innerHTML = v == null ? \"\" : v;\n\t  };\n\t}\n\t\n\tvar selection_html = function(value) {\n\t  return arguments.length\n\t      ? this.each(value == null\n\t          ? htmlRemove : (typeof value === \"function\"\n\t          ? htmlFunction\n\t          : htmlConstant)(value))\n\t      : this.node().innerHTML;\n\t};\n\t\n\tfunction raise() {\n\t  if (this.nextSibling) this.parentNode.appendChild(this);\n\t}\n\t\n\tvar selection_raise = function() {\n\t  return this.each(raise);\n\t};\n\t\n\tfunction lower() {\n\t  if (this.previousSibling) this.parentNode.insertBefore(this, this.parentNode.firstChild);\n\t}\n\t\n\tvar selection_lower = function() {\n\t  return this.each(lower);\n\t};\n\t\n\tvar selection_append = function(name) {\n\t  var create = typeof name === \"function\" ? name : creator(name);\n\t  return this.select(function() {\n\t    return this.appendChild(create.apply(this, arguments));\n\t  });\n\t};\n\t\n\tfunction constantNull() {\n\t  return null;\n\t}\n\t\n\tvar selection_insert = function(name, before) {\n\t  var create = typeof name === \"function\" ? name : creator(name),\n\t      select = before == null ? constantNull : typeof before === \"function\" ? before : selector(before);\n\t  return this.select(function() {\n\t    return this.insertBefore(create.apply(this, arguments), select.apply(this, arguments) || null);\n\t  });\n\t};\n\t\n\tfunction remove() {\n\t  var parent = this.parentNode;\n\t  if (parent) parent.removeChild(this);\n\t}\n\t\n\tvar selection_remove = function() {\n\t  return this.each(remove);\n\t};\n\t\n\tvar selection_datum = function(value) {\n\t  return arguments.length\n\t      ? this.property(\"__data__\", value)\n\t      : this.node().__data__;\n\t};\n\t\n\tfunction dispatchEvent(node, type, params) {\n\t  var window = defaultView(node),\n\t      event = window.CustomEvent;\n\t\n\t  if (typeof event === \"function\") {\n\t    event = new event(type, params);\n\t  } else {\n\t    event = window.document.createEvent(\"Event\");\n\t    if (params) event.initEvent(type, params.bubbles, params.cancelable), event.detail = params.detail;\n\t    else event.initEvent(type, false, false);\n\t  }\n\t\n\t  node.dispatchEvent(event);\n\t}\n\t\n\tfunction dispatchConstant(type, params) {\n\t  return function() {\n\t    return dispatchEvent(this, type, params);\n\t  };\n\t}\n\t\n\tfunction dispatchFunction(type, params) {\n\t  return function() {\n\t    return dispatchEvent(this, type, params.apply(this, arguments));\n\t  };\n\t}\n\t\n\tvar selection_dispatch = function(type, params) {\n\t  return this.each((typeof params === \"function\"\n\t      ? dispatchFunction\n\t      : dispatchConstant)(type, params));\n\t};\n\t\n\tvar root = [null];\n\t\n\tfunction Selection(groups, parents) {\n\t  this._groups = groups;\n\t  this._parents = parents;\n\t}\n\t\n\tfunction selection() {\n\t  return new Selection([[document.documentElement]], root);\n\t}\n\t\n\tSelection.prototype = selection.prototype = {\n\t  constructor: Selection,\n\t  select: selection_select,\n\t  selectAll: selection_selectAll,\n\t  filter: selection_filter,\n\t  data: selection_data,\n\t  enter: selection_enter,\n\t  exit: selection_exit,\n\t  merge: selection_merge,\n\t  order: selection_order,\n\t  sort: selection_sort,\n\t  call: selection_call,\n\t  nodes: selection_nodes,\n\t  node: selection_node,\n\t  size: selection_size,\n\t  empty: selection_empty,\n\t  each: selection_each,\n\t  attr: selection_attr,\n\t  style: selection_style,\n\t  property: selection_property,\n\t  classed: selection_classed,\n\t  text: selection_text,\n\t  html: selection_html,\n\t  raise: selection_raise,\n\t  lower: selection_lower,\n\t  append: selection_append,\n\t  insert: selection_insert,\n\t  remove: selection_remove,\n\t  datum: selection_datum,\n\t  on: selection_on,\n\t  dispatch: selection_dispatch\n\t};\n\t\n\tvar select = function(selector) {\n\t  return typeof selector === \"string\"\n\t      ? new Selection([[document.querySelector(selector)]], [document.documentElement])\n\t      : new Selection([[selector]], root);\n\t};\n\t\n\tvar selectAll = function(selector) {\n\t  return typeof selector === \"string\"\n\t      ? new Selection([document.querySelectorAll(selector)], [document.documentElement])\n\t      : new Selection([selector == null ? [] : selector], root);\n\t};\n\t\n\tvar touch = function(node, touches, identifier) {\n\t  if (arguments.length < 3) identifier = touches, touches = sourceEvent().changedTouches;\n\t\n\t  for (var i = 0, n = touches ? touches.length : 0, touch; i < n; ++i) {\n\t    if ((touch = touches[i]).identifier === identifier) {\n\t      return point(node, touch);\n\t    }\n\t  }\n\t\n\t  return null;\n\t};\n\t\n\tvar touches = function(node, touches) {\n\t  if (touches == null) touches = sourceEvent().touches;\n\t\n\t  for (var i = 0, n = touches ? touches.length : 0, points = new Array(n); i < n; ++i) {\n\t    points[i] = point(node, touches[i]);\n\t  }\n\t\n\t  return points;\n\t};\n\t\n\tfunction nopropagation() {\n\t  exports.event.stopImmediatePropagation();\n\t}\n\t\n\tvar noevent = function() {\n\t  exports.event.preventDefault();\n\t  exports.event.stopImmediatePropagation();\n\t};\n\t\n\tvar dragDisable = function(view) {\n\t  var root = view.document.documentElement,\n\t      selection = select(view).on(\"dragstart.drag\", noevent, true);\n\t  if (\"onselectstart\" in root) {\n\t    selection.on(\"selectstart.drag\", noevent, true);\n\t  } else {\n\t    root.__noselect = root.style.MozUserSelect;\n\t    root.style.MozUserSelect = \"none\";\n\t  }\n\t};\n\t\n\tfunction yesdrag(view, noclick) {\n\t  var root = view.document.documentElement,\n\t      selection = select(view).on(\"dragstart.drag\", null);\n\t  if (noclick) {\n\t    selection.on(\"click.drag\", noevent, true);\n\t    setTimeout(function() { selection.on(\"click.drag\", null); }, 0);\n\t  }\n\t  if (\"onselectstart\" in root) {\n\t    selection.on(\"selectstart.drag\", null);\n\t  } else {\n\t    root.style.MozUserSelect = root.__noselect;\n\t    delete root.__noselect;\n\t  }\n\t}\n\t\n\tvar constant$2 = function(x) {\n\t  return function() {\n\t    return x;\n\t  };\n\t};\n\t\n\tfunction DragEvent(target, type, subject, id, active, x, y, dx, dy, dispatch) {\n\t  this.target = target;\n\t  this.type = type;\n\t  this.subject = subject;\n\t  this.identifier = id;\n\t  this.active = active;\n\t  this.x = x;\n\t  this.y = y;\n\t  this.dx = dx;\n\t  this.dy = dy;\n\t  this._ = dispatch;\n\t}\n\t\n\tDragEvent.prototype.on = function() {\n\t  var value = this._.on.apply(this._, arguments);\n\t  return value === this._ ? this : value;\n\t};\n\t\n\t// Ignore right-click, since that should open the context menu.\n\tfunction defaultFilter$1() {\n\t  return !exports.event.button;\n\t}\n\t\n\tfunction defaultContainer() {\n\t  return this.parentNode;\n\t}\n\t\n\tfunction defaultSubject(d) {\n\t  return d == null ? {x: exports.event.x, y: exports.event.y} : d;\n\t}\n\t\n\tfunction defaultTouchable() {\n\t  return \"ontouchstart\" in this;\n\t}\n\t\n\tvar drag = function() {\n\t  var filter = defaultFilter$1,\n\t      container = defaultContainer,\n\t      subject = defaultSubject,\n\t      touchable = defaultTouchable,\n\t      gestures = {},\n\t      listeners = dispatch(\"start\", \"drag\", \"end\"),\n\t      active = 0,\n\t      mousedownx,\n\t      mousedowny,\n\t      mousemoving,\n\t      touchending,\n\t      clickDistance2 = 0;\n\t\n\t  function drag(selection) {\n\t    selection\n\t        .on(\"mousedown.drag\", mousedowned)\n\t      .filter(touchable)\n\t        .on(\"touchstart.drag\", touchstarted)\n\t        .on(\"touchmove.drag\", touchmoved)\n\t        .on(\"touchend.drag touchcancel.drag\", touchended)\n\t        .style(\"touch-action\", \"none\")\n\t        .style(\"-webkit-tap-highlight-color\", \"rgba(0,0,0,0)\");\n\t  }\n\t\n\t  function mousedowned() {\n\t    if (touchending || !filter.apply(this, arguments)) return;\n\t    var gesture = beforestart(\"mouse\", container.apply(this, arguments), mouse, this, arguments);\n\t    if (!gesture) return;\n\t    select(exports.event.view).on(\"mousemove.drag\", mousemoved, true).on(\"mouseup.drag\", mouseupped, true);\n\t    dragDisable(exports.event.view);\n\t    nopropagation();\n\t    mousemoving = false;\n\t    mousedownx = exports.event.clientX;\n\t    mousedowny = exports.event.clientY;\n\t    gesture(\"start\");\n\t  }\n\t\n\t  function mousemoved() {\n\t    noevent();\n\t    if (!mousemoving) {\n\t      var dx = exports.event.clientX - mousedownx, dy = exports.event.clientY - mousedowny;\n\t      mousemoving = dx * dx + dy * dy > clickDistance2;\n\t    }\n\t    gestures.mouse(\"drag\");\n\t  }\n\t\n\t  function mouseupped() {\n\t    select(exports.event.view).on(\"mousemove.drag mouseup.drag\", null);\n\t    yesdrag(exports.event.view, mousemoving);\n\t    noevent();\n\t    gestures.mouse(\"end\");\n\t  }\n\t\n\t  function touchstarted() {\n\t    if (!filter.apply(this, arguments)) return;\n\t    var touches = exports.event.changedTouches,\n\t        c = container.apply(this, arguments),\n\t        n = touches.length, i, gesture;\n\t\n\t    for (i = 0; i < n; ++i) {\n\t      if (gesture = beforestart(touches[i].identifier, c, touch, this, arguments)) {\n\t        nopropagation();\n\t        gesture(\"start\");\n\t      }\n\t    }\n\t  }\n\t\n\t  function touchmoved() {\n\t    var touches = exports.event.changedTouches,\n\t        n = touches.length, i, gesture;\n\t\n\t    for (i = 0; i < n; ++i) {\n\t      if (gesture = gestures[touches[i].identifier]) {\n\t        noevent();\n\t        gesture(\"drag\");\n\t      }\n\t    }\n\t  }\n\t\n\t  function touchended() {\n\t    var touches = exports.event.changedTouches,\n\t        n = touches.length, i, gesture;\n\t\n\t    if (touchending) clearTimeout(touchending);\n\t    touchending = setTimeout(function() { touchending = null; }, 500); // Ghost clicks are delayed!\n\t    for (i = 0; i < n; ++i) {\n\t      if (gesture = gestures[touches[i].identifier]) {\n\t        nopropagation();\n\t        gesture(\"end\");\n\t      }\n\t    }\n\t  }\n\t\n\t  function beforestart(id, container, point, that, args) {\n\t    var p = point(container, id), s, dx, dy,\n\t        sublisteners = listeners.copy();\n\t\n\t    if (!customEvent(new DragEvent(drag, \"beforestart\", s, id, active, p[0], p[1], 0, 0, sublisteners), function() {\n\t      if ((exports.event.subject = s = subject.apply(that, args)) == null) return false;\n\t      dx = s.x - p[0] || 0;\n\t      dy = s.y - p[1] || 0;\n\t      return true;\n\t    })) return;\n\t\n\t    return function gesture(type) {\n\t      var p0 = p, n;\n\t      switch (type) {\n\t        case \"start\": gestures[id] = gesture, n = active++; break;\n\t        case \"end\": delete gestures[id], --active; // nobreak\n\t        case \"drag\": p = point(container, id), n = active; break;\n\t      }\n\t      customEvent(new DragEvent(drag, type, s, id, n, p[0] + dx, p[1] + dy, p[0] - p0[0], p[1] - p0[1], sublisteners), sublisteners.apply, sublisteners, [type, that, args]);\n\t    };\n\t  }\n\t\n\t  drag.filter = function(_) {\n\t    return arguments.length ? (filter = typeof _ === \"function\" ? _ : constant$2(!!_), drag) : filter;\n\t  };\n\t\n\t  drag.container = function(_) {\n\t    return arguments.length ? (container = typeof _ === \"function\" ? _ : constant$2(_), drag) : container;\n\t  };\n\t\n\t  drag.subject = function(_) {\n\t    return arguments.length ? (subject = typeof _ === \"function\" ? _ : constant$2(_), drag) : subject;\n\t  };\n\t\n\t  drag.touchable = function(_) {\n\t    return arguments.length ? (touchable = typeof _ === \"function\" ? _ : constant$2(!!_), drag) : touchable;\n\t  };\n\t\n\t  drag.on = function() {\n\t    var value = listeners.on.apply(listeners, arguments);\n\t    return value === listeners ? drag : value;\n\t  };\n\t\n\t  drag.clickDistance = function(_) {\n\t    return arguments.length ? (clickDistance2 = (_ = +_) * _, drag) : Math.sqrt(clickDistance2);\n\t  };\n\t\n\t  return drag;\n\t};\n\t\n\tvar define = function(constructor, factory, prototype) {\n\t  constructor.prototype = factory.prototype = prototype;\n\t  prototype.constructor = constructor;\n\t};\n\t\n\tfunction extend(parent, definition) {\n\t  var prototype = Object.create(parent.prototype);\n\t  for (var key in definition) prototype[key] = definition[key];\n\t  return prototype;\n\t}\n\t\n\tfunction Color() {}\n\t\n\tvar darker = 0.7;\n\tvar brighter = 1 / darker;\n\t\n\tvar reI = \"\\\\s*([+-]?\\\\d+)\\\\s*\";\n\tvar reN = \"\\\\s*([+-]?\\\\d*\\\\.?\\\\d+(?:[eE][+-]?\\\\d+)?)\\\\s*\";\n\tvar reP = \"\\\\s*([+-]?\\\\d*\\\\.?\\\\d+(?:[eE][+-]?\\\\d+)?)%\\\\s*\";\n\tvar reHex3 = /^#([0-9a-f]{3})$/;\n\tvar reHex6 = /^#([0-9a-f]{6})$/;\n\tvar reRgbInteger = new RegExp(\"^rgb\\\\(\" + [reI, reI, reI] + \"\\\\)$\");\n\tvar reRgbPercent = new RegExp(\"^rgb\\\\(\" + [reP, reP, reP] + \"\\\\)$\");\n\tvar reRgbaInteger = new RegExp(\"^rgba\\\\(\" + [reI, reI, reI, reN] + \"\\\\)$\");\n\tvar reRgbaPercent = new RegExp(\"^rgba\\\\(\" + [reP, reP, reP, reN] + \"\\\\)$\");\n\tvar reHslPercent = new RegExp(\"^hsl\\\\(\" + [reN, reP, reP] + \"\\\\)$\");\n\tvar reHslaPercent = new RegExp(\"^hsla\\\\(\" + [reN, reP, reP, reN] + \"\\\\)$\");\n\t\n\tvar named = {\n\t  aliceblue: 0xf0f8ff,\n\t  antiquewhite: 0xfaebd7,\n\t  aqua: 0x00ffff,\n\t  aquamarine: 0x7fffd4,\n\t  azure: 0xf0ffff,\n\t  beige: 0xf5f5dc,\n\t  bisque: 0xffe4c4,\n\t  black: 0x000000,\n\t  blanchedalmond: 0xffebcd,\n\t  blue: 0x0000ff,\n\t  blueviolet: 0x8a2be2,\n\t  brown: 0xa52a2a,\n\t  burlywood: 0xdeb887,\n\t  cadetblue: 0x5f9ea0,\n\t  chartreuse: 0x7fff00,\n\t  chocolate: 0xd2691e,\n\t  coral: 0xff7f50,\n\t  cornflowerblue: 0x6495ed,\n\t  cornsilk: 0xfff8dc,\n\t  crimson: 0xdc143c,\n\t  cyan: 0x00ffff,\n\t  darkblue: 0x00008b,\n\t  darkcyan: 0x008b8b,\n\t  darkgoldenrod: 0xb8860b,\n\t  darkgray: 0xa9a9a9,\n\t  darkgreen: 0x006400,\n\t  darkgrey: 0xa9a9a9,\n\t  darkkhaki: 0xbdb76b,\n\t  darkmagenta: 0x8b008b,\n\t  darkolivegreen: 0x556b2f,\n\t  darkorange: 0xff8c00,\n\t  darkorchid: 0x9932cc,\n\t  darkred: 0x8b0000,\n\t  darksalmon: 0xe9967a,\n\t  darkseagreen: 0x8fbc8f,\n\t  darkslateblue: 0x483d8b,\n\t  darkslategray: 0x2f4f4f,\n\t  darkslategrey: 0x2f4f4f,\n\t  darkturquoise: 0x00ced1,\n\t  darkviolet: 0x9400d3,\n\t  deeppink: 0xff1493,\n\t  deepskyblue: 0x00bfff,\n\t  dimgray: 0x696969,\n\t  dimgrey: 0x696969,\n\t  dodgerblue: 0x1e90ff,\n\t  firebrick: 0xb22222,\n\t  floralwhite: 0xfffaf0,\n\t  forestgreen: 0x228b22,\n\t  fuchsia: 0xff00ff,\n\t  gainsboro: 0xdcdcdc,\n\t  ghostwhite: 0xf8f8ff,\n\t  gold: 0xffd700,\n\t  goldenrod: 0xdaa520,\n\t  gray: 0x808080,\n\t  green: 0x008000,\n\t  greenyellow: 0xadff2f,\n\t  grey: 0x808080,\n\t  honeydew: 0xf0fff0,\n\t  hotpink: 0xff69b4,\n\t  indianred: 0xcd5c5c,\n\t  indigo: 0x4b0082,\n\t  ivory: 0xfffff0,\n\t  khaki: 0xf0e68c,\n\t  lavender: 0xe6e6fa,\n\t  lavenderblush: 0xfff0f5,\n\t  lawngreen: 0x7cfc00,\n\t  lemonchiffon: 0xfffacd,\n\t  lightblue: 0xadd8e6,\n\t  lightcoral: 0xf08080,\n\t  lightcyan: 0xe0ffff,\n\t  lightgoldenrodyellow: 0xfafad2,\n\t  lightgray: 0xd3d3d3,\n\t  lightgreen: 0x90ee90,\n\t  lightgrey: 0xd3d3d3,\n\t  lightpink: 0xffb6c1,\n\t  lightsalmon: 0xffa07a,\n\t  lightseagreen: 0x20b2aa,\n\t  lightskyblue: 0x87cefa,\n\t  lightslategray: 0x778899,\n\t  lightslategrey: 0x778899,\n\t  lightsteelblue: 0xb0c4de,\n\t  lightyellow: 0xffffe0,\n\t  lime: 0x00ff00,\n\t  limegreen: 0x32cd32,\n\t  linen: 0xfaf0e6,\n\t  magenta: 0xff00ff,\n\t  maroon: 0x800000,\n\t  mediumaquamarine: 0x66cdaa,\n\t  mediumblue: 0x0000cd,\n\t  mediumorchid: 0xba55d3,\n\t  mediumpurple: 0x9370db,\n\t  mediumseagreen: 0x3cb371,\n\t  mediumslateblue: 0x7b68ee,\n\t  mediumspringgreen: 0x00fa9a,\n\t  mediumturquoise: 0x48d1cc,\n\t  mediumvioletred: 0xc71585,\n\t  midnightblue: 0x191970,\n\t  mintcream: 0xf5fffa,\n\t  mistyrose: 0xffe4e1,\n\t  moccasin: 0xffe4b5,\n\t  navajowhite: 0xffdead,\n\t  navy: 0x000080,\n\t  oldlace: 0xfdf5e6,\n\t  olive: 0x808000,\n\t  olivedrab: 0x6b8e23,\n\t  orange: 0xffa500,\n\t  orangered: 0xff4500,\n\t  orchid: 0xda70d6,\n\t  palegoldenrod: 0xeee8aa,\n\t  palegreen: 0x98fb98,\n\t  paleturquoise: 0xafeeee,\n\t  palevioletred: 0xdb7093,\n\t  papayawhip: 0xffefd5,\n\t  peachpuff: 0xffdab9,\n\t  peru: 0xcd853f,\n\t  pink: 0xffc0cb,\n\t  plum: 0xdda0dd,\n\t  powderblue: 0xb0e0e6,\n\t  purple: 0x800080,\n\t  rebeccapurple: 0x663399,\n\t  red: 0xff0000,\n\t  rosybrown: 0xbc8f8f,\n\t  royalblue: 0x4169e1,\n\t  saddlebrown: 0x8b4513,\n\t  salmon: 0xfa8072,\n\t  sandybrown: 0xf4a460,\n\t  seagreen: 0x2e8b57,\n\t  seashell: 0xfff5ee,\n\t  sienna: 0xa0522d,\n\t  silver: 0xc0c0c0,\n\t  skyblue: 0x87ceeb,\n\t  slateblue: 0x6a5acd,\n\t  slategray: 0x708090,\n\t  slategrey: 0x708090,\n\t  snow: 0xfffafa,\n\t  springgreen: 0x00ff7f,\n\t  steelblue: 0x4682b4,\n\t  tan: 0xd2b48c,\n\t  teal: 0x008080,\n\t  thistle: 0xd8bfd8,\n\t  tomato: 0xff6347,\n\t  turquoise: 0x40e0d0,\n\t  violet: 0xee82ee,\n\t  wheat: 0xf5deb3,\n\t  white: 0xffffff,\n\t  whitesmoke: 0xf5f5f5,\n\t  yellow: 0xffff00,\n\t  yellowgreen: 0x9acd32\n\t};\n\t\n\tdefine(Color, color, {\n\t  displayable: function() {\n\t    return this.rgb().displayable();\n\t  },\n\t  toString: function() {\n\t    return this.rgb() + \"\";\n\t  }\n\t});\n\t\n\tfunction color(format) {\n\t  var m;\n\t  format = (format + \"\").trim().toLowerCase();\n\t  return (m = reHex3.exec(format)) ? (m = parseInt(m[1], 16), new Rgb((m >> 8 & 0xf) | (m >> 4 & 0x0f0), (m >> 4 & 0xf) | (m & 0xf0), ((m & 0xf) << 4) | (m & 0xf), 1)) // #f00\n\t      : (m = reHex6.exec(format)) ? rgbn(parseInt(m[1], 16)) // #ff0000\n\t      : (m = reRgbInteger.exec(format)) ? new Rgb(m[1], m[2], m[3], 1) // rgb(255, 0, 0)\n\t      : (m = reRgbPercent.exec(format)) ? new Rgb(m[1] * 255 / 100, m[2] * 255 / 100, m[3] * 255 / 100, 1) // rgb(100%, 0%, 0%)\n\t      : (m = reRgbaInteger.exec(format)) ? rgba(m[1], m[2], m[3], m[4]) // rgba(255, 0, 0, 1)\n\t      : (m = reRgbaPercent.exec(format)) ? rgba(m[1] * 255 / 100, m[2] * 255 / 100, m[3] * 255 / 100, m[4]) // rgb(100%, 0%, 0%, 1)\n\t      : (m = reHslPercent.exec(format)) ? hsla(m[1], m[2] / 100, m[3] / 100, 1) // hsl(120, 50%, 50%)\n\t      : (m = reHslaPercent.exec(format)) ? hsla(m[1], m[2] / 100, m[3] / 100, m[4]) // hsla(120, 50%, 50%, 1)\n\t      : named.hasOwnProperty(format) ? rgbn(named[format])\n\t      : format === \"transparent\" ? new Rgb(NaN, NaN, NaN, 0)\n\t      : null;\n\t}\n\t\n\tfunction rgbn(n) {\n\t  return new Rgb(n >> 16 & 0xff, n >> 8 & 0xff, n & 0xff, 1);\n\t}\n\t\n\tfunction rgba(r, g, b, a) {\n\t  if (a <= 0) r = g = b = NaN;\n\t  return new Rgb(r, g, b, a);\n\t}\n\t\n\tfunction rgbConvert(o) {\n\t  if (!(o instanceof Color)) o = color(o);\n\t  if (!o) return new Rgb;\n\t  o = o.rgb();\n\t  return new Rgb(o.r, o.g, o.b, o.opacity);\n\t}\n\t\n\tfunction rgb(r, g, b, opacity) {\n\t  return arguments.length === 1 ? rgbConvert(r) : new Rgb(r, g, b, opacity == null ? 1 : opacity);\n\t}\n\t\n\tfunction Rgb(r, g, b, opacity) {\n\t  this.r = +r;\n\t  this.g = +g;\n\t  this.b = +b;\n\t  this.opacity = +opacity;\n\t}\n\t\n\tdefine(Rgb, rgb, extend(Color, {\n\t  brighter: function(k) {\n\t    k = k == null ? brighter : Math.pow(brighter, k);\n\t    return new Rgb(this.r * k, this.g * k, this.b * k, this.opacity);\n\t  },\n\t  darker: function(k) {\n\t    k = k == null ? darker : Math.pow(darker, k);\n\t    return new Rgb(this.r * k, this.g * k, this.b * k, this.opacity);\n\t  },\n\t  rgb: function() {\n\t    return this;\n\t  },\n\t  displayable: function() {\n\t    return (0 <= this.r && this.r <= 255)\n\t        && (0 <= this.g && this.g <= 255)\n\t        && (0 <= this.b && this.b <= 255)\n\t        && (0 <= this.opacity && this.opacity <= 1);\n\t  },\n\t  toString: function() {\n\t    var a = this.opacity; a = isNaN(a) ? 1 : Math.max(0, Math.min(1, a));\n\t    return (a === 1 ? \"rgb(\" : \"rgba(\")\n\t        + Math.max(0, Math.min(255, Math.round(this.r) || 0)) + \", \"\n\t        + Math.max(0, Math.min(255, Math.round(this.g) || 0)) + \", \"\n\t        + Math.max(0, Math.min(255, Math.round(this.b) || 0))\n\t        + (a === 1 ? \")\" : \", \" + a + \")\");\n\t  }\n\t}));\n\t\n\tfunction hsla(h, s, l, a) {\n\t  if (a <= 0) h = s = l = NaN;\n\t  else if (l <= 0 || l >= 1) h = s = NaN;\n\t  else if (s <= 0) h = NaN;\n\t  return new Hsl(h, s, l, a);\n\t}\n\t\n\tfunction hslConvert(o) {\n\t  if (o instanceof Hsl) return new Hsl(o.h, o.s, o.l, o.opacity);\n\t  if (!(o instanceof Color)) o = color(o);\n\t  if (!o) return new Hsl;\n\t  if (o instanceof Hsl) return o;\n\t  o = o.rgb();\n\t  var r = o.r / 255,\n\t      g = o.g / 255,\n\t      b = o.b / 255,\n\t      min = Math.min(r, g, b),\n\t      max = Math.max(r, g, b),\n\t      h = NaN,\n\t      s = max - min,\n\t      l = (max + min) / 2;\n\t  if (s) {\n\t    if (r === max) h = (g - b) / s + (g < b) * 6;\n\t    else if (g === max) h = (b - r) / s + 2;\n\t    else h = (r - g) / s + 4;\n\t    s /= l < 0.5 ? max + min : 2 - max - min;\n\t    h *= 60;\n\t  } else {\n\t    s = l > 0 && l < 1 ? 0 : h;\n\t  }\n\t  return new Hsl(h, s, l, o.opacity);\n\t}\n\t\n\tfunction hsl(h, s, l, opacity) {\n\t  return arguments.length === 1 ? hslConvert(h) : new Hsl(h, s, l, opacity == null ? 1 : opacity);\n\t}\n\t\n\tfunction Hsl(h, s, l, opacity) {\n\t  this.h = +h;\n\t  this.s = +s;\n\t  this.l = +l;\n\t  this.opacity = +opacity;\n\t}\n\t\n\tdefine(Hsl, hsl, extend(Color, {\n\t  brighter: function(k) {\n\t    k = k == null ? brighter : Math.pow(brighter, k);\n\t    return new Hsl(this.h, this.s, this.l * k, this.opacity);\n\t  },\n\t  darker: function(k) {\n\t    k = k == null ? darker : Math.pow(darker, k);\n\t    return new Hsl(this.h, this.s, this.l * k, this.opacity);\n\t  },\n\t  rgb: function() {\n\t    var h = this.h % 360 + (this.h < 0) * 360,\n\t        s = isNaN(h) || isNaN(this.s) ? 0 : this.s,\n\t        l = this.l,\n\t        m2 = l + (l < 0.5 ? l : 1 - l) * s,\n\t        m1 = 2 * l - m2;\n\t    return new Rgb(\n\t      hsl2rgb(h >= 240 ? h - 240 : h + 120, m1, m2),\n\t      hsl2rgb(h, m1, m2),\n\t      hsl2rgb(h < 120 ? h + 240 : h - 120, m1, m2),\n\t      this.opacity\n\t    );\n\t  },\n\t  displayable: function() {\n\t    return (0 <= this.s && this.s <= 1 || isNaN(this.s))\n\t        && (0 <= this.l && this.l <= 1)\n\t        && (0 <= this.opacity && this.opacity <= 1);\n\t  }\n\t}));\n\t\n\t/* From FvD 13.37, CSS Color Module Level 3 */\n\tfunction hsl2rgb(h, m1, m2) {\n\t  return (h < 60 ? m1 + (m2 - m1) * h / 60\n\t      : h < 180 ? m2\n\t      : h < 240 ? m1 + (m2 - m1) * (240 - h) / 60\n\t      : m1) * 255;\n\t}\n\t\n\tvar deg2rad = Math.PI / 180;\n\tvar rad2deg = 180 / Math.PI;\n\t\n\tvar Kn = 18;\n\tvar Xn = 0.950470;\n\tvar Yn = 1;\n\tvar Zn = 1.088830;\n\tvar t0 = 4 / 29;\n\tvar t1 = 6 / 29;\n\tvar t2 = 3 * t1 * t1;\n\tvar t3 = t1 * t1 * t1;\n\t\n\tfunction labConvert(o) {\n\t  if (o instanceof Lab) return new Lab(o.l, o.a, o.b, o.opacity);\n\t  if (o instanceof Hcl) {\n\t    var h = o.h * deg2rad;\n\t    return new Lab(o.l, Math.cos(h) * o.c, Math.sin(h) * o.c, o.opacity);\n\t  }\n\t  if (!(o instanceof Rgb)) o = rgbConvert(o);\n\t  var b = rgb2xyz(o.r),\n\t      a = rgb2xyz(o.g),\n\t      l = rgb2xyz(o.b),\n\t      x = xyz2lab((0.4124564 * b + 0.3575761 * a + 0.1804375 * l) / Xn),\n\t      y = xyz2lab((0.2126729 * b + 0.7151522 * a + 0.0721750 * l) / Yn),\n\t      z = xyz2lab((0.0193339 * b + 0.1191920 * a + 0.9503041 * l) / Zn);\n\t  return new Lab(116 * y - 16, 500 * (x - y), 200 * (y - z), o.opacity);\n\t}\n\t\n\tfunction lab(l, a, b, opacity) {\n\t  return arguments.length === 1 ? labConvert(l) : new Lab(l, a, b, opacity == null ? 1 : opacity);\n\t}\n\t\n\tfunction Lab(l, a, b, opacity) {\n\t  this.l = +l;\n\t  this.a = +a;\n\t  this.b = +b;\n\t  this.opacity = +opacity;\n\t}\n\t\n\tdefine(Lab, lab, extend(Color, {\n\t  brighter: function(k) {\n\t    return new Lab(this.l + Kn * (k == null ? 1 : k), this.a, this.b, this.opacity);\n\t  },\n\t  darker: function(k) {\n\t    return new Lab(this.l - Kn * (k == null ? 1 : k), this.a, this.b, this.opacity);\n\t  },\n\t  rgb: function() {\n\t    var y = (this.l + 16) / 116,\n\t        x = isNaN(this.a) ? y : y + this.a / 500,\n\t        z = isNaN(this.b) ? y : y - this.b / 200;\n\t    y = Yn * lab2xyz(y);\n\t    x = Xn * lab2xyz(x);\n\t    z = Zn * lab2xyz(z);\n\t    return new Rgb(\n\t      xyz2rgb( 3.2404542 * x - 1.5371385 * y - 0.4985314 * z), // D65 -> sRGB\n\t      xyz2rgb(-0.9692660 * x + 1.8760108 * y + 0.0415560 * z),\n\t      xyz2rgb( 0.0556434 * x - 0.2040259 * y + 1.0572252 * z),\n\t      this.opacity\n\t    );\n\t  }\n\t}));\n\t\n\tfunction xyz2lab(t) {\n\t  return t > t3 ? Math.pow(t, 1 / 3) : t / t2 + t0;\n\t}\n\t\n\tfunction lab2xyz(t) {\n\t  return t > t1 ? t * t * t : t2 * (t - t0);\n\t}\n\t\n\tfunction xyz2rgb(x) {\n\t  return 255 * (x <= 0.0031308 ? 12.92 * x : 1.055 * Math.pow(x, 1 / 2.4) - 0.055);\n\t}\n\t\n\tfunction rgb2xyz(x) {\n\t  return (x /= 255) <= 0.04045 ? x / 12.92 : Math.pow((x + 0.055) / 1.055, 2.4);\n\t}\n\t\n\tfunction hclConvert(o) {\n\t  if (o instanceof Hcl) return new Hcl(o.h, o.c, o.l, o.opacity);\n\t  if (!(o instanceof Lab)) o = labConvert(o);\n\t  var h = Math.atan2(o.b, o.a) * rad2deg;\n\t  return new Hcl(h < 0 ? h + 360 : h, Math.sqrt(o.a * o.a + o.b * o.b), o.l, o.opacity);\n\t}\n\t\n\tfunction hcl(h, c, l, opacity) {\n\t  return arguments.length === 1 ? hclConvert(h) : new Hcl(h, c, l, opacity == null ? 1 : opacity);\n\t}\n\t\n\tfunction Hcl(h, c, l, opacity) {\n\t  this.h = +h;\n\t  this.c = +c;\n\t  this.l = +l;\n\t  this.opacity = +opacity;\n\t}\n\t\n\tdefine(Hcl, hcl, extend(Color, {\n\t  brighter: function(k) {\n\t    return new Hcl(this.h, this.c, this.l + Kn * (k == null ? 1 : k), this.opacity);\n\t  },\n\t  darker: function(k) {\n\t    return new Hcl(this.h, this.c, this.l - Kn * (k == null ? 1 : k), this.opacity);\n\t  },\n\t  rgb: function() {\n\t    return labConvert(this).rgb();\n\t  }\n\t}));\n\t\n\tvar A = -0.14861;\n\tvar B = +1.78277;\n\tvar C = -0.29227;\n\tvar D = -0.90649;\n\tvar E = +1.97294;\n\tvar ED = E * D;\n\tvar EB = E * B;\n\tvar BC_DA = B * C - D * A;\n\t\n\tfunction cubehelixConvert(o) {\n\t  if (o instanceof Cubehelix) return new Cubehelix(o.h, o.s, o.l, o.opacity);\n\t  if (!(o instanceof Rgb)) o = rgbConvert(o);\n\t  var r = o.r / 255,\n\t      g = o.g / 255,\n\t      b = o.b / 255,\n\t      l = (BC_DA * b + ED * r - EB * g) / (BC_DA + ED - EB),\n\t      bl = b - l,\n\t      k = (E * (g - l) - C * bl) / D,\n\t      s = Math.sqrt(k * k + bl * bl) / (E * l * (1 - l)), // NaN if l=0 or l=1\n\t      h = s ? Math.atan2(k, bl) * rad2deg - 120 : NaN;\n\t  return new Cubehelix(h < 0 ? h + 360 : h, s, l, o.opacity);\n\t}\n\t\n\tfunction cubehelix(h, s, l, opacity) {\n\t  return arguments.length === 1 ? cubehelixConvert(h) : new Cubehelix(h, s, l, opacity == null ? 1 : opacity);\n\t}\n\t\n\tfunction Cubehelix(h, s, l, opacity) {\n\t  this.h = +h;\n\t  this.s = +s;\n\t  this.l = +l;\n\t  this.opacity = +opacity;\n\t}\n\t\n\tdefine(Cubehelix, cubehelix, extend(Color, {\n\t  brighter: function(k) {\n\t    k = k == null ? brighter : Math.pow(brighter, k);\n\t    return new Cubehelix(this.h, this.s, this.l * k, this.opacity);\n\t  },\n\t  darker: function(k) {\n\t    k = k == null ? darker : Math.pow(darker, k);\n\t    return new Cubehelix(this.h, this.s, this.l * k, this.opacity);\n\t  },\n\t  rgb: function() {\n\t    var h = isNaN(this.h) ? 0 : (this.h + 120) * deg2rad,\n\t        l = +this.l,\n\t        a = isNaN(this.s) ? 0 : this.s * l * (1 - l),\n\t        cosh = Math.cos(h),\n\t        sinh = Math.sin(h);\n\t    return new Rgb(\n\t      255 * (l + a * (A * cosh + B * sinh)),\n\t      255 * (l + a * (C * cosh + D * sinh)),\n\t      255 * (l + a * (E * cosh)),\n\t      this.opacity\n\t    );\n\t  }\n\t}));\n\t\n\tfunction basis(t1, v0, v1, v2, v3) {\n\t  var t2 = t1 * t1, t3 = t2 * t1;\n\t  return ((1 - 3 * t1 + 3 * t2 - t3) * v0\n\t      + (4 - 6 * t2 + 3 * t3) * v1\n\t      + (1 + 3 * t1 + 3 * t2 - 3 * t3) * v2\n\t      + t3 * v3) / 6;\n\t}\n\t\n\tvar basis$1 = function(values) {\n\t  var n = values.length - 1;\n\t  return function(t) {\n\t    var i = t <= 0 ? (t = 0) : t >= 1 ? (t = 1, n - 1) : Math.floor(t * n),\n\t        v1 = values[i],\n\t        v2 = values[i + 1],\n\t        v0 = i > 0 ? values[i - 1] : 2 * v1 - v2,\n\t        v3 = i < n - 1 ? values[i + 2] : 2 * v2 - v1;\n\t    return basis((t - i / n) * n, v0, v1, v2, v3);\n\t  };\n\t};\n\t\n\tvar basisClosed = function(values) {\n\t  var n = values.length;\n\t  return function(t) {\n\t    var i = Math.floor(((t %= 1) < 0 ? ++t : t) * n),\n\t        v0 = values[(i + n - 1) % n],\n\t        v1 = values[i % n],\n\t        v2 = values[(i + 1) % n],\n\t        v3 = values[(i + 2) % n];\n\t    return basis((t - i / n) * n, v0, v1, v2, v3);\n\t  };\n\t};\n\t\n\tvar constant$3 = function(x) {\n\t  return function() {\n\t    return x;\n\t  };\n\t};\n\t\n\tfunction linear(a, d) {\n\t  return function(t) {\n\t    return a + t * d;\n\t  };\n\t}\n\t\n\tfunction exponential(a, b, y) {\n\t  return a = Math.pow(a, y), b = Math.pow(b, y) - a, y = 1 / y, function(t) {\n\t    return Math.pow(a + t * b, y);\n\t  };\n\t}\n\t\n\tfunction hue(a, b) {\n\t  var d = b - a;\n\t  return d ? linear(a, d > 180 || d < -180 ? d - 360 * Math.round(d / 360) : d) : constant$3(isNaN(a) ? b : a);\n\t}\n\t\n\tfunction gamma(y) {\n\t  return (y = +y) === 1 ? nogamma : function(a, b) {\n\t    return b - a ? exponential(a, b, y) : constant$3(isNaN(a) ? b : a);\n\t  };\n\t}\n\t\n\tfunction nogamma(a, b) {\n\t  var d = b - a;\n\t  return d ? linear(a, d) : constant$3(isNaN(a) ? b : a);\n\t}\n\t\n\tvar interpolateRgb = (function rgbGamma(y) {\n\t  var color$$1 = gamma(y);\n\t\n\t  function rgb$$1(start, end) {\n\t    var r = color$$1((start = rgb(start)).r, (end = rgb(end)).r),\n\t        g = color$$1(start.g, end.g),\n\t        b = color$$1(start.b, end.b),\n\t        opacity = nogamma(start.opacity, end.opacity);\n\t    return function(t) {\n\t      start.r = r(t);\n\t      start.g = g(t);\n\t      start.b = b(t);\n\t      start.opacity = opacity(t);\n\t      return start + \"\";\n\t    };\n\t  }\n\t\n\t  rgb$$1.gamma = rgbGamma;\n\t\n\t  return rgb$$1;\n\t})(1);\n\t\n\tfunction rgbSpline(spline) {\n\t  return function(colors) {\n\t    var n = colors.length,\n\t        r = new Array(n),\n\t        g = new Array(n),\n\t        b = new Array(n),\n\t        i, color$$1;\n\t    for (i = 0; i < n; ++i) {\n\t      color$$1 = rgb(colors[i]);\n\t      r[i] = color$$1.r || 0;\n\t      g[i] = color$$1.g || 0;\n\t      b[i] = color$$1.b || 0;\n\t    }\n\t    r = spline(r);\n\t    g = spline(g);\n\t    b = spline(b);\n\t    color$$1.opacity = 1;\n\t    return function(t) {\n\t      color$$1.r = r(t);\n\t      color$$1.g = g(t);\n\t      color$$1.b = b(t);\n\t      return color$$1 + \"\";\n\t    };\n\t  };\n\t}\n\t\n\tvar rgbBasis = rgbSpline(basis$1);\n\tvar rgbBasisClosed = rgbSpline(basisClosed);\n\t\n\tvar array$1 = function(a, b) {\n\t  var nb = b ? b.length : 0,\n\t      na = a ? Math.min(nb, a.length) : 0,\n\t      x = new Array(nb),\n\t      c = new Array(nb),\n\t      i;\n\t\n\t  for (i = 0; i < na; ++i) x[i] = interpolateValue(a[i], b[i]);\n\t  for (; i < nb; ++i) c[i] = b[i];\n\t\n\t  return function(t) {\n\t    for (i = 0; i < na; ++i) c[i] = x[i](t);\n\t    return c;\n\t  };\n\t};\n\t\n\tvar date = function(a, b) {\n\t  var d = new Date;\n\t  return a = +a, b -= a, function(t) {\n\t    return d.setTime(a + b * t), d;\n\t  };\n\t};\n\t\n\tvar reinterpolate = function(a, b) {\n\t  return a = +a, b -= a, function(t) {\n\t    return a + b * t;\n\t  };\n\t};\n\t\n\tvar object = function(a, b) {\n\t  var i = {},\n\t      c = {},\n\t      k;\n\t\n\t  if (a === null || typeof a !== \"object\") a = {};\n\t  if (b === null || typeof b !== \"object\") b = {};\n\t\n\t  for (k in b) {\n\t    if (k in a) {\n\t      i[k] = interpolateValue(a[k], b[k]);\n\t    } else {\n\t      c[k] = b[k];\n\t    }\n\t  }\n\t\n\t  return function(t) {\n\t    for (k in i) c[k] = i[k](t);\n\t    return c;\n\t  };\n\t};\n\t\n\tvar reA = /[-+]?(?:\\d+\\.?\\d*|\\.?\\d+)(?:[eE][-+]?\\d+)?/g;\n\tvar reB = new RegExp(reA.source, \"g\");\n\t\n\tfunction zero(b) {\n\t  return function() {\n\t    return b;\n\t  };\n\t}\n\t\n\tfunction one(b) {\n\t  return function(t) {\n\t    return b(t) + \"\";\n\t  };\n\t}\n\t\n\tvar interpolateString = function(a, b) {\n\t  var bi = reA.lastIndex = reB.lastIndex = 0, // scan index for next number in b\n\t      am, // current match in a\n\t      bm, // current match in b\n\t      bs, // string preceding current number in b, if any\n\t      i = -1, // index in s\n\t      s = [], // string constants and placeholders\n\t      q = []; // number interpolators\n\t\n\t  // Coerce inputs to strings.\n\t  a = a + \"\", b = b + \"\";\n\t\n\t  // Interpolate pairs of numbers in a & b.\n\t  while ((am = reA.exec(a))\n\t      && (bm = reB.exec(b))) {\n\t    if ((bs = bm.index) > bi) { // a string precedes the next number in b\n\t      bs = b.slice(bi, bs);\n\t      if (s[i]) s[i] += bs; // coalesce with previous string\n\t      else s[++i] = bs;\n\t    }\n\t    if ((am = am[0]) === (bm = bm[0])) { // numbers in a & b match\n\t      if (s[i]) s[i] += bm; // coalesce with previous string\n\t      else s[++i] = bm;\n\t    } else { // interpolate non-matching numbers\n\t      s[++i] = null;\n\t      q.push({i: i, x: reinterpolate(am, bm)});\n\t    }\n\t    bi = reB.lastIndex;\n\t  }\n\t\n\t  // Add remains of b.\n\t  if (bi < b.length) {\n\t    bs = b.slice(bi);\n\t    if (s[i]) s[i] += bs; // coalesce with previous string\n\t    else s[++i] = bs;\n\t  }\n\t\n\t  // Special optimization for only a single match.\n\t  // Otherwise, interpolate each of the numbers and rejoin the string.\n\t  return s.length < 2 ? (q[0]\n\t      ? one(q[0].x)\n\t      : zero(b))\n\t      : (b = q.length, function(t) {\n\t          for (var i = 0, o; i < b; ++i) s[(o = q[i]).i] = o.x(t);\n\t          return s.join(\"\");\n\t        });\n\t};\n\t\n\tvar interpolateValue = function(a, b) {\n\t  var t = typeof b, c;\n\t  return b == null || t === \"boolean\" ? constant$3(b)\n\t      : (t === \"number\" ? reinterpolate\n\t      : t === \"string\" ? ((c = color(b)) ? (b = c, interpolateRgb) : interpolateString)\n\t      : b instanceof color ? interpolateRgb\n\t      : b instanceof Date ? date\n\t      : Array.isArray(b) ? array$1\n\t      : typeof b.valueOf !== \"function\" && typeof b.toString !== \"function\" || isNaN(b) ? object\n\t      : reinterpolate)(a, b);\n\t};\n\t\n\tvar interpolateRound = function(a, b) {\n\t  return a = +a, b -= a, function(t) {\n\t    return Math.round(a + b * t);\n\t  };\n\t};\n\t\n\tvar degrees = 180 / Math.PI;\n\t\n\tvar identity$2 = {\n\t  translateX: 0,\n\t  translateY: 0,\n\t  rotate: 0,\n\t  skewX: 0,\n\t  scaleX: 1,\n\t  scaleY: 1\n\t};\n\t\n\tvar decompose = function(a, b, c, d, e, f) {\n\t  var scaleX, scaleY, skewX;\n\t  if (scaleX = Math.sqrt(a * a + b * b)) a /= scaleX, b /= scaleX;\n\t  if (skewX = a * c + b * d) c -= a * skewX, d -= b * skewX;\n\t  if (scaleY = Math.sqrt(c * c + d * d)) c /= scaleY, d /= scaleY, skewX /= scaleY;\n\t  if (a * d < b * c) a = -a, b = -b, skewX = -skewX, scaleX = -scaleX;\n\t  return {\n\t    translateX: e,\n\t    translateY: f,\n\t    rotate: Math.atan2(b, a) * degrees,\n\t    skewX: Math.atan(skewX) * degrees,\n\t    scaleX: scaleX,\n\t    scaleY: scaleY\n\t  };\n\t};\n\t\n\tvar cssNode;\n\tvar cssRoot;\n\tvar cssView;\n\tvar svgNode;\n\t\n\tfunction parseCss(value) {\n\t  if (value === \"none\") return identity$2;\n\t  if (!cssNode) cssNode = document.createElement(\"DIV\"), cssRoot = document.documentElement, cssView = document.defaultView;\n\t  cssNode.style.transform = value;\n\t  value = cssView.getComputedStyle(cssRoot.appendChild(cssNode), null).getPropertyValue(\"transform\");\n\t  cssRoot.removeChild(cssNode);\n\t  value = value.slice(7, -1).split(\",\");\n\t  return decompose(+value[0], +value[1], +value[2], +value[3], +value[4], +value[5]);\n\t}\n\t\n\tfunction parseSvg(value) {\n\t  if (value == null) return identity$2;\n\t  if (!svgNode) svgNode = document.createElementNS(\"http://www.w3.org/2000/svg\", \"g\");\n\t  svgNode.setAttribute(\"transform\", value);\n\t  if (!(value = svgNode.transform.baseVal.consolidate())) return identity$2;\n\t  value = value.matrix;\n\t  return decompose(value.a, value.b, value.c, value.d, value.e, value.f);\n\t}\n\t\n\tfunction interpolateTransform(parse, pxComma, pxParen, degParen) {\n\t\n\t  function pop(s) {\n\t    return s.length ? s.pop() + \" \" : \"\";\n\t  }\n\t\n\t  function translate(xa, ya, xb, yb, s, q) {\n\t    if (xa !== xb || ya !== yb) {\n\t      var i = s.push(\"translate(\", null, pxComma, null, pxParen);\n\t      q.push({i: i - 4, x: reinterpolate(xa, xb)}, {i: i - 2, x: reinterpolate(ya, yb)});\n\t    } else if (xb || yb) {\n\t      s.push(\"translate(\" + xb + pxComma + yb + pxParen);\n\t    }\n\t  }\n\t\n\t  function rotate(a, b, s, q) {\n\t    if (a !== b) {\n\t      if (a - b > 180) b += 360; else if (b - a > 180) a += 360; // shortest path\n\t      q.push({i: s.push(pop(s) + \"rotate(\", null, degParen) - 2, x: reinterpolate(a, b)});\n\t    } else if (b) {\n\t      s.push(pop(s) + \"rotate(\" + b + degParen);\n\t    }\n\t  }\n\t\n\t  function skewX(a, b, s, q) {\n\t    if (a !== b) {\n\t      q.push({i: s.push(pop(s) + \"skewX(\", null, degParen) - 2, x: reinterpolate(a, b)});\n\t    } else if (b) {\n\t      s.push(pop(s) + \"skewX(\" + b + degParen);\n\t    }\n\t  }\n\t\n\t  function scale(xa, ya, xb, yb, s, q) {\n\t    if (xa !== xb || ya !== yb) {\n\t      var i = s.push(pop(s) + \"scale(\", null, \",\", null, \")\");\n\t      q.push({i: i - 4, x: reinterpolate(xa, xb)}, {i: i - 2, x: reinterpolate(ya, yb)});\n\t    } else if (xb !== 1 || yb !== 1) {\n\t      s.push(pop(s) + \"scale(\" + xb + \",\" + yb + \")\");\n\t    }\n\t  }\n\t\n\t  return function(a, b) {\n\t    var s = [], // string constants and placeholders\n\t        q = []; // number interpolators\n\t    a = parse(a), b = parse(b);\n\t    translate(a.translateX, a.translateY, b.translateX, b.translateY, s, q);\n\t    rotate(a.rotate, b.rotate, s, q);\n\t    skewX(a.skewX, b.skewX, s, q);\n\t    scale(a.scaleX, a.scaleY, b.scaleX, b.scaleY, s, q);\n\t    a = b = null; // gc\n\t    return function(t) {\n\t      var i = -1, n = q.length, o;\n\t      while (++i < n) s[(o = q[i]).i] = o.x(t);\n\t      return s.join(\"\");\n\t    };\n\t  };\n\t}\n\t\n\tvar interpolateTransformCss = interpolateTransform(parseCss, \"px, \", \"px)\", \"deg)\");\n\tvar interpolateTransformSvg = interpolateTransform(parseSvg, \", \", \")\", \")\");\n\t\n\tvar rho = Math.SQRT2;\n\tvar rho2 = 2;\n\tvar rho4 = 4;\n\tvar epsilon2 = 1e-12;\n\t\n\tfunction cosh(x) {\n\t  return ((x = Math.exp(x)) + 1 / x) / 2;\n\t}\n\t\n\tfunction sinh(x) {\n\t  return ((x = Math.exp(x)) - 1 / x) / 2;\n\t}\n\t\n\tfunction tanh(x) {\n\t  return ((x = Math.exp(2 * x)) - 1) / (x + 1);\n\t}\n\t\n\t// p0 = [ux0, uy0, w0]\n\t// p1 = [ux1, uy1, w1]\n\tvar interpolateZoom = function(p0, p1) {\n\t  var ux0 = p0[0], uy0 = p0[1], w0 = p0[2],\n\t      ux1 = p1[0], uy1 = p1[1], w1 = p1[2],\n\t      dx = ux1 - ux0,\n\t      dy = uy1 - uy0,\n\t      d2 = dx * dx + dy * dy,\n\t      i,\n\t      S;\n\t\n\t  // Special case for u0 ≅ u1.\n\t  if (d2 < epsilon2) {\n\t    S = Math.log(w1 / w0) / rho;\n\t    i = function(t) {\n\t      return [\n\t        ux0 + t * dx,\n\t        uy0 + t * dy,\n\t        w0 * Math.exp(rho * t * S)\n\t      ];\n\t    };\n\t  }\n\t\n\t  // General case.\n\t  else {\n\t    var d1 = Math.sqrt(d2),\n\t        b0 = (w1 * w1 - w0 * w0 + rho4 * d2) / (2 * w0 * rho2 * d1),\n\t        b1 = (w1 * w1 - w0 * w0 - rho4 * d2) / (2 * w1 * rho2 * d1),\n\t        r0 = Math.log(Math.sqrt(b0 * b0 + 1) - b0),\n\t        r1 = Math.log(Math.sqrt(b1 * b1 + 1) - b1);\n\t    S = (r1 - r0) / rho;\n\t    i = function(t) {\n\t      var s = t * S,\n\t          coshr0 = cosh(r0),\n\t          u = w0 / (rho2 * d1) * (coshr0 * tanh(rho * s + r0) - sinh(r0));\n\t      return [\n\t        ux0 + u * dx,\n\t        uy0 + u * dy,\n\t        w0 * coshr0 / cosh(rho * s + r0)\n\t      ];\n\t    };\n\t  }\n\t\n\t  i.duration = S * 1000;\n\t\n\t  return i;\n\t};\n\t\n\tfunction hsl$1(hue$$1) {\n\t  return function(start, end) {\n\t    var h = hue$$1((start = hsl(start)).h, (end = hsl(end)).h),\n\t        s = nogamma(start.s, end.s),\n\t        l = nogamma(start.l, end.l),\n\t        opacity = nogamma(start.opacity, end.opacity);\n\t    return function(t) {\n\t      start.h = h(t);\n\t      start.s = s(t);\n\t      start.l = l(t);\n\t      start.opacity = opacity(t);\n\t      return start + \"\";\n\t    };\n\t  }\n\t}\n\t\n\tvar hsl$2 = hsl$1(hue);\n\tvar hslLong = hsl$1(nogamma);\n\t\n\tfunction lab$1(start, end) {\n\t  var l = nogamma((start = lab(start)).l, (end = lab(end)).l),\n\t      a = nogamma(start.a, end.a),\n\t      b = nogamma(start.b, end.b),\n\t      opacity = nogamma(start.opacity, end.opacity);\n\t  return function(t) {\n\t    start.l = l(t);\n\t    start.a = a(t);\n\t    start.b = b(t);\n\t    start.opacity = opacity(t);\n\t    return start + \"\";\n\t  };\n\t}\n\t\n\tfunction hcl$1(hue$$1) {\n\t  return function(start, end) {\n\t    var h = hue$$1((start = hcl(start)).h, (end = hcl(end)).h),\n\t        c = nogamma(start.c, end.c),\n\t        l = nogamma(start.l, end.l),\n\t        opacity = nogamma(start.opacity, end.opacity);\n\t    return function(t) {\n\t      start.h = h(t);\n\t      start.c = c(t);\n\t      start.l = l(t);\n\t      start.opacity = opacity(t);\n\t      return start + \"\";\n\t    };\n\t  }\n\t}\n\t\n\tvar hcl$2 = hcl$1(hue);\n\tvar hclLong = hcl$1(nogamma);\n\t\n\tfunction cubehelix$1(hue$$1) {\n\t  return (function cubehelixGamma(y) {\n\t    y = +y;\n\t\n\t    function cubehelix$$1(start, end) {\n\t      var h = hue$$1((start = cubehelix(start)).h, (end = cubehelix(end)).h),\n\t          s = nogamma(start.s, end.s),\n\t          l = nogamma(start.l, end.l),\n\t          opacity = nogamma(start.opacity, end.opacity);\n\t      return function(t) {\n\t        start.h = h(t);\n\t        start.s = s(t);\n\t        start.l = l(Math.pow(t, y));\n\t        start.opacity = opacity(t);\n\t        return start + \"\";\n\t      };\n\t    }\n\t\n\t    cubehelix$$1.gamma = cubehelixGamma;\n\t\n\t    return cubehelix$$1;\n\t  })(1);\n\t}\n\t\n\tvar cubehelix$2 = cubehelix$1(hue);\n\tvar cubehelixLong = cubehelix$1(nogamma);\n\t\n\tvar quantize = function(interpolator, n) {\n\t  var samples = new Array(n);\n\t  for (var i = 0; i < n; ++i) samples[i] = interpolator(i / (n - 1));\n\t  return samples;\n\t};\n\t\n\tvar frame = 0;\n\tvar timeout = 0;\n\tvar interval = 0;\n\tvar pokeDelay = 1000;\n\tvar taskHead;\n\tvar taskTail;\n\tvar clockLast = 0;\n\tvar clockNow = 0;\n\tvar clockSkew = 0;\n\tvar clock = typeof performance === \"object\" && performance.now ? performance : Date;\n\tvar setFrame = typeof window === \"object\" && window.requestAnimationFrame ? window.requestAnimationFrame.bind(window) : function(f) { setTimeout(f, 17); };\n\t\n\tfunction now() {\n\t  return clockNow || (setFrame(clearNow), clockNow = clock.now() + clockSkew);\n\t}\n\t\n\tfunction clearNow() {\n\t  clockNow = 0;\n\t}\n\t\n\tfunction Timer() {\n\t  this._call =\n\t  this._time =\n\t  this._next = null;\n\t}\n\t\n\tTimer.prototype = timer.prototype = {\n\t  constructor: Timer,\n\t  restart: function(callback, delay, time) {\n\t    if (typeof callback !== \"function\") throw new TypeError(\"callback is not a function\");\n\t    time = (time == null ? now() : +time) + (delay == null ? 0 : +delay);\n\t    if (!this._next && taskTail !== this) {\n\t      if (taskTail) taskTail._next = this;\n\t      else taskHead = this;\n\t      taskTail = this;\n\t    }\n\t    this._call = callback;\n\t    this._time = time;\n\t    sleep();\n\t  },\n\t  stop: function() {\n\t    if (this._call) {\n\t      this._call = null;\n\t      this._time = Infinity;\n\t      sleep();\n\t    }\n\t  }\n\t};\n\t\n\tfunction timer(callback, delay, time) {\n\t  var t = new Timer;\n\t  t.restart(callback, delay, time);\n\t  return t;\n\t}\n\t\n\tfunction timerFlush() {\n\t  now(); // Get the current time, if not already set.\n\t  ++frame; // Pretend we’ve set an alarm, if we haven’t already.\n\t  var t = taskHead, e;\n\t  while (t) {\n\t    if ((e = clockNow - t._time) >= 0) t._call.call(null, e);\n\t    t = t._next;\n\t  }\n\t  --frame;\n\t}\n\t\n\tfunction wake() {\n\t  clockNow = (clockLast = clock.now()) + clockSkew;\n\t  frame = timeout = 0;\n\t  try {\n\t    timerFlush();\n\t  } finally {\n\t    frame = 0;\n\t    nap();\n\t    clockNow = 0;\n\t  }\n\t}\n\t\n\tfunction poke() {\n\t  var now = clock.now(), delay = now - clockLast;\n\t  if (delay > pokeDelay) clockSkew -= delay, clockLast = now;\n\t}\n\t\n\tfunction nap() {\n\t  var t0, t1 = taskHead, t2, time = Infinity;\n\t  while (t1) {\n\t    if (t1._call) {\n\t      if (time > t1._time) time = t1._time;\n\t      t0 = t1, t1 = t1._next;\n\t    } else {\n\t      t2 = t1._next, t1._next = null;\n\t      t1 = t0 ? t0._next = t2 : taskHead = t2;\n\t    }\n\t  }\n\t  taskTail = t0;\n\t  sleep(time);\n\t}\n\t\n\tfunction sleep(time) {\n\t  if (frame) return; // Soonest alarm already set, or will be.\n\t  if (timeout) timeout = clearTimeout(timeout);\n\t  var delay = time - clockNow; // Strictly less than if we recomputed clockNow.\n\t  if (delay > 24) {\n\t    if (time < Infinity) timeout = setTimeout(wake, time - clock.now() - clockSkew);\n\t    if (interval) interval = clearInterval(interval);\n\t  } else {\n\t    if (!interval) clockLast = clock.now(), interval = setInterval(poke, pokeDelay);\n\t    frame = 1, setFrame(wake);\n\t  }\n\t}\n\t\n\tvar timeout$1 = function(callback, delay, time) {\n\t  var t = new Timer;\n\t  delay = delay == null ? 0 : +delay;\n\t  t.restart(function(elapsed) {\n\t    t.stop();\n\t    callback(elapsed + delay);\n\t  }, delay, time);\n\t  return t;\n\t};\n\t\n\tvar interval$1 = function(callback, delay, time) {\n\t  var t = new Timer, total = delay;\n\t  if (delay == null) return t.restart(callback, delay, time), t;\n\t  delay = +delay, time = time == null ? now() : +time;\n\t  t.restart(function tick(elapsed) {\n\t    elapsed += total;\n\t    t.restart(tick, total += delay, time);\n\t    callback(elapsed);\n\t  }, delay, time);\n\t  return t;\n\t};\n\t\n\tvar emptyOn = dispatch(\"start\", \"end\", \"interrupt\");\n\tvar emptyTween = [];\n\t\n\tvar CREATED = 0;\n\tvar SCHEDULED = 1;\n\tvar STARTING = 2;\n\tvar STARTED = 3;\n\tvar RUNNING = 4;\n\tvar ENDING = 5;\n\tvar ENDED = 6;\n\t\n\tvar schedule = function(node, name, id, index, group, timing) {\n\t  var schedules = node.__transition;\n\t  if (!schedules) node.__transition = {};\n\t  else if (id in schedules) return;\n\t  create(node, id, {\n\t    name: name,\n\t    index: index, // For context during callback.\n\t    group: group, // For context during callback.\n\t    on: emptyOn,\n\t    tween: emptyTween,\n\t    time: timing.time,\n\t    delay: timing.delay,\n\t    duration: timing.duration,\n\t    ease: timing.ease,\n\t    timer: null,\n\t    state: CREATED\n\t  });\n\t};\n\t\n\tfunction init(node, id) {\n\t  var schedule = node.__transition;\n\t  if (!schedule || !(schedule = schedule[id]) || schedule.state > CREATED) throw new Error(\"too late\");\n\t  return schedule;\n\t}\n\t\n\tfunction set$1(node, id) {\n\t  var schedule = node.__transition;\n\t  if (!schedule || !(schedule = schedule[id]) || schedule.state > STARTING) throw new Error(\"too late\");\n\t  return schedule;\n\t}\n\t\n\tfunction get$1(node, id) {\n\t  var schedule = node.__transition;\n\t  if (!schedule || !(schedule = schedule[id])) throw new Error(\"too late\");\n\t  return schedule;\n\t}\n\t\n\tfunction create(node, id, self) {\n\t  var schedules = node.__transition,\n\t      tween;\n\t\n\t  // Initialize the self timer when the transition is created.\n\t  // Note the actual delay is not known until the first callback!\n\t  schedules[id] = self;\n\t  self.timer = timer(schedule, 0, self.time);\n\t\n\t  function schedule(elapsed) {\n\t    self.state = SCHEDULED;\n\t    self.timer.restart(start, self.delay, self.time);\n\t\n\t    // If the elapsed delay is less than our first sleep, start immediately.\n\t    if (self.delay <= elapsed) start(elapsed - self.delay);\n\t  }\n\t\n\t  function start(elapsed) {\n\t    var i, j, n, o;\n\t\n\t    // If the state is not SCHEDULED, then we previously errored on start.\n\t    if (self.state !== SCHEDULED) return stop();\n\t\n\t    for (i in schedules) {\n\t      o = schedules[i];\n\t      if (o.name !== self.name) continue;\n\t\n\t      // While this element already has a starting transition during this frame,\n\t      // defer starting an interrupting transition until that transition has a\n\t      // chance to tick (and possibly end); see d3/d3-transition#54!\n\t      if (o.state === STARTED) return timeout$1(start);\n\t\n\t      // Interrupt the active transition, if any.\n\t      // Dispatch the interrupt event.\n\t      if (o.state === RUNNING) {\n\t        o.state = ENDED;\n\t        o.timer.stop();\n\t        o.on.call(\"interrupt\", node, node.__data__, o.index, o.group);\n\t        delete schedules[i];\n\t      }\n\t\n\t      // Cancel any pre-empted transitions. No interrupt event is dispatched\n\t      // because the cancelled transitions never started. Note that this also\n\t      // removes this transition from the pending list!\n\t      else if (+i < id) {\n\t        o.state = ENDED;\n\t        o.timer.stop();\n\t        delete schedules[i];\n\t      }\n\t    }\n\t\n\t    // Defer the first tick to end of the current frame; see d3/d3#1576.\n\t    // Note the transition may be canceled after start and before the first tick!\n\t    // Note this must be scheduled before the start event; see d3/d3-transition#16!\n\t    // Assuming this is successful, subsequent callbacks go straight to tick.\n\t    timeout$1(function() {\n\t      if (self.state === STARTED) {\n\t        self.state = RUNNING;\n\t        self.timer.restart(tick, self.delay, self.time);\n\t        tick(elapsed);\n\t      }\n\t    });\n\t\n\t    // Dispatch the start event.\n\t    // Note this must be done before the tween are initialized.\n\t    self.state = STARTING;\n\t    self.on.call(\"start\", node, node.__data__, self.index, self.group);\n\t    if (self.state !== STARTING) return; // interrupted\n\t    self.state = STARTED;\n\t\n\t    // Initialize the tween, deleting null tween.\n\t    tween = new Array(n = self.tween.length);\n\t    for (i = 0, j = -1; i < n; ++i) {\n\t      if (o = self.tween[i].value.call(node, node.__data__, self.index, self.group)) {\n\t        tween[++j] = o;\n\t      }\n\t    }\n\t    tween.length = j + 1;\n\t  }\n\t\n\t  function tick(elapsed) {\n\t    var t = elapsed < self.duration ? self.ease.call(null, elapsed / self.duration) : (self.timer.restart(stop), self.state = ENDING, 1),\n\t        i = -1,\n\t        n = tween.length;\n\t\n\t    while (++i < n) {\n\t      tween[i].call(null, t);\n\t    }\n\t\n\t    // Dispatch the end event.\n\t    if (self.state === ENDING) {\n\t      self.on.call(\"end\", node, node.__data__, self.index, self.group);\n\t      stop();\n\t    }\n\t  }\n\t\n\t  function stop() {\n\t    self.state = ENDED;\n\t    self.timer.stop();\n\t    delete schedules[id];\n\t    for (var i in schedules) return; // eslint-disable-line no-unused-vars\n\t    delete node.__transition;\n\t  }\n\t}\n\t\n\tvar interrupt = function(node, name) {\n\t  var schedules = node.__transition,\n\t      schedule$$1,\n\t      active,\n\t      empty = true,\n\t      i;\n\t\n\t  if (!schedules) return;\n\t\n\t  name = name == null ? null : name + \"\";\n\t\n\t  for (i in schedules) {\n\t    if ((schedule$$1 = schedules[i]).name !== name) { empty = false; continue; }\n\t    active = schedule$$1.state > STARTING && schedule$$1.state < ENDING;\n\t    schedule$$1.state = ENDED;\n\t    schedule$$1.timer.stop();\n\t    if (active) schedule$$1.on.call(\"interrupt\", node, node.__data__, schedule$$1.index, schedule$$1.group);\n\t    delete schedules[i];\n\t  }\n\t\n\t  if (empty) delete node.__transition;\n\t};\n\t\n\tvar selection_interrupt = function(name) {\n\t  return this.each(function() {\n\t    interrupt(this, name);\n\t  });\n\t};\n\t\n\tfunction tweenRemove(id, name) {\n\t  var tween0, tween1;\n\t  return function() {\n\t    var schedule$$1 = set$1(this, id),\n\t        tween = schedule$$1.tween;\n\t\n\t    // If this node shared tween with the previous node,\n\t    // just assign the updated shared tween and we’re done!\n\t    // Otherwise, copy-on-write.\n\t    if (tween !== tween0) {\n\t      tween1 = tween0 = tween;\n\t      for (var i = 0, n = tween1.length; i < n; ++i) {\n\t        if (tween1[i].name === name) {\n\t          tween1 = tween1.slice();\n\t          tween1.splice(i, 1);\n\t          break;\n\t        }\n\t      }\n\t    }\n\t\n\t    schedule$$1.tween = tween1;\n\t  };\n\t}\n\t\n\tfunction tweenFunction(id, name, value) {\n\t  var tween0, tween1;\n\t  if (typeof value !== \"function\") throw new Error;\n\t  return function() {\n\t    var schedule$$1 = set$1(this, id),\n\t        tween = schedule$$1.tween;\n\t\n\t    // If this node shared tween with the previous node,\n\t    // just assign the updated shared tween and we’re done!\n\t    // Otherwise, copy-on-write.\n\t    if (tween !== tween0) {\n\t      tween1 = (tween0 = tween).slice();\n\t      for (var t = {name: name, value: value}, i = 0, n = tween1.length; i < n; ++i) {\n\t        if (tween1[i].name === name) {\n\t          tween1[i] = t;\n\t          break;\n\t        }\n\t      }\n\t      if (i === n) tween1.push(t);\n\t    }\n\t\n\t    schedule$$1.tween = tween1;\n\t  };\n\t}\n\t\n\tvar transition_tween = function(name, value) {\n\t  var id = this._id;\n\t\n\t  name += \"\";\n\t\n\t  if (arguments.length < 2) {\n\t    var tween = get$1(this.node(), id).tween;\n\t    for (var i = 0, n = tween.length, t; i < n; ++i) {\n\t      if ((t = tween[i]).name === name) {\n\t        return t.value;\n\t      }\n\t    }\n\t    return null;\n\t  }\n\t\n\t  return this.each((value == null ? tweenRemove : tweenFunction)(id, name, value));\n\t};\n\t\n\tfunction tweenValue(transition, name, value) {\n\t  var id = transition._id;\n\t\n\t  transition.each(function() {\n\t    var schedule$$1 = set$1(this, id);\n\t    (schedule$$1.value || (schedule$$1.value = {}))[name] = value.apply(this, arguments);\n\t  });\n\t\n\t  return function(node) {\n\t    return get$1(node, id).value[name];\n\t  };\n\t}\n\t\n\tvar interpolate = function(a, b) {\n\t  var c;\n\t  return (typeof b === \"number\" ? reinterpolate\n\t      : b instanceof color ? interpolateRgb\n\t      : (c = color(b)) ? (b = c, interpolateRgb)\n\t      : interpolateString)(a, b);\n\t};\n\t\n\tfunction attrRemove$1(name) {\n\t  return function() {\n\t    this.removeAttribute(name);\n\t  };\n\t}\n\t\n\tfunction attrRemoveNS$1(fullname) {\n\t  return function() {\n\t    this.removeAttributeNS(fullname.space, fullname.local);\n\t  };\n\t}\n\t\n\tfunction attrConstant$1(name, interpolate$$1, value1) {\n\t  var value00,\n\t      interpolate0;\n\t  return function() {\n\t    var value0 = this.getAttribute(name);\n\t    return value0 === value1 ? null\n\t        : value0 === value00 ? interpolate0\n\t        : interpolate0 = interpolate$$1(value00 = value0, value1);\n\t  };\n\t}\n\t\n\tfunction attrConstantNS$1(fullname, interpolate$$1, value1) {\n\t  var value00,\n\t      interpolate0;\n\t  return function() {\n\t    var value0 = this.getAttributeNS(fullname.space, fullname.local);\n\t    return value0 === value1 ? null\n\t        : value0 === value00 ? interpolate0\n\t        : interpolate0 = interpolate$$1(value00 = value0, value1);\n\t  };\n\t}\n\t\n\tfunction attrFunction$1(name, interpolate$$1, value) {\n\t  var value00,\n\t      value10,\n\t      interpolate0;\n\t  return function() {\n\t    var value0, value1 = value(this);\n\t    if (value1 == null) return void this.removeAttribute(name);\n\t    value0 = this.getAttribute(name);\n\t    return value0 === value1 ? null\n\t        : value0 === value00 && value1 === value10 ? interpolate0\n\t        : interpolate0 = interpolate$$1(value00 = value0, value10 = value1);\n\t  };\n\t}\n\t\n\tfunction attrFunctionNS$1(fullname, interpolate$$1, value) {\n\t  var value00,\n\t      value10,\n\t      interpolate0;\n\t  return function() {\n\t    var value0, value1 = value(this);\n\t    if (value1 == null) return void this.removeAttributeNS(fullname.space, fullname.local);\n\t    value0 = this.getAttributeNS(fullname.space, fullname.local);\n\t    return value0 === value1 ? null\n\t        : value0 === value00 && value1 === value10 ? interpolate0\n\t        : interpolate0 = interpolate$$1(value00 = value0, value10 = value1);\n\t  };\n\t}\n\t\n\tvar transition_attr = function(name, value) {\n\t  var fullname = namespace(name), i = fullname === \"transform\" ? interpolateTransformSvg : interpolate;\n\t  return this.attrTween(name, typeof value === \"function\"\n\t      ? (fullname.local ? attrFunctionNS$1 : attrFunction$1)(fullname, i, tweenValue(this, \"attr.\" + name, value))\n\t      : value == null ? (fullname.local ? attrRemoveNS$1 : attrRemove$1)(fullname)\n\t      : (fullname.local ? attrConstantNS$1 : attrConstant$1)(fullname, i, value + \"\"));\n\t};\n\t\n\tfunction attrTweenNS(fullname, value) {\n\t  function tween() {\n\t    var node = this, i = value.apply(node, arguments);\n\t    return i && function(t) {\n\t      node.setAttributeNS(fullname.space, fullname.local, i(t));\n\t    };\n\t  }\n\t  tween._value = value;\n\t  return tween;\n\t}\n\t\n\tfunction attrTween(name, value) {\n\t  function tween() {\n\t    var node = this, i = value.apply(node, arguments);\n\t    return i && function(t) {\n\t      node.setAttribute(name, i(t));\n\t    };\n\t  }\n\t  tween._value = value;\n\t  return tween;\n\t}\n\t\n\tvar transition_attrTween = function(name, value) {\n\t  var key = \"attr.\" + name;\n\t  if (arguments.length < 2) return (key = this.tween(key)) && key._value;\n\t  if (value == null) return this.tween(key, null);\n\t  if (typeof value !== \"function\") throw new Error;\n\t  var fullname = namespace(name);\n\t  return this.tween(key, (fullname.local ? attrTweenNS : attrTween)(fullname, value));\n\t};\n\t\n\tfunction delayFunction(id, value) {\n\t  return function() {\n\t    init(this, id).delay = +value.apply(this, arguments);\n\t  };\n\t}\n\t\n\tfunction delayConstant(id, value) {\n\t  return value = +value, function() {\n\t    init(this, id).delay = value;\n\t  };\n\t}\n\t\n\tvar transition_delay = function(value) {\n\t  var id = this._id;\n\t\n\t  return arguments.length\n\t      ? this.each((typeof value === \"function\"\n\t          ? delayFunction\n\t          : delayConstant)(id, value))\n\t      : get$1(this.node(), id).delay;\n\t};\n\t\n\tfunction durationFunction(id, value) {\n\t  return function() {\n\t    set$1(this, id).duration = +value.apply(this, arguments);\n\t  };\n\t}\n\t\n\tfunction durationConstant(id, value) {\n\t  return value = +value, function() {\n\t    set$1(this, id).duration = value;\n\t  };\n\t}\n\t\n\tvar transition_duration = function(value) {\n\t  var id = this._id;\n\t\n\t  return arguments.length\n\t      ? this.each((typeof value === \"function\"\n\t          ? durationFunction\n\t          : durationConstant)(id, value))\n\t      : get$1(this.node(), id).duration;\n\t};\n\t\n\tfunction easeConstant(id, value) {\n\t  if (typeof value !== \"function\") throw new Error;\n\t  return function() {\n\t    set$1(this, id).ease = value;\n\t  };\n\t}\n\t\n\tvar transition_ease = function(value) {\n\t  var id = this._id;\n\t\n\t  return arguments.length\n\t      ? this.each(easeConstant(id, value))\n\t      : get$1(this.node(), id).ease;\n\t};\n\t\n\tvar transition_filter = function(match) {\n\t  if (typeof match !== \"function\") match = matcher$1(match);\n\t\n\t  for (var groups = this._groups, m = groups.length, subgroups = new Array(m), j = 0; j < m; ++j) {\n\t    for (var group = groups[j], n = group.length, subgroup = subgroups[j] = [], node, i = 0; i < n; ++i) {\n\t      if ((node = group[i]) && match.call(node, node.__data__, i, group)) {\n\t        subgroup.push(node);\n\t      }\n\t    }\n\t  }\n\t\n\t  return new Transition(subgroups, this._parents, this._name, this._id);\n\t};\n\t\n\tvar transition_merge = function(transition$$1) {\n\t  if (transition$$1._id !== this._id) throw new Error;\n\t\n\t  for (var groups0 = this._groups, groups1 = transition$$1._groups, m0 = groups0.length, m1 = groups1.length, m = Math.min(m0, m1), merges = new Array(m0), j = 0; j < m; ++j) {\n\t    for (var group0 = groups0[j], group1 = groups1[j], n = group0.length, merge = merges[j] = new Array(n), node, i = 0; i < n; ++i) {\n\t      if (node = group0[i] || group1[i]) {\n\t        merge[i] = node;\n\t      }\n\t    }\n\t  }\n\t\n\t  for (; j < m0; ++j) {\n\t    merges[j] = groups0[j];\n\t  }\n\t\n\t  return new Transition(merges, this._parents, this._name, this._id);\n\t};\n\t\n\tfunction start(name) {\n\t  return (name + \"\").trim().split(/^|\\s+/).every(function(t) {\n\t    var i = t.indexOf(\".\");\n\t    if (i >= 0) t = t.slice(0, i);\n\t    return !t || t === \"start\";\n\t  });\n\t}\n\t\n\tfunction onFunction(id, name, listener) {\n\t  var on0, on1, sit = start(name) ? init : set$1;\n\t  return function() {\n\t    var schedule$$1 = sit(this, id),\n\t        on = schedule$$1.on;\n\t\n\t    // If this node shared a dispatch with the previous node,\n\t    // just assign the updated shared dispatch and we’re done!\n\t    // Otherwise, copy-on-write.\n\t    if (on !== on0) (on1 = (on0 = on).copy()).on(name, listener);\n\t\n\t    schedule$$1.on = on1;\n\t  };\n\t}\n\t\n\tvar transition_on = function(name, listener) {\n\t  var id = this._id;\n\t\n\t  return arguments.length < 2\n\t      ? get$1(this.node(), id).on.on(name)\n\t      : this.each(onFunction(id, name, listener));\n\t};\n\t\n\tfunction removeFunction(id) {\n\t  return function() {\n\t    var parent = this.parentNode;\n\t    for (var i in this.__transition) if (+i !== id) return;\n\t    if (parent) parent.removeChild(this);\n\t  };\n\t}\n\t\n\tvar transition_remove = function() {\n\t  return this.on(\"end.remove\", removeFunction(this._id));\n\t};\n\t\n\tvar transition_select = function(select) {\n\t  var name = this._name,\n\t      id = this._id;\n\t\n\t  if (typeof select !== \"function\") select = selector(select);\n\t\n\t  for (var groups = this._groups, m = groups.length, subgroups = new Array(m), j = 0; j < m; ++j) {\n\t    for (var group = groups[j], n = group.length, subgroup = subgroups[j] = new Array(n), node, subnode, i = 0; i < n; ++i) {\n\t      if ((node = group[i]) && (subnode = select.call(node, node.__data__, i, group))) {\n\t        if (\"__data__\" in node) subnode.__data__ = node.__data__;\n\t        subgroup[i] = subnode;\n\t        schedule(subgroup[i], name, id, i, subgroup, get$1(node, id));\n\t      }\n\t    }\n\t  }\n\t\n\t  return new Transition(subgroups, this._parents, name, id);\n\t};\n\t\n\tvar transition_selectAll = function(select) {\n\t  var name = this._name,\n\t      id = this._id;\n\t\n\t  if (typeof select !== \"function\") select = selectorAll(select);\n\t\n\t  for (var groups = this._groups, m = groups.length, subgroups = [], parents = [], j = 0; j < m; ++j) {\n\t    for (var group = groups[j], n = group.length, node, i = 0; i < n; ++i) {\n\t      if (node = group[i]) {\n\t        for (var children = select.call(node, node.__data__, i, group), child, inherit = get$1(node, id), k = 0, l = children.length; k < l; ++k) {\n\t          if (child = children[k]) {\n\t            schedule(child, name, id, k, children, inherit);\n\t          }\n\t        }\n\t        subgroups.push(children);\n\t        parents.push(node);\n\t      }\n\t    }\n\t  }\n\t\n\t  return new Transition(subgroups, parents, name, id);\n\t};\n\t\n\tvar Selection$1 = selection.prototype.constructor;\n\t\n\tvar transition_selection = function() {\n\t  return new Selection$1(this._groups, this._parents);\n\t};\n\t\n\tfunction styleRemove$1(name, interpolate$$1) {\n\t  var value00,\n\t      value10,\n\t      interpolate0;\n\t  return function() {\n\t    var value0 = styleValue(this, name),\n\t        value1 = (this.style.removeProperty(name), styleValue(this, name));\n\t    return value0 === value1 ? null\n\t        : value0 === value00 && value1 === value10 ? interpolate0\n\t        : interpolate0 = interpolate$$1(value00 = value0, value10 = value1);\n\t  };\n\t}\n\t\n\tfunction styleRemoveEnd(name) {\n\t  return function() {\n\t    this.style.removeProperty(name);\n\t  };\n\t}\n\t\n\tfunction styleConstant$1(name, interpolate$$1, value1) {\n\t  var value00,\n\t      interpolate0;\n\t  return function() {\n\t    var value0 = styleValue(this, name);\n\t    return value0 === value1 ? null\n\t        : value0 === value00 ? interpolate0\n\t        : interpolate0 = interpolate$$1(value00 = value0, value1);\n\t  };\n\t}\n\t\n\tfunction styleFunction$1(name, interpolate$$1, value) {\n\t  var value00,\n\t      value10,\n\t      interpolate0;\n\t  return function() {\n\t    var value0 = styleValue(this, name),\n\t        value1 = value(this);\n\t    if (value1 == null) value1 = (this.style.removeProperty(name), styleValue(this, name));\n\t    return value0 === value1 ? null\n\t        : value0 === value00 && value1 === value10 ? interpolate0\n\t        : interpolate0 = interpolate$$1(value00 = value0, value10 = value1);\n\t  };\n\t}\n\t\n\tvar transition_style = function(name, value, priority) {\n\t  var i = (name += \"\") === \"transform\" ? interpolateTransformCss : interpolate;\n\t  return value == null ? this\n\t          .styleTween(name, styleRemove$1(name, i))\n\t          .on(\"end.style.\" + name, styleRemoveEnd(name))\n\t      : this.styleTween(name, typeof value === \"function\"\n\t          ? styleFunction$1(name, i, tweenValue(this, \"style.\" + name, value))\n\t          : styleConstant$1(name, i, value + \"\"), priority);\n\t};\n\t\n\tfunction styleTween(name, value, priority) {\n\t  function tween() {\n\t    var node = this, i = value.apply(node, arguments);\n\t    return i && function(t) {\n\t      node.style.setProperty(name, i(t), priority);\n\t    };\n\t  }\n\t  tween._value = value;\n\t  return tween;\n\t}\n\t\n\tvar transition_styleTween = function(name, value, priority) {\n\t  var key = \"style.\" + (name += \"\");\n\t  if (arguments.length < 2) return (key = this.tween(key)) && key._value;\n\t  if (value == null) return this.tween(key, null);\n\t  if (typeof value !== \"function\") throw new Error;\n\t  return this.tween(key, styleTween(name, value, priority == null ? \"\" : priority));\n\t};\n\t\n\tfunction textConstant$1(value) {\n\t  return function() {\n\t    this.textContent = value;\n\t  };\n\t}\n\t\n\tfunction textFunction$1(value) {\n\t  return function() {\n\t    var value1 = value(this);\n\t    this.textContent = value1 == null ? \"\" : value1;\n\t  };\n\t}\n\t\n\tvar transition_text = function(value) {\n\t  return this.tween(\"text\", typeof value === \"function\"\n\t      ? textFunction$1(tweenValue(this, \"text\", value))\n\t      : textConstant$1(value == null ? \"\" : value + \"\"));\n\t};\n\t\n\tvar transition_transition = function() {\n\t  var name = this._name,\n\t      id0 = this._id,\n\t      id1 = newId();\n\t\n\t  for (var groups = this._groups, m = groups.length, j = 0; j < m; ++j) {\n\t    for (var group = groups[j], n = group.length, node, i = 0; i < n; ++i) {\n\t      if (node = group[i]) {\n\t        var inherit = get$1(node, id0);\n\t        schedule(node, name, id1, i, group, {\n\t          time: inherit.time + inherit.delay + inherit.duration,\n\t          delay: 0,\n\t          duration: inherit.duration,\n\t          ease: inherit.ease\n\t        });\n\t      }\n\t    }\n\t  }\n\t\n\t  return new Transition(groups, this._parents, name, id1);\n\t};\n\t\n\tvar id = 0;\n\t\n\tfunction Transition(groups, parents, name, id) {\n\t  this._groups = groups;\n\t  this._parents = parents;\n\t  this._name = name;\n\t  this._id = id;\n\t}\n\t\n\tfunction transition(name) {\n\t  return selection().transition(name);\n\t}\n\t\n\tfunction newId() {\n\t  return ++id;\n\t}\n\t\n\tvar selection_prototype = selection.prototype;\n\t\n\tTransition.prototype = transition.prototype = {\n\t  constructor: Transition,\n\t  select: transition_select,\n\t  selectAll: transition_selectAll,\n\t  filter: transition_filter,\n\t  merge: transition_merge,\n\t  selection: transition_selection,\n\t  transition: transition_transition,\n\t  call: selection_prototype.call,\n\t  nodes: selection_prototype.nodes,\n\t  node: selection_prototype.node,\n\t  size: selection_prototype.size,\n\t  empty: selection_prototype.empty,\n\t  each: selection_prototype.each,\n\t  on: transition_on,\n\t  attr: transition_attr,\n\t  attrTween: transition_attrTween,\n\t  style: transition_style,\n\t  styleTween: transition_styleTween,\n\t  text: transition_text,\n\t  remove: transition_remove,\n\t  tween: transition_tween,\n\t  delay: transition_delay,\n\t  duration: transition_duration,\n\t  ease: transition_ease\n\t};\n\t\n\tfunction linear$1(t) {\n\t  return +t;\n\t}\n\t\n\tfunction quadIn(t) {\n\t  return t * t;\n\t}\n\t\n\tfunction quadOut(t) {\n\t  return t * (2 - t);\n\t}\n\t\n\tfunction quadInOut(t) {\n\t  return ((t *= 2) <= 1 ? t * t : --t * (2 - t) + 1) / 2;\n\t}\n\t\n\tfunction cubicIn(t) {\n\t  return t * t * t;\n\t}\n\t\n\tfunction cubicOut(t) {\n\t  return --t * t * t + 1;\n\t}\n\t\n\tfunction cubicInOut(t) {\n\t  return ((t *= 2) <= 1 ? t * t * t : (t -= 2) * t * t + 2) / 2;\n\t}\n\t\n\tvar exponent = 3;\n\t\n\tvar polyIn = (function custom(e) {\n\t  e = +e;\n\t\n\t  function polyIn(t) {\n\t    return Math.pow(t, e);\n\t  }\n\t\n\t  polyIn.exponent = custom;\n\t\n\t  return polyIn;\n\t})(exponent);\n\t\n\tvar polyOut = (function custom(e) {\n\t  e = +e;\n\t\n\t  function polyOut(t) {\n\t    return 1 - Math.pow(1 - t, e);\n\t  }\n\t\n\t  polyOut.exponent = custom;\n\t\n\t  return polyOut;\n\t})(exponent);\n\t\n\tvar polyInOut = (function custom(e) {\n\t  e = +e;\n\t\n\t  function polyInOut(t) {\n\t    return ((t *= 2) <= 1 ? Math.pow(t, e) : 2 - Math.pow(2 - t, e)) / 2;\n\t  }\n\t\n\t  polyInOut.exponent = custom;\n\t\n\t  return polyInOut;\n\t})(exponent);\n\t\n\tvar pi = Math.PI;\n\tvar halfPi = pi / 2;\n\t\n\tfunction sinIn(t) {\n\t  return 1 - Math.cos(t * halfPi);\n\t}\n\t\n\tfunction sinOut(t) {\n\t  return Math.sin(t * halfPi);\n\t}\n\t\n\tfunction sinInOut(t) {\n\t  return (1 - Math.cos(pi * t)) / 2;\n\t}\n\t\n\tfunction expIn(t) {\n\t  return Math.pow(2, 10 * t - 10);\n\t}\n\t\n\tfunction expOut(t) {\n\t  return 1 - Math.pow(2, -10 * t);\n\t}\n\t\n\tfunction expInOut(t) {\n\t  return ((t *= 2) <= 1 ? Math.pow(2, 10 * t - 10) : 2 - Math.pow(2, 10 - 10 * t)) / 2;\n\t}\n\t\n\tfunction circleIn(t) {\n\t  return 1 - Math.sqrt(1 - t * t);\n\t}\n\t\n\tfunction circleOut(t) {\n\t  return Math.sqrt(1 - --t * t);\n\t}\n\t\n\tfunction circleInOut(t) {\n\t  return ((t *= 2) <= 1 ? 1 - Math.sqrt(1 - t * t) : Math.sqrt(1 - (t -= 2) * t) + 1) / 2;\n\t}\n\t\n\tvar b1 = 4 / 11;\n\tvar b2 = 6 / 11;\n\tvar b3 = 8 / 11;\n\tvar b4 = 3 / 4;\n\tvar b5 = 9 / 11;\n\tvar b6 = 10 / 11;\n\tvar b7 = 15 / 16;\n\tvar b8 = 21 / 22;\n\tvar b9 = 63 / 64;\n\tvar b0 = 1 / b1 / b1;\n\t\n\tfunction bounceIn(t) {\n\t  return 1 - bounceOut(1 - t);\n\t}\n\t\n\tfunction bounceOut(t) {\n\t  return (t = +t) < b1 ? b0 * t * t : t < b3 ? b0 * (t -= b2) * t + b4 : t < b6 ? b0 * (t -= b5) * t + b7 : b0 * (t -= b8) * t + b9;\n\t}\n\t\n\tfunction bounceInOut(t) {\n\t  return ((t *= 2) <= 1 ? 1 - bounceOut(1 - t) : bounceOut(t - 1) + 1) / 2;\n\t}\n\t\n\tvar overshoot = 1.70158;\n\t\n\tvar backIn = (function custom(s) {\n\t  s = +s;\n\t\n\t  function backIn(t) {\n\t    return t * t * ((s + 1) * t - s);\n\t  }\n\t\n\t  backIn.overshoot = custom;\n\t\n\t  return backIn;\n\t})(overshoot);\n\t\n\tvar backOut = (function custom(s) {\n\t  s = +s;\n\t\n\t  function backOut(t) {\n\t    return --t * t * ((s + 1) * t + s) + 1;\n\t  }\n\t\n\t  backOut.overshoot = custom;\n\t\n\t  return backOut;\n\t})(overshoot);\n\t\n\tvar backInOut = (function custom(s) {\n\t  s = +s;\n\t\n\t  function backInOut(t) {\n\t    return ((t *= 2) < 1 ? t * t * ((s + 1) * t - s) : (t -= 2) * t * ((s + 1) * t + s) + 2) / 2;\n\t  }\n\t\n\t  backInOut.overshoot = custom;\n\t\n\t  return backInOut;\n\t})(overshoot);\n\t\n\tvar tau = 2 * Math.PI;\n\tvar amplitude = 1;\n\tvar period = 0.3;\n\t\n\tvar elasticIn = (function custom(a, p) {\n\t  var s = Math.asin(1 / (a = Math.max(1, a))) * (p /= tau);\n\t\n\t  function elasticIn(t) {\n\t    return a * Math.pow(2, 10 * --t) * Math.sin((s - t) / p);\n\t  }\n\t\n\t  elasticIn.amplitude = function(a) { return custom(a, p * tau); };\n\t  elasticIn.period = function(p) { return custom(a, p); };\n\t\n\t  return elasticIn;\n\t})(amplitude, period);\n\t\n\tvar elasticOut = (function custom(a, p) {\n\t  var s = Math.asin(1 / (a = Math.max(1, a))) * (p /= tau);\n\t\n\t  function elasticOut(t) {\n\t    return 1 - a * Math.pow(2, -10 * (t = +t)) * Math.sin((t + s) / p);\n\t  }\n\t\n\t  elasticOut.amplitude = function(a) { return custom(a, p * tau); };\n\t  elasticOut.period = function(p) { return custom(a, p); };\n\t\n\t  return elasticOut;\n\t})(amplitude, period);\n\t\n\tvar elasticInOut = (function custom(a, p) {\n\t  var s = Math.asin(1 / (a = Math.max(1, a))) * (p /= tau);\n\t\n\t  function elasticInOut(t) {\n\t    return ((t = t * 2 - 1) < 0\n\t        ? a * Math.pow(2, 10 * t) * Math.sin((s - t) / p)\n\t        : 2 - a * Math.pow(2, -10 * t) * Math.sin((s + t) / p)) / 2;\n\t  }\n\t\n\t  elasticInOut.amplitude = function(a) { return custom(a, p * tau); };\n\t  elasticInOut.period = function(p) { return custom(a, p); };\n\t\n\t  return elasticInOut;\n\t})(amplitude, period);\n\t\n\tvar defaultTiming = {\n\t  time: null, // Set on use.\n\t  delay: 0,\n\t  duration: 250,\n\t  ease: cubicInOut\n\t};\n\t\n\tfunction inherit(node, id) {\n\t  var timing;\n\t  while (!(timing = node.__transition) || !(timing = timing[id])) {\n\t    if (!(node = node.parentNode)) {\n\t      return defaultTiming.time = now(), defaultTiming;\n\t    }\n\t  }\n\t  return timing;\n\t}\n\t\n\tvar selection_transition = function(name) {\n\t  var id,\n\t      timing;\n\t\n\t  if (name instanceof Transition) {\n\t    id = name._id, name = name._name;\n\t  } else {\n\t    id = newId(), (timing = defaultTiming).time = now(), name = name == null ? null : name + \"\";\n\t  }\n\t\n\t  for (var groups = this._groups, m = groups.length, j = 0; j < m; ++j) {\n\t    for (var group = groups[j], n = group.length, node, i = 0; i < n; ++i) {\n\t      if (node = group[i]) {\n\t        schedule(node, name, id, i, group, timing || inherit(node, id));\n\t      }\n\t    }\n\t  }\n\t\n\t  return new Transition(groups, this._parents, name, id);\n\t};\n\t\n\tselection.prototype.interrupt = selection_interrupt;\n\tselection.prototype.transition = selection_transition;\n\t\n\tvar root$1 = [null];\n\t\n\tvar active = function(node, name) {\n\t  var schedules = node.__transition,\n\t      schedule$$1,\n\t      i;\n\t\n\t  if (schedules) {\n\t    name = name == null ? null : name + \"\";\n\t    for (i in schedules) {\n\t      if ((schedule$$1 = schedules[i]).state > SCHEDULED && schedule$$1.name === name) {\n\t        return new Transition([[node]], root$1, name, +i);\n\t      }\n\t    }\n\t  }\n\t\n\t  return null;\n\t};\n\t\n\tvar constant$4 = function(x) {\n\t  return function() {\n\t    return x;\n\t  };\n\t};\n\t\n\tvar BrushEvent = function(target, type, selection) {\n\t  this.target = target;\n\t  this.type = type;\n\t  this.selection = selection;\n\t};\n\t\n\tfunction nopropagation$1() {\n\t  exports.event.stopImmediatePropagation();\n\t}\n\t\n\tvar noevent$1 = function() {\n\t  exports.event.preventDefault();\n\t  exports.event.stopImmediatePropagation();\n\t};\n\t\n\tvar MODE_DRAG = {name: \"drag\"};\n\tvar MODE_SPACE = {name: \"space\"};\n\tvar MODE_HANDLE = {name: \"handle\"};\n\tvar MODE_CENTER = {name: \"center\"};\n\t\n\tvar X = {\n\t  name: \"x\",\n\t  handles: [\"e\", \"w\"].map(type),\n\t  input: function(x, e) { return x && [[x[0], e[0][1]], [x[1], e[1][1]]]; },\n\t  output: function(xy) { return xy && [xy[0][0], xy[1][0]]; }\n\t};\n\t\n\tvar Y = {\n\t  name: \"y\",\n\t  handles: [\"n\", \"s\"].map(type),\n\t  input: function(y, e) { return y && [[e[0][0], y[0]], [e[1][0], y[1]]]; },\n\t  output: function(xy) { return xy && [xy[0][1], xy[1][1]]; }\n\t};\n\t\n\tvar XY = {\n\t  name: \"xy\",\n\t  handles: [\"n\", \"e\", \"s\", \"w\", \"nw\", \"ne\", \"se\", \"sw\"].map(type),\n\t  input: function(xy) { return xy; },\n\t  output: function(xy) { return xy; }\n\t};\n\t\n\tvar cursors = {\n\t  overlay: \"crosshair\",\n\t  selection: \"move\",\n\t  n: \"ns-resize\",\n\t  e: \"ew-resize\",\n\t  s: \"ns-resize\",\n\t  w: \"ew-resize\",\n\t  nw: \"nwse-resize\",\n\t  ne: \"nesw-resize\",\n\t  se: \"nwse-resize\",\n\t  sw: \"nesw-resize\"\n\t};\n\t\n\tvar flipX = {\n\t  e: \"w\",\n\t  w: \"e\",\n\t  nw: \"ne\",\n\t  ne: \"nw\",\n\t  se: \"sw\",\n\t  sw: \"se\"\n\t};\n\t\n\tvar flipY = {\n\t  n: \"s\",\n\t  s: \"n\",\n\t  nw: \"sw\",\n\t  ne: \"se\",\n\t  se: \"ne\",\n\t  sw: \"nw\"\n\t};\n\t\n\tvar signsX = {\n\t  overlay: +1,\n\t  selection: +1,\n\t  n: null,\n\t  e: +1,\n\t  s: null,\n\t  w: -1,\n\t  nw: -1,\n\t  ne: +1,\n\t  se: +1,\n\t  sw: -1\n\t};\n\t\n\tvar signsY = {\n\t  overlay: +1,\n\t  selection: +1,\n\t  n: -1,\n\t  e: null,\n\t  s: +1,\n\t  w: null,\n\t  nw: -1,\n\t  ne: -1,\n\t  se: +1,\n\t  sw: +1\n\t};\n\t\n\tfunction type(t) {\n\t  return {type: t};\n\t}\n\t\n\t// Ignore right-click, since that should open the context menu.\n\tfunction defaultFilter() {\n\t  return !exports.event.button;\n\t}\n\t\n\tfunction defaultExtent() {\n\t  var svg = this.ownerSVGElement || this;\n\t  return [[0, 0], [svg.width.baseVal.value, svg.height.baseVal.value]];\n\t}\n\t\n\t// Like d3.local, but with the name “__brush” rather than auto-generated.\n\tfunction local(node) {\n\t  while (!node.__brush) if (!(node = node.parentNode)) return;\n\t  return node.__brush;\n\t}\n\t\n\tfunction empty(extent) {\n\t  return extent[0][0] === extent[1][0]\n\t      || extent[0][1] === extent[1][1];\n\t}\n\t\n\tfunction brushSelection(node) {\n\t  var state = node.__brush;\n\t  return state ? state.dim.output(state.selection) : null;\n\t}\n\t\n\tfunction brushX() {\n\t  return brush$1(X);\n\t}\n\t\n\tfunction brushY() {\n\t  return brush$1(Y);\n\t}\n\t\n\tvar brush = function() {\n\t  return brush$1(XY);\n\t};\n\t\n\tfunction brush$1(dim) {\n\t  var extent = defaultExtent,\n\t      filter = defaultFilter,\n\t      listeners = dispatch(brush, \"start\", \"brush\", \"end\"),\n\t      handleSize = 6,\n\t      touchending;\n\t\n\t  function brush(group) {\n\t    var overlay = group\n\t        .property(\"__brush\", initialize)\n\t      .selectAll(\".overlay\")\n\t      .data([type(\"overlay\")]);\n\t\n\t    overlay.enter().append(\"rect\")\n\t        .attr(\"class\", \"overlay\")\n\t        .attr(\"pointer-events\", \"all\")\n\t        .attr(\"cursor\", cursors.overlay)\n\t      .merge(overlay)\n\t        .each(function() {\n\t          var extent = local(this).extent;\n\t          select(this)\n\t              .attr(\"x\", extent[0][0])\n\t              .attr(\"y\", extent[0][1])\n\t              .attr(\"width\", extent[1][0] - extent[0][0])\n\t              .attr(\"height\", extent[1][1] - extent[0][1]);\n\t        });\n\t\n\t    group.selectAll(\".selection\")\n\t      .data([type(\"selection\")])\n\t      .enter().append(\"rect\")\n\t        .attr(\"class\", \"selection\")\n\t        .attr(\"cursor\", cursors.selection)\n\t        .attr(\"fill\", \"#777\")\n\t        .attr(\"fill-opacity\", 0.3)\n\t        .attr(\"stroke\", \"#fff\")\n\t        .attr(\"shape-rendering\", \"crispEdges\");\n\t\n\t    var handle = group.selectAll(\".handle\")\n\t      .data(dim.handles, function(d) { return d.type; });\n\t\n\t    handle.exit().remove();\n\t\n\t    handle.enter().append(\"rect\")\n\t        .attr(\"class\", function(d) { return \"handle handle--\" + d.type; })\n\t        .attr(\"cursor\", function(d) { return cursors[d.type]; });\n\t\n\t    group\n\t        .each(redraw)\n\t        .attr(\"fill\", \"none\")\n\t        .attr(\"pointer-events\", \"all\")\n\t        .style(\"-webkit-tap-highlight-color\", \"rgba(0,0,0,0)\")\n\t        .on(\"mousedown.brush touchstart.brush\", started);\n\t  }\n\t\n\t  brush.move = function(group, selection) {\n\t    if (group.selection) {\n\t      group\n\t          .on(\"start.brush\", function() { emitter(this, arguments).beforestart().start(); })\n\t          .on(\"interrupt.brush end.brush\", function() { emitter(this, arguments).end(); })\n\t          .tween(\"brush\", function() {\n\t            var that = this,\n\t                state = that.__brush,\n\t                emit = emitter(that, arguments),\n\t                selection0 = state.selection,\n\t                selection1 = dim.input(typeof selection === \"function\" ? selection.apply(this, arguments) : selection, state.extent),\n\t                i = interpolateValue(selection0, selection1);\n\t\n\t            function tween(t) {\n\t              state.selection = t === 1 && empty(selection1) ? null : i(t);\n\t              redraw.call(that);\n\t              emit.brush();\n\t            }\n\t\n\t            return selection0 && selection1 ? tween : tween(1);\n\t          });\n\t    } else {\n\t      group\n\t          .each(function() {\n\t            var that = this,\n\t                args = arguments,\n\t                state = that.__brush,\n\t                selection1 = dim.input(typeof selection === \"function\" ? selection.apply(that, args) : selection, state.extent),\n\t                emit = emitter(that, args).beforestart();\n\t\n\t            interrupt(that);\n\t            state.selection = selection1 == null || empty(selection1) ? null : selection1;\n\t            redraw.call(that);\n\t            emit.start().brush().end();\n\t          });\n\t    }\n\t  };\n\t\n\t  function redraw() {\n\t    var group = select(this),\n\t        selection = local(this).selection;\n\t\n\t    if (selection) {\n\t      group.selectAll(\".selection\")\n\t          .style(\"display\", null)\n\t          .attr(\"x\", selection[0][0])\n\t          .attr(\"y\", selection[0][1])\n\t          .attr(\"width\", selection[1][0] - selection[0][0])\n\t          .attr(\"height\", selection[1][1] - selection[0][1]);\n\t\n\t      group.selectAll(\".handle\")\n\t          .style(\"display\", null)\n\t          .attr(\"x\", function(d) { return d.type[d.type.length - 1] === \"e\" ? selection[1][0] - handleSize / 2 : selection[0][0] - handleSize / 2; })\n\t          .attr(\"y\", function(d) { return d.type[0] === \"s\" ? selection[1][1] - handleSize / 2 : selection[0][1] - handleSize / 2; })\n\t          .attr(\"width\", function(d) { return d.type === \"n\" || d.type === \"s\" ? selection[1][0] - selection[0][0] + handleSize : handleSize; })\n\t          .attr(\"height\", function(d) { return d.type === \"e\" || d.type === \"w\" ? selection[1][1] - selection[0][1] + handleSize : handleSize; });\n\t    }\n\t\n\t    else {\n\t      group.selectAll(\".selection,.handle\")\n\t          .style(\"display\", \"none\")\n\t          .attr(\"x\", null)\n\t          .attr(\"y\", null)\n\t          .attr(\"width\", null)\n\t          .attr(\"height\", null);\n\t    }\n\t  }\n\t\n\t  function emitter(that, args) {\n\t    return that.__brush.emitter || new Emitter(that, args);\n\t  }\n\t\n\t  function Emitter(that, args) {\n\t    this.that = that;\n\t    this.args = args;\n\t    this.state = that.__brush;\n\t    this.active = 0;\n\t  }\n\t\n\t  Emitter.prototype = {\n\t    beforestart: function() {\n\t      if (++this.active === 1) this.state.emitter = this, this.starting = true;\n\t      return this;\n\t    },\n\t    start: function() {\n\t      if (this.starting) this.starting = false, this.emit(\"start\");\n\t      return this;\n\t    },\n\t    brush: function() {\n\t      this.emit(\"brush\");\n\t      return this;\n\t    },\n\t    end: function() {\n\t      if (--this.active === 0) delete this.state.emitter, this.emit(\"end\");\n\t      return this;\n\t    },\n\t    emit: function(type) {\n\t      customEvent(new BrushEvent(brush, type, dim.output(this.state.selection)), listeners.apply, listeners, [type, this.that, this.args]);\n\t    }\n\t  };\n\t\n\t  function started() {\n\t    if (exports.event.touches) { if (exports.event.changedTouches.length < exports.event.touches.length) return noevent$1(); }\n\t    else if (touchending) return;\n\t    if (!filter.apply(this, arguments)) return;\n\t\n\t    var that = this,\n\t        type = exports.event.target.__data__.type,\n\t        mode = (exports.event.metaKey ? type = \"overlay\" : type) === \"selection\" ? MODE_DRAG : (exports.event.altKey ? MODE_CENTER : MODE_HANDLE),\n\t        signX = dim === Y ? null : signsX[type],\n\t        signY = dim === X ? null : signsY[type],\n\t        state = local(that),\n\t        extent = state.extent,\n\t        selection = state.selection,\n\t        W = extent[0][0], w0, w1,\n\t        N = extent[0][1], n0, n1,\n\t        E = extent[1][0], e0, e1,\n\t        S = extent[1][1], s0, s1,\n\t        dx,\n\t        dy,\n\t        moving,\n\t        shifting = signX && signY && exports.event.shiftKey,\n\t        lockX,\n\t        lockY,\n\t        point0 = mouse(that),\n\t        point = point0,\n\t        emit = emitter(that, arguments).beforestart();\n\t\n\t    if (type === \"overlay\") {\n\t      state.selection = selection = [\n\t        [w0 = dim === Y ? W : point0[0], n0 = dim === X ? N : point0[1]],\n\t        [e0 = dim === Y ? E : w0, s0 = dim === X ? S : n0]\n\t      ];\n\t    } else {\n\t      w0 = selection[0][0];\n\t      n0 = selection[0][1];\n\t      e0 = selection[1][0];\n\t      s0 = selection[1][1];\n\t    }\n\t\n\t    w1 = w0;\n\t    n1 = n0;\n\t    e1 = e0;\n\t    s1 = s0;\n\t\n\t    var group = select(that)\n\t        .attr(\"pointer-events\", \"none\");\n\t\n\t    var overlay = group.selectAll(\".overlay\")\n\t        .attr(\"cursor\", cursors[type]);\n\t\n\t    if (exports.event.touches) {\n\t      group\n\t          .on(\"touchmove.brush\", moved, true)\n\t          .on(\"touchend.brush touchcancel.brush\", ended, true);\n\t    } else {\n\t      var view = select(exports.event.view)\n\t          .on(\"keydown.brush\", keydowned, true)\n\t          .on(\"keyup.brush\", keyupped, true)\n\t          .on(\"mousemove.brush\", moved, true)\n\t          .on(\"mouseup.brush\", ended, true);\n\t\n\t      dragDisable(exports.event.view);\n\t    }\n\t\n\t    nopropagation$1();\n\t    interrupt(that);\n\t    redraw.call(that);\n\t    emit.start();\n\t\n\t    function moved() {\n\t      var point1 = mouse(that);\n\t      if (shifting && !lockX && !lockY) {\n\t        if (Math.abs(point1[0] - point[0]) > Math.abs(point1[1] - point[1])) lockY = true;\n\t        else lockX = true;\n\t      }\n\t      point = point1;\n\t      moving = true;\n\t      noevent$1();\n\t      move();\n\t    }\n\t\n\t    function move() {\n\t      var t;\n\t\n\t      dx = point[0] - point0[0];\n\t      dy = point[1] - point0[1];\n\t\n\t      switch (mode) {\n\t        case MODE_SPACE:\n\t        case MODE_DRAG: {\n\t          if (signX) dx = Math.max(W - w0, Math.min(E - e0, dx)), w1 = w0 + dx, e1 = e0 + dx;\n\t          if (signY) dy = Math.max(N - n0, Math.min(S - s0, dy)), n1 = n0 + dy, s1 = s0 + dy;\n\t          break;\n\t        }\n\t        case MODE_HANDLE: {\n\t          if (signX < 0) dx = Math.max(W - w0, Math.min(E - w0, dx)), w1 = w0 + dx, e1 = e0;\n\t          else if (signX > 0) dx = Math.max(W - e0, Math.min(E - e0, dx)), w1 = w0, e1 = e0 + dx;\n\t          if (signY < 0) dy = Math.max(N - n0, Math.min(S - n0, dy)), n1 = n0 + dy, s1 = s0;\n\t          else if (signY > 0) dy = Math.max(N - s0, Math.min(S - s0, dy)), n1 = n0, s1 = s0 + dy;\n\t          break;\n\t        }\n\t        case MODE_CENTER: {\n\t          if (signX) w1 = Math.max(W, Math.min(E, w0 - dx * signX)), e1 = Math.max(W, Math.min(E, e0 + dx * signX));\n\t          if (signY) n1 = Math.max(N, Math.min(S, n0 - dy * signY)), s1 = Math.max(N, Math.min(S, s0 + dy * signY));\n\t          break;\n\t        }\n\t      }\n\t\n\t      if (e1 < w1) {\n\t        signX *= -1;\n\t        t = w0, w0 = e0, e0 = t;\n\t        t = w1, w1 = e1, e1 = t;\n\t        if (type in flipX) overlay.attr(\"cursor\", cursors[type = flipX[type]]);\n\t      }\n\t\n\t      if (s1 < n1) {\n\t        signY *= -1;\n\t        t = n0, n0 = s0, s0 = t;\n\t        t = n1, n1 = s1, s1 = t;\n\t        if (type in flipY) overlay.attr(\"cursor\", cursors[type = flipY[type]]);\n\t      }\n\t\n\t      if (state.selection) selection = state.selection; // May be set by brush.move!\n\t      if (lockX) w1 = selection[0][0], e1 = selection[1][0];\n\t      if (lockY) n1 = selection[0][1], s1 = selection[1][1];\n\t\n\t      if (selection[0][0] !== w1\n\t          || selection[0][1] !== n1\n\t          || selection[1][0] !== e1\n\t          || selection[1][1] !== s1) {\n\t        state.selection = [[w1, n1], [e1, s1]];\n\t        redraw.call(that);\n\t        emit.brush();\n\t      }\n\t    }\n\t\n\t    function ended() {\n\t      nopropagation$1();\n\t      if (exports.event.touches) {\n\t        if (exports.event.touches.length) return;\n\t        if (touchending) clearTimeout(touchending);\n\t        touchending = setTimeout(function() { touchending = null; }, 500); // Ghost clicks are delayed!\n\t        group.on(\"touchmove.brush touchend.brush touchcancel.brush\", null);\n\t      } else {\n\t        yesdrag(exports.event.view, moving);\n\t        view.on(\"keydown.brush keyup.brush mousemove.brush mouseup.brush\", null);\n\t      }\n\t      group.attr(\"pointer-events\", \"all\");\n\t      overlay.attr(\"cursor\", cursors.overlay);\n\t      if (state.selection) selection = state.selection; // May be set by brush.move (on start)!\n\t      if (empty(selection)) state.selection = null, redraw.call(that);\n\t      emit.end();\n\t    }\n\t\n\t    function keydowned() {\n\t      switch (exports.event.keyCode) {\n\t        case 16: { // SHIFT\n\t          shifting = signX && signY;\n\t          break;\n\t        }\n\t        case 18: { // ALT\n\t          if (mode === MODE_HANDLE) {\n\t            if (signX) e0 = e1 - dx * signX, w0 = w1 + dx * signX;\n\t            if (signY) s0 = s1 - dy * signY, n0 = n1 + dy * signY;\n\t            mode = MODE_CENTER;\n\t            move();\n\t          }\n\t          break;\n\t        }\n\t        case 32: { // SPACE; takes priority over ALT\n\t          if (mode === MODE_HANDLE || mode === MODE_CENTER) {\n\t            if (signX < 0) e0 = e1 - dx; else if (signX > 0) w0 = w1 - dx;\n\t            if (signY < 0) s0 = s1 - dy; else if (signY > 0) n0 = n1 - dy;\n\t            mode = MODE_SPACE;\n\t            overlay.attr(\"cursor\", cursors.selection);\n\t            move();\n\t          }\n\t          break;\n\t        }\n\t        default: return;\n\t      }\n\t      noevent$1();\n\t    }\n\t\n\t    function keyupped() {\n\t      switch (exports.event.keyCode) {\n\t        case 16: { // SHIFT\n\t          if (shifting) {\n\t            lockX = lockY = shifting = false;\n\t            move();\n\t          }\n\t          break;\n\t        }\n\t        case 18: { // ALT\n\t          if (mode === MODE_CENTER) {\n\t            if (signX < 0) e0 = e1; else if (signX > 0) w0 = w1;\n\t            if (signY < 0) s0 = s1; else if (signY > 0) n0 = n1;\n\t            mode = MODE_HANDLE;\n\t            move();\n\t          }\n\t          break;\n\t        }\n\t        case 32: { // SPACE\n\t          if (mode === MODE_SPACE) {\n\t            if (exports.event.altKey) {\n\t              if (signX) e0 = e1 - dx * signX, w0 = w1 + dx * signX;\n\t              if (signY) s0 = s1 - dy * signY, n0 = n1 + dy * signY;\n\t              mode = MODE_CENTER;\n\t            } else {\n\t              if (signX < 0) e0 = e1; else if (signX > 0) w0 = w1;\n\t              if (signY < 0) s0 = s1; else if (signY > 0) n0 = n1;\n\t              mode = MODE_HANDLE;\n\t            }\n\t            overlay.attr(\"cursor\", cursors[type]);\n\t            move();\n\t          }\n\t          break;\n\t        }\n\t        default: return;\n\t      }\n\t      noevent$1();\n\t    }\n\t  }\n\t\n\t  function initialize() {\n\t    var state = this.__brush || {selection: null};\n\t    state.extent = extent.apply(this, arguments);\n\t    state.dim = dim;\n\t    return state;\n\t  }\n\t\n\t  brush.extent = function(_) {\n\t    return arguments.length ? (extent = typeof _ === \"function\" ? _ : constant$4([[+_[0][0], +_[0][1]], [+_[1][0], +_[1][1]]]), brush) : extent;\n\t  };\n\t\n\t  brush.filter = function(_) {\n\t    return arguments.length ? (filter = typeof _ === \"function\" ? _ : constant$4(!!_), brush) : filter;\n\t  };\n\t\n\t  brush.handleSize = function(_) {\n\t    return arguments.length ? (handleSize = +_, brush) : handleSize;\n\t  };\n\t\n\t  brush.on = function() {\n\t    var value = listeners.on.apply(listeners, arguments);\n\t    return value === listeners ? brush : value;\n\t  };\n\t\n\t  return brush;\n\t}\n\t\n\tvar cos = Math.cos;\n\tvar sin = Math.sin;\n\tvar pi$1 = Math.PI;\n\tvar halfPi$1 = pi$1 / 2;\n\tvar tau$1 = pi$1 * 2;\n\tvar max$1 = Math.max;\n\t\n\tfunction compareValue(compare) {\n\t  return function(a, b) {\n\t    return compare(\n\t      a.source.value + a.target.value,\n\t      b.source.value + b.target.value\n\t    );\n\t  };\n\t}\n\t\n\tvar chord = function() {\n\t  var padAngle = 0,\n\t      sortGroups = null,\n\t      sortSubgroups = null,\n\t      sortChords = null;\n\t\n\t  function chord(matrix) {\n\t    var n = matrix.length,\n\t        groupSums = [],\n\t        groupIndex = sequence(n),\n\t        subgroupIndex = [],\n\t        chords = [],\n\t        groups = chords.groups = new Array(n),\n\t        subgroups = new Array(n * n),\n\t        k,\n\t        x,\n\t        x0,\n\t        dx,\n\t        i,\n\t        j;\n\t\n\t    // Compute the sum.\n\t    k = 0, i = -1; while (++i < n) {\n\t      x = 0, j = -1; while (++j < n) {\n\t        x += matrix[i][j];\n\t      }\n\t      groupSums.push(x);\n\t      subgroupIndex.push(sequence(n));\n\t      k += x;\n\t    }\n\t\n\t    // Sort groups…\n\t    if (sortGroups) groupIndex.sort(function(a, b) {\n\t      return sortGroups(groupSums[a], groupSums[b]);\n\t    });\n\t\n\t    // Sort subgroups…\n\t    if (sortSubgroups) subgroupIndex.forEach(function(d, i) {\n\t      d.sort(function(a, b) {\n\t        return sortSubgroups(matrix[i][a], matrix[i][b]);\n\t      });\n\t    });\n\t\n\t    // Convert the sum to scaling factor for [0, 2pi].\n\t    // TODO Allow start and end angle to be specified?\n\t    // TODO Allow padding to be specified as percentage?\n\t    k = max$1(0, tau$1 - padAngle * n) / k;\n\t    dx = k ? padAngle : tau$1 / n;\n\t\n\t    // Compute the start and end angle for each group and subgroup.\n\t    // Note: Opera has a bug reordering object literal properties!\n\t    x = 0, i = -1; while (++i < n) {\n\t      x0 = x, j = -1; while (++j < n) {\n\t        var di = groupIndex[i],\n\t            dj = subgroupIndex[di][j],\n\t            v = matrix[di][dj],\n\t            a0 = x,\n\t            a1 = x += v * k;\n\t        subgroups[dj * n + di] = {\n\t          index: di,\n\t          subindex: dj,\n\t          startAngle: a0,\n\t          endAngle: a1,\n\t          value: v\n\t        };\n\t      }\n\t      groups[di] = {\n\t        index: di,\n\t        startAngle: x0,\n\t        endAngle: x,\n\t        value: groupSums[di]\n\t      };\n\t      x += dx;\n\t    }\n\t\n\t    // Generate chords for each (non-empty) subgroup-subgroup link.\n\t    i = -1; while (++i < n) {\n\t      j = i - 1; while (++j < n) {\n\t        var source = subgroups[j * n + i],\n\t            target = subgroups[i * n + j];\n\t        if (source.value || target.value) {\n\t          chords.push(source.value < target.value\n\t              ? {source: target, target: source}\n\t              : {source: source, target: target});\n\t        }\n\t      }\n\t    }\n\t\n\t    return sortChords ? chords.sort(sortChords) : chords;\n\t  }\n\t\n\t  chord.padAngle = function(_) {\n\t    return arguments.length ? (padAngle = max$1(0, _), chord) : padAngle;\n\t  };\n\t\n\t  chord.sortGroups = function(_) {\n\t    return arguments.length ? (sortGroups = _, chord) : sortGroups;\n\t  };\n\t\n\t  chord.sortSubgroups = function(_) {\n\t    return arguments.length ? (sortSubgroups = _, chord) : sortSubgroups;\n\t  };\n\t\n\t  chord.sortChords = function(_) {\n\t    return arguments.length ? (_ == null ? sortChords = null : (sortChords = compareValue(_))._ = _, chord) : sortChords && sortChords._;\n\t  };\n\t\n\t  return chord;\n\t};\n\t\n\tvar slice$2 = Array.prototype.slice;\n\t\n\tvar constant$5 = function(x) {\n\t  return function() {\n\t    return x;\n\t  };\n\t};\n\t\n\tvar pi$2 = Math.PI;\n\tvar tau$2 = 2 * pi$2;\n\tvar epsilon$1 = 1e-6;\n\tvar tauEpsilon = tau$2 - epsilon$1;\n\t\n\tfunction Path() {\n\t  this._x0 = this._y0 = // start of current subpath\n\t  this._x1 = this._y1 = null; // end of current subpath\n\t  this._ = \"\";\n\t}\n\t\n\tfunction path() {\n\t  return new Path;\n\t}\n\t\n\tPath.prototype = path.prototype = {\n\t  constructor: Path,\n\t  moveTo: function(x, y) {\n\t    this._ += \"M\" + (this._x0 = this._x1 = +x) + \",\" + (this._y0 = this._y1 = +y);\n\t  },\n\t  closePath: function() {\n\t    if (this._x1 !== null) {\n\t      this._x1 = this._x0, this._y1 = this._y0;\n\t      this._ += \"Z\";\n\t    }\n\t  },\n\t  lineTo: function(x, y) {\n\t    this._ += \"L\" + (this._x1 = +x) + \",\" + (this._y1 = +y);\n\t  },\n\t  quadraticCurveTo: function(x1, y1, x, y) {\n\t    this._ += \"Q\" + (+x1) + \",\" + (+y1) + \",\" + (this._x1 = +x) + \",\" + (this._y1 = +y);\n\t  },\n\t  bezierCurveTo: function(x1, y1, x2, y2, x, y) {\n\t    this._ += \"C\" + (+x1) + \",\" + (+y1) + \",\" + (+x2) + \",\" + (+y2) + \",\" + (this._x1 = +x) + \",\" + (this._y1 = +y);\n\t  },\n\t  arcTo: function(x1, y1, x2, y2, r) {\n\t    x1 = +x1, y1 = +y1, x2 = +x2, y2 = +y2, r = +r;\n\t    var x0 = this._x1,\n\t        y0 = this._y1,\n\t        x21 = x2 - x1,\n\t        y21 = y2 - y1,\n\t        x01 = x0 - x1,\n\t        y01 = y0 - y1,\n\t        l01_2 = x01 * x01 + y01 * y01;\n\t\n\t    // Is the radius negative? Error.\n\t    if (r < 0) throw new Error(\"negative radius: \" + r);\n\t\n\t    // Is this path empty? Move to (x1,y1).\n\t    if (this._x1 === null) {\n\t      this._ += \"M\" + (this._x1 = x1) + \",\" + (this._y1 = y1);\n\t    }\n\t\n\t    // Or, is (x1,y1) coincident with (x0,y0)? Do nothing.\n\t    else if (!(l01_2 > epsilon$1)) {}\n\t\n\t    // Or, are (x0,y0), (x1,y1) and (x2,y2) collinear?\n\t    // Equivalently, is (x1,y1) coincident with (x2,y2)?\n\t    // Or, is the radius zero? Line to (x1,y1).\n\t    else if (!(Math.abs(y01 * x21 - y21 * x01) > epsilon$1) || !r) {\n\t      this._ += \"L\" + (this._x1 = x1) + \",\" + (this._y1 = y1);\n\t    }\n\t\n\t    // Otherwise, draw an arc!\n\t    else {\n\t      var x20 = x2 - x0,\n\t          y20 = y2 - y0,\n\t          l21_2 = x21 * x21 + y21 * y21,\n\t          l20_2 = x20 * x20 + y20 * y20,\n\t          l21 = Math.sqrt(l21_2),\n\t          l01 = Math.sqrt(l01_2),\n\t          l = r * Math.tan((pi$2 - Math.acos((l21_2 + l01_2 - l20_2) / (2 * l21 * l01))) / 2),\n\t          t01 = l / l01,\n\t          t21 = l / l21;\n\t\n\t      // If the start tangent is not coincident with (x0,y0), line to.\n\t      if (Math.abs(t01 - 1) > epsilon$1) {\n\t        this._ += \"L\" + (x1 + t01 * x01) + \",\" + (y1 + t01 * y01);\n\t      }\n\t\n\t      this._ += \"A\" + r + \",\" + r + \",0,0,\" + (+(y01 * x20 > x01 * y20)) + \",\" + (this._x1 = x1 + t21 * x21) + \",\" + (this._y1 = y1 + t21 * y21);\n\t    }\n\t  },\n\t  arc: function(x, y, r, a0, a1, ccw) {\n\t    x = +x, y = +y, r = +r;\n\t    var dx = r * Math.cos(a0),\n\t        dy = r * Math.sin(a0),\n\t        x0 = x + dx,\n\t        y0 = y + dy,\n\t        cw = 1 ^ ccw,\n\t        da = ccw ? a0 - a1 : a1 - a0;\n\t\n\t    // Is the radius negative? Error.\n\t    if (r < 0) throw new Error(\"negative radius: \" + r);\n\t\n\t    // Is this path empty? Move to (x0,y0).\n\t    if (this._x1 === null) {\n\t      this._ += \"M\" + x0 + \",\" + y0;\n\t    }\n\t\n\t    // Or, is (x0,y0) not coincident with the previous point? Line to (x0,y0).\n\t    else if (Math.abs(this._x1 - x0) > epsilon$1 || Math.abs(this._y1 - y0) > epsilon$1) {\n\t      this._ += \"L\" + x0 + \",\" + y0;\n\t    }\n\t\n\t    // Is this arc empty? We’re done.\n\t    if (!r) return;\n\t\n\t    // Does the angle go the wrong way? Flip the direction.\n\t    if (da < 0) da = da % tau$2 + tau$2;\n\t\n\t    // Is this a complete circle? Draw two arcs to complete the circle.\n\t    if (da > tauEpsilon) {\n\t      this._ += \"A\" + r + \",\" + r + \",0,1,\" + cw + \",\" + (x - dx) + \",\" + (y - dy) + \"A\" + r + \",\" + r + \",0,1,\" + cw + \",\" + (this._x1 = x0) + \",\" + (this._y1 = y0);\n\t    }\n\t\n\t    // Is this arc non-empty? Draw an arc!\n\t    else if (da > epsilon$1) {\n\t      this._ += \"A\" + r + \",\" + r + \",0,\" + (+(da >= pi$2)) + \",\" + cw + \",\" + (this._x1 = x + r * Math.cos(a1)) + \",\" + (this._y1 = y + r * Math.sin(a1));\n\t    }\n\t  },\n\t  rect: function(x, y, w, h) {\n\t    this._ += \"M\" + (this._x0 = this._x1 = +x) + \",\" + (this._y0 = this._y1 = +y) + \"h\" + (+w) + \"v\" + (+h) + \"h\" + (-w) + \"Z\";\n\t  },\n\t  toString: function() {\n\t    return this._;\n\t  }\n\t};\n\t\n\tfunction defaultSource(d) {\n\t  return d.source;\n\t}\n\t\n\tfunction defaultTarget(d) {\n\t  return d.target;\n\t}\n\t\n\tfunction defaultRadius(d) {\n\t  return d.radius;\n\t}\n\t\n\tfunction defaultStartAngle(d) {\n\t  return d.startAngle;\n\t}\n\t\n\tfunction defaultEndAngle(d) {\n\t  return d.endAngle;\n\t}\n\t\n\tvar ribbon = function() {\n\t  var source = defaultSource,\n\t      target = defaultTarget,\n\t      radius = defaultRadius,\n\t      startAngle = defaultStartAngle,\n\t      endAngle = defaultEndAngle,\n\t      context = null;\n\t\n\t  function ribbon() {\n\t    var buffer,\n\t        argv = slice$2.call(arguments),\n\t        s = source.apply(this, argv),\n\t        t = target.apply(this, argv),\n\t        sr = +radius.apply(this, (argv[0] = s, argv)),\n\t        sa0 = startAngle.apply(this, argv) - halfPi$1,\n\t        sa1 = endAngle.apply(this, argv) - halfPi$1,\n\t        sx0 = sr * cos(sa0),\n\t        sy0 = sr * sin(sa0),\n\t        tr = +radius.apply(this, (argv[0] = t, argv)),\n\t        ta0 = startAngle.apply(this, argv) - halfPi$1,\n\t        ta1 = endAngle.apply(this, argv) - halfPi$1;\n\t\n\t    if (!context) context = buffer = path();\n\t\n\t    context.moveTo(sx0, sy0);\n\t    context.arc(0, 0, sr, sa0, sa1);\n\t    if (sa0 !== ta0 || sa1 !== ta1) { // TODO sr !== tr?\n\t      context.quadraticCurveTo(0, 0, tr * cos(ta0), tr * sin(ta0));\n\t      context.arc(0, 0, tr, ta0, ta1);\n\t    }\n\t    context.quadraticCurveTo(0, 0, sx0, sy0);\n\t    context.closePath();\n\t\n\t    if (buffer) return context = null, buffer + \"\" || null;\n\t  }\n\t\n\t  ribbon.radius = function(_) {\n\t    return arguments.length ? (radius = typeof _ === \"function\" ? _ : constant$5(+_), ribbon) : radius;\n\t  };\n\t\n\t  ribbon.startAngle = function(_) {\n\t    return arguments.length ? (startAngle = typeof _ === \"function\" ? _ : constant$5(+_), ribbon) : startAngle;\n\t  };\n\t\n\t  ribbon.endAngle = function(_) {\n\t    return arguments.length ? (endAngle = typeof _ === \"function\" ? _ : constant$5(+_), ribbon) : endAngle;\n\t  };\n\t\n\t  ribbon.source = function(_) {\n\t    return arguments.length ? (source = _, ribbon) : source;\n\t  };\n\t\n\t  ribbon.target = function(_) {\n\t    return arguments.length ? (target = _, ribbon) : target;\n\t  };\n\t\n\t  ribbon.context = function(_) {\n\t    return arguments.length ? ((context = _ == null ? null : _), ribbon) : context;\n\t  };\n\t\n\t  return ribbon;\n\t};\n\t\n\tvar prefix = \"$\";\n\t\n\tfunction Map() {}\n\t\n\tMap.prototype = map$1.prototype = {\n\t  constructor: Map,\n\t  has: function(key) {\n\t    return (prefix + key) in this;\n\t  },\n\t  get: function(key) {\n\t    return this[prefix + key];\n\t  },\n\t  set: function(key, value) {\n\t    this[prefix + key] = value;\n\t    return this;\n\t  },\n\t  remove: function(key) {\n\t    var property = prefix + key;\n\t    return property in this && delete this[property];\n\t  },\n\t  clear: function() {\n\t    for (var property in this) if (property[0] === prefix) delete this[property];\n\t  },\n\t  keys: function() {\n\t    var keys = [];\n\t    for (var property in this) if (property[0] === prefix) keys.push(property.slice(1));\n\t    return keys;\n\t  },\n\t  values: function() {\n\t    var values = [];\n\t    for (var property in this) if (property[0] === prefix) values.push(this[property]);\n\t    return values;\n\t  },\n\t  entries: function() {\n\t    var entries = [];\n\t    for (var property in this) if (property[0] === prefix) entries.push({key: property.slice(1), value: this[property]});\n\t    return entries;\n\t  },\n\t  size: function() {\n\t    var size = 0;\n\t    for (var property in this) if (property[0] === prefix) ++size;\n\t    return size;\n\t  },\n\t  empty: function() {\n\t    for (var property in this) if (property[0] === prefix) return false;\n\t    return true;\n\t  },\n\t  each: function(f) {\n\t    for (var property in this) if (property[0] === prefix) f(this[property], property.slice(1), this);\n\t  }\n\t};\n\t\n\tfunction map$1(object, f) {\n\t  var map = new Map;\n\t\n\t  // Copy constructor.\n\t  if (object instanceof Map) object.each(function(value, key) { map.set(key, value); });\n\t\n\t  // Index array by numeric index or specified key function.\n\t  else if (Array.isArray(object)) {\n\t    var i = -1,\n\t        n = object.length,\n\t        o;\n\t\n\t    if (f == null) while (++i < n) map.set(i, object[i]);\n\t    else while (++i < n) map.set(f(o = object[i], i, object), o);\n\t  }\n\t\n\t  // Convert object to map.\n\t  else if (object) for (var key in object) map.set(key, object[key]);\n\t\n\t  return map;\n\t}\n\t\n\tvar nest = function() {\n\t  var keys = [],\n\t      sortKeys = [],\n\t      sortValues,\n\t      rollup,\n\t      nest;\n\t\n\t  function apply(array, depth, createResult, setResult) {\n\t    if (depth >= keys.length) {\n\t      if (sortValues != null) array.sort(sortValues);\n\t      return rollup != null ? rollup(array) : array;\n\t    }\n\t\n\t    var i = -1,\n\t        n = array.length,\n\t        key = keys[depth++],\n\t        keyValue,\n\t        value,\n\t        valuesByKey = map$1(),\n\t        values,\n\t        result = createResult();\n\t\n\t    while (++i < n) {\n\t      if (values = valuesByKey.get(keyValue = key(value = array[i]) + \"\")) {\n\t        values.push(value);\n\t      } else {\n\t        valuesByKey.set(keyValue, [value]);\n\t      }\n\t    }\n\t\n\t    valuesByKey.each(function(values, key) {\n\t      setResult(result, key, apply(values, depth, createResult, setResult));\n\t    });\n\t\n\t    return result;\n\t  }\n\t\n\t  function entries(map, depth) {\n\t    if (++depth > keys.length) return map;\n\t    var array, sortKey = sortKeys[depth - 1];\n\t    if (rollup != null && depth >= keys.length) array = map.entries();\n\t    else array = [], map.each(function(v, k) { array.push({key: k, values: entries(v, depth)}); });\n\t    return sortKey != null ? array.sort(function(a, b) { return sortKey(a.key, b.key); }) : array;\n\t  }\n\t\n\t  return nest = {\n\t    object: function(array) { return apply(array, 0, createObject, setObject); },\n\t    map: function(array) { return apply(array, 0, createMap, setMap); },\n\t    entries: function(array) { return entries(apply(array, 0, createMap, setMap), 0); },\n\t    key: function(d) { keys.push(d); return nest; },\n\t    sortKeys: function(order) { sortKeys[keys.length - 1] = order; return nest; },\n\t    sortValues: function(order) { sortValues = order; return nest; },\n\t    rollup: function(f) { rollup = f; return nest; }\n\t  };\n\t};\n\t\n\tfunction createObject() {\n\t  return {};\n\t}\n\t\n\tfunction setObject(object, key, value) {\n\t  object[key] = value;\n\t}\n\t\n\tfunction createMap() {\n\t  return map$1();\n\t}\n\t\n\tfunction setMap(map, key, value) {\n\t  map.set(key, value);\n\t}\n\t\n\tfunction Set() {}\n\t\n\tvar proto = map$1.prototype;\n\t\n\tSet.prototype = set$2.prototype = {\n\t  constructor: Set,\n\t  has: proto.has,\n\t  add: function(value) {\n\t    value += \"\";\n\t    this[prefix + value] = value;\n\t    return this;\n\t  },\n\t  remove: proto.remove,\n\t  clear: proto.clear,\n\t  values: proto.keys,\n\t  size: proto.size,\n\t  empty: proto.empty,\n\t  each: proto.each\n\t};\n\t\n\tfunction set$2(object, f) {\n\t  var set = new Set;\n\t\n\t  // Copy constructor.\n\t  if (object instanceof Set) object.each(function(value) { set.add(value); });\n\t\n\t  // Otherwise, assume it’s an array.\n\t  else if (object) {\n\t    var i = -1, n = object.length;\n\t    if (f == null) while (++i < n) set.add(object[i]);\n\t    else while (++i < n) set.add(f(object[i], i, object));\n\t  }\n\t\n\t  return set;\n\t}\n\t\n\tvar keys = function(map) {\n\t  var keys = [];\n\t  for (var key in map) keys.push(key);\n\t  return keys;\n\t};\n\t\n\tvar values = function(map) {\n\t  var values = [];\n\t  for (var key in map) values.push(map[key]);\n\t  return values;\n\t};\n\t\n\tvar entries = function(map) {\n\t  var entries = [];\n\t  for (var key in map) entries.push({key: key, value: map[key]});\n\t  return entries;\n\t};\n\t\n\tvar EOL = {};\n\tvar EOF = {};\n\tvar QUOTE = 34;\n\tvar NEWLINE = 10;\n\tvar RETURN = 13;\n\t\n\tfunction objectConverter(columns) {\n\t  return new Function(\"d\", \"return {\" + columns.map(function(name, i) {\n\t    return JSON.stringify(name) + \": d[\" + i + \"]\";\n\t  }).join(\",\") + \"}\");\n\t}\n\t\n\tfunction customConverter(columns, f) {\n\t  var object = objectConverter(columns);\n\t  return function(row, i) {\n\t    return f(object(row), i, columns);\n\t  };\n\t}\n\t\n\t// Compute unique columns in order of discovery.\n\tfunction inferColumns(rows) {\n\t  var columnSet = Object.create(null),\n\t      columns = [];\n\t\n\t  rows.forEach(function(row) {\n\t    for (var column in row) {\n\t      if (!(column in columnSet)) {\n\t        columns.push(columnSet[column] = column);\n\t      }\n\t    }\n\t  });\n\t\n\t  return columns;\n\t}\n\t\n\tvar dsv = function(delimiter) {\n\t  var reFormat = new RegExp(\"[\\\"\" + delimiter + \"\\n\\r]\"),\n\t      DELIMITER = delimiter.charCodeAt(0);\n\t\n\t  function parse(text, f) {\n\t    var convert, columns, rows = parseRows(text, function(row, i) {\n\t      if (convert) return convert(row, i - 1);\n\t      columns = row, convert = f ? customConverter(row, f) : objectConverter(row);\n\t    });\n\t    rows.columns = columns;\n\t    return rows;\n\t  }\n\t\n\t  function parseRows(text, f) {\n\t    var rows = [], // output rows\n\t        N = text.length,\n\t        I = 0, // current character index\n\t        n = 0, // current line number\n\t        t, // current token\n\t        eof = N <= 0, // current token followed by EOF?\n\t        eol = false; // current token followed by EOL?\n\t\n\t    // Strip the trailing newline.\n\t    if (text.charCodeAt(N - 1) === NEWLINE) --N;\n\t    if (text.charCodeAt(N - 1) === RETURN) --N;\n\t\n\t    function token() {\n\t      if (eof) return EOF;\n\t      if (eol) return eol = false, EOL;\n\t\n\t      // Unescape quotes.\n\t      var i, j = I, c;\n\t      if (text.charCodeAt(j) === QUOTE) {\n\t        while (I++ < N && text.charCodeAt(I) !== QUOTE || text.charCodeAt(++I) === QUOTE);\n\t        if ((i = I) >= N) eof = true;\n\t        else if ((c = text.charCodeAt(I++)) === NEWLINE) eol = true;\n\t        else if (c === RETURN) { eol = true; if (text.charCodeAt(I) === NEWLINE) ++I; }\n\t        return text.slice(j + 1, i - 1).replace(/\"\"/g, \"\\\"\");\n\t      }\n\t\n\t      // Find next delimiter or newline.\n\t      while (I < N) {\n\t        if ((c = text.charCodeAt(i = I++)) === NEWLINE) eol = true;\n\t        else if (c === RETURN) { eol = true; if (text.charCodeAt(I) === NEWLINE) ++I; }\n\t        else if (c !== DELIMITER) continue;\n\t        return text.slice(j, i);\n\t      }\n\t\n\t      // Return last token before EOF.\n\t      return eof = true, text.slice(j, N);\n\t    }\n\t\n\t    while ((t = token()) !== EOF) {\n\t      var row = [];\n\t      while (t !== EOL && t !== EOF) row.push(t), t = token();\n\t      if (f && (row = f(row, n++)) == null) continue;\n\t      rows.push(row);\n\t    }\n\t\n\t    return rows;\n\t  }\n\t\n\t  function format(rows, columns) {\n\t    if (columns == null) columns = inferColumns(rows);\n\t    return [columns.map(formatValue).join(delimiter)].concat(rows.map(function(row) {\n\t      return columns.map(function(column) {\n\t        return formatValue(row[column]);\n\t      }).join(delimiter);\n\t    })).join(\"\\n\");\n\t  }\n\t\n\t  function formatRows(rows) {\n\t    return rows.map(formatRow).join(\"\\n\");\n\t  }\n\t\n\t  function formatRow(row) {\n\t    return row.map(formatValue).join(delimiter);\n\t  }\n\t\n\t  function formatValue(text) {\n\t    return text == null ? \"\"\n\t        : reFormat.test(text += \"\") ? \"\\\"\" + text.replace(/\"/g, \"\\\"\\\"\") + \"\\\"\"\n\t        : text;\n\t  }\n\t\n\t  return {\n\t    parse: parse,\n\t    parseRows: parseRows,\n\t    format: format,\n\t    formatRows: formatRows\n\t  };\n\t};\n\t\n\tvar csv = dsv(\",\");\n\t\n\tvar csvParse = csv.parse;\n\tvar csvParseRows = csv.parseRows;\n\tvar csvFormat = csv.format;\n\tvar csvFormatRows = csv.formatRows;\n\t\n\tvar tsv = dsv(\"\\t\");\n\t\n\tvar tsvParse = tsv.parse;\n\tvar tsvParseRows = tsv.parseRows;\n\tvar tsvFormat = tsv.format;\n\tvar tsvFormatRows = tsv.formatRows;\n\t\n\tvar center$1 = function(x, y) {\n\t  var nodes;\n\t\n\t  if (x == null) x = 0;\n\t  if (y == null) y = 0;\n\t\n\t  function force() {\n\t    var i,\n\t        n = nodes.length,\n\t        node,\n\t        sx = 0,\n\t        sy = 0;\n\t\n\t    for (i = 0; i < n; ++i) {\n\t      node = nodes[i], sx += node.x, sy += node.y;\n\t    }\n\t\n\t    for (sx = sx / n - x, sy = sy / n - y, i = 0; i < n; ++i) {\n\t      node = nodes[i], node.x -= sx, node.y -= sy;\n\t    }\n\t  }\n\t\n\t  force.initialize = function(_) {\n\t    nodes = _;\n\t  };\n\t\n\t  force.x = function(_) {\n\t    return arguments.length ? (x = +_, force) : x;\n\t  };\n\t\n\t  force.y = function(_) {\n\t    return arguments.length ? (y = +_, force) : y;\n\t  };\n\t\n\t  return force;\n\t};\n\t\n\tvar constant$6 = function(x) {\n\t  return function() {\n\t    return x;\n\t  };\n\t};\n\t\n\tvar jiggle = function() {\n\t  return (Math.random() - 0.5) * 1e-6;\n\t};\n\t\n\tvar tree_add = function(d) {\n\t  var x = +this._x.call(null, d),\n\t      y = +this._y.call(null, d);\n\t  return add(this.cover(x, y), x, y, d);\n\t};\n\t\n\tfunction add(tree, x, y, d) {\n\t  if (isNaN(x) || isNaN(y)) return tree; // ignore invalid points\n\t\n\t  var parent,\n\t      node = tree._root,\n\t      leaf = {data: d},\n\t      x0 = tree._x0,\n\t      y0 = tree._y0,\n\t      x1 = tree._x1,\n\t      y1 = tree._y1,\n\t      xm,\n\t      ym,\n\t      xp,\n\t      yp,\n\t      right,\n\t      bottom,\n\t      i,\n\t      j;\n\t\n\t  // If the tree is empty, initialize the root as a leaf.\n\t  if (!node) return tree._root = leaf, tree;\n\t\n\t  // Find the existing leaf for the new point, or add it.\n\t  while (node.length) {\n\t    if (right = x >= (xm = (x0 + x1) / 2)) x0 = xm; else x1 = xm;\n\t    if (bottom = y >= (ym = (y0 + y1) / 2)) y0 = ym; else y1 = ym;\n\t    if (parent = node, !(node = node[i = bottom << 1 | right])) return parent[i] = leaf, tree;\n\t  }\n\t\n\t  // Is the new point is exactly coincident with the existing point?\n\t  xp = +tree._x.call(null, node.data);\n\t  yp = +tree._y.call(null, node.data);\n\t  if (x === xp && y === yp) return leaf.next = node, parent ? parent[i] = leaf : tree._root = leaf, tree;\n\t\n\t  // Otherwise, split the leaf node until the old and new point are separated.\n\t  do {\n\t    parent = parent ? parent[i] = new Array(4) : tree._root = new Array(4);\n\t    if (right = x >= (xm = (x0 + x1) / 2)) x0 = xm; else x1 = xm;\n\t    if (bottom = y >= (ym = (y0 + y1) / 2)) y0 = ym; else y1 = ym;\n\t  } while ((i = bottom << 1 | right) === (j = (yp >= ym) << 1 | (xp >= xm)));\n\t  return parent[j] = node, parent[i] = leaf, tree;\n\t}\n\t\n\tfunction addAll(data) {\n\t  var d, i, n = data.length,\n\t      x,\n\t      y,\n\t      xz = new Array(n),\n\t      yz = new Array(n),\n\t      x0 = Infinity,\n\t      y0 = Infinity,\n\t      x1 = -Infinity,\n\t      y1 = -Infinity;\n\t\n\t  // Compute the points and their extent.\n\t  for (i = 0; i < n; ++i) {\n\t    if (isNaN(x = +this._x.call(null, d = data[i])) || isNaN(y = +this._y.call(null, d))) continue;\n\t    xz[i] = x;\n\t    yz[i] = y;\n\t    if (x < x0) x0 = x;\n\t    if (x > x1) x1 = x;\n\t    if (y < y0) y0 = y;\n\t    if (y > y1) y1 = y;\n\t  }\n\t\n\t  // If there were no (valid) points, inherit the existing extent.\n\t  if (x1 < x0) x0 = this._x0, x1 = this._x1;\n\t  if (y1 < y0) y0 = this._y0, y1 = this._y1;\n\t\n\t  // Expand the tree to cover the new points.\n\t  this.cover(x0, y0).cover(x1, y1);\n\t\n\t  // Add the new points.\n\t  for (i = 0; i < n; ++i) {\n\t    add(this, xz[i], yz[i], data[i]);\n\t  }\n\t\n\t  return this;\n\t}\n\t\n\tvar tree_cover = function(x, y) {\n\t  if (isNaN(x = +x) || isNaN(y = +y)) return this; // ignore invalid points\n\t\n\t  var x0 = this._x0,\n\t      y0 = this._y0,\n\t      x1 = this._x1,\n\t      y1 = this._y1;\n\t\n\t  // If the quadtree has no extent, initialize them.\n\t  // Integer extent are necessary so that if we later double the extent,\n\t  // the existing quadrant boundaries don’t change due to floating point error!\n\t  if (isNaN(x0)) {\n\t    x1 = (x0 = Math.floor(x)) + 1;\n\t    y1 = (y0 = Math.floor(y)) + 1;\n\t  }\n\t\n\t  // Otherwise, double repeatedly to cover.\n\t  else if (x0 > x || x > x1 || y0 > y || y > y1) {\n\t    var z = x1 - x0,\n\t        node = this._root,\n\t        parent,\n\t        i;\n\t\n\t    switch (i = (y < (y0 + y1) / 2) << 1 | (x < (x0 + x1) / 2)) {\n\t      case 0: {\n\t        do parent = new Array(4), parent[i] = node, node = parent;\n\t        while (z *= 2, x1 = x0 + z, y1 = y0 + z, x > x1 || y > y1);\n\t        break;\n\t      }\n\t      case 1: {\n\t        do parent = new Array(4), parent[i] = node, node = parent;\n\t        while (z *= 2, x0 = x1 - z, y1 = y0 + z, x0 > x || y > y1);\n\t        break;\n\t      }\n\t      case 2: {\n\t        do parent = new Array(4), parent[i] = node, node = parent;\n\t        while (z *= 2, x1 = x0 + z, y0 = y1 - z, x > x1 || y0 > y);\n\t        break;\n\t      }\n\t      case 3: {\n\t        do parent = new Array(4), parent[i] = node, node = parent;\n\t        while (z *= 2, x0 = x1 - z, y0 = y1 - z, x0 > x || y0 > y);\n\t        break;\n\t      }\n\t    }\n\t\n\t    if (this._root && this._root.length) this._root = node;\n\t  }\n\t\n\t  // If the quadtree covers the point already, just return.\n\t  else return this;\n\t\n\t  this._x0 = x0;\n\t  this._y0 = y0;\n\t  this._x1 = x1;\n\t  this._y1 = y1;\n\t  return this;\n\t};\n\t\n\tvar tree_data = function() {\n\t  var data = [];\n\t  this.visit(function(node) {\n\t    if (!node.length) do data.push(node.data); while (node = node.next)\n\t  });\n\t  return data;\n\t};\n\t\n\tvar tree_extent = function(_) {\n\t  return arguments.length\n\t      ? this.cover(+_[0][0], +_[0][1]).cover(+_[1][0], +_[1][1])\n\t      : isNaN(this._x0) ? undefined : [[this._x0, this._y0], [this._x1, this._y1]];\n\t};\n\t\n\tvar Quad = function(node, x0, y0, x1, y1) {\n\t  this.node = node;\n\t  this.x0 = x0;\n\t  this.y0 = y0;\n\t  this.x1 = x1;\n\t  this.y1 = y1;\n\t};\n\t\n\tvar tree_find = function(x, y, radius) {\n\t  var data,\n\t      x0 = this._x0,\n\t      y0 = this._y0,\n\t      x1,\n\t      y1,\n\t      x2,\n\t      y2,\n\t      x3 = this._x1,\n\t      y3 = this._y1,\n\t      quads = [],\n\t      node = this._root,\n\t      q,\n\t      i;\n\t\n\t  if (node) quads.push(new Quad(node, x0, y0, x3, y3));\n\t  if (radius == null) radius = Infinity;\n\t  else {\n\t    x0 = x - radius, y0 = y - radius;\n\t    x3 = x + radius, y3 = y + radius;\n\t    radius *= radius;\n\t  }\n\t\n\t  while (q = quads.pop()) {\n\t\n\t    // Stop searching if this quadrant can’t contain a closer node.\n\t    if (!(node = q.node)\n\t        || (x1 = q.x0) > x3\n\t        || (y1 = q.y0) > y3\n\t        || (x2 = q.x1) < x0\n\t        || (y2 = q.y1) < y0) continue;\n\t\n\t    // Bisect the current quadrant.\n\t    if (node.length) {\n\t      var xm = (x1 + x2) / 2,\n\t          ym = (y1 + y2) / 2;\n\t\n\t      quads.push(\n\t        new Quad(node[3], xm, ym, x2, y2),\n\t        new Quad(node[2], x1, ym, xm, y2),\n\t        new Quad(node[1], xm, y1, x2, ym),\n\t        new Quad(node[0], x1, y1, xm, ym)\n\t      );\n\t\n\t      // Visit the closest quadrant first.\n\t      if (i = (y >= ym) << 1 | (x >= xm)) {\n\t        q = quads[quads.length - 1];\n\t        quads[quads.length - 1] = quads[quads.length - 1 - i];\n\t        quads[quads.length - 1 - i] = q;\n\t      }\n\t    }\n\t\n\t    // Visit this point. (Visiting coincident points isn’t necessary!)\n\t    else {\n\t      var dx = x - +this._x.call(null, node.data),\n\t          dy = y - +this._y.call(null, node.data),\n\t          d2 = dx * dx + dy * dy;\n\t      if (d2 < radius) {\n\t        var d = Math.sqrt(radius = d2);\n\t        x0 = x - d, y0 = y - d;\n\t        x3 = x + d, y3 = y + d;\n\t        data = node.data;\n\t      }\n\t    }\n\t  }\n\t\n\t  return data;\n\t};\n\t\n\tvar tree_remove = function(d) {\n\t  if (isNaN(x = +this._x.call(null, d)) || isNaN(y = +this._y.call(null, d))) return this; // ignore invalid points\n\t\n\t  var parent,\n\t      node = this._root,\n\t      retainer,\n\t      previous,\n\t      next,\n\t      x0 = this._x0,\n\t      y0 = this._y0,\n\t      x1 = this._x1,\n\t      y1 = this._y1,\n\t      x,\n\t      y,\n\t      xm,\n\t      ym,\n\t      right,\n\t      bottom,\n\t      i,\n\t      j;\n\t\n\t  // If the tree is empty, initialize the root as a leaf.\n\t  if (!node) return this;\n\t\n\t  // Find the leaf node for the point.\n\t  // While descending, also retain the deepest parent with a non-removed sibling.\n\t  if (node.length) while (true) {\n\t    if (right = x >= (xm = (x0 + x1) / 2)) x0 = xm; else x1 = xm;\n\t    if (bottom = y >= (ym = (y0 + y1) / 2)) y0 = ym; else y1 = ym;\n\t    if (!(parent = node, node = node[i = bottom << 1 | right])) return this;\n\t    if (!node.length) break;\n\t    if (parent[(i + 1) & 3] || parent[(i + 2) & 3] || parent[(i + 3) & 3]) retainer = parent, j = i;\n\t  }\n\t\n\t  // Find the point to remove.\n\t  while (node.data !== d) if (!(previous = node, node = node.next)) return this;\n\t  if (next = node.next) delete node.next;\n\t\n\t  // If there are multiple coincident points, remove just the point.\n\t  if (previous) return (next ? previous.next = next : delete previous.next), this;\n\t\n\t  // If this is the root point, remove it.\n\t  if (!parent) return this._root = next, this;\n\t\n\t  // Remove this leaf.\n\t  next ? parent[i] = next : delete parent[i];\n\t\n\t  // If the parent now contains exactly one leaf, collapse superfluous parents.\n\t  if ((node = parent[0] || parent[1] || parent[2] || parent[3])\n\t      && node === (parent[3] || parent[2] || parent[1] || parent[0])\n\t      && !node.length) {\n\t    if (retainer) retainer[j] = node;\n\t    else this._root = node;\n\t  }\n\t\n\t  return this;\n\t};\n\t\n\tfunction removeAll(data) {\n\t  for (var i = 0, n = data.length; i < n; ++i) this.remove(data[i]);\n\t  return this;\n\t}\n\t\n\tvar tree_root = function() {\n\t  return this._root;\n\t};\n\t\n\tvar tree_size = function() {\n\t  var size = 0;\n\t  this.visit(function(node) {\n\t    if (!node.length) do ++size; while (node = node.next)\n\t  });\n\t  return size;\n\t};\n\t\n\tvar tree_visit = function(callback) {\n\t  var quads = [], q, node = this._root, child, x0, y0, x1, y1;\n\t  if (node) quads.push(new Quad(node, this._x0, this._y0, this._x1, this._y1));\n\t  while (q = quads.pop()) {\n\t    if (!callback(node = q.node, x0 = q.x0, y0 = q.y0, x1 = q.x1, y1 = q.y1) && node.length) {\n\t      var xm = (x0 + x1) / 2, ym = (y0 + y1) / 2;\n\t      if (child = node[3]) quads.push(new Quad(child, xm, ym, x1, y1));\n\t      if (child = node[2]) quads.push(new Quad(child, x0, ym, xm, y1));\n\t      if (child = node[1]) quads.push(new Quad(child, xm, y0, x1, ym));\n\t      if (child = node[0]) quads.push(new Quad(child, x0, y0, xm, ym));\n\t    }\n\t  }\n\t  return this;\n\t};\n\t\n\tvar tree_visitAfter = function(callback) {\n\t  var quads = [], next = [], q;\n\t  if (this._root) quads.push(new Quad(this._root, this._x0, this._y0, this._x1, this._y1));\n\t  while (q = quads.pop()) {\n\t    var node = q.node;\n\t    if (node.length) {\n\t      var child, x0 = q.x0, y0 = q.y0, x1 = q.x1, y1 = q.y1, xm = (x0 + x1) / 2, ym = (y0 + y1) / 2;\n\t      if (child = node[0]) quads.push(new Quad(child, x0, y0, xm, ym));\n\t      if (child = node[1]) quads.push(new Quad(child, xm, y0, x1, ym));\n\t      if (child = node[2]) quads.push(new Quad(child, x0, ym, xm, y1));\n\t      if (child = node[3]) quads.push(new Quad(child, xm, ym, x1, y1));\n\t    }\n\t    next.push(q);\n\t  }\n\t  while (q = next.pop()) {\n\t    callback(q.node, q.x0, q.y0, q.x1, q.y1);\n\t  }\n\t  return this;\n\t};\n\t\n\tfunction defaultX(d) {\n\t  return d[0];\n\t}\n\t\n\tvar tree_x = function(_) {\n\t  return arguments.length ? (this._x = _, this) : this._x;\n\t};\n\t\n\tfunction defaultY(d) {\n\t  return d[1];\n\t}\n\t\n\tvar tree_y = function(_) {\n\t  return arguments.length ? (this._y = _, this) : this._y;\n\t};\n\t\n\tfunction quadtree(nodes, x, y) {\n\t  var tree = new Quadtree(x == null ? defaultX : x, y == null ? defaultY : y, NaN, NaN, NaN, NaN);\n\t  return nodes == null ? tree : tree.addAll(nodes);\n\t}\n\t\n\tfunction Quadtree(x, y, x0, y0, x1, y1) {\n\t  this._x = x;\n\t  this._y = y;\n\t  this._x0 = x0;\n\t  this._y0 = y0;\n\t  this._x1 = x1;\n\t  this._y1 = y1;\n\t  this._root = undefined;\n\t}\n\t\n\tfunction leaf_copy(leaf) {\n\t  var copy = {data: leaf.data}, next = copy;\n\t  while (leaf = leaf.next) next = next.next = {data: leaf.data};\n\t  return copy;\n\t}\n\t\n\tvar treeProto = quadtree.prototype = Quadtree.prototype;\n\t\n\ttreeProto.copy = function() {\n\t  var copy = new Quadtree(this._x, this._y, this._x0, this._y0, this._x1, this._y1),\n\t      node = this._root,\n\t      nodes,\n\t      child;\n\t\n\t  if (!node) return copy;\n\t\n\t  if (!node.length) return copy._root = leaf_copy(node), copy;\n\t\n\t  nodes = [{source: node, target: copy._root = new Array(4)}];\n\t  while (node = nodes.pop()) {\n\t    for (var i = 0; i < 4; ++i) {\n\t      if (child = node.source[i]) {\n\t        if (child.length) nodes.push({source: child, target: node.target[i] = new Array(4)});\n\t        else node.target[i] = leaf_copy(child);\n\t      }\n\t    }\n\t  }\n\t\n\t  return copy;\n\t};\n\t\n\ttreeProto.add = tree_add;\n\ttreeProto.addAll = addAll;\n\ttreeProto.cover = tree_cover;\n\ttreeProto.data = tree_data;\n\ttreeProto.extent = tree_extent;\n\ttreeProto.find = tree_find;\n\ttreeProto.remove = tree_remove;\n\ttreeProto.removeAll = removeAll;\n\ttreeProto.root = tree_root;\n\ttreeProto.size = tree_size;\n\ttreeProto.visit = tree_visit;\n\ttreeProto.visitAfter = tree_visitAfter;\n\ttreeProto.x = tree_x;\n\ttreeProto.y = tree_y;\n\t\n\tfunction x(d) {\n\t  return d.x + d.vx;\n\t}\n\t\n\tfunction y(d) {\n\t  return d.y + d.vy;\n\t}\n\t\n\tvar collide = function(radius) {\n\t  var nodes,\n\t      radii,\n\t      strength = 1,\n\t      iterations = 1;\n\t\n\t  if (typeof radius !== \"function\") radius = constant$6(radius == null ? 1 : +radius);\n\t\n\t  function force() {\n\t    var i, n = nodes.length,\n\t        tree,\n\t        node,\n\t        xi,\n\t        yi,\n\t        ri,\n\t        ri2;\n\t\n\t    for (var k = 0; k < iterations; ++k) {\n\t      tree = quadtree(nodes, x, y).visitAfter(prepare);\n\t      for (i = 0; i < n; ++i) {\n\t        node = nodes[i];\n\t        ri = radii[node.index], ri2 = ri * ri;\n\t        xi = node.x + node.vx;\n\t        yi = node.y + node.vy;\n\t        tree.visit(apply);\n\t      }\n\t    }\n\t\n\t    function apply(quad, x0, y0, x1, y1) {\n\t      var data = quad.data, rj = quad.r, r = ri + rj;\n\t      if (data) {\n\t        if (data.index > node.index) {\n\t          var x = xi - data.x - data.vx,\n\t              y = yi - data.y - data.vy,\n\t              l = x * x + y * y;\n\t          if (l < r * r) {\n\t            if (x === 0) x = jiggle(), l += x * x;\n\t            if (y === 0) y = jiggle(), l += y * y;\n\t            l = (r - (l = Math.sqrt(l))) / l * strength;\n\t            node.vx += (x *= l) * (r = (rj *= rj) / (ri2 + rj));\n\t            node.vy += (y *= l) * r;\n\t            data.vx -= x * (r = 1 - r);\n\t            data.vy -= y * r;\n\t          }\n\t        }\n\t        return;\n\t      }\n\t      return x0 > xi + r || x1 < xi - r || y0 > yi + r || y1 < yi - r;\n\t    }\n\t  }\n\t\n\t  function prepare(quad) {\n\t    if (quad.data) return quad.r = radii[quad.data.index];\n\t    for (var i = quad.r = 0; i < 4; ++i) {\n\t      if (quad[i] && quad[i].r > quad.r) {\n\t        quad.r = quad[i].r;\n\t      }\n\t    }\n\t  }\n\t\n\t  function initialize() {\n\t    if (!nodes) return;\n\t    var i, n = nodes.length, node;\n\t    radii = new Array(n);\n\t    for (i = 0; i < n; ++i) node = nodes[i], radii[node.index] = +radius(node, i, nodes);\n\t  }\n\t\n\t  force.initialize = function(_) {\n\t    nodes = _;\n\t    initialize();\n\t  };\n\t\n\t  force.iterations = function(_) {\n\t    return arguments.length ? (iterations = +_, force) : iterations;\n\t  };\n\t\n\t  force.strength = function(_) {\n\t    return arguments.length ? (strength = +_, force) : strength;\n\t  };\n\t\n\t  force.radius = function(_) {\n\t    return arguments.length ? (radius = typeof _ === \"function\" ? _ : constant$6(+_), initialize(), force) : radius;\n\t  };\n\t\n\t  return force;\n\t};\n\t\n\tfunction index(d) {\n\t  return d.index;\n\t}\n\t\n\tfunction find(nodeById, nodeId) {\n\t  var node = nodeById.get(nodeId);\n\t  if (!node) throw new Error(\"missing: \" + nodeId);\n\t  return node;\n\t}\n\t\n\tvar link = function(links) {\n\t  var id = index,\n\t      strength = defaultStrength,\n\t      strengths,\n\t      distance = constant$6(30),\n\t      distances,\n\t      nodes,\n\t      count,\n\t      bias,\n\t      iterations = 1;\n\t\n\t  if (links == null) links = [];\n\t\n\t  function defaultStrength(link) {\n\t    return 1 / Math.min(count[link.source.index], count[link.target.index]);\n\t  }\n\t\n\t  function force(alpha) {\n\t    for (var k = 0, n = links.length; k < iterations; ++k) {\n\t      for (var i = 0, link, source, target, x, y, l, b; i < n; ++i) {\n\t        link = links[i], source = link.source, target = link.target;\n\t        x = target.x + target.vx - source.x - source.vx || jiggle();\n\t        y = target.y + target.vy - source.y - source.vy || jiggle();\n\t        l = Math.sqrt(x * x + y * y);\n\t        l = (l - distances[i]) / l * alpha * strengths[i];\n\t        x *= l, y *= l;\n\t        target.vx -= x * (b = bias[i]);\n\t        target.vy -= y * b;\n\t        source.vx += x * (b = 1 - b);\n\t        source.vy += y * b;\n\t      }\n\t    }\n\t  }\n\t\n\t  function initialize() {\n\t    if (!nodes) return;\n\t\n\t    var i,\n\t        n = nodes.length,\n\t        m = links.length,\n\t        nodeById = map$1(nodes, id),\n\t        link;\n\t\n\t    for (i = 0, count = new Array(n); i < m; ++i) {\n\t      link = links[i], link.index = i;\n\t      if (typeof link.source !== \"object\") link.source = find(nodeById, link.source);\n\t      if (typeof link.target !== \"object\") link.target = find(nodeById, link.target);\n\t      count[link.source.index] = (count[link.source.index] || 0) + 1;\n\t      count[link.target.index] = (count[link.target.index] || 0) + 1;\n\t    }\n\t\n\t    for (i = 0, bias = new Array(m); i < m; ++i) {\n\t      link = links[i], bias[i] = count[link.source.index] / (count[link.source.index] + count[link.target.index]);\n\t    }\n\t\n\t    strengths = new Array(m), initializeStrength();\n\t    distances = new Array(m), initializeDistance();\n\t  }\n\t\n\t  function initializeStrength() {\n\t    if (!nodes) return;\n\t\n\t    for (var i = 0, n = links.length; i < n; ++i) {\n\t      strengths[i] = +strength(links[i], i, links);\n\t    }\n\t  }\n\t\n\t  function initializeDistance() {\n\t    if (!nodes) return;\n\t\n\t    for (var i = 0, n = links.length; i < n; ++i) {\n\t      distances[i] = +distance(links[i], i, links);\n\t    }\n\t  }\n\t\n\t  force.initialize = function(_) {\n\t    nodes = _;\n\t    initialize();\n\t  };\n\t\n\t  force.links = function(_) {\n\t    return arguments.length ? (links = _, initialize(), force) : links;\n\t  };\n\t\n\t  force.id = function(_) {\n\t    return arguments.length ? (id = _, force) : id;\n\t  };\n\t\n\t  force.iterations = function(_) {\n\t    return arguments.length ? (iterations = +_, force) : iterations;\n\t  };\n\t\n\t  force.strength = function(_) {\n\t    return arguments.length ? (strength = typeof _ === \"function\" ? _ : constant$6(+_), initializeStrength(), force) : strength;\n\t  };\n\t\n\t  force.distance = function(_) {\n\t    return arguments.length ? (distance = typeof _ === \"function\" ? _ : constant$6(+_), initializeDistance(), force) : distance;\n\t  };\n\t\n\t  return force;\n\t};\n\t\n\tfunction x$1(d) {\n\t  return d.x;\n\t}\n\t\n\tfunction y$1(d) {\n\t  return d.y;\n\t}\n\t\n\tvar initialRadius = 10;\n\tvar initialAngle = Math.PI * (3 - Math.sqrt(5));\n\t\n\tvar simulation = function(nodes) {\n\t  var simulation,\n\t      alpha = 1,\n\t      alphaMin = 0.001,\n\t      alphaDecay = 1 - Math.pow(alphaMin, 1 / 300),\n\t      alphaTarget = 0,\n\t      velocityDecay = 0.6,\n\t      forces = map$1(),\n\t      stepper = timer(step),\n\t      event = dispatch(\"tick\", \"end\");\n\t\n\t  if (nodes == null) nodes = [];\n\t\n\t  function step() {\n\t    tick();\n\t    event.call(\"tick\", simulation);\n\t    if (alpha < alphaMin) {\n\t      stepper.stop();\n\t      event.call(\"end\", simulation);\n\t    }\n\t  }\n\t\n\t  function tick() {\n\t    var i, n = nodes.length, node;\n\t\n\t    alpha += (alphaTarget - alpha) * alphaDecay;\n\t\n\t    forces.each(function(force) {\n\t      force(alpha);\n\t    });\n\t\n\t    for (i = 0; i < n; ++i) {\n\t      node = nodes[i];\n\t      if (node.fx == null) node.x += node.vx *= velocityDecay;\n\t      else node.x = node.fx, node.vx = 0;\n\t      if (node.fy == null) node.y += node.vy *= velocityDecay;\n\t      else node.y = node.fy, node.vy = 0;\n\t    }\n\t  }\n\t\n\t  function initializeNodes() {\n\t    for (var i = 0, n = nodes.length, node; i < n; ++i) {\n\t      node = nodes[i], node.index = i;\n\t      if (isNaN(node.x) || isNaN(node.y)) {\n\t        var radius = initialRadius * Math.sqrt(i), angle = i * initialAngle;\n\t        node.x = radius * Math.cos(angle);\n\t        node.y = radius * Math.sin(angle);\n\t      }\n\t      if (isNaN(node.vx) || isNaN(node.vy)) {\n\t        node.vx = node.vy = 0;\n\t      }\n\t    }\n\t  }\n\t\n\t  function initializeForce(force) {\n\t    if (force.initialize) force.initialize(nodes);\n\t    return force;\n\t  }\n\t\n\t  initializeNodes();\n\t\n\t  return simulation = {\n\t    tick: tick,\n\t\n\t    restart: function() {\n\t      return stepper.restart(step), simulation;\n\t    },\n\t\n\t    stop: function() {\n\t      return stepper.stop(), simulation;\n\t    },\n\t\n\t    nodes: function(_) {\n\t      return arguments.length ? (nodes = _, initializeNodes(), forces.each(initializeForce), simulation) : nodes;\n\t    },\n\t\n\t    alpha: function(_) {\n\t      return arguments.length ? (alpha = +_, simulation) : alpha;\n\t    },\n\t\n\t    alphaMin: function(_) {\n\t      return arguments.length ? (alphaMin = +_, simulation) : alphaMin;\n\t    },\n\t\n\t    alphaDecay: function(_) {\n\t      return arguments.length ? (alphaDecay = +_, simulation) : +alphaDecay;\n\t    },\n\t\n\t    alphaTarget: function(_) {\n\t      return arguments.length ? (alphaTarget = +_, simulation) : alphaTarget;\n\t    },\n\t\n\t    velocityDecay: function(_) {\n\t      return arguments.length ? (velocityDecay = 1 - _, simulation) : 1 - velocityDecay;\n\t    },\n\t\n\t    force: function(name, _) {\n\t      return arguments.length > 1 ? ((_ == null ? forces.remove(name) : forces.set(name, initializeForce(_))), simulation) : forces.get(name);\n\t    },\n\t\n\t    find: function(x, y, radius) {\n\t      var i = 0,\n\t          n = nodes.length,\n\t          dx,\n\t          dy,\n\t          d2,\n\t          node,\n\t          closest;\n\t\n\t      if (radius == null) radius = Infinity;\n\t      else radius *= radius;\n\t\n\t      for (i = 0; i < n; ++i) {\n\t        node = nodes[i];\n\t        dx = x - node.x;\n\t        dy = y - node.y;\n\t        d2 = dx * dx + dy * dy;\n\t        if (d2 < radius) closest = node, radius = d2;\n\t      }\n\t\n\t      return closest;\n\t    },\n\t\n\t    on: function(name, _) {\n\t      return arguments.length > 1 ? (event.on(name, _), simulation) : event.on(name);\n\t    }\n\t  };\n\t};\n\t\n\tvar manyBody = function() {\n\t  var nodes,\n\t      node,\n\t      alpha,\n\t      strength = constant$6(-30),\n\t      strengths,\n\t      distanceMin2 = 1,\n\t      distanceMax2 = Infinity,\n\t      theta2 = 0.81;\n\t\n\t  function force(_) {\n\t    var i, n = nodes.length, tree = quadtree(nodes, x$1, y$1).visitAfter(accumulate);\n\t    for (alpha = _, i = 0; i < n; ++i) node = nodes[i], tree.visit(apply);\n\t  }\n\t\n\t  function initialize() {\n\t    if (!nodes) return;\n\t    var i, n = nodes.length, node;\n\t    strengths = new Array(n);\n\t    for (i = 0; i < n; ++i) node = nodes[i], strengths[node.index] = +strength(node, i, nodes);\n\t  }\n\t\n\t  function accumulate(quad) {\n\t    var strength = 0, q, c, weight = 0, x, y, i;\n\t\n\t    // For internal nodes, accumulate forces from child quadrants.\n\t    if (quad.length) {\n\t      for (x = y = i = 0; i < 4; ++i) {\n\t        if ((q = quad[i]) && (c = Math.abs(q.value))) {\n\t          strength += q.value, weight += c, x += c * q.x, y += c * q.y;\n\t        }\n\t      }\n\t      quad.x = x / weight;\n\t      quad.y = y / weight;\n\t    }\n\t\n\t    // For leaf nodes, accumulate forces from coincident quadrants.\n\t    else {\n\t      q = quad;\n\t      q.x = q.data.x;\n\t      q.y = q.data.y;\n\t      do strength += strengths[q.data.index];\n\t      while (q = q.next);\n\t    }\n\t\n\t    quad.value = strength;\n\t  }\n\t\n\t  function apply(quad, x1, _, x2) {\n\t    if (!quad.value) return true;\n\t\n\t    var x = quad.x - node.x,\n\t        y = quad.y - node.y,\n\t        w = x2 - x1,\n\t        l = x * x + y * y;\n\t\n\t    // Apply the Barnes-Hut approximation if possible.\n\t    // Limit forces for very close nodes; randomize direction if coincident.\n\t    if (w * w / theta2 < l) {\n\t      if (l < distanceMax2) {\n\t        if (x === 0) x = jiggle(), l += x * x;\n\t        if (y === 0) y = jiggle(), l += y * y;\n\t        if (l < distanceMin2) l = Math.sqrt(distanceMin2 * l);\n\t        node.vx += x * quad.value * alpha / l;\n\t        node.vy += y * quad.value * alpha / l;\n\t      }\n\t      return true;\n\t    }\n\t\n\t    // Otherwise, process points directly.\n\t    else if (quad.length || l >= distanceMax2) return;\n\t\n\t    // Limit forces for very close nodes; randomize direction if coincident.\n\t    if (quad.data !== node || quad.next) {\n\t      if (x === 0) x = jiggle(), l += x * x;\n\t      if (y === 0) y = jiggle(), l += y * y;\n\t      if (l < distanceMin2) l = Math.sqrt(distanceMin2 * l);\n\t    }\n\t\n\t    do if (quad.data !== node) {\n\t      w = strengths[quad.data.index] * alpha / l;\n\t      node.vx += x * w;\n\t      node.vy += y * w;\n\t    } while (quad = quad.next);\n\t  }\n\t\n\t  force.initialize = function(_) {\n\t    nodes = _;\n\t    initialize();\n\t  };\n\t\n\t  force.strength = function(_) {\n\t    return arguments.length ? (strength = typeof _ === \"function\" ? _ : constant$6(+_), initialize(), force) : strength;\n\t  };\n\t\n\t  force.distanceMin = function(_) {\n\t    return arguments.length ? (distanceMin2 = _ * _, force) : Math.sqrt(distanceMin2);\n\t  };\n\t\n\t  force.distanceMax = function(_) {\n\t    return arguments.length ? (distanceMax2 = _ * _, force) : Math.sqrt(distanceMax2);\n\t  };\n\t\n\t  force.theta = function(_) {\n\t    return arguments.length ? (theta2 = _ * _, force) : Math.sqrt(theta2);\n\t  };\n\t\n\t  return force;\n\t};\n\t\n\tvar radial = function(radius, x, y) {\n\t  var nodes,\n\t      strength = constant$6(0.1),\n\t      strengths,\n\t      radiuses;\n\t\n\t  if (typeof radius !== \"function\") radius = constant$6(+radius);\n\t  if (x == null) x = 0;\n\t  if (y == null) y = 0;\n\t\n\t  function force(alpha) {\n\t    for (var i = 0, n = nodes.length; i < n; ++i) {\n\t      var node = nodes[i],\n\t          dx = node.x - x || 1e-6,\n\t          dy = node.y - y || 1e-6,\n\t          r = Math.sqrt(dx * dx + dy * dy),\n\t          k = (radiuses[i] - r) * strengths[i] * alpha / r;\n\t      node.vx += dx * k;\n\t      node.vy += dy * k;\n\t    }\n\t  }\n\t\n\t  function initialize() {\n\t    if (!nodes) return;\n\t    var i, n = nodes.length;\n\t    strengths = new Array(n);\n\t    radiuses = new Array(n);\n\t    for (i = 0; i < n; ++i) {\n\t      radiuses[i] = +radius(nodes[i], i, nodes);\n\t      strengths[i] = isNaN(radiuses[i]) ? 0 : +strength(nodes[i], i, nodes);\n\t    }\n\t  }\n\t\n\t  force.initialize = function(_) {\n\t    nodes = _, initialize();\n\t  };\n\t\n\t  force.strength = function(_) {\n\t    return arguments.length ? (strength = typeof _ === \"function\" ? _ : constant$6(+_), initialize(), force) : strength;\n\t  };\n\t\n\t  force.radius = function(_) {\n\t    return arguments.length ? (radius = typeof _ === \"function\" ? _ : constant$6(+_), initialize(), force) : radius;\n\t  };\n\t\n\t  force.x = function(_) {\n\t    return arguments.length ? (x = +_, force) : x;\n\t  };\n\t\n\t  force.y = function(_) {\n\t    return arguments.length ? (y = +_, force) : y;\n\t  };\n\t\n\t  return force;\n\t};\n\t\n\tvar x$2 = function(x) {\n\t  var strength = constant$6(0.1),\n\t      nodes,\n\t      strengths,\n\t      xz;\n\t\n\t  if (typeof x !== \"function\") x = constant$6(x == null ? 0 : +x);\n\t\n\t  function force(alpha) {\n\t    for (var i = 0, n = nodes.length, node; i < n; ++i) {\n\t      node = nodes[i], node.vx += (xz[i] - node.x) * strengths[i] * alpha;\n\t    }\n\t  }\n\t\n\t  function initialize() {\n\t    if (!nodes) return;\n\t    var i, n = nodes.length;\n\t    strengths = new Array(n);\n\t    xz = new Array(n);\n\t    for (i = 0; i < n; ++i) {\n\t      strengths[i] = isNaN(xz[i] = +x(nodes[i], i, nodes)) ? 0 : +strength(nodes[i], i, nodes);\n\t    }\n\t  }\n\t\n\t  force.initialize = function(_) {\n\t    nodes = _;\n\t    initialize();\n\t  };\n\t\n\t  force.strength = function(_) {\n\t    return arguments.length ? (strength = typeof _ === \"function\" ? _ : constant$6(+_), initialize(), force) : strength;\n\t  };\n\t\n\t  force.x = function(_) {\n\t    return arguments.length ? (x = typeof _ === \"function\" ? _ : constant$6(+_), initialize(), force) : x;\n\t  };\n\t\n\t  return force;\n\t};\n\t\n\tvar y$2 = function(y) {\n\t  var strength = constant$6(0.1),\n\t      nodes,\n\t      strengths,\n\t      yz;\n\t\n\t  if (typeof y !== \"function\") y = constant$6(y == null ? 0 : +y);\n\t\n\t  function force(alpha) {\n\t    for (var i = 0, n = nodes.length, node; i < n; ++i) {\n\t      node = nodes[i], node.vy += (yz[i] - node.y) * strengths[i] * alpha;\n\t    }\n\t  }\n\t\n\t  function initialize() {\n\t    if (!nodes) return;\n\t    var i, n = nodes.length;\n\t    strengths = new Array(n);\n\t    yz = new Array(n);\n\t    for (i = 0; i < n; ++i) {\n\t      strengths[i] = isNaN(yz[i] = +y(nodes[i], i, nodes)) ? 0 : +strength(nodes[i], i, nodes);\n\t    }\n\t  }\n\t\n\t  force.initialize = function(_) {\n\t    nodes = _;\n\t    initialize();\n\t  };\n\t\n\t  force.strength = function(_) {\n\t    return arguments.length ? (strength = typeof _ === \"function\" ? _ : constant$6(+_), initialize(), force) : strength;\n\t  };\n\t\n\t  force.y = function(_) {\n\t    return arguments.length ? (y = typeof _ === \"function\" ? _ : constant$6(+_), initialize(), force) : y;\n\t  };\n\t\n\t  return force;\n\t};\n\t\n\t// Computes the decimal coefficient and exponent of the specified number x with\n\t// significant digits p, where x is positive and p is in [1, 21] or undefined.\n\t// For example, formatDecimal(1.23) returns [\"123\", 0].\n\tvar formatDecimal = function(x, p) {\n\t  if ((i = (x = p ? x.toExponential(p - 1) : x.toExponential()).indexOf(\"e\")) < 0) return null; // NaN, ±Infinity\n\t  var i, coefficient = x.slice(0, i);\n\t\n\t  // The string returned by toExponential either has the form \\d\\.\\d+e[-+]\\d+\n\t  // (e.g., 1.2e+3) or the form \\de[-+]\\d+ (e.g., 1e+3).\n\t  return [\n\t    coefficient.length > 1 ? coefficient[0] + coefficient.slice(2) : coefficient,\n\t    +x.slice(i + 1)\n\t  ];\n\t};\n\t\n\tvar exponent$1 = function(x) {\n\t  return x = formatDecimal(Math.abs(x)), x ? x[1] : NaN;\n\t};\n\t\n\tvar formatGroup = function(grouping, thousands) {\n\t  return function(value, width) {\n\t    var i = value.length,\n\t        t = [],\n\t        j = 0,\n\t        g = grouping[0],\n\t        length = 0;\n\t\n\t    while (i > 0 && g > 0) {\n\t      if (length + g + 1 > width) g = Math.max(1, width - length);\n\t      t.push(value.substring(i -= g, i + g));\n\t      if ((length += g + 1) > width) break;\n\t      g = grouping[j = (j + 1) % grouping.length];\n\t    }\n\t\n\t    return t.reverse().join(thousands);\n\t  };\n\t};\n\t\n\tvar formatNumerals = function(numerals) {\n\t  return function(value) {\n\t    return value.replace(/[0-9]/g, function(i) {\n\t      return numerals[+i];\n\t    });\n\t  };\n\t};\n\t\n\tvar formatDefault = function(x, p) {\n\t  x = x.toPrecision(p);\n\t\n\t  out: for (var n = x.length, i = 1, i0 = -1, i1; i < n; ++i) {\n\t    switch (x[i]) {\n\t      case \".\": i0 = i1 = i; break;\n\t      case \"0\": if (i0 === 0) i0 = i; i1 = i; break;\n\t      case \"e\": break out;\n\t      default: if (i0 > 0) i0 = 0; break;\n\t    }\n\t  }\n\t\n\t  return i0 > 0 ? x.slice(0, i0) + x.slice(i1 + 1) : x;\n\t};\n\t\n\tvar prefixExponent;\n\t\n\tvar formatPrefixAuto = function(x, p) {\n\t  var d = formatDecimal(x, p);\n\t  if (!d) return x + \"\";\n\t  var coefficient = d[0],\n\t      exponent = d[1],\n\t      i = exponent - (prefixExponent = Math.max(-8, Math.min(8, Math.floor(exponent / 3))) * 3) + 1,\n\t      n = coefficient.length;\n\t  return i === n ? coefficient\n\t      : i > n ? coefficient + new Array(i - n + 1).join(\"0\")\n\t      : i > 0 ? coefficient.slice(0, i) + \".\" + coefficient.slice(i)\n\t      : \"0.\" + new Array(1 - i).join(\"0\") + formatDecimal(x, Math.max(0, p + i - 1))[0]; // less than 1y!\n\t};\n\t\n\tvar formatRounded = function(x, p) {\n\t  var d = formatDecimal(x, p);\n\t  if (!d) return x + \"\";\n\t  var coefficient = d[0],\n\t      exponent = d[1];\n\t  return exponent < 0 ? \"0.\" + new Array(-exponent).join(\"0\") + coefficient\n\t      : coefficient.length > exponent + 1 ? coefficient.slice(0, exponent + 1) + \".\" + coefficient.slice(exponent + 1)\n\t      : coefficient + new Array(exponent - coefficient.length + 2).join(\"0\");\n\t};\n\t\n\tvar formatTypes = {\n\t  \"\": formatDefault,\n\t  \"%\": function(x, p) { return (x * 100).toFixed(p); },\n\t  \"b\": function(x) { return Math.round(x).toString(2); },\n\t  \"c\": function(x) { return x + \"\"; },\n\t  \"d\": function(x) { return Math.round(x).toString(10); },\n\t  \"e\": function(x, p) { return x.toExponential(p); },\n\t  \"f\": function(x, p) { return x.toFixed(p); },\n\t  \"g\": function(x, p) { return x.toPrecision(p); },\n\t  \"o\": function(x) { return Math.round(x).toString(8); },\n\t  \"p\": function(x, p) { return formatRounded(x * 100, p); },\n\t  \"r\": formatRounded,\n\t  \"s\": formatPrefixAuto,\n\t  \"X\": function(x) { return Math.round(x).toString(16).toUpperCase(); },\n\t  \"x\": function(x) { return Math.round(x).toString(16); }\n\t};\n\t\n\t// [[fill]align][sign][symbol][0][width][,][.precision][type]\n\tvar re = /^(?:(.)?([<>=^]))?([+\\-\\( ])?([$#])?(0)?(\\d+)?(,)?(\\.\\d+)?([a-z%])?$/i;\n\t\n\tfunction formatSpecifier(specifier) {\n\t  return new FormatSpecifier(specifier);\n\t}\n\t\n\tformatSpecifier.prototype = FormatSpecifier.prototype; // instanceof\n\t\n\tfunction FormatSpecifier(specifier) {\n\t  if (!(match = re.exec(specifier))) throw new Error(\"invalid format: \" + specifier);\n\t\n\t  var match,\n\t      fill = match[1] || \" \",\n\t      align = match[2] || \">\",\n\t      sign = match[3] || \"-\",\n\t      symbol = match[4] || \"\",\n\t      zero = !!match[5],\n\t      width = match[6] && +match[6],\n\t      comma = !!match[7],\n\t      precision = match[8] && +match[8].slice(1),\n\t      type = match[9] || \"\";\n\t\n\t  // The \"n\" type is an alias for \",g\".\n\t  if (type === \"n\") comma = true, type = \"g\";\n\t\n\t  // Map invalid types to the default format.\n\t  else if (!formatTypes[type]) type = \"\";\n\t\n\t  // If zero fill is specified, padding goes after sign and before digits.\n\t  if (zero || (fill === \"0\" && align === \"=\")) zero = true, fill = \"0\", align = \"=\";\n\t\n\t  this.fill = fill;\n\t  this.align = align;\n\t  this.sign = sign;\n\t  this.symbol = symbol;\n\t  this.zero = zero;\n\t  this.width = width;\n\t  this.comma = comma;\n\t  this.precision = precision;\n\t  this.type = type;\n\t}\n\t\n\tFormatSpecifier.prototype.toString = function() {\n\t  return this.fill\n\t      + this.align\n\t      + this.sign\n\t      + this.symbol\n\t      + (this.zero ? \"0\" : \"\")\n\t      + (this.width == null ? \"\" : Math.max(1, this.width | 0))\n\t      + (this.comma ? \",\" : \"\")\n\t      + (this.precision == null ? \"\" : \".\" + Math.max(0, this.precision | 0))\n\t      + this.type;\n\t};\n\t\n\tvar identity$3 = function(x) {\n\t  return x;\n\t};\n\t\n\tvar prefixes = [\"y\",\"z\",\"a\",\"f\",\"p\",\"n\",\"\\xB5\",\"m\",\"\",\"k\",\"M\",\"G\",\"T\",\"P\",\"E\",\"Z\",\"Y\"];\n\t\n\tvar formatLocale = function(locale) {\n\t  var group = locale.grouping && locale.thousands ? formatGroup(locale.grouping, locale.thousands) : identity$3,\n\t      currency = locale.currency,\n\t      decimal = locale.decimal,\n\t      numerals = locale.numerals ? formatNumerals(locale.numerals) : identity$3,\n\t      percent = locale.percent || \"%\";\n\t\n\t  function newFormat(specifier) {\n\t    specifier = formatSpecifier(specifier);\n\t\n\t    var fill = specifier.fill,\n\t        align = specifier.align,\n\t        sign = specifier.sign,\n\t        symbol = specifier.symbol,\n\t        zero = specifier.zero,\n\t        width = specifier.width,\n\t        comma = specifier.comma,\n\t        precision = specifier.precision,\n\t        type = specifier.type;\n\t\n\t    // Compute the prefix and suffix.\n\t    // For SI-prefix, the suffix is lazily computed.\n\t    var prefix = symbol === \"$\" ? currency[0] : symbol === \"#\" && /[boxX]/.test(type) ? \"0\" + type.toLowerCase() : \"\",\n\t        suffix = symbol === \"$\" ? currency[1] : /[%p]/.test(type) ? percent : \"\";\n\t\n\t    // What format function should we use?\n\t    // Is this an integer type?\n\t    // Can this type generate exponential notation?\n\t    var formatType = formatTypes[type],\n\t        maybeSuffix = !type || /[defgprs%]/.test(type);\n\t\n\t    // Set the default precision if not specified,\n\t    // or clamp the specified precision to the supported range.\n\t    // For significant precision, it must be in [1, 21].\n\t    // For fixed precision, it must be in [0, 20].\n\t    precision = precision == null ? (type ? 6 : 12)\n\t        : /[gprs]/.test(type) ? Math.max(1, Math.min(21, precision))\n\t        : Math.max(0, Math.min(20, precision));\n\t\n\t    function format(value) {\n\t      var valuePrefix = prefix,\n\t          valueSuffix = suffix,\n\t          i, n, c;\n\t\n\t      if (type === \"c\") {\n\t        valueSuffix = formatType(value) + valueSuffix;\n\t        value = \"\";\n\t      } else {\n\t        value = +value;\n\t\n\t        // Perform the initial formatting.\n\t        var valueNegative = value < 0;\n\t        value = formatType(Math.abs(value), precision);\n\t\n\t        // If a negative value rounds to zero during formatting, treat as positive.\n\t        if (valueNegative && +value === 0) valueNegative = false;\n\t\n\t        // Compute the prefix and suffix.\n\t        valuePrefix = (valueNegative ? (sign === \"(\" ? sign : \"-\") : sign === \"-\" || sign === \"(\" ? \"\" : sign) + valuePrefix;\n\t        valueSuffix = valueSuffix + (type === \"s\" ? prefixes[8 + prefixExponent / 3] : \"\") + (valueNegative && sign === \"(\" ? \")\" : \"\");\n\t\n\t        // Break the formatted value into the integer “value” part that can be\n\t        // grouped, and fractional or exponential “suffix” part that is not.\n\t        if (maybeSuffix) {\n\t          i = -1, n = value.length;\n\t          while (++i < n) {\n\t            if (c = value.charCodeAt(i), 48 > c || c > 57) {\n\t              valueSuffix = (c === 46 ? decimal + value.slice(i + 1) : value.slice(i)) + valueSuffix;\n\t              value = value.slice(0, i);\n\t              break;\n\t            }\n\t          }\n\t        }\n\t      }\n\t\n\t      // If the fill character is not \"0\", grouping is applied before padding.\n\t      if (comma && !zero) value = group(value, Infinity);\n\t\n\t      // Compute the padding.\n\t      var length = valuePrefix.length + value.length + valueSuffix.length,\n\t          padding = length < width ? new Array(width - length + 1).join(fill) : \"\";\n\t\n\t      // If the fill character is \"0\", grouping is applied after padding.\n\t      if (comma && zero) value = group(padding + value, padding.length ? width - valueSuffix.length : Infinity), padding = \"\";\n\t\n\t      // Reconstruct the final output based on the desired alignment.\n\t      switch (align) {\n\t        case \"<\": value = valuePrefix + value + valueSuffix + padding; break;\n\t        case \"=\": value = valuePrefix + padding + value + valueSuffix; break;\n\t        case \"^\": value = padding.slice(0, length = padding.length >> 1) + valuePrefix + value + valueSuffix + padding.slice(length); break;\n\t        default: value = padding + valuePrefix + value + valueSuffix; break;\n\t      }\n\t\n\t      return numerals(value);\n\t    }\n\t\n\t    format.toString = function() {\n\t      return specifier + \"\";\n\t    };\n\t\n\t    return format;\n\t  }\n\t\n\t  function formatPrefix(specifier, value) {\n\t    var f = newFormat((specifier = formatSpecifier(specifier), specifier.type = \"f\", specifier)),\n\t        e = Math.max(-8, Math.min(8, Math.floor(exponent$1(value) / 3))) * 3,\n\t        k = Math.pow(10, -e),\n\t        prefix = prefixes[8 + e / 3];\n\t    return function(value) {\n\t      return f(k * value) + prefix;\n\t    };\n\t  }\n\t\n\t  return {\n\t    format: newFormat,\n\t    formatPrefix: formatPrefix\n\t  };\n\t};\n\t\n\tvar locale;\n\t\n\t\n\t\n\tdefaultLocale({\n\t  decimal: \".\",\n\t  thousands: \",\",\n\t  grouping: [3],\n\t  currency: [\"$\", \"\"]\n\t});\n\t\n\tfunction defaultLocale(definition) {\n\t  locale = formatLocale(definition);\n\t  exports.format = locale.format;\n\t  exports.formatPrefix = locale.formatPrefix;\n\t  return locale;\n\t}\n\t\n\tvar precisionFixed = function(step) {\n\t  return Math.max(0, -exponent$1(Math.abs(step)));\n\t};\n\t\n\tvar precisionPrefix = function(step, value) {\n\t  return Math.max(0, Math.max(-8, Math.min(8, Math.floor(exponent$1(value) / 3))) * 3 - exponent$1(Math.abs(step)));\n\t};\n\t\n\tvar precisionRound = function(step, max) {\n\t  step = Math.abs(step), max = Math.abs(max) - step;\n\t  return Math.max(0, exponent$1(max) - exponent$1(step)) + 1;\n\t};\n\t\n\t// Adds floating point numbers with twice the normal precision.\n\t// Reference: J. R. Shewchuk, Adaptive Precision Floating-Point Arithmetic and\n\t// Fast Robust Geometric Predicates, Discrete & Computational Geometry 18(3)\n\t// 305–363 (1997).\n\t// Code adapted from GeographicLib by Charles F. F. Karney,\n\t// http://geographiclib.sourceforge.net/\n\t\n\tvar adder = function() {\n\t  return new Adder;\n\t};\n\t\n\tfunction Adder() {\n\t  this.reset();\n\t}\n\t\n\tAdder.prototype = {\n\t  constructor: Adder,\n\t  reset: function() {\n\t    this.s = // rounded value\n\t    this.t = 0; // exact error\n\t  },\n\t  add: function(y) {\n\t    add$1(temp, y, this.t);\n\t    add$1(this, temp.s, this.s);\n\t    if (this.s) this.t += temp.t;\n\t    else this.s = temp.t;\n\t  },\n\t  valueOf: function() {\n\t    return this.s;\n\t  }\n\t};\n\t\n\tvar temp = new Adder;\n\t\n\tfunction add$1(adder, a, b) {\n\t  var x = adder.s = a + b,\n\t      bv = x - a,\n\t      av = x - bv;\n\t  adder.t = (a - av) + (b - bv);\n\t}\n\t\n\tvar epsilon$2 = 1e-6;\n\tvar epsilon2$1 = 1e-12;\n\tvar pi$3 = Math.PI;\n\tvar halfPi$2 = pi$3 / 2;\n\tvar quarterPi = pi$3 / 4;\n\tvar tau$3 = pi$3 * 2;\n\t\n\tvar degrees$1 = 180 / pi$3;\n\tvar radians = pi$3 / 180;\n\t\n\tvar abs = Math.abs;\n\tvar atan = Math.atan;\n\tvar atan2 = Math.atan2;\n\tvar cos$1 = Math.cos;\n\tvar ceil = Math.ceil;\n\tvar exp = Math.exp;\n\t\n\tvar log = Math.log;\n\tvar pow = Math.pow;\n\tvar sin$1 = Math.sin;\n\tvar sign = Math.sign || function(x) { return x > 0 ? 1 : x < 0 ? -1 : 0; };\n\tvar sqrt = Math.sqrt;\n\tvar tan = Math.tan;\n\t\n\tfunction acos(x) {\n\t  return x > 1 ? 0 : x < -1 ? pi$3 : Math.acos(x);\n\t}\n\t\n\tfunction asin(x) {\n\t  return x > 1 ? halfPi$2 : x < -1 ? -halfPi$2 : Math.asin(x);\n\t}\n\t\n\tfunction haversin(x) {\n\t  return (x = sin$1(x / 2)) * x;\n\t}\n\t\n\tfunction noop$1() {}\n\t\n\tfunction streamGeometry(geometry, stream) {\n\t  if (geometry && streamGeometryType.hasOwnProperty(geometry.type)) {\n\t    streamGeometryType[geometry.type](geometry, stream);\n\t  }\n\t}\n\t\n\tvar streamObjectType = {\n\t  Feature: function(object, stream) {\n\t    streamGeometry(object.geometry, stream);\n\t  },\n\t  FeatureCollection: function(object, stream) {\n\t    var features = object.features, i = -1, n = features.length;\n\t    while (++i < n) streamGeometry(features[i].geometry, stream);\n\t  }\n\t};\n\t\n\tvar streamGeometryType = {\n\t  Sphere: function(object, stream) {\n\t    stream.sphere();\n\t  },\n\t  Point: function(object, stream) {\n\t    object = object.coordinates;\n\t    stream.point(object[0], object[1], object[2]);\n\t  },\n\t  MultiPoint: function(object, stream) {\n\t    var coordinates = object.coordinates, i = -1, n = coordinates.length;\n\t    while (++i < n) object = coordinates[i], stream.point(object[0], object[1], object[2]);\n\t  },\n\t  LineString: function(object, stream) {\n\t    streamLine(object.coordinates, stream, 0);\n\t  },\n\t  MultiLineString: function(object, stream) {\n\t    var coordinates = object.coordinates, i = -1, n = coordinates.length;\n\t    while (++i < n) streamLine(coordinates[i], stream, 0);\n\t  },\n\t  Polygon: function(object, stream) {\n\t    streamPolygon(object.coordinates, stream);\n\t  },\n\t  MultiPolygon: function(object, stream) {\n\t    var coordinates = object.coordinates, i = -1, n = coordinates.length;\n\t    while (++i < n) streamPolygon(coordinates[i], stream);\n\t  },\n\t  GeometryCollection: function(object, stream) {\n\t    var geometries = object.geometries, i = -1, n = geometries.length;\n\t    while (++i < n) streamGeometry(geometries[i], stream);\n\t  }\n\t};\n\t\n\tfunction streamLine(coordinates, stream, closed) {\n\t  var i = -1, n = coordinates.length - closed, coordinate;\n\t  stream.lineStart();\n\t  while (++i < n) coordinate = coordinates[i], stream.point(coordinate[0], coordinate[1], coordinate[2]);\n\t  stream.lineEnd();\n\t}\n\t\n\tfunction streamPolygon(coordinates, stream) {\n\t  var i = -1, n = coordinates.length;\n\t  stream.polygonStart();\n\t  while (++i < n) streamLine(coordinates[i], stream, 1);\n\t  stream.polygonEnd();\n\t}\n\t\n\tvar geoStream = function(object, stream) {\n\t  if (object && streamObjectType.hasOwnProperty(object.type)) {\n\t    streamObjectType[object.type](object, stream);\n\t  } else {\n\t    streamGeometry(object, stream);\n\t  }\n\t};\n\t\n\tvar areaRingSum = adder();\n\t\n\tvar areaSum = adder();\n\tvar lambda00;\n\tvar phi00;\n\tvar lambda0;\n\tvar cosPhi0;\n\tvar sinPhi0;\n\t\n\tvar areaStream = {\n\t  point: noop$1,\n\t  lineStart: noop$1,\n\t  lineEnd: noop$1,\n\t  polygonStart: function() {\n\t    areaRingSum.reset();\n\t    areaStream.lineStart = areaRingStart;\n\t    areaStream.lineEnd = areaRingEnd;\n\t  },\n\t  polygonEnd: function() {\n\t    var areaRing = +areaRingSum;\n\t    areaSum.add(areaRing < 0 ? tau$3 + areaRing : areaRing);\n\t    this.lineStart = this.lineEnd = this.point = noop$1;\n\t  },\n\t  sphere: function() {\n\t    areaSum.add(tau$3);\n\t  }\n\t};\n\t\n\tfunction areaRingStart() {\n\t  areaStream.point = areaPointFirst;\n\t}\n\t\n\tfunction areaRingEnd() {\n\t  areaPoint(lambda00, phi00);\n\t}\n\t\n\tfunction areaPointFirst(lambda, phi) {\n\t  areaStream.point = areaPoint;\n\t  lambda00 = lambda, phi00 = phi;\n\t  lambda *= radians, phi *= radians;\n\t  lambda0 = lambda, cosPhi0 = cos$1(phi = phi / 2 + quarterPi), sinPhi0 = sin$1(phi);\n\t}\n\t\n\tfunction areaPoint(lambda, phi) {\n\t  lambda *= radians, phi *= radians;\n\t  phi = phi / 2 + quarterPi; // half the angular distance from south pole\n\t\n\t  // Spherical excess E for a spherical triangle with vertices: south pole,\n\t  // previous point, current point.  Uses a formula derived from Cagnoli’s\n\t  // theorem.  See Todhunter, Spherical Trig. (1871), Sec. 103, Eq. (2).\n\t  var dLambda = lambda - lambda0,\n\t      sdLambda = dLambda >= 0 ? 1 : -1,\n\t      adLambda = sdLambda * dLambda,\n\t      cosPhi = cos$1(phi),\n\t      sinPhi = sin$1(phi),\n\t      k = sinPhi0 * sinPhi,\n\t      u = cosPhi0 * cosPhi + k * cos$1(adLambda),\n\t      v = k * sdLambda * sin$1(adLambda);\n\t  areaRingSum.add(atan2(v, u));\n\t\n\t  // Advance the previous points.\n\t  lambda0 = lambda, cosPhi0 = cosPhi, sinPhi0 = sinPhi;\n\t}\n\t\n\tvar area = function(object) {\n\t  areaSum.reset();\n\t  geoStream(object, areaStream);\n\t  return areaSum * 2;\n\t};\n\t\n\tfunction spherical(cartesian) {\n\t  return [atan2(cartesian[1], cartesian[0]), asin(cartesian[2])];\n\t}\n\t\n\tfunction cartesian(spherical) {\n\t  var lambda = spherical[0], phi = spherical[1], cosPhi = cos$1(phi);\n\t  return [cosPhi * cos$1(lambda), cosPhi * sin$1(lambda), sin$1(phi)];\n\t}\n\t\n\tfunction cartesianDot(a, b) {\n\t  return a[0] * b[0] + a[1] * b[1] + a[2] * b[2];\n\t}\n\t\n\tfunction cartesianCross(a, b) {\n\t  return [a[1] * b[2] - a[2] * b[1], a[2] * b[0] - a[0] * b[2], a[0] * b[1] - a[1] * b[0]];\n\t}\n\t\n\t// TODO return a\n\tfunction cartesianAddInPlace(a, b) {\n\t  a[0] += b[0], a[1] += b[1], a[2] += b[2];\n\t}\n\t\n\tfunction cartesianScale(vector, k) {\n\t  return [vector[0] * k, vector[1] * k, vector[2] * k];\n\t}\n\t\n\t// TODO return d\n\tfunction cartesianNormalizeInPlace(d) {\n\t  var l = sqrt(d[0] * d[0] + d[1] * d[1] + d[2] * d[2]);\n\t  d[0] /= l, d[1] /= l, d[2] /= l;\n\t}\n\t\n\tvar lambda0$1;\n\tvar phi0;\n\tvar lambda1;\n\tvar phi1;\n\tvar lambda2;\n\tvar lambda00$1;\n\tvar phi00$1;\n\tvar p0;\n\tvar deltaSum = adder();\n\tvar ranges;\n\tvar range;\n\t\n\tvar boundsStream = {\n\t  point: boundsPoint,\n\t  lineStart: boundsLineStart,\n\t  lineEnd: boundsLineEnd,\n\t  polygonStart: function() {\n\t    boundsStream.point = boundsRingPoint;\n\t    boundsStream.lineStart = boundsRingStart;\n\t    boundsStream.lineEnd = boundsRingEnd;\n\t    deltaSum.reset();\n\t    areaStream.polygonStart();\n\t  },\n\t  polygonEnd: function() {\n\t    areaStream.polygonEnd();\n\t    boundsStream.point = boundsPoint;\n\t    boundsStream.lineStart = boundsLineStart;\n\t    boundsStream.lineEnd = boundsLineEnd;\n\t    if (areaRingSum < 0) lambda0$1 = -(lambda1 = 180), phi0 = -(phi1 = 90);\n\t    else if (deltaSum > epsilon$2) phi1 = 90;\n\t    else if (deltaSum < -epsilon$2) phi0 = -90;\n\t    range[0] = lambda0$1, range[1] = lambda1;\n\t  }\n\t};\n\t\n\tfunction boundsPoint(lambda, phi) {\n\t  ranges.push(range = [lambda0$1 = lambda, lambda1 = lambda]);\n\t  if (phi < phi0) phi0 = phi;\n\t  if (phi > phi1) phi1 = phi;\n\t}\n\t\n\tfunction linePoint(lambda, phi) {\n\t  var p = cartesian([lambda * radians, phi * radians]);\n\t  if (p0) {\n\t    var normal = cartesianCross(p0, p),\n\t        equatorial = [normal[1], -normal[0], 0],\n\t        inflection = cartesianCross(equatorial, normal);\n\t    cartesianNormalizeInPlace(inflection);\n\t    inflection = spherical(inflection);\n\t    var delta = lambda - lambda2,\n\t        sign$$1 = delta > 0 ? 1 : -1,\n\t        lambdai = inflection[0] * degrees$1 * sign$$1,\n\t        phii,\n\t        antimeridian = abs(delta) > 180;\n\t    if (antimeridian ^ (sign$$1 * lambda2 < lambdai && lambdai < sign$$1 * lambda)) {\n\t      phii = inflection[1] * degrees$1;\n\t      if (phii > phi1) phi1 = phii;\n\t    } else if (lambdai = (lambdai + 360) % 360 - 180, antimeridian ^ (sign$$1 * lambda2 < lambdai && lambdai < sign$$1 * lambda)) {\n\t      phii = -inflection[1] * degrees$1;\n\t      if (phii < phi0) phi0 = phii;\n\t    } else {\n\t      if (phi < phi0) phi0 = phi;\n\t      if (phi > phi1) phi1 = phi;\n\t    }\n\t    if (antimeridian) {\n\t      if (lambda < lambda2) {\n\t        if (angle(lambda0$1, lambda) > angle(lambda0$1, lambda1)) lambda1 = lambda;\n\t      } else {\n\t        if (angle(lambda, lambda1) > angle(lambda0$1, lambda1)) lambda0$1 = lambda;\n\t      }\n\t    } else {\n\t      if (lambda1 >= lambda0$1) {\n\t        if (lambda < lambda0$1) lambda0$1 = lambda;\n\t        if (lambda > lambda1) lambda1 = lambda;\n\t      } else {\n\t        if (lambda > lambda2) {\n\t          if (angle(lambda0$1, lambda) > angle(lambda0$1, lambda1)) lambda1 = lambda;\n\t        } else {\n\t          if (angle(lambda, lambda1) > angle(lambda0$1, lambda1)) lambda0$1 = lambda;\n\t        }\n\t      }\n\t    }\n\t  } else {\n\t    ranges.push(range = [lambda0$1 = lambda, lambda1 = lambda]);\n\t  }\n\t  if (phi < phi0) phi0 = phi;\n\t  if (phi > phi1) phi1 = phi;\n\t  p0 = p, lambda2 = lambda;\n\t}\n\t\n\tfunction boundsLineStart() {\n\t  boundsStream.point = linePoint;\n\t}\n\t\n\tfunction boundsLineEnd() {\n\t  range[0] = lambda0$1, range[1] = lambda1;\n\t  boundsStream.point = boundsPoint;\n\t  p0 = null;\n\t}\n\t\n\tfunction boundsRingPoint(lambda, phi) {\n\t  if (p0) {\n\t    var delta = lambda - lambda2;\n\t    deltaSum.add(abs(delta) > 180 ? delta + (delta > 0 ? 360 : -360) : delta);\n\t  } else {\n\t    lambda00$1 = lambda, phi00$1 = phi;\n\t  }\n\t  areaStream.point(lambda, phi);\n\t  linePoint(lambda, phi);\n\t}\n\t\n\tfunction boundsRingStart() {\n\t  areaStream.lineStart();\n\t}\n\t\n\tfunction boundsRingEnd() {\n\t  boundsRingPoint(lambda00$1, phi00$1);\n\t  areaStream.lineEnd();\n\t  if (abs(deltaSum) > epsilon$2) lambda0$1 = -(lambda1 = 180);\n\t  range[0] = lambda0$1, range[1] = lambda1;\n\t  p0 = null;\n\t}\n\t\n\t// Finds the left-right distance between two longitudes.\n\t// This is almost the same as (lambda1 - lambda0 + 360°) % 360°, except that we want\n\t// the distance between ±180° to be 360°.\n\tfunction angle(lambda0, lambda1) {\n\t  return (lambda1 -= lambda0) < 0 ? lambda1 + 360 : lambda1;\n\t}\n\t\n\tfunction rangeCompare(a, b) {\n\t  return a[0] - b[0];\n\t}\n\t\n\tfunction rangeContains(range, x) {\n\t  return range[0] <= range[1] ? range[0] <= x && x <= range[1] : x < range[0] || range[1] < x;\n\t}\n\t\n\tvar bounds = function(feature) {\n\t  var i, n, a, b, merged, deltaMax, delta;\n\t\n\t  phi1 = lambda1 = -(lambda0$1 = phi0 = Infinity);\n\t  ranges = [];\n\t  geoStream(feature, boundsStream);\n\t\n\t  // First, sort ranges by their minimum longitudes.\n\t  if (n = ranges.length) {\n\t    ranges.sort(rangeCompare);\n\t\n\t    // Then, merge any ranges that overlap.\n\t    for (i = 1, a = ranges[0], merged = [a]; i < n; ++i) {\n\t      b = ranges[i];\n\t      if (rangeContains(a, b[0]) || rangeContains(a, b[1])) {\n\t        if (angle(a[0], b[1]) > angle(a[0], a[1])) a[1] = b[1];\n\t        if (angle(b[0], a[1]) > angle(a[0], a[1])) a[0] = b[0];\n\t      } else {\n\t        merged.push(a = b);\n\t      }\n\t    }\n\t\n\t    // Finally, find the largest gap between the merged ranges.\n\t    // The final bounding box will be the inverse of this gap.\n\t    for (deltaMax = -Infinity, n = merged.length - 1, i = 0, a = merged[n]; i <= n; a = b, ++i) {\n\t      b = merged[i];\n\t      if ((delta = angle(a[1], b[0])) > deltaMax) deltaMax = delta, lambda0$1 = b[0], lambda1 = a[1];\n\t    }\n\t  }\n\t\n\t  ranges = range = null;\n\t\n\t  return lambda0$1 === Infinity || phi0 === Infinity\n\t      ? [[NaN, NaN], [NaN, NaN]]\n\t      : [[lambda0$1, phi0], [lambda1, phi1]];\n\t};\n\t\n\tvar W0;\n\tvar W1;\n\tvar X0;\n\tvar Y0;\n\tvar Z0;\n\tvar X1;\n\tvar Y1;\n\tvar Z1;\n\tvar X2;\n\tvar Y2;\n\tvar Z2;\n\tvar lambda00$2;\n\tvar phi00$2;\n\tvar x0;\n\tvar y0;\n\tvar z0; // previous point\n\t\n\tvar centroidStream = {\n\t  sphere: noop$1,\n\t  point: centroidPoint,\n\t  lineStart: centroidLineStart,\n\t  lineEnd: centroidLineEnd,\n\t  polygonStart: function() {\n\t    centroidStream.lineStart = centroidRingStart;\n\t    centroidStream.lineEnd = centroidRingEnd;\n\t  },\n\t  polygonEnd: function() {\n\t    centroidStream.lineStart = centroidLineStart;\n\t    centroidStream.lineEnd = centroidLineEnd;\n\t  }\n\t};\n\t\n\t// Arithmetic mean of Cartesian vectors.\n\tfunction centroidPoint(lambda, phi) {\n\t  lambda *= radians, phi *= radians;\n\t  var cosPhi = cos$1(phi);\n\t  centroidPointCartesian(cosPhi * cos$1(lambda), cosPhi * sin$1(lambda), sin$1(phi));\n\t}\n\t\n\tfunction centroidPointCartesian(x, y, z) {\n\t  ++W0;\n\t  X0 += (x - X0) / W0;\n\t  Y0 += (y - Y0) / W0;\n\t  Z0 += (z - Z0) / W0;\n\t}\n\t\n\tfunction centroidLineStart() {\n\t  centroidStream.point = centroidLinePointFirst;\n\t}\n\t\n\tfunction centroidLinePointFirst(lambda, phi) {\n\t  lambda *= radians, phi *= radians;\n\t  var cosPhi = cos$1(phi);\n\t  x0 = cosPhi * cos$1(lambda);\n\t  y0 = cosPhi * sin$1(lambda);\n\t  z0 = sin$1(phi);\n\t  centroidStream.point = centroidLinePoint;\n\t  centroidPointCartesian(x0, y0, z0);\n\t}\n\t\n\tfunction centroidLinePoint(lambda, phi) {\n\t  lambda *= radians, phi *= radians;\n\t  var cosPhi = cos$1(phi),\n\t      x = cosPhi * cos$1(lambda),\n\t      y = cosPhi * sin$1(lambda),\n\t      z = sin$1(phi),\n\t      w = atan2(sqrt((w = y0 * z - z0 * y) * w + (w = z0 * x - x0 * z) * w + (w = x0 * y - y0 * x) * w), x0 * x + y0 * y + z0 * z);\n\t  W1 += w;\n\t  X1 += w * (x0 + (x0 = x));\n\t  Y1 += w * (y0 + (y0 = y));\n\t  Z1 += w * (z0 + (z0 = z));\n\t  centroidPointCartesian(x0, y0, z0);\n\t}\n\t\n\tfunction centroidLineEnd() {\n\t  centroidStream.point = centroidPoint;\n\t}\n\t\n\t// See J. E. Brock, The Inertia Tensor for a Spherical Triangle,\n\t// J. Applied Mechanics 42, 239 (1975).\n\tfunction centroidRingStart() {\n\t  centroidStream.point = centroidRingPointFirst;\n\t}\n\t\n\tfunction centroidRingEnd() {\n\t  centroidRingPoint(lambda00$2, phi00$2);\n\t  centroidStream.point = centroidPoint;\n\t}\n\t\n\tfunction centroidRingPointFirst(lambda, phi) {\n\t  lambda00$2 = lambda, phi00$2 = phi;\n\t  lambda *= radians, phi *= radians;\n\t  centroidStream.point = centroidRingPoint;\n\t  var cosPhi = cos$1(phi);\n\t  x0 = cosPhi * cos$1(lambda);\n\t  y0 = cosPhi * sin$1(lambda);\n\t  z0 = sin$1(phi);\n\t  centroidPointCartesian(x0, y0, z0);\n\t}\n\t\n\tfunction centroidRingPoint(lambda, phi) {\n\t  lambda *= radians, phi *= radians;\n\t  var cosPhi = cos$1(phi),\n\t      x = cosPhi * cos$1(lambda),\n\t      y = cosPhi * sin$1(lambda),\n\t      z = sin$1(phi),\n\t      cx = y0 * z - z0 * y,\n\t      cy = z0 * x - x0 * z,\n\t      cz = x0 * y - y0 * x,\n\t      m = sqrt(cx * cx + cy * cy + cz * cz),\n\t      w = asin(m), // line weight = angle\n\t      v = m && -w / m; // area weight multiplier\n\t  X2 += v * cx;\n\t  Y2 += v * cy;\n\t  Z2 += v * cz;\n\t  W1 += w;\n\t  X1 += w * (x0 + (x0 = x));\n\t  Y1 += w * (y0 + (y0 = y));\n\t  Z1 += w * (z0 + (z0 = z));\n\t  centroidPointCartesian(x0, y0, z0);\n\t}\n\t\n\tvar centroid = function(object) {\n\t  W0 = W1 =\n\t  X0 = Y0 = Z0 =\n\t  X1 = Y1 = Z1 =\n\t  X2 = Y2 = Z2 = 0;\n\t  geoStream(object, centroidStream);\n\t\n\t  var x = X2,\n\t      y = Y2,\n\t      z = Z2,\n\t      m = x * x + y * y + z * z;\n\t\n\t  // If the area-weighted ccentroid is undefined, fall back to length-weighted ccentroid.\n\t  if (m < epsilon2$1) {\n\t    x = X1, y = Y1, z = Z1;\n\t    // If the feature has zero length, fall back to arithmetic mean of point vectors.\n\t    if (W1 < epsilon$2) x = X0, y = Y0, z = Z0;\n\t    m = x * x + y * y + z * z;\n\t    // If the feature still has an undefined ccentroid, then return.\n\t    if (m < epsilon2$1) return [NaN, NaN];\n\t  }\n\t\n\t  return [atan2(y, x) * degrees$1, asin(z / sqrt(m)) * degrees$1];\n\t};\n\t\n\tvar constant$7 = function(x) {\n\t  return function() {\n\t    return x;\n\t  };\n\t};\n\t\n\tvar compose = function(a, b) {\n\t\n\t  function compose(x, y) {\n\t    return x = a(x, y), b(x[0], x[1]);\n\t  }\n\t\n\t  if (a.invert && b.invert) compose.invert = function(x, y) {\n\t    return x = b.invert(x, y), x && a.invert(x[0], x[1]);\n\t  };\n\t\n\t  return compose;\n\t};\n\t\n\tfunction rotationIdentity(lambda, phi) {\n\t  return [lambda > pi$3 ? lambda - tau$3 : lambda < -pi$3 ? lambda + tau$3 : lambda, phi];\n\t}\n\t\n\trotationIdentity.invert = rotationIdentity;\n\t\n\tfunction rotateRadians(deltaLambda, deltaPhi, deltaGamma) {\n\t  return (deltaLambda %= tau$3) ? (deltaPhi || deltaGamma ? compose(rotationLambda(deltaLambda), rotationPhiGamma(deltaPhi, deltaGamma))\n\t    : rotationLambda(deltaLambda))\n\t    : (deltaPhi || deltaGamma ? rotationPhiGamma(deltaPhi, deltaGamma)\n\t    : rotationIdentity);\n\t}\n\t\n\tfunction forwardRotationLambda(deltaLambda) {\n\t  return function(lambda, phi) {\n\t    return lambda += deltaLambda, [lambda > pi$3 ? lambda - tau$3 : lambda < -pi$3 ? lambda + tau$3 : lambda, phi];\n\t  };\n\t}\n\t\n\tfunction rotationLambda(deltaLambda) {\n\t  var rotation = forwardRotationLambda(deltaLambda);\n\t  rotation.invert = forwardRotationLambda(-deltaLambda);\n\t  return rotation;\n\t}\n\t\n\tfunction rotationPhiGamma(deltaPhi, deltaGamma) {\n\t  var cosDeltaPhi = cos$1(deltaPhi),\n\t      sinDeltaPhi = sin$1(deltaPhi),\n\t      cosDeltaGamma = cos$1(deltaGamma),\n\t      sinDeltaGamma = sin$1(deltaGamma);\n\t\n\t  function rotation(lambda, phi) {\n\t    var cosPhi = cos$1(phi),\n\t        x = cos$1(lambda) * cosPhi,\n\t        y = sin$1(lambda) * cosPhi,\n\t        z = sin$1(phi),\n\t        k = z * cosDeltaPhi + x * sinDeltaPhi;\n\t    return [\n\t      atan2(y * cosDeltaGamma - k * sinDeltaGamma, x * cosDeltaPhi - z * sinDeltaPhi),\n\t      asin(k * cosDeltaGamma + y * sinDeltaGamma)\n\t    ];\n\t  }\n\t\n\t  rotation.invert = function(lambda, phi) {\n\t    var cosPhi = cos$1(phi),\n\t        x = cos$1(lambda) * cosPhi,\n\t        y = sin$1(lambda) * cosPhi,\n\t        z = sin$1(phi),\n\t        k = z * cosDeltaGamma - y * sinDeltaGamma;\n\t    return [\n\t      atan2(y * cosDeltaGamma + z * sinDeltaGamma, x * cosDeltaPhi + k * sinDeltaPhi),\n\t      asin(k * cosDeltaPhi - x * sinDeltaPhi)\n\t    ];\n\t  };\n\t\n\t  return rotation;\n\t}\n\t\n\tvar rotation = function(rotate) {\n\t  rotate = rotateRadians(rotate[0] * radians, rotate[1] * radians, rotate.length > 2 ? rotate[2] * radians : 0);\n\t\n\t  function forward(coordinates) {\n\t    coordinates = rotate(coordinates[0] * radians, coordinates[1] * radians);\n\t    return coordinates[0] *= degrees$1, coordinates[1] *= degrees$1, coordinates;\n\t  }\n\t\n\t  forward.invert = function(coordinates) {\n\t    coordinates = rotate.invert(coordinates[0] * radians, coordinates[1] * radians);\n\t    return coordinates[0] *= degrees$1, coordinates[1] *= degrees$1, coordinates;\n\t  };\n\t\n\t  return forward;\n\t};\n\t\n\t// Generates a circle centered at [0°, 0°], with a given radius and precision.\n\tfunction circleStream(stream, radius, delta, direction, t0, t1) {\n\t  if (!delta) return;\n\t  var cosRadius = cos$1(radius),\n\t      sinRadius = sin$1(radius),\n\t      step = direction * delta;\n\t  if (t0 == null) {\n\t    t0 = radius + direction * tau$3;\n\t    t1 = radius - step / 2;\n\t  } else {\n\t    t0 = circleRadius(cosRadius, t0);\n\t    t1 = circleRadius(cosRadius, t1);\n\t    if (direction > 0 ? t0 < t1 : t0 > t1) t0 += direction * tau$3;\n\t  }\n\t  for (var point, t = t0; direction > 0 ? t > t1 : t < t1; t -= step) {\n\t    point = spherical([cosRadius, -sinRadius * cos$1(t), -sinRadius * sin$1(t)]);\n\t    stream.point(point[0], point[1]);\n\t  }\n\t}\n\t\n\t// Returns the signed angle of a cartesian point relative to [cosRadius, 0, 0].\n\tfunction circleRadius(cosRadius, point) {\n\t  point = cartesian(point), point[0] -= cosRadius;\n\t  cartesianNormalizeInPlace(point);\n\t  var radius = acos(-point[1]);\n\t  return ((-point[2] < 0 ? -radius : radius) + tau$3 - epsilon$2) % tau$3;\n\t}\n\t\n\tvar circle = function() {\n\t  var center = constant$7([0, 0]),\n\t      radius = constant$7(90),\n\t      precision = constant$7(6),\n\t      ring,\n\t      rotate,\n\t      stream = {point: point};\n\t\n\t  function point(x, y) {\n\t    ring.push(x = rotate(x, y));\n\t    x[0] *= degrees$1, x[1] *= degrees$1;\n\t  }\n\t\n\t  function circle() {\n\t    var c = center.apply(this, arguments),\n\t        r = radius.apply(this, arguments) * radians,\n\t        p = precision.apply(this, arguments) * radians;\n\t    ring = [];\n\t    rotate = rotateRadians(-c[0] * radians, -c[1] * radians, 0).invert;\n\t    circleStream(stream, r, p, 1);\n\t    c = {type: \"Polygon\", coordinates: [ring]};\n\t    ring = rotate = null;\n\t    return c;\n\t  }\n\t\n\t  circle.center = function(_) {\n\t    return arguments.length ? (center = typeof _ === \"function\" ? _ : constant$7([+_[0], +_[1]]), circle) : center;\n\t  };\n\t\n\t  circle.radius = function(_) {\n\t    return arguments.length ? (radius = typeof _ === \"function\" ? _ : constant$7(+_), circle) : radius;\n\t  };\n\t\n\t  circle.precision = function(_) {\n\t    return arguments.length ? (precision = typeof _ === \"function\" ? _ : constant$7(+_), circle) : precision;\n\t  };\n\t\n\t  return circle;\n\t};\n\t\n\tvar clipBuffer = function() {\n\t  var lines = [],\n\t      line;\n\t  return {\n\t    point: function(x, y) {\n\t      line.push([x, y]);\n\t    },\n\t    lineStart: function() {\n\t      lines.push(line = []);\n\t    },\n\t    lineEnd: noop$1,\n\t    rejoin: function() {\n\t      if (lines.length > 1) lines.push(lines.pop().concat(lines.shift()));\n\t    },\n\t    result: function() {\n\t      var result = lines;\n\t      lines = [];\n\t      line = null;\n\t      return result;\n\t    }\n\t  };\n\t};\n\t\n\tvar pointEqual = function(a, b) {\n\t  return abs(a[0] - b[0]) < epsilon$2 && abs(a[1] - b[1]) < epsilon$2;\n\t};\n\t\n\tfunction Intersection(point, points, other, entry) {\n\t  this.x = point;\n\t  this.z = points;\n\t  this.o = other; // another intersection\n\t  this.e = entry; // is an entry?\n\t  this.v = false; // visited\n\t  this.n = this.p = null; // next & previous\n\t}\n\t\n\t// A generalized polygon clipping algorithm: given a polygon that has been cut\n\t// into its visible line segments, and rejoins the segments by interpolating\n\t// along the clip edge.\n\tvar clipRejoin = function(segments, compareIntersection, startInside, interpolate, stream) {\n\t  var subject = [],\n\t      clip = [],\n\t      i,\n\t      n;\n\t\n\t  segments.forEach(function(segment) {\n\t    if ((n = segment.length - 1) <= 0) return;\n\t    var n, p0 = segment[0], p1 = segment[n], x;\n\t\n\t    // If the first and last points of a segment are coincident, then treat as a\n\t    // closed ring. TODO if all rings are closed, then the winding order of the\n\t    // exterior ring should be checked.\n\t    if (pointEqual(p0, p1)) {\n\t      stream.lineStart();\n\t      for (i = 0; i < n; ++i) stream.point((p0 = segment[i])[0], p0[1]);\n\t      stream.lineEnd();\n\t      return;\n\t    }\n\t\n\t    subject.push(x = new Intersection(p0, segment, null, true));\n\t    clip.push(x.o = new Intersection(p0, null, x, false));\n\t    subject.push(x = new Intersection(p1, segment, null, false));\n\t    clip.push(x.o = new Intersection(p1, null, x, true));\n\t  });\n\t\n\t  if (!subject.length) return;\n\t\n\t  clip.sort(compareIntersection);\n\t  link$1(subject);\n\t  link$1(clip);\n\t\n\t  for (i = 0, n = clip.length; i < n; ++i) {\n\t    clip[i].e = startInside = !startInside;\n\t  }\n\t\n\t  var start = subject[0],\n\t      points,\n\t      point;\n\t\n\t  while (1) {\n\t    // Find first unvisited intersection.\n\t    var current = start,\n\t        isSubject = true;\n\t    while (current.v) if ((current = current.n) === start) return;\n\t    points = current.z;\n\t    stream.lineStart();\n\t    do {\n\t      current.v = current.o.v = true;\n\t      if (current.e) {\n\t        if (isSubject) {\n\t          for (i = 0, n = points.length; i < n; ++i) stream.point((point = points[i])[0], point[1]);\n\t        } else {\n\t          interpolate(current.x, current.n.x, 1, stream);\n\t        }\n\t        current = current.n;\n\t      } else {\n\t        if (isSubject) {\n\t          points = current.p.z;\n\t          for (i = points.length - 1; i >= 0; --i) stream.point((point = points[i])[0], point[1]);\n\t        } else {\n\t          interpolate(current.x, current.p.x, -1, stream);\n\t        }\n\t        current = current.p;\n\t      }\n\t      current = current.o;\n\t      points = current.z;\n\t      isSubject = !isSubject;\n\t    } while (!current.v);\n\t    stream.lineEnd();\n\t  }\n\t};\n\t\n\tfunction link$1(array) {\n\t  if (!(n = array.length)) return;\n\t  var n,\n\t      i = 0,\n\t      a = array[0],\n\t      b;\n\t  while (++i < n) {\n\t    a.n = b = array[i];\n\t    b.p = a;\n\t    a = b;\n\t  }\n\t  a.n = b = array[0];\n\t  b.p = a;\n\t}\n\t\n\tvar sum$1 = adder();\n\t\n\tvar polygonContains = function(polygon, point) {\n\t  var lambda = point[0],\n\t      phi = point[1],\n\t      normal = [sin$1(lambda), -cos$1(lambda), 0],\n\t      angle = 0,\n\t      winding = 0;\n\t\n\t  sum$1.reset();\n\t\n\t  for (var i = 0, n = polygon.length; i < n; ++i) {\n\t    if (!(m = (ring = polygon[i]).length)) continue;\n\t    var ring,\n\t        m,\n\t        point0 = ring[m - 1],\n\t        lambda0 = point0[0],\n\t        phi0 = point0[1] / 2 + quarterPi,\n\t        sinPhi0 = sin$1(phi0),\n\t        cosPhi0 = cos$1(phi0);\n\t\n\t    for (var j = 0; j < m; ++j, lambda0 = lambda1, sinPhi0 = sinPhi1, cosPhi0 = cosPhi1, point0 = point1) {\n\t      var point1 = ring[j],\n\t          lambda1 = point1[0],\n\t          phi1 = point1[1] / 2 + quarterPi,\n\t          sinPhi1 = sin$1(phi1),\n\t          cosPhi1 = cos$1(phi1),\n\t          delta = lambda1 - lambda0,\n\t          sign$$1 = delta >= 0 ? 1 : -1,\n\t          absDelta = sign$$1 * delta,\n\t          antimeridian = absDelta > pi$3,\n\t          k = sinPhi0 * sinPhi1;\n\t\n\t      sum$1.add(atan2(k * sign$$1 * sin$1(absDelta), cosPhi0 * cosPhi1 + k * cos$1(absDelta)));\n\t      angle += antimeridian ? delta + sign$$1 * tau$3 : delta;\n\t\n\t      // Are the longitudes either side of the point’s meridian (lambda),\n\t      // and are the latitudes smaller than the parallel (phi)?\n\t      if (antimeridian ^ lambda0 >= lambda ^ lambda1 >= lambda) {\n\t        var arc = cartesianCross(cartesian(point0), cartesian(point1));\n\t        cartesianNormalizeInPlace(arc);\n\t        var intersection = cartesianCross(normal, arc);\n\t        cartesianNormalizeInPlace(intersection);\n\t        var phiArc = (antimeridian ^ delta >= 0 ? -1 : 1) * asin(intersection[2]);\n\t        if (phi > phiArc || phi === phiArc && (arc[0] || arc[1])) {\n\t          winding += antimeridian ^ delta >= 0 ? 1 : -1;\n\t        }\n\t      }\n\t    }\n\t  }\n\t\n\t  // First, determine whether the South pole is inside or outside:\n\t  //\n\t  // It is inside if:\n\t  // * the polygon winds around it in a clockwise direction.\n\t  // * the polygon does not (cumulatively) wind around it, but has a negative\n\t  //   (counter-clockwise) area.\n\t  //\n\t  // Second, count the (signed) number of times a segment crosses a lambda\n\t  // from the point to the South pole.  If it is zero, then the point is the\n\t  // same side as the South pole.\n\t\n\t  return (angle < -epsilon$2 || angle < epsilon$2 && sum$1 < -epsilon$2) ^ (winding & 1);\n\t};\n\t\n\tvar clip = function(pointVisible, clipLine, interpolate, start) {\n\t  return function(sink) {\n\t    var line = clipLine(sink),\n\t        ringBuffer = clipBuffer(),\n\t        ringSink = clipLine(ringBuffer),\n\t        polygonStarted = false,\n\t        polygon,\n\t        segments,\n\t        ring;\n\t\n\t    var clip = {\n\t      point: point,\n\t      lineStart: lineStart,\n\t      lineEnd: lineEnd,\n\t      polygonStart: function() {\n\t        clip.point = pointRing;\n\t        clip.lineStart = ringStart;\n\t        clip.lineEnd = ringEnd;\n\t        segments = [];\n\t        polygon = [];\n\t      },\n\t      polygonEnd: function() {\n\t        clip.point = point;\n\t        clip.lineStart = lineStart;\n\t        clip.lineEnd = lineEnd;\n\t        segments = merge(segments);\n\t        var startInside = polygonContains(polygon, start);\n\t        if (segments.length) {\n\t          if (!polygonStarted) sink.polygonStart(), polygonStarted = true;\n\t          clipRejoin(segments, compareIntersection, startInside, interpolate, sink);\n\t        } else if (startInside) {\n\t          if (!polygonStarted) sink.polygonStart(), polygonStarted = true;\n\t          sink.lineStart();\n\t          interpolate(null, null, 1, sink);\n\t          sink.lineEnd();\n\t        }\n\t        if (polygonStarted) sink.polygonEnd(), polygonStarted = false;\n\t        segments = polygon = null;\n\t      },\n\t      sphere: function() {\n\t        sink.polygonStart();\n\t        sink.lineStart();\n\t        interpolate(null, null, 1, sink);\n\t        sink.lineEnd();\n\t        sink.polygonEnd();\n\t      }\n\t    };\n\t\n\t    function point(lambda, phi) {\n\t      if (pointVisible(lambda, phi)) sink.point(lambda, phi);\n\t    }\n\t\n\t    function pointLine(lambda, phi) {\n\t      line.point(lambda, phi);\n\t    }\n\t\n\t    function lineStart() {\n\t      clip.point = pointLine;\n\t      line.lineStart();\n\t    }\n\t\n\t    function lineEnd() {\n\t      clip.point = point;\n\t      line.lineEnd();\n\t    }\n\t\n\t    function pointRing(lambda, phi) {\n\t      ring.push([lambda, phi]);\n\t      ringSink.point(lambda, phi);\n\t    }\n\t\n\t    function ringStart() {\n\t      ringSink.lineStart();\n\t      ring = [];\n\t    }\n\t\n\t    function ringEnd() {\n\t      pointRing(ring[0][0], ring[0][1]);\n\t      ringSink.lineEnd();\n\t\n\t      var clean = ringSink.clean(),\n\t          ringSegments = ringBuffer.result(),\n\t          i, n = ringSegments.length, m,\n\t          segment,\n\t          point;\n\t\n\t      ring.pop();\n\t      polygon.push(ring);\n\t      ring = null;\n\t\n\t      if (!n) return;\n\t\n\t      // No intersections.\n\t      if (clean & 1) {\n\t        segment = ringSegments[0];\n\t        if ((m = segment.length - 1) > 0) {\n\t          if (!polygonStarted) sink.polygonStart(), polygonStarted = true;\n\t          sink.lineStart();\n\t          for (i = 0; i < m; ++i) sink.point((point = segment[i])[0], point[1]);\n\t          sink.lineEnd();\n\t        }\n\t        return;\n\t      }\n\t\n\t      // Rejoin connected segments.\n\t      // TODO reuse ringBuffer.rejoin()?\n\t      if (n > 1 && clean & 2) ringSegments.push(ringSegments.pop().concat(ringSegments.shift()));\n\t\n\t      segments.push(ringSegments.filter(validSegment));\n\t    }\n\t\n\t    return clip;\n\t  };\n\t};\n\t\n\tfunction validSegment(segment) {\n\t  return segment.length > 1;\n\t}\n\t\n\t// Intersections are sorted along the clip edge. For both antimeridian cutting\n\t// and circle clipping, the same comparison is used.\n\tfunction compareIntersection(a, b) {\n\t  return ((a = a.x)[0] < 0 ? a[1] - halfPi$2 - epsilon$2 : halfPi$2 - a[1])\n\t       - ((b = b.x)[0] < 0 ? b[1] - halfPi$2 - epsilon$2 : halfPi$2 - b[1]);\n\t}\n\t\n\tvar clipAntimeridian = clip(\n\t  function() { return true; },\n\t  clipAntimeridianLine,\n\t  clipAntimeridianInterpolate,\n\t  [-pi$3, -halfPi$2]\n\t);\n\t\n\t// Takes a line and cuts into visible segments. Return values: 0 - there were\n\t// intersections or the line was empty; 1 - no intersections; 2 - there were\n\t// intersections, and the first and last segments should be rejoined.\n\tfunction clipAntimeridianLine(stream) {\n\t  var lambda0 = NaN,\n\t      phi0 = NaN,\n\t      sign0 = NaN,\n\t      clean; // no intersections\n\t\n\t  return {\n\t    lineStart: function() {\n\t      stream.lineStart();\n\t      clean = 1;\n\t    },\n\t    point: function(lambda1, phi1) {\n\t      var sign1 = lambda1 > 0 ? pi$3 : -pi$3,\n\t          delta = abs(lambda1 - lambda0);\n\t      if (abs(delta - pi$3) < epsilon$2) { // line crosses a pole\n\t        stream.point(lambda0, phi0 = (phi0 + phi1) / 2 > 0 ? halfPi$2 : -halfPi$2);\n\t        stream.point(sign0, phi0);\n\t        stream.lineEnd();\n\t        stream.lineStart();\n\t        stream.point(sign1, phi0);\n\t        stream.point(lambda1, phi0);\n\t        clean = 0;\n\t      } else if (sign0 !== sign1 && delta >= pi$3) { // line crosses antimeridian\n\t        if (abs(lambda0 - sign0) < epsilon$2) lambda0 -= sign0 * epsilon$2; // handle degeneracies\n\t        if (abs(lambda1 - sign1) < epsilon$2) lambda1 -= sign1 * epsilon$2;\n\t        phi0 = clipAntimeridianIntersect(lambda0, phi0, lambda1, phi1);\n\t        stream.point(sign0, phi0);\n\t        stream.lineEnd();\n\t        stream.lineStart();\n\t        stream.point(sign1, phi0);\n\t        clean = 0;\n\t      }\n\t      stream.point(lambda0 = lambda1, phi0 = phi1);\n\t      sign0 = sign1;\n\t    },\n\t    lineEnd: function() {\n\t      stream.lineEnd();\n\t      lambda0 = phi0 = NaN;\n\t    },\n\t    clean: function() {\n\t      return 2 - clean; // if intersections, rejoin first and last segments\n\t    }\n\t  };\n\t}\n\t\n\tfunction clipAntimeridianIntersect(lambda0, phi0, lambda1, phi1) {\n\t  var cosPhi0,\n\t      cosPhi1,\n\t      sinLambda0Lambda1 = sin$1(lambda0 - lambda1);\n\t  return abs(sinLambda0Lambda1) > epsilon$2\n\t      ? atan((sin$1(phi0) * (cosPhi1 = cos$1(phi1)) * sin$1(lambda1)\n\t          - sin$1(phi1) * (cosPhi0 = cos$1(phi0)) * sin$1(lambda0))\n\t          / (cosPhi0 * cosPhi1 * sinLambda0Lambda1))\n\t      : (phi0 + phi1) / 2;\n\t}\n\t\n\tfunction clipAntimeridianInterpolate(from, to, direction, stream) {\n\t  var phi;\n\t  if (from == null) {\n\t    phi = direction * halfPi$2;\n\t    stream.point(-pi$3, phi);\n\t    stream.point(0, phi);\n\t    stream.point(pi$3, phi);\n\t    stream.point(pi$3, 0);\n\t    stream.point(pi$3, -phi);\n\t    stream.point(0, -phi);\n\t    stream.point(-pi$3, -phi);\n\t    stream.point(-pi$3, 0);\n\t    stream.point(-pi$3, phi);\n\t  } else if (abs(from[0] - to[0]) > epsilon$2) {\n\t    var lambda = from[0] < to[0] ? pi$3 : -pi$3;\n\t    phi = direction * lambda / 2;\n\t    stream.point(-lambda, phi);\n\t    stream.point(0, phi);\n\t    stream.point(lambda, phi);\n\t  } else {\n\t    stream.point(to[0], to[1]);\n\t  }\n\t}\n\t\n\tvar clipCircle = function(radius) {\n\t  var cr = cos$1(radius),\n\t      delta = 6 * radians,\n\t      smallRadius = cr > 0,\n\t      notHemisphere = abs(cr) > epsilon$2; // TODO optimise for this common case\n\t\n\t  function interpolate(from, to, direction, stream) {\n\t    circleStream(stream, radius, delta, direction, from, to);\n\t  }\n\t\n\t  function visible(lambda, phi) {\n\t    return cos$1(lambda) * cos$1(phi) > cr;\n\t  }\n\t\n\t  // Takes a line and cuts into visible segments. Return values used for polygon\n\t  // clipping: 0 - there were intersections or the line was empty; 1 - no\n\t  // intersections 2 - there were intersections, and the first and last segments\n\t  // should be rejoined.\n\t  function clipLine(stream) {\n\t    var point0, // previous point\n\t        c0, // code for previous point\n\t        v0, // visibility of previous point\n\t        v00, // visibility of first point\n\t        clean; // no intersections\n\t    return {\n\t      lineStart: function() {\n\t        v00 = v0 = false;\n\t        clean = 1;\n\t      },\n\t      point: function(lambda, phi) {\n\t        var point1 = [lambda, phi],\n\t            point2,\n\t            v = visible(lambda, phi),\n\t            c = smallRadius\n\t              ? v ? 0 : code(lambda, phi)\n\t              : v ? code(lambda + (lambda < 0 ? pi$3 : -pi$3), phi) : 0;\n\t        if (!point0 && (v00 = v0 = v)) stream.lineStart();\n\t        // Handle degeneracies.\n\t        // TODO ignore if not clipping polygons.\n\t        if (v !== v0) {\n\t          point2 = intersect(point0, point1);\n\t          if (!point2 || pointEqual(point0, point2) || pointEqual(point1, point2)) {\n\t            point1[0] += epsilon$2;\n\t            point1[1] += epsilon$2;\n\t            v = visible(point1[0], point1[1]);\n\t          }\n\t        }\n\t        if (v !== v0) {\n\t          clean = 0;\n\t          if (v) {\n\t            // outside going in\n\t            stream.lineStart();\n\t            point2 = intersect(point1, point0);\n\t            stream.point(point2[0], point2[1]);\n\t          } else {\n\t            // inside going out\n\t            point2 = intersect(point0, point1);\n\t            stream.point(point2[0], point2[1]);\n\t            stream.lineEnd();\n\t          }\n\t          point0 = point2;\n\t        } else if (notHemisphere && point0 && smallRadius ^ v) {\n\t          var t;\n\t          // If the codes for two points are different, or are both zero,\n\t          // and there this segment intersects with the small circle.\n\t          if (!(c & c0) && (t = intersect(point1, point0, true))) {\n\t            clean = 0;\n\t            if (smallRadius) {\n\t              stream.lineStart();\n\t              stream.point(t[0][0], t[0][1]);\n\t              stream.point(t[1][0], t[1][1]);\n\t              stream.lineEnd();\n\t            } else {\n\t              stream.point(t[1][0], t[1][1]);\n\t              stream.lineEnd();\n\t              stream.lineStart();\n\t              stream.point(t[0][0], t[0][1]);\n\t            }\n\t          }\n\t        }\n\t        if (v && (!point0 || !pointEqual(point0, point1))) {\n\t          stream.point(point1[0], point1[1]);\n\t        }\n\t        point0 = point1, v0 = v, c0 = c;\n\t      },\n\t      lineEnd: function() {\n\t        if (v0) stream.lineEnd();\n\t        point0 = null;\n\t      },\n\t      // Rejoin first and last segments if there were intersections and the first\n\t      // and last points were visible.\n\t      clean: function() {\n\t        return clean | ((v00 && v0) << 1);\n\t      }\n\t    };\n\t  }\n\t\n\t  // Intersects the great circle between a and b with the clip circle.\n\t  function intersect(a, b, two) {\n\t    var pa = cartesian(a),\n\t        pb = cartesian(b);\n\t\n\t    // We have two planes, n1.p = d1 and n2.p = d2.\n\t    // Find intersection line p(t) = c1 n1 + c2 n2 + t (n1 ⨯ n2).\n\t    var n1 = [1, 0, 0], // normal\n\t        n2 = cartesianCross(pa, pb),\n\t        n2n2 = cartesianDot(n2, n2),\n\t        n1n2 = n2[0], // cartesianDot(n1, n2),\n\t        determinant = n2n2 - n1n2 * n1n2;\n\t\n\t    // Two polar points.\n\t    if (!determinant) return !two && a;\n\t\n\t    var c1 =  cr * n2n2 / determinant,\n\t        c2 = -cr * n1n2 / determinant,\n\t        n1xn2 = cartesianCross(n1, n2),\n\t        A = cartesianScale(n1, c1),\n\t        B = cartesianScale(n2, c2);\n\t    cartesianAddInPlace(A, B);\n\t\n\t    // Solve |p(t)|^2 = 1.\n\t    var u = n1xn2,\n\t        w = cartesianDot(A, u),\n\t        uu = cartesianDot(u, u),\n\t        t2 = w * w - uu * (cartesianDot(A, A) - 1);\n\t\n\t    if (t2 < 0) return;\n\t\n\t    var t = sqrt(t2),\n\t        q = cartesianScale(u, (-w - t) / uu);\n\t    cartesianAddInPlace(q, A);\n\t    q = spherical(q);\n\t\n\t    if (!two) return q;\n\t\n\t    // Two intersection points.\n\t    var lambda0 = a[0],\n\t        lambda1 = b[0],\n\t        phi0 = a[1],\n\t        phi1 = b[1],\n\t        z;\n\t\n\t    if (lambda1 < lambda0) z = lambda0, lambda0 = lambda1, lambda1 = z;\n\t\n\t    var delta = lambda1 - lambda0,\n\t        polar = abs(delta - pi$3) < epsilon$2,\n\t        meridian = polar || delta < epsilon$2;\n\t\n\t    if (!polar && phi1 < phi0) z = phi0, phi0 = phi1, phi1 = z;\n\t\n\t    // Check that the first point is between a and b.\n\t    if (meridian\n\t        ? polar\n\t          ? phi0 + phi1 > 0 ^ q[1] < (abs(q[0] - lambda0) < epsilon$2 ? phi0 : phi1)\n\t          : phi0 <= q[1] && q[1] <= phi1\n\t        : delta > pi$3 ^ (lambda0 <= q[0] && q[0] <= lambda1)) {\n\t      var q1 = cartesianScale(u, (-w + t) / uu);\n\t      cartesianAddInPlace(q1, A);\n\t      return [q, spherical(q1)];\n\t    }\n\t  }\n\t\n\t  // Generates a 4-bit vector representing the location of a point relative to\n\t  // the small circle's bounding box.\n\t  function code(lambda, phi) {\n\t    var r = smallRadius ? radius : pi$3 - radius,\n\t        code = 0;\n\t    if (lambda < -r) code |= 1; // left\n\t    else if (lambda > r) code |= 2; // right\n\t    if (phi < -r) code |= 4; // below\n\t    else if (phi > r) code |= 8; // above\n\t    return code;\n\t  }\n\t\n\t  return clip(visible, clipLine, interpolate, smallRadius ? [0, -radius] : [-pi$3, radius - pi$3]);\n\t};\n\t\n\tvar clipLine = function(a, b, x0, y0, x1, y1) {\n\t  var ax = a[0],\n\t      ay = a[1],\n\t      bx = b[0],\n\t      by = b[1],\n\t      t0 = 0,\n\t      t1 = 1,\n\t      dx = bx - ax,\n\t      dy = by - ay,\n\t      r;\n\t\n\t  r = x0 - ax;\n\t  if (!dx && r > 0) return;\n\t  r /= dx;\n\t  if (dx < 0) {\n\t    if (r < t0) return;\n\t    if (r < t1) t1 = r;\n\t  } else if (dx > 0) {\n\t    if (r > t1) return;\n\t    if (r > t0) t0 = r;\n\t  }\n\t\n\t  r = x1 - ax;\n\t  if (!dx && r < 0) return;\n\t  r /= dx;\n\t  if (dx < 0) {\n\t    if (r > t1) return;\n\t    if (r > t0) t0 = r;\n\t  } else if (dx > 0) {\n\t    if (r < t0) return;\n\t    if (r < t1) t1 = r;\n\t  }\n\t\n\t  r = y0 - ay;\n\t  if (!dy && r > 0) return;\n\t  r /= dy;\n\t  if (dy < 0) {\n\t    if (r < t0) return;\n\t    if (r < t1) t1 = r;\n\t  } else if (dy > 0) {\n\t    if (r > t1) return;\n\t    if (r > t0) t0 = r;\n\t  }\n\t\n\t  r = y1 - ay;\n\t  if (!dy && r < 0) return;\n\t  r /= dy;\n\t  if (dy < 0) {\n\t    if (r > t1) return;\n\t    if (r > t0) t0 = r;\n\t  } else if (dy > 0) {\n\t    if (r < t0) return;\n\t    if (r < t1) t1 = r;\n\t  }\n\t\n\t  if (t0 > 0) a[0] = ax + t0 * dx, a[1] = ay + t0 * dy;\n\t  if (t1 < 1) b[0] = ax + t1 * dx, b[1] = ay + t1 * dy;\n\t  return true;\n\t};\n\t\n\tvar clipMax = 1e9;\n\tvar clipMin = -clipMax;\n\t\n\t// TODO Use d3-polygon’s polygonContains here for the ring check?\n\t// TODO Eliminate duplicate buffering in clipBuffer and polygon.push?\n\t\n\tfunction clipRectangle(x0, y0, x1, y1) {\n\t\n\t  function visible(x, y) {\n\t    return x0 <= x && x <= x1 && y0 <= y && y <= y1;\n\t  }\n\t\n\t  function interpolate(from, to, direction, stream) {\n\t    var a = 0, a1 = 0;\n\t    if (from == null\n\t        || (a = corner(from, direction)) !== (a1 = corner(to, direction))\n\t        || comparePoint(from, to) < 0 ^ direction > 0) {\n\t      do stream.point(a === 0 || a === 3 ? x0 : x1, a > 1 ? y1 : y0);\n\t      while ((a = (a + direction + 4) % 4) !== a1);\n\t    } else {\n\t      stream.point(to[0], to[1]);\n\t    }\n\t  }\n\t\n\t  function corner(p, direction) {\n\t    return abs(p[0] - x0) < epsilon$2 ? direction > 0 ? 0 : 3\n\t        : abs(p[0] - x1) < epsilon$2 ? direction > 0 ? 2 : 1\n\t        : abs(p[1] - y0) < epsilon$2 ? direction > 0 ? 1 : 0\n\t        : direction > 0 ? 3 : 2; // abs(p[1] - y1) < epsilon\n\t  }\n\t\n\t  function compareIntersection(a, b) {\n\t    return comparePoint(a.x, b.x);\n\t  }\n\t\n\t  function comparePoint(a, b) {\n\t    var ca = corner(a, 1),\n\t        cb = corner(b, 1);\n\t    return ca !== cb ? ca - cb\n\t        : ca === 0 ? b[1] - a[1]\n\t        : ca === 1 ? a[0] - b[0]\n\t        : ca === 2 ? a[1] - b[1]\n\t        : b[0] - a[0];\n\t  }\n\t\n\t  return function(stream) {\n\t    var activeStream = stream,\n\t        bufferStream = clipBuffer(),\n\t        segments,\n\t        polygon,\n\t        ring,\n\t        x__, y__, v__, // first point\n\t        x_, y_, v_, // previous point\n\t        first,\n\t        clean;\n\t\n\t    var clipStream = {\n\t      point: point,\n\t      lineStart: lineStart,\n\t      lineEnd: lineEnd,\n\t      polygonStart: polygonStart,\n\t      polygonEnd: polygonEnd\n\t    };\n\t\n\t    function point(x, y) {\n\t      if (visible(x, y)) activeStream.point(x, y);\n\t    }\n\t\n\t    function polygonInside() {\n\t      var winding = 0;\n\t\n\t      for (var i = 0, n = polygon.length; i < n; ++i) {\n\t        for (var ring = polygon[i], j = 1, m = ring.length, point = ring[0], a0, a1, b0 = point[0], b1 = point[1]; j < m; ++j) {\n\t          a0 = b0, a1 = b1, point = ring[j], b0 = point[0], b1 = point[1];\n\t          if (a1 <= y1) { if (b1 > y1 && (b0 - a0) * (y1 - a1) > (b1 - a1) * (x0 - a0)) ++winding; }\n\t          else { if (b1 <= y1 && (b0 - a0) * (y1 - a1) < (b1 - a1) * (x0 - a0)) --winding; }\n\t        }\n\t      }\n\t\n\t      return winding;\n\t    }\n\t\n\t    // Buffer geometry within a polygon and then clip it en masse.\n\t    function polygonStart() {\n\t      activeStream = bufferStream, segments = [], polygon = [], clean = true;\n\t    }\n\t\n\t    function polygonEnd() {\n\t      var startInside = polygonInside(),\n\t          cleanInside = clean && startInside,\n\t          visible = (segments = merge(segments)).length;\n\t      if (cleanInside || visible) {\n\t        stream.polygonStart();\n\t        if (cleanInside) {\n\t          stream.lineStart();\n\t          interpolate(null, null, 1, stream);\n\t          stream.lineEnd();\n\t        }\n\t        if (visible) {\n\t          clipRejoin(segments, compareIntersection, startInside, interpolate, stream);\n\t        }\n\t        stream.polygonEnd();\n\t      }\n\t      activeStream = stream, segments = polygon = ring = null;\n\t    }\n\t\n\t    function lineStart() {\n\t      clipStream.point = linePoint;\n\t      if (polygon) polygon.push(ring = []);\n\t      first = true;\n\t      v_ = false;\n\t      x_ = y_ = NaN;\n\t    }\n\t\n\t    // TODO rather than special-case polygons, simply handle them separately.\n\t    // Ideally, coincident intersection points should be jittered to avoid\n\t    // clipping issues.\n\t    function lineEnd() {\n\t      if (segments) {\n\t        linePoint(x__, y__);\n\t        if (v__ && v_) bufferStream.rejoin();\n\t        segments.push(bufferStream.result());\n\t      }\n\t      clipStream.point = point;\n\t      if (v_) activeStream.lineEnd();\n\t    }\n\t\n\t    function linePoint(x, y) {\n\t      var v = visible(x, y);\n\t      if (polygon) ring.push([x, y]);\n\t      if (first) {\n\t        x__ = x, y__ = y, v__ = v;\n\t        first = false;\n\t        if (v) {\n\t          activeStream.lineStart();\n\t          activeStream.point(x, y);\n\t        }\n\t      } else {\n\t        if (v && v_) activeStream.point(x, y);\n\t        else {\n\t          var a = [x_ = Math.max(clipMin, Math.min(clipMax, x_)), y_ = Math.max(clipMin, Math.min(clipMax, y_))],\n\t              b = [x = Math.max(clipMin, Math.min(clipMax, x)), y = Math.max(clipMin, Math.min(clipMax, y))];\n\t          if (clipLine(a, b, x0, y0, x1, y1)) {\n\t            if (!v_) {\n\t              activeStream.lineStart();\n\t              activeStream.point(a[0], a[1]);\n\t            }\n\t            activeStream.point(b[0], b[1]);\n\t            if (!v) activeStream.lineEnd();\n\t            clean = false;\n\t          } else if (v) {\n\t            activeStream.lineStart();\n\t            activeStream.point(x, y);\n\t            clean = false;\n\t          }\n\t        }\n\t      }\n\t      x_ = x, y_ = y, v_ = v;\n\t    }\n\t\n\t    return clipStream;\n\t  };\n\t}\n\t\n\tvar extent$1 = function() {\n\t  var x0 = 0,\n\t      y0 = 0,\n\t      x1 = 960,\n\t      y1 = 500,\n\t      cache,\n\t      cacheStream,\n\t      clip;\n\t\n\t  return clip = {\n\t    stream: function(stream) {\n\t      return cache && cacheStream === stream ? cache : cache = clipRectangle(x0, y0, x1, y1)(cacheStream = stream);\n\t    },\n\t    extent: function(_) {\n\t      return arguments.length ? (x0 = +_[0][0], y0 = +_[0][1], x1 = +_[1][0], y1 = +_[1][1], cache = cacheStream = null, clip) : [[x0, y0], [x1, y1]];\n\t    }\n\t  };\n\t};\n\t\n\tvar lengthSum = adder();\n\tvar lambda0$2;\n\tvar sinPhi0$1;\n\tvar cosPhi0$1;\n\t\n\tvar lengthStream = {\n\t  sphere: noop$1,\n\t  point: noop$1,\n\t  lineStart: lengthLineStart,\n\t  lineEnd: noop$1,\n\t  polygonStart: noop$1,\n\t  polygonEnd: noop$1\n\t};\n\t\n\tfunction lengthLineStart() {\n\t  lengthStream.point = lengthPointFirst;\n\t  lengthStream.lineEnd = lengthLineEnd;\n\t}\n\t\n\tfunction lengthLineEnd() {\n\t  lengthStream.point = lengthStream.lineEnd = noop$1;\n\t}\n\t\n\tfunction lengthPointFirst(lambda, phi) {\n\t  lambda *= radians, phi *= radians;\n\t  lambda0$2 = lambda, sinPhi0$1 = sin$1(phi), cosPhi0$1 = cos$1(phi);\n\t  lengthStream.point = lengthPoint;\n\t}\n\t\n\tfunction lengthPoint(lambda, phi) {\n\t  lambda *= radians, phi *= radians;\n\t  var sinPhi = sin$1(phi),\n\t      cosPhi = cos$1(phi),\n\t      delta = abs(lambda - lambda0$2),\n\t      cosDelta = cos$1(delta),\n\t      sinDelta = sin$1(delta),\n\t      x = cosPhi * sinDelta,\n\t      y = cosPhi0$1 * sinPhi - sinPhi0$1 * cosPhi * cosDelta,\n\t      z = sinPhi0$1 * sinPhi + cosPhi0$1 * cosPhi * cosDelta;\n\t  lengthSum.add(atan2(sqrt(x * x + y * y), z));\n\t  lambda0$2 = lambda, sinPhi0$1 = sinPhi, cosPhi0$1 = cosPhi;\n\t}\n\t\n\tvar length$1 = function(object) {\n\t  lengthSum.reset();\n\t  geoStream(object, lengthStream);\n\t  return +lengthSum;\n\t};\n\t\n\tvar coordinates = [null, null];\n\tvar object$1 = {type: \"LineString\", coordinates: coordinates};\n\t\n\tvar distance = function(a, b) {\n\t  coordinates[0] = a;\n\t  coordinates[1] = b;\n\t  return length$1(object$1);\n\t};\n\t\n\tvar containsObjectType = {\n\t  Feature: function(object, point) {\n\t    return containsGeometry(object.geometry, point);\n\t  },\n\t  FeatureCollection: function(object, point) {\n\t    var features = object.features, i = -1, n = features.length;\n\t    while (++i < n) if (containsGeometry(features[i].geometry, point)) return true;\n\t    return false;\n\t  }\n\t};\n\t\n\tvar containsGeometryType = {\n\t  Sphere: function() {\n\t    return true;\n\t  },\n\t  Point: function(object, point) {\n\t    return containsPoint(object.coordinates, point);\n\t  },\n\t  MultiPoint: function(object, point) {\n\t    var coordinates = object.coordinates, i = -1, n = coordinates.length;\n\t    while (++i < n) if (containsPoint(coordinates[i], point)) return true;\n\t    return false;\n\t  },\n\t  LineString: function(object, point) {\n\t    return containsLine(object.coordinates, point);\n\t  },\n\t  MultiLineString: function(object, point) {\n\t    var coordinates = object.coordinates, i = -1, n = coordinates.length;\n\t    while (++i < n) if (containsLine(coordinates[i], point)) return true;\n\t    return false;\n\t  },\n\t  Polygon: function(object, point) {\n\t    return containsPolygon(object.coordinates, point);\n\t  },\n\t  MultiPolygon: function(object, point) {\n\t    var coordinates = object.coordinates, i = -1, n = coordinates.length;\n\t    while (++i < n) if (containsPolygon(coordinates[i], point)) return true;\n\t    return false;\n\t  },\n\t  GeometryCollection: function(object, point) {\n\t    var geometries = object.geometries, i = -1, n = geometries.length;\n\t    while (++i < n) if (containsGeometry(geometries[i], point)) return true;\n\t    return false;\n\t  }\n\t};\n\t\n\tfunction containsGeometry(geometry, point) {\n\t  return geometry && containsGeometryType.hasOwnProperty(geometry.type)\n\t      ? containsGeometryType[geometry.type](geometry, point)\n\t      : false;\n\t}\n\t\n\tfunction containsPoint(coordinates, point) {\n\t  return distance(coordinates, point) === 0;\n\t}\n\t\n\tfunction containsLine(coordinates, point) {\n\t  var ab = distance(coordinates[0], coordinates[1]),\n\t      ao = distance(coordinates[0], point),\n\t      ob = distance(point, coordinates[1]);\n\t  return ao + ob <= ab + epsilon$2;\n\t}\n\t\n\tfunction containsPolygon(coordinates, point) {\n\t  return !!polygonContains(coordinates.map(ringRadians), pointRadians(point));\n\t}\n\t\n\tfunction ringRadians(ring) {\n\t  return ring = ring.map(pointRadians), ring.pop(), ring;\n\t}\n\t\n\tfunction pointRadians(point) {\n\t  return [point[0] * radians, point[1] * radians];\n\t}\n\t\n\tvar contains = function(object, point) {\n\t  return (object && containsObjectType.hasOwnProperty(object.type)\n\t      ? containsObjectType[object.type]\n\t      : containsGeometry)(object, point);\n\t};\n\t\n\tfunction graticuleX(y0, y1, dy) {\n\t  var y = sequence(y0, y1 - epsilon$2, dy).concat(y1);\n\t  return function(x) { return y.map(function(y) { return [x, y]; }); };\n\t}\n\t\n\tfunction graticuleY(x0, x1, dx) {\n\t  var x = sequence(x0, x1 - epsilon$2, dx).concat(x1);\n\t  return function(y) { return x.map(function(x) { return [x, y]; }); };\n\t}\n\t\n\tfunction graticule() {\n\t  var x1, x0, X1, X0,\n\t      y1, y0, Y1, Y0,\n\t      dx = 10, dy = dx, DX = 90, DY = 360,\n\t      x, y, X, Y,\n\t      precision = 2.5;\n\t\n\t  function graticule() {\n\t    return {type: \"MultiLineString\", coordinates: lines()};\n\t  }\n\t\n\t  function lines() {\n\t    return sequence(ceil(X0 / DX) * DX, X1, DX).map(X)\n\t        .concat(sequence(ceil(Y0 / DY) * DY, Y1, DY).map(Y))\n\t        .concat(sequence(ceil(x0 / dx) * dx, x1, dx).filter(function(x) { return abs(x % DX) > epsilon$2; }).map(x))\n\t        .concat(sequence(ceil(y0 / dy) * dy, y1, dy).filter(function(y) { return abs(y % DY) > epsilon$2; }).map(y));\n\t  }\n\t\n\t  graticule.lines = function() {\n\t    return lines().map(function(coordinates) { return {type: \"LineString\", coordinates: coordinates}; });\n\t  };\n\t\n\t  graticule.outline = function() {\n\t    return {\n\t      type: \"Polygon\",\n\t      coordinates: [\n\t        X(X0).concat(\n\t        Y(Y1).slice(1),\n\t        X(X1).reverse().slice(1),\n\t        Y(Y0).reverse().slice(1))\n\t      ]\n\t    };\n\t  };\n\t\n\t  graticule.extent = function(_) {\n\t    if (!arguments.length) return graticule.extentMinor();\n\t    return graticule.extentMajor(_).extentMinor(_);\n\t  };\n\t\n\t  graticule.extentMajor = function(_) {\n\t    if (!arguments.length) return [[X0, Y0], [X1, Y1]];\n\t    X0 = +_[0][0], X1 = +_[1][0];\n\t    Y0 = +_[0][1], Y1 = +_[1][1];\n\t    if (X0 > X1) _ = X0, X0 = X1, X1 = _;\n\t    if (Y0 > Y1) _ = Y0, Y0 = Y1, Y1 = _;\n\t    return graticule.precision(precision);\n\t  };\n\t\n\t  graticule.extentMinor = function(_) {\n\t    if (!arguments.length) return [[x0, y0], [x1, y1]];\n\t    x0 = +_[0][0], x1 = +_[1][0];\n\t    y0 = +_[0][1], y1 = +_[1][1];\n\t    if (x0 > x1) _ = x0, x0 = x1, x1 = _;\n\t    if (y0 > y1) _ = y0, y0 = y1, y1 = _;\n\t    return graticule.precision(precision);\n\t  };\n\t\n\t  graticule.step = function(_) {\n\t    if (!arguments.length) return graticule.stepMinor();\n\t    return graticule.stepMajor(_).stepMinor(_);\n\t  };\n\t\n\t  graticule.stepMajor = function(_) {\n\t    if (!arguments.length) return [DX, DY];\n\t    DX = +_[0], DY = +_[1];\n\t    return graticule;\n\t  };\n\t\n\t  graticule.stepMinor = function(_) {\n\t    if (!arguments.length) return [dx, dy];\n\t    dx = +_[0], dy = +_[1];\n\t    return graticule;\n\t  };\n\t\n\t  graticule.precision = function(_) {\n\t    if (!arguments.length) return precision;\n\t    precision = +_;\n\t    x = graticuleX(y0, y1, 90);\n\t    y = graticuleY(x0, x1, precision);\n\t    X = graticuleX(Y0, Y1, 90);\n\t    Y = graticuleY(X0, X1, precision);\n\t    return graticule;\n\t  };\n\t\n\t  return graticule\n\t      .extentMajor([[-180, -90 + epsilon$2], [180, 90 - epsilon$2]])\n\t      .extentMinor([[-180, -80 - epsilon$2], [180, 80 + epsilon$2]]);\n\t}\n\t\n\tfunction graticule10() {\n\t  return graticule()();\n\t}\n\t\n\tvar interpolate$1 = function(a, b) {\n\t  var x0 = a[0] * radians,\n\t      y0 = a[1] * radians,\n\t      x1 = b[0] * radians,\n\t      y1 = b[1] * radians,\n\t      cy0 = cos$1(y0),\n\t      sy0 = sin$1(y0),\n\t      cy1 = cos$1(y1),\n\t      sy1 = sin$1(y1),\n\t      kx0 = cy0 * cos$1(x0),\n\t      ky0 = cy0 * sin$1(x0),\n\t      kx1 = cy1 * cos$1(x1),\n\t      ky1 = cy1 * sin$1(x1),\n\t      d = 2 * asin(sqrt(haversin(y1 - y0) + cy0 * cy1 * haversin(x1 - x0))),\n\t      k = sin$1(d);\n\t\n\t  var interpolate = d ? function(t) {\n\t    var B = sin$1(t *= d) / k,\n\t        A = sin$1(d - t) / k,\n\t        x = A * kx0 + B * kx1,\n\t        y = A * ky0 + B * ky1,\n\t        z = A * sy0 + B * sy1;\n\t    return [\n\t      atan2(y, x) * degrees$1,\n\t      atan2(z, sqrt(x * x + y * y)) * degrees$1\n\t    ];\n\t  } : function() {\n\t    return [x0 * degrees$1, y0 * degrees$1];\n\t  };\n\t\n\t  interpolate.distance = d;\n\t\n\t  return interpolate;\n\t};\n\t\n\tvar identity$4 = function(x) {\n\t  return x;\n\t};\n\t\n\tvar areaSum$1 = adder();\n\tvar areaRingSum$1 = adder();\n\tvar x00;\n\tvar y00;\n\tvar x0$1;\n\tvar y0$1;\n\t\n\tvar areaStream$1 = {\n\t  point: noop$1,\n\t  lineStart: noop$1,\n\t  lineEnd: noop$1,\n\t  polygonStart: function() {\n\t    areaStream$1.lineStart = areaRingStart$1;\n\t    areaStream$1.lineEnd = areaRingEnd$1;\n\t  },\n\t  polygonEnd: function() {\n\t    areaStream$1.lineStart = areaStream$1.lineEnd = areaStream$1.point = noop$1;\n\t    areaSum$1.add(abs(areaRingSum$1));\n\t    areaRingSum$1.reset();\n\t  },\n\t  result: function() {\n\t    var area = areaSum$1 / 2;\n\t    areaSum$1.reset();\n\t    return area;\n\t  }\n\t};\n\t\n\tfunction areaRingStart$1() {\n\t  areaStream$1.point = areaPointFirst$1;\n\t}\n\t\n\tfunction areaPointFirst$1(x, y) {\n\t  areaStream$1.point = areaPoint$1;\n\t  x00 = x0$1 = x, y00 = y0$1 = y;\n\t}\n\t\n\tfunction areaPoint$1(x, y) {\n\t  areaRingSum$1.add(y0$1 * x - x0$1 * y);\n\t  x0$1 = x, y0$1 = y;\n\t}\n\t\n\tfunction areaRingEnd$1() {\n\t  areaPoint$1(x00, y00);\n\t}\n\t\n\tvar x0$2 = Infinity;\n\tvar y0$2 = x0$2;\n\tvar x1 = -x0$2;\n\tvar y1 = x1;\n\t\n\tvar boundsStream$1 = {\n\t  point: boundsPoint$1,\n\t  lineStart: noop$1,\n\t  lineEnd: noop$1,\n\t  polygonStart: noop$1,\n\t  polygonEnd: noop$1,\n\t  result: function() {\n\t    var bounds = [[x0$2, y0$2], [x1, y1]];\n\t    x1 = y1 = -(y0$2 = x0$2 = Infinity);\n\t    return bounds;\n\t  }\n\t};\n\t\n\tfunction boundsPoint$1(x, y) {\n\t  if (x < x0$2) x0$2 = x;\n\t  if (x > x1) x1 = x;\n\t  if (y < y0$2) y0$2 = y;\n\t  if (y > y1) y1 = y;\n\t}\n\t\n\t// TODO Enforce positive area for exterior, negative area for interior?\n\t\n\tvar X0$1 = 0;\n\tvar Y0$1 = 0;\n\tvar Z0$1 = 0;\n\tvar X1$1 = 0;\n\tvar Y1$1 = 0;\n\tvar Z1$1 = 0;\n\tvar X2$1 = 0;\n\tvar Y2$1 = 0;\n\tvar Z2$1 = 0;\n\tvar x00$1;\n\tvar y00$1;\n\tvar x0$3;\n\tvar y0$3;\n\t\n\tvar centroidStream$1 = {\n\t  point: centroidPoint$1,\n\t  lineStart: centroidLineStart$1,\n\t  lineEnd: centroidLineEnd$1,\n\t  polygonStart: function() {\n\t    centroidStream$1.lineStart = centroidRingStart$1;\n\t    centroidStream$1.lineEnd = centroidRingEnd$1;\n\t  },\n\t  polygonEnd: function() {\n\t    centroidStream$1.point = centroidPoint$1;\n\t    centroidStream$1.lineStart = centroidLineStart$1;\n\t    centroidStream$1.lineEnd = centroidLineEnd$1;\n\t  },\n\t  result: function() {\n\t    var centroid = Z2$1 ? [X2$1 / Z2$1, Y2$1 / Z2$1]\n\t        : Z1$1 ? [X1$1 / Z1$1, Y1$1 / Z1$1]\n\t        : Z0$1 ? [X0$1 / Z0$1, Y0$1 / Z0$1]\n\t        : [NaN, NaN];\n\t    X0$1 = Y0$1 = Z0$1 =\n\t    X1$1 = Y1$1 = Z1$1 =\n\t    X2$1 = Y2$1 = Z2$1 = 0;\n\t    return centroid;\n\t  }\n\t};\n\t\n\tfunction centroidPoint$1(x, y) {\n\t  X0$1 += x;\n\t  Y0$1 += y;\n\t  ++Z0$1;\n\t}\n\t\n\tfunction centroidLineStart$1() {\n\t  centroidStream$1.point = centroidPointFirstLine;\n\t}\n\t\n\tfunction centroidPointFirstLine(x, y) {\n\t  centroidStream$1.point = centroidPointLine;\n\t  centroidPoint$1(x0$3 = x, y0$3 = y);\n\t}\n\t\n\tfunction centroidPointLine(x, y) {\n\t  var dx = x - x0$3, dy = y - y0$3, z = sqrt(dx * dx + dy * dy);\n\t  X1$1 += z * (x0$3 + x) / 2;\n\t  Y1$1 += z * (y0$3 + y) / 2;\n\t  Z1$1 += z;\n\t  centroidPoint$1(x0$3 = x, y0$3 = y);\n\t}\n\t\n\tfunction centroidLineEnd$1() {\n\t  centroidStream$1.point = centroidPoint$1;\n\t}\n\t\n\tfunction centroidRingStart$1() {\n\t  centroidStream$1.point = centroidPointFirstRing;\n\t}\n\t\n\tfunction centroidRingEnd$1() {\n\t  centroidPointRing(x00$1, y00$1);\n\t}\n\t\n\tfunction centroidPointFirstRing(x, y) {\n\t  centroidStream$1.point = centroidPointRing;\n\t  centroidPoint$1(x00$1 = x0$3 = x, y00$1 = y0$3 = y);\n\t}\n\t\n\tfunction centroidPointRing(x, y) {\n\t  var dx = x - x0$3,\n\t      dy = y - y0$3,\n\t      z = sqrt(dx * dx + dy * dy);\n\t\n\t  X1$1 += z * (x0$3 + x) / 2;\n\t  Y1$1 += z * (y0$3 + y) / 2;\n\t  Z1$1 += z;\n\t\n\t  z = y0$3 * x - x0$3 * y;\n\t  X2$1 += z * (x0$3 + x);\n\t  Y2$1 += z * (y0$3 + y);\n\t  Z2$1 += z * 3;\n\t  centroidPoint$1(x0$3 = x, y0$3 = y);\n\t}\n\t\n\tfunction PathContext(context) {\n\t  this._context = context;\n\t}\n\t\n\tPathContext.prototype = {\n\t  _radius: 4.5,\n\t  pointRadius: function(_) {\n\t    return this._radius = _, this;\n\t  },\n\t  polygonStart: function() {\n\t    this._line = 0;\n\t  },\n\t  polygonEnd: function() {\n\t    this._line = NaN;\n\t  },\n\t  lineStart: function() {\n\t    this._point = 0;\n\t  },\n\t  lineEnd: function() {\n\t    if (this._line === 0) this._context.closePath();\n\t    this._point = NaN;\n\t  },\n\t  point: function(x, y) {\n\t    switch (this._point) {\n\t      case 0: {\n\t        this._context.moveTo(x, y);\n\t        this._point = 1;\n\t        break;\n\t      }\n\t      case 1: {\n\t        this._context.lineTo(x, y);\n\t        break;\n\t      }\n\t      default: {\n\t        this._context.moveTo(x + this._radius, y);\n\t        this._context.arc(x, y, this._radius, 0, tau$3);\n\t        break;\n\t      }\n\t    }\n\t  },\n\t  result: noop$1\n\t};\n\t\n\tvar lengthSum$1 = adder();\n\tvar lengthRing;\n\tvar x00$2;\n\tvar y00$2;\n\tvar x0$4;\n\tvar y0$4;\n\t\n\tvar lengthStream$1 = {\n\t  point: noop$1,\n\t  lineStart: function() {\n\t    lengthStream$1.point = lengthPointFirst$1;\n\t  },\n\t  lineEnd: function() {\n\t    if (lengthRing) lengthPoint$1(x00$2, y00$2);\n\t    lengthStream$1.point = noop$1;\n\t  },\n\t  polygonStart: function() {\n\t    lengthRing = true;\n\t  },\n\t  polygonEnd: function() {\n\t    lengthRing = null;\n\t  },\n\t  result: function() {\n\t    var length = +lengthSum$1;\n\t    lengthSum$1.reset();\n\t    return length;\n\t  }\n\t};\n\t\n\tfunction lengthPointFirst$1(x, y) {\n\t  lengthStream$1.point = lengthPoint$1;\n\t  x00$2 = x0$4 = x, y00$2 = y0$4 = y;\n\t}\n\t\n\tfunction lengthPoint$1(x, y) {\n\t  x0$4 -= x, y0$4 -= y;\n\t  lengthSum$1.add(sqrt(x0$4 * x0$4 + y0$4 * y0$4));\n\t  x0$4 = x, y0$4 = y;\n\t}\n\t\n\tfunction PathString() {\n\t  this._string = [];\n\t}\n\t\n\tPathString.prototype = {\n\t  _radius: 4.5,\n\t  _circle: circle$1(4.5),\n\t  pointRadius: function(_) {\n\t    if ((_ = +_) !== this._radius) this._radius = _, this._circle = null;\n\t    return this;\n\t  },\n\t  polygonStart: function() {\n\t    this._line = 0;\n\t  },\n\t  polygonEnd: function() {\n\t    this._line = NaN;\n\t  },\n\t  lineStart: function() {\n\t    this._point = 0;\n\t  },\n\t  lineEnd: function() {\n\t    if (this._line === 0) this._string.push(\"Z\");\n\t    this._point = NaN;\n\t  },\n\t  point: function(x, y) {\n\t    switch (this._point) {\n\t      case 0: {\n\t        this._string.push(\"M\", x, \",\", y);\n\t        this._point = 1;\n\t        break;\n\t      }\n\t      case 1: {\n\t        this._string.push(\"L\", x, \",\", y);\n\t        break;\n\t      }\n\t      default: {\n\t        if (this._circle == null) this._circle = circle$1(this._radius);\n\t        this._string.push(\"M\", x, \",\", y, this._circle);\n\t        break;\n\t      }\n\t    }\n\t  },\n\t  result: function() {\n\t    if (this._string.length) {\n\t      var result = this._string.join(\"\");\n\t      this._string = [];\n\t      return result;\n\t    } else {\n\t      return null;\n\t    }\n\t  }\n\t};\n\t\n\tfunction circle$1(radius) {\n\t  return \"m0,\" + radius\n\t      + \"a\" + radius + \",\" + radius + \" 0 1,1 0,\" + -2 * radius\n\t      + \"a\" + radius + \",\" + radius + \" 0 1,1 0,\" + 2 * radius\n\t      + \"z\";\n\t}\n\t\n\tvar index$1 = function(projection, context) {\n\t  var pointRadius = 4.5,\n\t      projectionStream,\n\t      contextStream;\n\t\n\t  function path(object) {\n\t    if (object) {\n\t      if (typeof pointRadius === \"function\") contextStream.pointRadius(+pointRadius.apply(this, arguments));\n\t      geoStream(object, projectionStream(contextStream));\n\t    }\n\t    return contextStream.result();\n\t  }\n\t\n\t  path.area = function(object) {\n\t    geoStream(object, projectionStream(areaStream$1));\n\t    return areaStream$1.result();\n\t  };\n\t\n\t  path.measure = function(object) {\n\t    geoStream(object, projectionStream(lengthStream$1));\n\t    return lengthStream$1.result();\n\t  };\n\t\n\t  path.bounds = function(object) {\n\t    geoStream(object, projectionStream(boundsStream$1));\n\t    return boundsStream$1.result();\n\t  };\n\t\n\t  path.centroid = function(object) {\n\t    geoStream(object, projectionStream(centroidStream$1));\n\t    return centroidStream$1.result();\n\t  };\n\t\n\t  path.projection = function(_) {\n\t    return arguments.length ? (projectionStream = _ == null ? (projection = null, identity$4) : (projection = _).stream, path) : projection;\n\t  };\n\t\n\t  path.context = function(_) {\n\t    if (!arguments.length) return context;\n\t    contextStream = _ == null ? (context = null, new PathString) : new PathContext(context = _);\n\t    if (typeof pointRadius !== \"function\") contextStream.pointRadius(pointRadius);\n\t    return path;\n\t  };\n\t\n\t  path.pointRadius = function(_) {\n\t    if (!arguments.length) return pointRadius;\n\t    pointRadius = typeof _ === \"function\" ? _ : (contextStream.pointRadius(+_), +_);\n\t    return path;\n\t  };\n\t\n\t  return path.projection(projection).context(context);\n\t};\n\t\n\tvar transform = function(methods) {\n\t  return {\n\t    stream: transformer(methods)\n\t  };\n\t};\n\t\n\tfunction transformer(methods) {\n\t  return function(stream) {\n\t    var s = new TransformStream;\n\t    for (var key in methods) s[key] = methods[key];\n\t    s.stream = stream;\n\t    return s;\n\t  };\n\t}\n\t\n\tfunction TransformStream() {}\n\t\n\tTransformStream.prototype = {\n\t  constructor: TransformStream,\n\t  point: function(x, y) { this.stream.point(x, y); },\n\t  sphere: function() { this.stream.sphere(); },\n\t  lineStart: function() { this.stream.lineStart(); },\n\t  lineEnd: function() { this.stream.lineEnd(); },\n\t  polygonStart: function() { this.stream.polygonStart(); },\n\t  polygonEnd: function() { this.stream.polygonEnd(); }\n\t};\n\t\n\tfunction fitExtent(projection, extent, object) {\n\t  var w = extent[1][0] - extent[0][0],\n\t      h = extent[1][1] - extent[0][1],\n\t      clip = projection.clipExtent && projection.clipExtent();\n\t\n\t  projection\n\t      .scale(150)\n\t      .translate([0, 0]);\n\t\n\t  if (clip != null) projection.clipExtent(null);\n\t\n\t  geoStream(object, projection.stream(boundsStream$1));\n\t\n\t  var b = boundsStream$1.result(),\n\t      k = Math.min(w / (b[1][0] - b[0][0]), h / (b[1][1] - b[0][1])),\n\t      x = +extent[0][0] + (w - k * (b[1][0] + b[0][0])) / 2,\n\t      y = +extent[0][1] + (h - k * (b[1][1] + b[0][1])) / 2;\n\t\n\t  if (clip != null) projection.clipExtent(clip);\n\t\n\t  return projection\n\t      .scale(k * 150)\n\t      .translate([x, y]);\n\t}\n\t\n\tfunction fitSize(projection, size, object) {\n\t  return fitExtent(projection, [[0, 0], size], object);\n\t}\n\t\n\tvar maxDepth = 16;\n\tvar cosMinDistance = cos$1(30 * radians); // cos(minimum angular distance)\n\t\n\tvar resample = function(project, delta2) {\n\t  return +delta2 ? resample$1(project, delta2) : resampleNone(project);\n\t};\n\t\n\tfunction resampleNone(project) {\n\t  return transformer({\n\t    point: function(x, y) {\n\t      x = project(x, y);\n\t      this.stream.point(x[0], x[1]);\n\t    }\n\t  });\n\t}\n\t\n\tfunction resample$1(project, delta2) {\n\t\n\t  function resampleLineTo(x0, y0, lambda0, a0, b0, c0, x1, y1, lambda1, a1, b1, c1, depth, stream) {\n\t    var dx = x1 - x0,\n\t        dy = y1 - y0,\n\t        d2 = dx * dx + dy * dy;\n\t    if (d2 > 4 * delta2 && depth--) {\n\t      var a = a0 + a1,\n\t          b = b0 + b1,\n\t          c = c0 + c1,\n\t          m = sqrt(a * a + b * b + c * c),\n\t          phi2 = asin(c /= m),\n\t          lambda2 = abs(abs(c) - 1) < epsilon$2 || abs(lambda0 - lambda1) < epsilon$2 ? (lambda0 + lambda1) / 2 : atan2(b, a),\n\t          p = project(lambda2, phi2),\n\t          x2 = p[0],\n\t          y2 = p[1],\n\t          dx2 = x2 - x0,\n\t          dy2 = y2 - y0,\n\t          dz = dy * dx2 - dx * dy2;\n\t      if (dz * dz / d2 > delta2 // perpendicular projected distance\n\t          || abs((dx * dx2 + dy * dy2) / d2 - 0.5) > 0.3 // midpoint close to an end\n\t          || a0 * a1 + b0 * b1 + c0 * c1 < cosMinDistance) { // angular distance\n\t        resampleLineTo(x0, y0, lambda0, a0, b0, c0, x2, y2, lambda2, a /= m, b /= m, c, depth, stream);\n\t        stream.point(x2, y2);\n\t        resampleLineTo(x2, y2, lambda2, a, b, c, x1, y1, lambda1, a1, b1, c1, depth, stream);\n\t      }\n\t    }\n\t  }\n\t  return function(stream) {\n\t    var lambda00, x00, y00, a00, b00, c00, // first point\n\t        lambda0, x0, y0, a0, b0, c0; // previous point\n\t\n\t    var resampleStream = {\n\t      point: point,\n\t      lineStart: lineStart,\n\t      lineEnd: lineEnd,\n\t      polygonStart: function() { stream.polygonStart(); resampleStream.lineStart = ringStart; },\n\t      polygonEnd: function() { stream.polygonEnd(); resampleStream.lineStart = lineStart; }\n\t    };\n\t\n\t    function point(x, y) {\n\t      x = project(x, y);\n\t      stream.point(x[0], x[1]);\n\t    }\n\t\n\t    function lineStart() {\n\t      x0 = NaN;\n\t      resampleStream.point = linePoint;\n\t      stream.lineStart();\n\t    }\n\t\n\t    function linePoint(lambda, phi) {\n\t      var c = cartesian([lambda, phi]), p = project(lambda, phi);\n\t      resampleLineTo(x0, y0, lambda0, a0, b0, c0, x0 = p[0], y0 = p[1], lambda0 = lambda, a0 = c[0], b0 = c[1], c0 = c[2], maxDepth, stream);\n\t      stream.point(x0, y0);\n\t    }\n\t\n\t    function lineEnd() {\n\t      resampleStream.point = point;\n\t      stream.lineEnd();\n\t    }\n\t\n\t    function ringStart() {\n\t      lineStart();\n\t      resampleStream.point = ringPoint;\n\t      resampleStream.lineEnd = ringEnd;\n\t    }\n\t\n\t    function ringPoint(lambda, phi) {\n\t      linePoint(lambda00 = lambda, phi), x00 = x0, y00 = y0, a00 = a0, b00 = b0, c00 = c0;\n\t      resampleStream.point = linePoint;\n\t    }\n\t\n\t    function ringEnd() {\n\t      resampleLineTo(x0, y0, lambda0, a0, b0, c0, x00, y00, lambda00, a00, b00, c00, maxDepth, stream);\n\t      resampleStream.lineEnd = lineEnd;\n\t      lineEnd();\n\t    }\n\t\n\t    return resampleStream;\n\t  };\n\t}\n\t\n\tvar transformRadians = transformer({\n\t  point: function(x, y) {\n\t    this.stream.point(x * radians, y * radians);\n\t  }\n\t});\n\t\n\tfunction transformRotate(rotate) {\n\t  return transformer({\n\t    point: function(x, y) {\n\t      var r = rotate(x, y);\n\t      return this.stream.point(r[0], r[1]);\n\t    }\n\t  });\n\t}\n\t\n\tfunction projection(project) {\n\t  return projectionMutator(function() { return project; })();\n\t}\n\t\n\tfunction projectionMutator(projectAt) {\n\t  var project,\n\t      k = 150, // scale\n\t      x = 480, y = 250, // translate\n\t      dx, dy, lambda = 0, phi = 0, // center\n\t      deltaLambda = 0, deltaPhi = 0, deltaGamma = 0, rotate, projectRotate, // rotate\n\t      theta = null, preclip = clipAntimeridian, // clip angle\n\t      x0 = null, y0, x1, y1, postclip = identity$4, // clip extent\n\t      delta2 = 0.5, projectResample = resample(projectTransform, delta2), // precision\n\t      cache,\n\t      cacheStream;\n\t\n\t  function projection(point) {\n\t    point = projectRotate(point[0] * radians, point[1] * radians);\n\t    return [point[0] * k + dx, dy - point[1] * k];\n\t  }\n\t\n\t  function invert(point) {\n\t    point = projectRotate.invert((point[0] - dx) / k, (dy - point[1]) / k);\n\t    return point && [point[0] * degrees$1, point[1] * degrees$1];\n\t  }\n\t\n\t  function projectTransform(x, y) {\n\t    return x = project(x, y), [x[0] * k + dx, dy - x[1] * k];\n\t  }\n\t\n\t  projection.stream = function(stream) {\n\t    return cache && cacheStream === stream ? cache : cache = transformRadians(transformRotate(rotate)(preclip(projectResample(postclip(cacheStream = stream)))));\n\t  };\n\t\n\t  projection.preclip = function(_) {\n\t    return arguments.length ? (preclip = _, theta = undefined, reset()) : preclip;\n\t  };\n\t\n\t  projection.postclip = function(_) {\n\t    return arguments.length ? (postclip = _, x0 = y0 = x1 = y1 = null, reset()) : postclip;\n\t  };\n\t\n\t  projection.clipAngle = function(_) {\n\t    return arguments.length ? (preclip = +_ ? clipCircle(theta = _ * radians) : (theta = null, clipAntimeridian), reset()) : theta * degrees$1;\n\t  };\n\t\n\t  projection.clipExtent = function(_) {\n\t    return arguments.length ? (postclip = _ == null ? (x0 = y0 = x1 = y1 = null, identity$4) : clipRectangle(x0 = +_[0][0], y0 = +_[0][1], x1 = +_[1][0], y1 = +_[1][1]), reset()) : x0 == null ? null : [[x0, y0], [x1, y1]];\n\t  };\n\t\n\t  projection.scale = function(_) {\n\t    return arguments.length ? (k = +_, recenter()) : k;\n\t  };\n\t\n\t  projection.translate = function(_) {\n\t    return arguments.length ? (x = +_[0], y = +_[1], recenter()) : [x, y];\n\t  };\n\t\n\t  projection.center = function(_) {\n\t    return arguments.length ? (lambda = _[0] % 360 * radians, phi = _[1] % 360 * radians, recenter()) : [lambda * degrees$1, phi * degrees$1];\n\t  };\n\t\n\t  projection.rotate = function(_) {\n\t    return arguments.length ? (deltaLambda = _[0] % 360 * radians, deltaPhi = _[1] % 360 * radians, deltaGamma = _.length > 2 ? _[2] % 360 * radians : 0, recenter()) : [deltaLambda * degrees$1, deltaPhi * degrees$1, deltaGamma * degrees$1];\n\t  };\n\t\n\t  projection.precision = function(_) {\n\t    return arguments.length ? (projectResample = resample(projectTransform, delta2 = _ * _), reset()) : sqrt(delta2);\n\t  };\n\t\n\t  projection.fitExtent = function(extent, object) {\n\t    return fitExtent(projection, extent, object);\n\t  };\n\t\n\t  projection.fitSize = function(size, object) {\n\t    return fitSize(projection, size, object);\n\t  };\n\t\n\t  function recenter() {\n\t    projectRotate = compose(rotate = rotateRadians(deltaLambda, deltaPhi, deltaGamma), project);\n\t    var center = project(lambda, phi);\n\t    dx = x - center[0] * k;\n\t    dy = y + center[1] * k;\n\t    return reset();\n\t  }\n\t\n\t  function reset() {\n\t    cache = cacheStream = null;\n\t    return projection;\n\t  }\n\t\n\t  return function() {\n\t    project = projectAt.apply(this, arguments);\n\t    projection.invert = project.invert && invert;\n\t    return recenter();\n\t  };\n\t}\n\t\n\tfunction conicProjection(projectAt) {\n\t  var phi0 = 0,\n\t      phi1 = pi$3 / 3,\n\t      m = projectionMutator(projectAt),\n\t      p = m(phi0, phi1);\n\t\n\t  p.parallels = function(_) {\n\t    return arguments.length ? m(phi0 = _[0] * radians, phi1 = _[1] * radians) : [phi0 * degrees$1, phi1 * degrees$1];\n\t  };\n\t\n\t  return p;\n\t}\n\t\n\tfunction cylindricalEqualAreaRaw(phi0) {\n\t  var cosPhi0 = cos$1(phi0);\n\t\n\t  function forward(lambda, phi) {\n\t    return [lambda * cosPhi0, sin$1(phi) / cosPhi0];\n\t  }\n\t\n\t  forward.invert = function(x, y) {\n\t    return [x / cosPhi0, asin(y * cosPhi0)];\n\t  };\n\t\n\t  return forward;\n\t}\n\t\n\tfunction conicEqualAreaRaw(y0, y1) {\n\t  var sy0 = sin$1(y0), n = (sy0 + sin$1(y1)) / 2;\n\t\n\t  // Are the parallels symmetrical around the Equator?\n\t  if (abs(n) < epsilon$2) return cylindricalEqualAreaRaw(y0);\n\t\n\t  var c = 1 + sy0 * (2 * n - sy0), r0 = sqrt(c) / n;\n\t\n\t  function project(x, y) {\n\t    var r = sqrt(c - 2 * n * sin$1(y)) / n;\n\t    return [r * sin$1(x *= n), r0 - r * cos$1(x)];\n\t  }\n\t\n\t  project.invert = function(x, y) {\n\t    var r0y = r0 - y;\n\t    return [atan2(x, abs(r0y)) / n * sign(r0y), asin((c - (x * x + r0y * r0y) * n * n) / (2 * n))];\n\t  };\n\t\n\t  return project;\n\t}\n\t\n\tvar conicEqualArea = function() {\n\t  return conicProjection(conicEqualAreaRaw)\n\t      .scale(155.424)\n\t      .center([0, 33.6442]);\n\t};\n\t\n\tvar albers = function() {\n\t  return conicEqualArea()\n\t      .parallels([29.5, 45.5])\n\t      .scale(1070)\n\t      .translate([480, 250])\n\t      .rotate([96, 0])\n\t      .center([-0.6, 38.7]);\n\t};\n\t\n\t// The projections must have mutually exclusive clip regions on the sphere,\n\t// as this will avoid emitting interleaving lines and polygons.\n\tfunction multiplex(streams) {\n\t  var n = streams.length;\n\t  return {\n\t    point: function(x, y) { var i = -1; while (++i < n) streams[i].point(x, y); },\n\t    sphere: function() { var i = -1; while (++i < n) streams[i].sphere(); },\n\t    lineStart: function() { var i = -1; while (++i < n) streams[i].lineStart(); },\n\t    lineEnd: function() { var i = -1; while (++i < n) streams[i].lineEnd(); },\n\t    polygonStart: function() { var i = -1; while (++i < n) streams[i].polygonStart(); },\n\t    polygonEnd: function() { var i = -1; while (++i < n) streams[i].polygonEnd(); }\n\t  };\n\t}\n\t\n\t// A composite projection for the United States, configured by default for\n\t// 960×500. The projection also works quite well at 960×600 if you change the\n\t// scale to 1285 and adjust the translate accordingly. The set of standard\n\t// parallels for each region comes from USGS, which is published here:\n\t// http://egsc.usgs.gov/isb/pubs/MapProjections/projections.html#albers\n\tvar albersUsa = function() {\n\t  var cache,\n\t      cacheStream,\n\t      lower48 = albers(), lower48Point,\n\t      alaska = conicEqualArea().rotate([154, 0]).center([-2, 58.5]).parallels([55, 65]), alaskaPoint, // EPSG:3338\n\t      hawaii = conicEqualArea().rotate([157, 0]).center([-3, 19.9]).parallels([8, 18]), hawaiiPoint, // ESRI:102007\n\t      point, pointStream = {point: function(x, y) { point = [x, y]; }};\n\t\n\t  function albersUsa(coordinates) {\n\t    var x = coordinates[0], y = coordinates[1];\n\t    return point = null,\n\t        (lower48Point.point(x, y), point)\n\t        || (alaskaPoint.point(x, y), point)\n\t        || (hawaiiPoint.point(x, y), point);\n\t  }\n\t\n\t  albersUsa.invert = function(coordinates) {\n\t    var k = lower48.scale(),\n\t        t = lower48.translate(),\n\t        x = (coordinates[0] - t[0]) / k,\n\t        y = (coordinates[1] - t[1]) / k;\n\t    return (y >= 0.120 && y < 0.234 && x >= -0.425 && x < -0.214 ? alaska\n\t        : y >= 0.166 && y < 0.234 && x >= -0.214 && x < -0.115 ? hawaii\n\t        : lower48).invert(coordinates);\n\t  };\n\t\n\t  albersUsa.stream = function(stream) {\n\t    return cache && cacheStream === stream ? cache : cache = multiplex([lower48.stream(cacheStream = stream), alaska.stream(stream), hawaii.stream(stream)]);\n\t  };\n\t\n\t  albersUsa.precision = function(_) {\n\t    if (!arguments.length) return lower48.precision();\n\t    lower48.precision(_), alaska.precision(_), hawaii.precision(_);\n\t    return reset();\n\t  };\n\t\n\t  albersUsa.scale = function(_) {\n\t    if (!arguments.length) return lower48.scale();\n\t    lower48.scale(_), alaska.scale(_ * 0.35), hawaii.scale(_);\n\t    return albersUsa.translate(lower48.translate());\n\t  };\n\t\n\t  albersUsa.translate = function(_) {\n\t    if (!arguments.length) return lower48.translate();\n\t    var k = lower48.scale(), x = +_[0], y = +_[1];\n\t\n\t    lower48Point = lower48\n\t        .translate(_)\n\t        .clipExtent([[x - 0.455 * k, y - 0.238 * k], [x + 0.455 * k, y + 0.238 * k]])\n\t        .stream(pointStream);\n\t\n\t    alaskaPoint = alaska\n\t        .translate([x - 0.307 * k, y + 0.201 * k])\n\t        .clipExtent([[x - 0.425 * k + epsilon$2, y + 0.120 * k + epsilon$2], [x - 0.214 * k - epsilon$2, y + 0.234 * k - epsilon$2]])\n\t        .stream(pointStream);\n\t\n\t    hawaiiPoint = hawaii\n\t        .translate([x - 0.205 * k, y + 0.212 * k])\n\t        .clipExtent([[x - 0.214 * k + epsilon$2, y + 0.166 * k + epsilon$2], [x - 0.115 * k - epsilon$2, y + 0.234 * k - epsilon$2]])\n\t        .stream(pointStream);\n\t\n\t    return reset();\n\t  };\n\t\n\t  albersUsa.fitExtent = function(extent, object) {\n\t    return fitExtent(albersUsa, extent, object);\n\t  };\n\t\n\t  albersUsa.fitSize = function(size, object) {\n\t    return fitSize(albersUsa, size, object);\n\t  };\n\t\n\t  function reset() {\n\t    cache = cacheStream = null;\n\t    return albersUsa;\n\t  }\n\t\n\t  return albersUsa.scale(1070);\n\t};\n\t\n\tfunction azimuthalRaw(scale) {\n\t  return function(x, y) {\n\t    var cx = cos$1(x),\n\t        cy = cos$1(y),\n\t        k = scale(cx * cy);\n\t    return [\n\t      k * cy * sin$1(x),\n\t      k * sin$1(y)\n\t    ];\n\t  }\n\t}\n\t\n\tfunction azimuthalInvert(angle) {\n\t  return function(x, y) {\n\t    var z = sqrt(x * x + y * y),\n\t        c = angle(z),\n\t        sc = sin$1(c),\n\t        cc = cos$1(c);\n\t    return [\n\t      atan2(x * sc, z * cc),\n\t      asin(z && y * sc / z)\n\t    ];\n\t  }\n\t}\n\t\n\tvar azimuthalEqualAreaRaw = azimuthalRaw(function(cxcy) {\n\t  return sqrt(2 / (1 + cxcy));\n\t});\n\t\n\tazimuthalEqualAreaRaw.invert = azimuthalInvert(function(z) {\n\t  return 2 * asin(z / 2);\n\t});\n\t\n\tvar azimuthalEqualArea = function() {\n\t  return projection(azimuthalEqualAreaRaw)\n\t      .scale(124.75)\n\t      .clipAngle(180 - 1e-3);\n\t};\n\t\n\tvar azimuthalEquidistantRaw = azimuthalRaw(function(c) {\n\t  return (c = acos(c)) && c / sin$1(c);\n\t});\n\t\n\tazimuthalEquidistantRaw.invert = azimuthalInvert(function(z) {\n\t  return z;\n\t});\n\t\n\tvar azimuthalEquidistant = function() {\n\t  return projection(azimuthalEquidistantRaw)\n\t      .scale(79.4188)\n\t      .clipAngle(180 - 1e-3);\n\t};\n\t\n\tfunction mercatorRaw(lambda, phi) {\n\t  return [lambda, log(tan((halfPi$2 + phi) / 2))];\n\t}\n\t\n\tmercatorRaw.invert = function(x, y) {\n\t  return [x, 2 * atan(exp(y)) - halfPi$2];\n\t};\n\t\n\tvar mercator = function() {\n\t  return mercatorProjection(mercatorRaw)\n\t      .scale(961 / tau$3);\n\t};\n\t\n\tfunction mercatorProjection(project) {\n\t  var m = projection(project),\n\t      center = m.center,\n\t      scale = m.scale,\n\t      translate = m.translate,\n\t      clipExtent = m.clipExtent,\n\t      x0 = null, y0, x1, y1; // clip extent\n\t\n\t  m.scale = function(_) {\n\t    return arguments.length ? (scale(_), reclip()) : scale();\n\t  };\n\t\n\t  m.translate = function(_) {\n\t    return arguments.length ? (translate(_), reclip()) : translate();\n\t  };\n\t\n\t  m.center = function(_) {\n\t    return arguments.length ? (center(_), reclip()) : center();\n\t  };\n\t\n\t  m.clipExtent = function(_) {\n\t    return arguments.length ? ((_ == null ? x0 = y0 = x1 = y1 = null : (x0 = +_[0][0], y0 = +_[0][1], x1 = +_[1][0], y1 = +_[1][1])), reclip()) : x0 == null ? null : [[x0, y0], [x1, y1]];\n\t  };\n\t\n\t  function reclip() {\n\t    var k = pi$3 * scale(),\n\t        t = m(rotation(m.rotate()).invert([0, 0]));\n\t    return clipExtent(x0 == null\n\t        ? [[t[0] - k, t[1] - k], [t[0] + k, t[1] + k]] : project === mercatorRaw\n\t        ? [[Math.max(t[0] - k, x0), y0], [Math.min(t[0] + k, x1), y1]]\n\t        : [[x0, Math.max(t[1] - k, y0)], [x1, Math.min(t[1] + k, y1)]]);\n\t  }\n\t\n\t  return reclip();\n\t}\n\t\n\tfunction tany(y) {\n\t  return tan((halfPi$2 + y) / 2);\n\t}\n\t\n\tfunction conicConformalRaw(y0, y1) {\n\t  var cy0 = cos$1(y0),\n\t      n = y0 === y1 ? sin$1(y0) : log(cy0 / cos$1(y1)) / log(tany(y1) / tany(y0)),\n\t      f = cy0 * pow(tany(y0), n) / n;\n\t\n\t  if (!n) return mercatorRaw;\n\t\n\t  function project(x, y) {\n\t    if (f > 0) { if (y < -halfPi$2 + epsilon$2) y = -halfPi$2 + epsilon$2; }\n\t    else { if (y > halfPi$2 - epsilon$2) y = halfPi$2 - epsilon$2; }\n\t    var r = f / pow(tany(y), n);\n\t    return [r * sin$1(n * x), f - r * cos$1(n * x)];\n\t  }\n\t\n\t  project.invert = function(x, y) {\n\t    var fy = f - y, r = sign(n) * sqrt(x * x + fy * fy);\n\t    return [atan2(x, abs(fy)) / n * sign(fy), 2 * atan(pow(f / r, 1 / n)) - halfPi$2];\n\t  };\n\t\n\t  return project;\n\t}\n\t\n\tvar conicConformal = function() {\n\t  return conicProjection(conicConformalRaw)\n\t      .scale(109.5)\n\t      .parallels([30, 30]);\n\t};\n\t\n\tfunction equirectangularRaw(lambda, phi) {\n\t  return [lambda, phi];\n\t}\n\t\n\tequirectangularRaw.invert = equirectangularRaw;\n\t\n\tvar equirectangular = function() {\n\t  return projection(equirectangularRaw)\n\t      .scale(152.63);\n\t};\n\t\n\tfunction conicEquidistantRaw(y0, y1) {\n\t  var cy0 = cos$1(y0),\n\t      n = y0 === y1 ? sin$1(y0) : (cy0 - cos$1(y1)) / (y1 - y0),\n\t      g = cy0 / n + y0;\n\t\n\t  if (abs(n) < epsilon$2) return equirectangularRaw;\n\t\n\t  function project(x, y) {\n\t    var gy = g - y, nx = n * x;\n\t    return [gy * sin$1(nx), g - gy * cos$1(nx)];\n\t  }\n\t\n\t  project.invert = function(x, y) {\n\t    var gy = g - y;\n\t    return [atan2(x, abs(gy)) / n * sign(gy), g - sign(n) * sqrt(x * x + gy * gy)];\n\t  };\n\t\n\t  return project;\n\t}\n\t\n\tvar conicEquidistant = function() {\n\t  return conicProjection(conicEquidistantRaw)\n\t      .scale(131.154)\n\t      .center([0, 13.9389]);\n\t};\n\t\n\tfunction gnomonicRaw(x, y) {\n\t  var cy = cos$1(y), k = cos$1(x) * cy;\n\t  return [cy * sin$1(x) / k, sin$1(y) / k];\n\t}\n\t\n\tgnomonicRaw.invert = azimuthalInvert(atan);\n\t\n\tvar gnomonic = function() {\n\t  return projection(gnomonicRaw)\n\t      .scale(144.049)\n\t      .clipAngle(60);\n\t};\n\t\n\tfunction scaleTranslate(kx, ky, tx, ty) {\n\t  return kx === 1 && ky === 1 && tx === 0 && ty === 0 ? identity$4 : transformer({\n\t    point: function(x, y) {\n\t      this.stream.point(x * kx + tx, y * ky + ty);\n\t    }\n\t  });\n\t}\n\t\n\tvar identity$5 = function() {\n\t  var k = 1, tx = 0, ty = 0, sx = 1, sy = 1, transform$$1 = identity$4, // scale, translate and reflect\n\t      x0 = null, y0, x1, y1, // clip extent\n\t      postclip = identity$4,\n\t      cache,\n\t      cacheStream,\n\t      projection;\n\t\n\t  function reset() {\n\t    cache = cacheStream = null;\n\t    return projection;\n\t  }\n\t\n\t  return projection = {\n\t    stream: function(stream) {\n\t      return cache && cacheStream === stream ? cache : cache = transform$$1(postclip(cacheStream = stream));\n\t    },\n\t    postclip: function(_) {\n\t      return arguments.length ? (postclip = _, x0 = y0 = x1 = y1 = null, reset()) : postclip;\n\t    },\n\t    clipExtent: function(_) {\n\t      return arguments.length ? (postclip = _ == null ? (x0 = y0 = x1 = y1 = null, identity$4) : clipRectangle(x0 = +_[0][0], y0 = +_[0][1], x1 = +_[1][0], y1 = +_[1][1]), reset()) : x0 == null ? null : [[x0, y0], [x1, y1]];\n\t    },\n\t    scale: function(_) {\n\t      return arguments.length ? (transform$$1 = scaleTranslate((k = +_) * sx, k * sy, tx, ty), reset()) : k;\n\t    },\n\t    translate: function(_) {\n\t      return arguments.length ? (transform$$1 = scaleTranslate(k * sx, k * sy, tx = +_[0], ty = +_[1]), reset()) : [tx, ty];\n\t    },\n\t    reflectX: function(_) {\n\t      return arguments.length ? (transform$$1 = scaleTranslate(k * (sx = _ ? -1 : 1), k * sy, tx, ty), reset()) : sx < 0;\n\t    },\n\t    reflectY: function(_) {\n\t      return arguments.length ? (transform$$1 = scaleTranslate(k * sx, k * (sy = _ ? -1 : 1), tx, ty), reset()) : sy < 0;\n\t    },\n\t    fitExtent: function(extent, object) {\n\t      return fitExtent(projection, extent, object);\n\t    },\n\t    fitSize: function(size, object) {\n\t      return fitSize(projection, size, object);\n\t    }\n\t  };\n\t};\n\t\n\tfunction naturalEarth1Raw(lambda, phi) {\n\t  var phi2 = phi * phi, phi4 = phi2 * phi2;\n\t  return [\n\t    lambda * (0.8707 - 0.131979 * phi2 + phi4 * (-0.013791 + phi4 * (0.003971 * phi2 - 0.001529 * phi4))),\n\t    phi * (1.007226 + phi2 * (0.015085 + phi4 * (-0.044475 + 0.028874 * phi2 - 0.005916 * phi4)))\n\t  ];\n\t}\n\t\n\tnaturalEarth1Raw.invert = function(x, y) {\n\t  var phi = y, i = 25, delta;\n\t  do {\n\t    var phi2 = phi * phi, phi4 = phi2 * phi2;\n\t    phi -= delta = (phi * (1.007226 + phi2 * (0.015085 + phi4 * (-0.044475 + 0.028874 * phi2 - 0.005916 * phi4))) - y) /\n\t        (1.007226 + phi2 * (0.015085 * 3 + phi4 * (-0.044475 * 7 + 0.028874 * 9 * phi2 - 0.005916 * 11 * phi4)));\n\t  } while (abs(delta) > epsilon$2 && --i > 0);\n\t  return [\n\t    x / (0.8707 + (phi2 = phi * phi) * (-0.131979 + phi2 * (-0.013791 + phi2 * phi2 * phi2 * (0.003971 - 0.001529 * phi2)))),\n\t    phi\n\t  ];\n\t};\n\t\n\tvar naturalEarth1 = function() {\n\t  return projection(naturalEarth1Raw)\n\t      .scale(175.295);\n\t};\n\t\n\tfunction orthographicRaw(x, y) {\n\t  return [cos$1(y) * sin$1(x), sin$1(y)];\n\t}\n\t\n\torthographicRaw.invert = azimuthalInvert(asin);\n\t\n\tvar orthographic = function() {\n\t  return projection(orthographicRaw)\n\t      .scale(249.5)\n\t      .clipAngle(90 + epsilon$2);\n\t};\n\t\n\tfunction stereographicRaw(x, y) {\n\t  var cy = cos$1(y), k = 1 + cos$1(x) * cy;\n\t  return [cy * sin$1(x) / k, sin$1(y) / k];\n\t}\n\t\n\tstereographicRaw.invert = azimuthalInvert(function(z) {\n\t  return 2 * atan(z);\n\t});\n\t\n\tvar stereographic = function() {\n\t  return projection(stereographicRaw)\n\t      .scale(250)\n\t      .clipAngle(142);\n\t};\n\t\n\tfunction transverseMercatorRaw(lambda, phi) {\n\t  return [log(tan((halfPi$2 + phi) / 2)), -lambda];\n\t}\n\t\n\ttransverseMercatorRaw.invert = function(x, y) {\n\t  return [-y, 2 * atan(exp(x)) - halfPi$2];\n\t};\n\t\n\tvar transverseMercator = function() {\n\t  var m = mercatorProjection(transverseMercatorRaw),\n\t      center = m.center,\n\t      rotate = m.rotate;\n\t\n\t  m.center = function(_) {\n\t    return arguments.length ? center([-_[1], _[0]]) : (_ = center(), [_[1], -_[0]]);\n\t  };\n\t\n\t  m.rotate = function(_) {\n\t    return arguments.length ? rotate([_[0], _[1], _.length > 2 ? _[2] + 90 : 90]) : (_ = rotate(), [_[0], _[1], _[2] - 90]);\n\t  };\n\t\n\t  return rotate([0, 0, 90])\n\t      .scale(159.155);\n\t};\n\t\n\tfunction defaultSeparation(a, b) {\n\t  return a.parent === b.parent ? 1 : 2;\n\t}\n\t\n\tfunction meanX(children) {\n\t  return children.reduce(meanXReduce, 0) / children.length;\n\t}\n\t\n\tfunction meanXReduce(x, c) {\n\t  return x + c.x;\n\t}\n\t\n\tfunction maxY(children) {\n\t  return 1 + children.reduce(maxYReduce, 0);\n\t}\n\t\n\tfunction maxYReduce(y, c) {\n\t  return Math.max(y, c.y);\n\t}\n\t\n\tfunction leafLeft(node) {\n\t  var children;\n\t  while (children = node.children) node = children[0];\n\t  return node;\n\t}\n\t\n\tfunction leafRight(node) {\n\t  var children;\n\t  while (children = node.children) node = children[children.length - 1];\n\t  return node;\n\t}\n\t\n\tvar cluster = function() {\n\t  var separation = defaultSeparation,\n\t      dx = 1,\n\t      dy = 1,\n\t      nodeSize = false;\n\t\n\t  function cluster(root) {\n\t    var previousNode,\n\t        x = 0;\n\t\n\t    // First walk, computing the initial x & y values.\n\t    root.eachAfter(function(node) {\n\t      var children = node.children;\n\t      if (children) {\n\t        node.x = meanX(children);\n\t        node.y = maxY(children);\n\t      } else {\n\t        node.x = previousNode ? x += separation(node, previousNode) : 0;\n\t        node.y = 0;\n\t        previousNode = node;\n\t      }\n\t    });\n\t\n\t    var left = leafLeft(root),\n\t        right = leafRight(root),\n\t        x0 = left.x - separation(left, right) / 2,\n\t        x1 = right.x + separation(right, left) / 2;\n\t\n\t    // Second walk, normalizing x & y to the desired size.\n\t    return root.eachAfter(nodeSize ? function(node) {\n\t      node.x = (node.x - root.x) * dx;\n\t      node.y = (root.y - node.y) * dy;\n\t    } : function(node) {\n\t      node.x = (node.x - x0) / (x1 - x0) * dx;\n\t      node.y = (1 - (root.y ? node.y / root.y : 1)) * dy;\n\t    });\n\t  }\n\t\n\t  cluster.separation = function(x) {\n\t    return arguments.length ? (separation = x, cluster) : separation;\n\t  };\n\t\n\t  cluster.size = function(x) {\n\t    return arguments.length ? (nodeSize = false, dx = +x[0], dy = +x[1], cluster) : (nodeSize ? null : [dx, dy]);\n\t  };\n\t\n\t  cluster.nodeSize = function(x) {\n\t    return arguments.length ? (nodeSize = true, dx = +x[0], dy = +x[1], cluster) : (nodeSize ? [dx, dy] : null);\n\t  };\n\t\n\t  return cluster;\n\t};\n\t\n\tfunction count(node) {\n\t  var sum = 0,\n\t      children = node.children,\n\t      i = children && children.length;\n\t  if (!i) sum = 1;\n\t  else while (--i >= 0) sum += children[i].value;\n\t  node.value = sum;\n\t}\n\t\n\tvar node_count = function() {\n\t  return this.eachAfter(count);\n\t};\n\t\n\tvar node_each = function(callback) {\n\t  var node = this, current, next = [node], children, i, n;\n\t  do {\n\t    current = next.reverse(), next = [];\n\t    while (node = current.pop()) {\n\t      callback(node), children = node.children;\n\t      if (children) for (i = 0, n = children.length; i < n; ++i) {\n\t        next.push(children[i]);\n\t      }\n\t    }\n\t  } while (next.length);\n\t  return this;\n\t};\n\t\n\tvar node_eachBefore = function(callback) {\n\t  var node = this, nodes = [node], children, i;\n\t  while (node = nodes.pop()) {\n\t    callback(node), children = node.children;\n\t    if (children) for (i = children.length - 1; i >= 0; --i) {\n\t      nodes.push(children[i]);\n\t    }\n\t  }\n\t  return this;\n\t};\n\t\n\tvar node_eachAfter = function(callback) {\n\t  var node = this, nodes = [node], next = [], children, i, n;\n\t  while (node = nodes.pop()) {\n\t    next.push(node), children = node.children;\n\t    if (children) for (i = 0, n = children.length; i < n; ++i) {\n\t      nodes.push(children[i]);\n\t    }\n\t  }\n\t  while (node = next.pop()) {\n\t    callback(node);\n\t  }\n\t  return this;\n\t};\n\t\n\tvar node_sum = function(value) {\n\t  return this.eachAfter(function(node) {\n\t    var sum = +value(node.data) || 0,\n\t        children = node.children,\n\t        i = children && children.length;\n\t    while (--i >= 0) sum += children[i].value;\n\t    node.value = sum;\n\t  });\n\t};\n\t\n\tvar node_sort = function(compare) {\n\t  return this.eachBefore(function(node) {\n\t    if (node.children) {\n\t      node.children.sort(compare);\n\t    }\n\t  });\n\t};\n\t\n\tvar node_path = function(end) {\n\t  var start = this,\n\t      ancestor = leastCommonAncestor(start, end),\n\t      nodes = [start];\n\t  while (start !== ancestor) {\n\t    start = start.parent;\n\t    nodes.push(start);\n\t  }\n\t  var k = nodes.length;\n\t  while (end !== ancestor) {\n\t    nodes.splice(k, 0, end);\n\t    end = end.parent;\n\t  }\n\t  return nodes;\n\t};\n\t\n\tfunction leastCommonAncestor(a, b) {\n\t  if (a === b) return a;\n\t  var aNodes = a.ancestors(),\n\t      bNodes = b.ancestors(),\n\t      c = null;\n\t  a = aNodes.pop();\n\t  b = bNodes.pop();\n\t  while (a === b) {\n\t    c = a;\n\t    a = aNodes.pop();\n\t    b = bNodes.pop();\n\t  }\n\t  return c;\n\t}\n\t\n\tvar node_ancestors = function() {\n\t  var node = this, nodes = [node];\n\t  while (node = node.parent) {\n\t    nodes.push(node);\n\t  }\n\t  return nodes;\n\t};\n\t\n\tvar node_descendants = function() {\n\t  var nodes = [];\n\t  this.each(function(node) {\n\t    nodes.push(node);\n\t  });\n\t  return nodes;\n\t};\n\t\n\tvar node_leaves = function() {\n\t  var leaves = [];\n\t  this.eachBefore(function(node) {\n\t    if (!node.children) {\n\t      leaves.push(node);\n\t    }\n\t  });\n\t  return leaves;\n\t};\n\t\n\tvar node_links = function() {\n\t  var root = this, links = [];\n\t  root.each(function(node) {\n\t    if (node !== root) { // Don’t include the root’s parent, if any.\n\t      links.push({source: node.parent, target: node});\n\t    }\n\t  });\n\t  return links;\n\t};\n\t\n\tfunction hierarchy(data, children) {\n\t  var root = new Node(data),\n\t      valued = +data.value && (root.value = data.value),\n\t      node,\n\t      nodes = [root],\n\t      child,\n\t      childs,\n\t      i,\n\t      n;\n\t\n\t  if (children == null) children = defaultChildren;\n\t\n\t  while (node = nodes.pop()) {\n\t    if (valued) node.value = +node.data.value;\n\t    if ((childs = children(node.data)) && (n = childs.length)) {\n\t      node.children = new Array(n);\n\t      for (i = n - 1; i >= 0; --i) {\n\t        nodes.push(child = node.children[i] = new Node(childs[i]));\n\t        child.parent = node;\n\t        child.depth = node.depth + 1;\n\t      }\n\t    }\n\t  }\n\t\n\t  return root.eachBefore(computeHeight);\n\t}\n\t\n\tfunction node_copy() {\n\t  return hierarchy(this).eachBefore(copyData);\n\t}\n\t\n\tfunction defaultChildren(d) {\n\t  return d.children;\n\t}\n\t\n\tfunction copyData(node) {\n\t  node.data = node.data.data;\n\t}\n\t\n\tfunction computeHeight(node) {\n\t  var height = 0;\n\t  do node.height = height;\n\t  while ((node = node.parent) && (node.height < ++height));\n\t}\n\t\n\tfunction Node(data) {\n\t  this.data = data;\n\t  this.depth =\n\t  this.height = 0;\n\t  this.parent = null;\n\t}\n\t\n\tNode.prototype = hierarchy.prototype = {\n\t  constructor: Node,\n\t  count: node_count,\n\t  each: node_each,\n\t  eachAfter: node_eachAfter,\n\t  eachBefore: node_eachBefore,\n\t  sum: node_sum,\n\t  sort: node_sort,\n\t  path: node_path,\n\t  ancestors: node_ancestors,\n\t  descendants: node_descendants,\n\t  leaves: node_leaves,\n\t  links: node_links,\n\t  copy: node_copy\n\t};\n\t\n\tvar slice$3 = Array.prototype.slice;\n\t\n\tfunction shuffle$1(array) {\n\t  var m = array.length,\n\t      t,\n\t      i;\n\t\n\t  while (m) {\n\t    i = Math.random() * m-- | 0;\n\t    t = array[m];\n\t    array[m] = array[i];\n\t    array[i] = t;\n\t  }\n\t\n\t  return array;\n\t}\n\t\n\tvar enclose = function(circles) {\n\t  var i = 0, n = (circles = shuffle$1(slice$3.call(circles))).length, B = [], p, e;\n\t\n\t  while (i < n) {\n\t    p = circles[i];\n\t    if (e && enclosesWeak(e, p)) ++i;\n\t    else e = encloseBasis(B = extendBasis(B, p)), i = 0;\n\t  }\n\t\n\t  return e;\n\t};\n\t\n\tfunction extendBasis(B, p) {\n\t  var i, j;\n\t\n\t  if (enclosesWeakAll(p, B)) return [p];\n\t\n\t  // If we get here then B must have at least one element.\n\t  for (i = 0; i < B.length; ++i) {\n\t    if (enclosesNot(p, B[i])\n\t        && enclosesWeakAll(encloseBasis2(B[i], p), B)) {\n\t      return [B[i], p];\n\t    }\n\t  }\n\t\n\t  // If we get here then B must have at least two elements.\n\t  for (i = 0; i < B.length - 1; ++i) {\n\t    for (j = i + 1; j < B.length; ++j) {\n\t      if (enclosesNot(encloseBasis2(B[i], B[j]), p)\n\t          && enclosesNot(encloseBasis2(B[i], p), B[j])\n\t          && enclosesNot(encloseBasis2(B[j], p), B[i])\n\t          && enclosesWeakAll(encloseBasis3(B[i], B[j], p), B)) {\n\t        return [B[i], B[j], p];\n\t      }\n\t    }\n\t  }\n\t\n\t  // If we get here then something is very wrong.\n\t  throw new Error;\n\t}\n\t\n\tfunction enclosesNot(a, b) {\n\t  var dr = a.r - b.r, dx = b.x - a.x, dy = b.y - a.y;\n\t  return dr < 0 || dr * dr < dx * dx + dy * dy;\n\t}\n\t\n\tfunction enclosesWeak(a, b) {\n\t  var dr = a.r - b.r + 1e-6, dx = b.x - a.x, dy = b.y - a.y;\n\t  return dr > 0 && dr * dr > dx * dx + dy * dy;\n\t}\n\t\n\tfunction enclosesWeakAll(a, B) {\n\t  for (var i = 0; i < B.length; ++i) {\n\t    if (!enclosesWeak(a, B[i])) {\n\t      return false;\n\t    }\n\t  }\n\t  return true;\n\t}\n\t\n\tfunction encloseBasis(B) {\n\t  switch (B.length) {\n\t    case 1: return encloseBasis1(B[0]);\n\t    case 2: return encloseBasis2(B[0], B[1]);\n\t    case 3: return encloseBasis3(B[0], B[1], B[2]);\n\t  }\n\t}\n\t\n\tfunction encloseBasis1(a) {\n\t  return {\n\t    x: a.x,\n\t    y: a.y,\n\t    r: a.r\n\t  };\n\t}\n\t\n\tfunction encloseBasis2(a, b) {\n\t  var x1 = a.x, y1 = a.y, r1 = a.r,\n\t      x2 = b.x, y2 = b.y, r2 = b.r,\n\t      x21 = x2 - x1, y21 = y2 - y1, r21 = r2 - r1,\n\t      l = Math.sqrt(x21 * x21 + y21 * y21);\n\t  return {\n\t    x: (x1 + x2 + x21 / l * r21) / 2,\n\t    y: (y1 + y2 + y21 / l * r21) / 2,\n\t    r: (l + r1 + r2) / 2\n\t  };\n\t}\n\t\n\tfunction encloseBasis3(a, b, c) {\n\t  var x1 = a.x, y1 = a.y, r1 = a.r,\n\t      x2 = b.x, y2 = b.y, r2 = b.r,\n\t      x3 = c.x, y3 = c.y, r3 = c.r,\n\t      a2 = x1 - x2,\n\t      a3 = x1 - x3,\n\t      b2 = y1 - y2,\n\t      b3 = y1 - y3,\n\t      c2 = r2 - r1,\n\t      c3 = r3 - r1,\n\t      d1 = x1 * x1 + y1 * y1 - r1 * r1,\n\t      d2 = d1 - x2 * x2 - y2 * y2 + r2 * r2,\n\t      d3 = d1 - x3 * x3 - y3 * y3 + r3 * r3,\n\t      ab = a3 * b2 - a2 * b3,\n\t      xa = (b2 * d3 - b3 * d2) / (ab * 2) - x1,\n\t      xb = (b3 * c2 - b2 * c3) / ab,\n\t      ya = (a3 * d2 - a2 * d3) / (ab * 2) - y1,\n\t      yb = (a2 * c3 - a3 * c2) / ab,\n\t      A = xb * xb + yb * yb - 1,\n\t      B = 2 * (r1 + xa * xb + ya * yb),\n\t      C = xa * xa + ya * ya - r1 * r1,\n\t      r = -(A ? (B + Math.sqrt(B * B - 4 * A * C)) / (2 * A) : C / B);\n\t  return {\n\t    x: x1 + xa + xb * r,\n\t    y: y1 + ya + yb * r,\n\t    r: r\n\t  };\n\t}\n\t\n\tfunction place(a, b, c) {\n\t  var ax = a.x,\n\t      ay = a.y,\n\t      da = b.r + c.r,\n\t      db = a.r + c.r,\n\t      dx = b.x - ax,\n\t      dy = b.y - ay,\n\t      dc = dx * dx + dy * dy;\n\t  if (dc) {\n\t    var x = 0.5 + ((db *= db) - (da *= da)) / (2 * dc),\n\t        y = Math.sqrt(Math.max(0, 2 * da * (db + dc) - (db -= dc) * db - da * da)) / (2 * dc);\n\t    c.x = ax + x * dx + y * dy;\n\t    c.y = ay + x * dy - y * dx;\n\t  } else {\n\t    c.x = ax + db;\n\t    c.y = ay;\n\t  }\n\t}\n\t\n\tfunction intersects(a, b) {\n\t  var dx = b.x - a.x,\n\t      dy = b.y - a.y,\n\t      dr = a.r + b.r;\n\t  return dr * dr - 1e-6 > dx * dx + dy * dy;\n\t}\n\t\n\tfunction score(node) {\n\t  var a = node._,\n\t      b = node.next._,\n\t      ab = a.r + b.r,\n\t      dx = (a.x * b.r + b.x * a.r) / ab,\n\t      dy = (a.y * b.r + b.y * a.r) / ab;\n\t  return dx * dx + dy * dy;\n\t}\n\t\n\tfunction Node$1(circle) {\n\t  this._ = circle;\n\t  this.next = null;\n\t  this.previous = null;\n\t}\n\t\n\tfunction packEnclose(circles) {\n\t  if (!(n = circles.length)) return 0;\n\t\n\t  var a, b, c, n, aa, ca, i, j, k, sj, sk;\n\t\n\t  // Place the first circle.\n\t  a = circles[0], a.x = 0, a.y = 0;\n\t  if (!(n > 1)) return a.r;\n\t\n\t  // Place the second circle.\n\t  b = circles[1], a.x = -b.r, b.x = a.r, b.y = 0;\n\t  if (!(n > 2)) return a.r + b.r;\n\t\n\t  // Place the third circle.\n\t  place(b, a, c = circles[2]);\n\t\n\t  // Initialize the front-chain using the first three circles a, b and c.\n\t  a = new Node$1(a), b = new Node$1(b), c = new Node$1(c);\n\t  a.next = c.previous = b;\n\t  b.next = a.previous = c;\n\t  c.next = b.previous = a;\n\t\n\t  // Attempt to place each remaining circle…\n\t  pack: for (i = 3; i < n; ++i) {\n\t    place(a._, b._, c = circles[i]), c = new Node$1(c);\n\t\n\t    // Find the closest intersecting circle on the front-chain, if any.\n\t    // “Closeness” is determined by linear distance along the front-chain.\n\t    // “Ahead” or “behind” is likewise determined by linear distance.\n\t    j = b.next, k = a.previous, sj = b._.r, sk = a._.r;\n\t    do {\n\t      if (sj <= sk) {\n\t        if (intersects(j._, c._)) {\n\t          b = j, a.next = b, b.previous = a, --i;\n\t          continue pack;\n\t        }\n\t        sj += j._.r, j = j.next;\n\t      } else {\n\t        if (intersects(k._, c._)) {\n\t          a = k, a.next = b, b.previous = a, --i;\n\t          continue pack;\n\t        }\n\t        sk += k._.r, k = k.previous;\n\t      }\n\t    } while (j !== k.next);\n\t\n\t    // Success! Insert the new circle c between a and b.\n\t    c.previous = a, c.next = b, a.next = b.previous = b = c;\n\t\n\t    // Compute the new closest circle pair to the centroid.\n\t    aa = score(a);\n\t    while ((c = c.next) !== b) {\n\t      if ((ca = score(c)) < aa) {\n\t        a = c, aa = ca;\n\t      }\n\t    }\n\t    b = a.next;\n\t  }\n\t\n\t  // Compute the enclosing circle of the front chain.\n\t  a = [b._], c = b; while ((c = c.next) !== b) a.push(c._); c = enclose(a);\n\t\n\t  // Translate the circles to put the enclosing circle around the origin.\n\t  for (i = 0; i < n; ++i) a = circles[i], a.x -= c.x, a.y -= c.y;\n\t\n\t  return c.r;\n\t}\n\t\n\tvar siblings = function(circles) {\n\t  packEnclose(circles);\n\t  return circles;\n\t};\n\t\n\tfunction optional(f) {\n\t  return f == null ? null : required(f);\n\t}\n\t\n\tfunction required(f) {\n\t  if (typeof f !== \"function\") throw new Error;\n\t  return f;\n\t}\n\t\n\tfunction constantZero() {\n\t  return 0;\n\t}\n\t\n\tvar constant$8 = function(x) {\n\t  return function() {\n\t    return x;\n\t  };\n\t};\n\t\n\tfunction defaultRadius$1(d) {\n\t  return Math.sqrt(d.value);\n\t}\n\t\n\tvar index$2 = function() {\n\t  var radius = null,\n\t      dx = 1,\n\t      dy = 1,\n\t      padding = constantZero;\n\t\n\t  function pack(root) {\n\t    root.x = dx / 2, root.y = dy / 2;\n\t    if (radius) {\n\t      root.eachBefore(radiusLeaf(radius))\n\t          .eachAfter(packChildren(padding, 0.5))\n\t          .eachBefore(translateChild(1));\n\t    } else {\n\t      root.eachBefore(radiusLeaf(defaultRadius$1))\n\t          .eachAfter(packChildren(constantZero, 1))\n\t          .eachAfter(packChildren(padding, root.r / Math.min(dx, dy)))\n\t          .eachBefore(translateChild(Math.min(dx, dy) / (2 * root.r)));\n\t    }\n\t    return root;\n\t  }\n\t\n\t  pack.radius = function(x) {\n\t    return arguments.length ? (radius = optional(x), pack) : radius;\n\t  };\n\t\n\t  pack.size = function(x) {\n\t    return arguments.length ? (dx = +x[0], dy = +x[1], pack) : [dx, dy];\n\t  };\n\t\n\t  pack.padding = function(x) {\n\t    return arguments.length ? (padding = typeof x === \"function\" ? x : constant$8(+x), pack) : padding;\n\t  };\n\t\n\t  return pack;\n\t};\n\t\n\tfunction radiusLeaf(radius) {\n\t  return function(node) {\n\t    if (!node.children) {\n\t      node.r = Math.max(0, +radius(node) || 0);\n\t    }\n\t  };\n\t}\n\t\n\tfunction packChildren(padding, k) {\n\t  return function(node) {\n\t    if (children = node.children) {\n\t      var children,\n\t          i,\n\t          n = children.length,\n\t          r = padding(node) * k || 0,\n\t          e;\n\t\n\t      if (r) for (i = 0; i < n; ++i) children[i].r += r;\n\t      e = packEnclose(children);\n\t      if (r) for (i = 0; i < n; ++i) children[i].r -= r;\n\t      node.r = e + r;\n\t    }\n\t  };\n\t}\n\t\n\tfunction translateChild(k) {\n\t  return function(node) {\n\t    var parent = node.parent;\n\t    node.r *= k;\n\t    if (parent) {\n\t      node.x = parent.x + k * node.x;\n\t      node.y = parent.y + k * node.y;\n\t    }\n\t  };\n\t}\n\t\n\tvar roundNode = function(node) {\n\t  node.x0 = Math.round(node.x0);\n\t  node.y0 = Math.round(node.y0);\n\t  node.x1 = Math.round(node.x1);\n\t  node.y1 = Math.round(node.y1);\n\t};\n\t\n\tvar treemapDice = function(parent, x0, y0, x1, y1) {\n\t  var nodes = parent.children,\n\t      node,\n\t      i = -1,\n\t      n = nodes.length,\n\t      k = parent.value && (x1 - x0) / parent.value;\n\t\n\t  while (++i < n) {\n\t    node = nodes[i], node.y0 = y0, node.y1 = y1;\n\t    node.x0 = x0, node.x1 = x0 += node.value * k;\n\t  }\n\t};\n\t\n\tvar partition = function() {\n\t  var dx = 1,\n\t      dy = 1,\n\t      padding = 0,\n\t      round = false;\n\t\n\t  function partition(root) {\n\t    var n = root.height + 1;\n\t    root.x0 =\n\t    root.y0 = padding;\n\t    root.x1 = dx;\n\t    root.y1 = dy / n;\n\t    root.eachBefore(positionNode(dy, n));\n\t    if (round) root.eachBefore(roundNode);\n\t    return root;\n\t  }\n\t\n\t  function positionNode(dy, n) {\n\t    return function(node) {\n\t      if (node.children) {\n\t        treemapDice(node, node.x0, dy * (node.depth + 1) / n, node.x1, dy * (node.depth + 2) / n);\n\t      }\n\t      var x0 = node.x0,\n\t          y0 = node.y0,\n\t          x1 = node.x1 - padding,\n\t          y1 = node.y1 - padding;\n\t      if (x1 < x0) x0 = x1 = (x0 + x1) / 2;\n\t      if (y1 < y0) y0 = y1 = (y0 + y1) / 2;\n\t      node.x0 = x0;\n\t      node.y0 = y0;\n\t      node.x1 = x1;\n\t      node.y1 = y1;\n\t    };\n\t  }\n\t\n\t  partition.round = function(x) {\n\t    return arguments.length ? (round = !!x, partition) : round;\n\t  };\n\t\n\t  partition.size = function(x) {\n\t    return arguments.length ? (dx = +x[0], dy = +x[1], partition) : [dx, dy];\n\t  };\n\t\n\t  partition.padding = function(x) {\n\t    return arguments.length ? (padding = +x, partition) : padding;\n\t  };\n\t\n\t  return partition;\n\t};\n\t\n\tvar keyPrefix$1 = \"$\";\n\tvar preroot = {depth: -1};\n\tvar ambiguous = {};\n\t\n\tfunction defaultId(d) {\n\t  return d.id;\n\t}\n\t\n\tfunction defaultParentId(d) {\n\t  return d.parentId;\n\t}\n\t\n\tvar stratify = function() {\n\t  var id = defaultId,\n\t      parentId = defaultParentId;\n\t\n\t  function stratify(data) {\n\t    var d,\n\t        i,\n\t        n = data.length,\n\t        root,\n\t        parent,\n\t        node,\n\t        nodes = new Array(n),\n\t        nodeId,\n\t        nodeKey,\n\t        nodeByKey = {};\n\t\n\t    for (i = 0; i < n; ++i) {\n\t      d = data[i], node = nodes[i] = new Node(d);\n\t      if ((nodeId = id(d, i, data)) != null && (nodeId += \"\")) {\n\t        nodeKey = keyPrefix$1 + (node.id = nodeId);\n\t        nodeByKey[nodeKey] = nodeKey in nodeByKey ? ambiguous : node;\n\t      }\n\t    }\n\t\n\t    for (i = 0; i < n; ++i) {\n\t      node = nodes[i], nodeId = parentId(data[i], i, data);\n\t      if (nodeId == null || !(nodeId += \"\")) {\n\t        if (root) throw new Error(\"multiple roots\");\n\t        root = node;\n\t      } else {\n\t        parent = nodeByKey[keyPrefix$1 + nodeId];\n\t        if (!parent) throw new Error(\"missing: \" + nodeId);\n\t        if (parent === ambiguous) throw new Error(\"ambiguous: \" + nodeId);\n\t        if (parent.children) parent.children.push(node);\n\t        else parent.children = [node];\n\t        node.parent = parent;\n\t      }\n\t    }\n\t\n\t    if (!root) throw new Error(\"no root\");\n\t    root.parent = preroot;\n\t    root.eachBefore(function(node) { node.depth = node.parent.depth + 1; --n; }).eachBefore(computeHeight);\n\t    root.parent = null;\n\t    if (n > 0) throw new Error(\"cycle\");\n\t\n\t    return root;\n\t  }\n\t\n\t  stratify.id = function(x) {\n\t    return arguments.length ? (id = required(x), stratify) : id;\n\t  };\n\t\n\t  stratify.parentId = function(x) {\n\t    return arguments.length ? (parentId = required(x), stratify) : parentId;\n\t  };\n\t\n\t  return stratify;\n\t};\n\t\n\tfunction defaultSeparation$1(a, b) {\n\t  return a.parent === b.parent ? 1 : 2;\n\t}\n\t\n\t// function radialSeparation(a, b) {\n\t//   return (a.parent === b.parent ? 1 : 2) / a.depth;\n\t// }\n\t\n\t// This function is used to traverse the left contour of a subtree (or\n\t// subforest). It returns the successor of v on this contour. This successor is\n\t// either given by the leftmost child of v or by the thread of v. The function\n\t// returns null if and only if v is on the highest level of its subtree.\n\tfunction nextLeft(v) {\n\t  var children = v.children;\n\t  return children ? children[0] : v.t;\n\t}\n\t\n\t// This function works analogously to nextLeft.\n\tfunction nextRight(v) {\n\t  var children = v.children;\n\t  return children ? children[children.length - 1] : v.t;\n\t}\n\t\n\t// Shifts the current subtree rooted at w+. This is done by increasing\n\t// prelim(w+) and mod(w+) by shift.\n\tfunction moveSubtree(wm, wp, shift) {\n\t  var change = shift / (wp.i - wm.i);\n\t  wp.c -= change;\n\t  wp.s += shift;\n\t  wm.c += change;\n\t  wp.z += shift;\n\t  wp.m += shift;\n\t}\n\t\n\t// All other shifts, applied to the smaller subtrees between w- and w+, are\n\t// performed by this function. To prepare the shifts, we have to adjust\n\t// change(w+), shift(w+), and change(w-).\n\tfunction executeShifts(v) {\n\t  var shift = 0,\n\t      change = 0,\n\t      children = v.children,\n\t      i = children.length,\n\t      w;\n\t  while (--i >= 0) {\n\t    w = children[i];\n\t    w.z += shift;\n\t    w.m += shift;\n\t    shift += w.s + (change += w.c);\n\t  }\n\t}\n\t\n\t// If vi-’s ancestor is a sibling of v, returns vi-’s ancestor. Otherwise,\n\t// returns the specified (default) ancestor.\n\tfunction nextAncestor(vim, v, ancestor) {\n\t  return vim.a.parent === v.parent ? vim.a : ancestor;\n\t}\n\t\n\tfunction TreeNode(node, i) {\n\t  this._ = node;\n\t  this.parent = null;\n\t  this.children = null;\n\t  this.A = null; // default ancestor\n\t  this.a = this; // ancestor\n\t  this.z = 0; // prelim\n\t  this.m = 0; // mod\n\t  this.c = 0; // change\n\t  this.s = 0; // shift\n\t  this.t = null; // thread\n\t  this.i = i; // number\n\t}\n\t\n\tTreeNode.prototype = Object.create(Node.prototype);\n\t\n\tfunction treeRoot(root) {\n\t  var tree = new TreeNode(root, 0),\n\t      node,\n\t      nodes = [tree],\n\t      child,\n\t      children,\n\t      i,\n\t      n;\n\t\n\t  while (node = nodes.pop()) {\n\t    if (children = node._.children) {\n\t      node.children = new Array(n = children.length);\n\t      for (i = n - 1; i >= 0; --i) {\n\t        nodes.push(child = node.children[i] = new TreeNode(children[i], i));\n\t        child.parent = node;\n\t      }\n\t    }\n\t  }\n\t\n\t  (tree.parent = new TreeNode(null, 0)).children = [tree];\n\t  return tree;\n\t}\n\t\n\t// Node-link tree diagram using the Reingold-Tilford \"tidy\" algorithm\n\tvar tree = function() {\n\t  var separation = defaultSeparation$1,\n\t      dx = 1,\n\t      dy = 1,\n\t      nodeSize = null;\n\t\n\t  function tree(root) {\n\t    var t = treeRoot(root);\n\t\n\t    // Compute the layout using Buchheim et al.’s algorithm.\n\t    t.eachAfter(firstWalk), t.parent.m = -t.z;\n\t    t.eachBefore(secondWalk);\n\t\n\t    // If a fixed node size is specified, scale x and y.\n\t    if (nodeSize) root.eachBefore(sizeNode);\n\t\n\t    // If a fixed tree size is specified, scale x and y based on the extent.\n\t    // Compute the left-most, right-most, and depth-most nodes for extents.\n\t    else {\n\t      var left = root,\n\t          right = root,\n\t          bottom = root;\n\t      root.eachBefore(function(node) {\n\t        if (node.x < left.x) left = node;\n\t        if (node.x > right.x) right = node;\n\t        if (node.depth > bottom.depth) bottom = node;\n\t      });\n\t      var s = left === right ? 1 : separation(left, right) / 2,\n\t          tx = s - left.x,\n\t          kx = dx / (right.x + s + tx),\n\t          ky = dy / (bottom.depth || 1);\n\t      root.eachBefore(function(node) {\n\t        node.x = (node.x + tx) * kx;\n\t        node.y = node.depth * ky;\n\t      });\n\t    }\n\t\n\t    return root;\n\t  }\n\t\n\t  // Computes a preliminary x-coordinate for v. Before that, FIRST WALK is\n\t  // applied recursively to the children of v, as well as the function\n\t  // APPORTION. After spacing out the children by calling EXECUTE SHIFTS, the\n\t  // node v is placed to the midpoint of its outermost children.\n\t  function firstWalk(v) {\n\t    var children = v.children,\n\t        siblings = v.parent.children,\n\t        w = v.i ? siblings[v.i - 1] : null;\n\t    if (children) {\n\t      executeShifts(v);\n\t      var midpoint = (children[0].z + children[children.length - 1].z) / 2;\n\t      if (w) {\n\t        v.z = w.z + separation(v._, w._);\n\t        v.m = v.z - midpoint;\n\t      } else {\n\t        v.z = midpoint;\n\t      }\n\t    } else if (w) {\n\t      v.z = w.z + separation(v._, w._);\n\t    }\n\t    v.parent.A = apportion(v, w, v.parent.A || siblings[0]);\n\t  }\n\t\n\t  // Computes all real x-coordinates by summing up the modifiers recursively.\n\t  function secondWalk(v) {\n\t    v._.x = v.z + v.parent.m;\n\t    v.m += v.parent.m;\n\t  }\n\t\n\t  // The core of the algorithm. Here, a new subtree is combined with the\n\t  // previous subtrees. Threads are used to traverse the inside and outside\n\t  // contours of the left and right subtree up to the highest common level. The\n\t  // vertices used for the traversals are vi+, vi-, vo-, and vo+, where the\n\t  // superscript o means outside and i means inside, the subscript - means left\n\t  // subtree and + means right subtree. For summing up the modifiers along the\n\t  // contour, we use respective variables si+, si-, so-, and so+. Whenever two\n\t  // nodes of the inside contours conflict, we compute the left one of the\n\t  // greatest uncommon ancestors using the function ANCESTOR and call MOVE\n\t  // SUBTREE to shift the subtree and prepare the shifts of smaller subtrees.\n\t  // Finally, we add a new thread (if necessary).\n\t  function apportion(v, w, ancestor) {\n\t    if (w) {\n\t      var vip = v,\n\t          vop = v,\n\t          vim = w,\n\t          vom = vip.parent.children[0],\n\t          sip = vip.m,\n\t          sop = vop.m,\n\t          sim = vim.m,\n\t          som = vom.m,\n\t          shift;\n\t      while (vim = nextRight(vim), vip = nextLeft(vip), vim && vip) {\n\t        vom = nextLeft(vom);\n\t        vop = nextRight(vop);\n\t        vop.a = v;\n\t        shift = vim.z + sim - vip.z - sip + separation(vim._, vip._);\n\t        if (shift > 0) {\n\t          moveSubtree(nextAncestor(vim, v, ancestor), v, shift);\n\t          sip += shift;\n\t          sop += shift;\n\t        }\n\t        sim += vim.m;\n\t        sip += vip.m;\n\t        som += vom.m;\n\t        sop += vop.m;\n\t      }\n\t      if (vim && !nextRight(vop)) {\n\t        vop.t = vim;\n\t        vop.m += sim - sop;\n\t      }\n\t      if (vip && !nextLeft(vom)) {\n\t        vom.t = vip;\n\t        vom.m += sip - som;\n\t        ancestor = v;\n\t      }\n\t    }\n\t    return ancestor;\n\t  }\n\t\n\t  function sizeNode(node) {\n\t    node.x *= dx;\n\t    node.y = node.depth * dy;\n\t  }\n\t\n\t  tree.separation = function(x) {\n\t    return arguments.length ? (separation = x, tree) : separation;\n\t  };\n\t\n\t  tree.size = function(x) {\n\t    return arguments.length ? (nodeSize = false, dx = +x[0], dy = +x[1], tree) : (nodeSize ? null : [dx, dy]);\n\t  };\n\t\n\t  tree.nodeSize = function(x) {\n\t    return arguments.length ? (nodeSize = true, dx = +x[0], dy = +x[1], tree) : (nodeSize ? [dx, dy] : null);\n\t  };\n\t\n\t  return tree;\n\t};\n\t\n\tvar treemapSlice = function(parent, x0, y0, x1, y1) {\n\t  var nodes = parent.children,\n\t      node,\n\t      i = -1,\n\t      n = nodes.length,\n\t      k = parent.value && (y1 - y0) / parent.value;\n\t\n\t  while (++i < n) {\n\t    node = nodes[i], node.x0 = x0, node.x1 = x1;\n\t    node.y0 = y0, node.y1 = y0 += node.value * k;\n\t  }\n\t};\n\t\n\tvar phi = (1 + Math.sqrt(5)) / 2;\n\t\n\tfunction squarifyRatio(ratio, parent, x0, y0, x1, y1) {\n\t  var rows = [],\n\t      nodes = parent.children,\n\t      row,\n\t      nodeValue,\n\t      i0 = 0,\n\t      i1 = 0,\n\t      n = nodes.length,\n\t      dx, dy,\n\t      value = parent.value,\n\t      sumValue,\n\t      minValue,\n\t      maxValue,\n\t      newRatio,\n\t      minRatio,\n\t      alpha,\n\t      beta;\n\t\n\t  while (i0 < n) {\n\t    dx = x1 - x0, dy = y1 - y0;\n\t\n\t    // Find the next non-empty node.\n\t    do sumValue = nodes[i1++].value; while (!sumValue && i1 < n);\n\t    minValue = maxValue = sumValue;\n\t    alpha = Math.max(dy / dx, dx / dy) / (value * ratio);\n\t    beta = sumValue * sumValue * alpha;\n\t    minRatio = Math.max(maxValue / beta, beta / minValue);\n\t\n\t    // Keep adding nodes while the aspect ratio maintains or improves.\n\t    for (; i1 < n; ++i1) {\n\t      sumValue += nodeValue = nodes[i1].value;\n\t      if (nodeValue < minValue) minValue = nodeValue;\n\t      if (nodeValue > maxValue) maxValue = nodeValue;\n\t      beta = sumValue * sumValue * alpha;\n\t      newRatio = Math.max(maxValue / beta, beta / minValue);\n\t      if (newRatio > minRatio) { sumValue -= nodeValue; break; }\n\t      minRatio = newRatio;\n\t    }\n\t\n\t    // Position and record the row orientation.\n\t    rows.push(row = {value: sumValue, dice: dx < dy, children: nodes.slice(i0, i1)});\n\t    if (row.dice) treemapDice(row, x0, y0, x1, value ? y0 += dy * sumValue / value : y1);\n\t    else treemapSlice(row, x0, y0, value ? x0 += dx * sumValue / value : x1, y1);\n\t    value -= sumValue, i0 = i1;\n\t  }\n\t\n\t  return rows;\n\t}\n\t\n\tvar squarify = (function custom(ratio) {\n\t\n\t  function squarify(parent, x0, y0, x1, y1) {\n\t    squarifyRatio(ratio, parent, x0, y0, x1, y1);\n\t  }\n\t\n\t  squarify.ratio = function(x) {\n\t    return custom((x = +x) > 1 ? x : 1);\n\t  };\n\t\n\t  return squarify;\n\t})(phi);\n\t\n\tvar index$3 = function() {\n\t  var tile = squarify,\n\t      round = false,\n\t      dx = 1,\n\t      dy = 1,\n\t      paddingStack = [0],\n\t      paddingInner = constantZero,\n\t      paddingTop = constantZero,\n\t      paddingRight = constantZero,\n\t      paddingBottom = constantZero,\n\t      paddingLeft = constantZero;\n\t\n\t  function treemap(root) {\n\t    root.x0 =\n\t    root.y0 = 0;\n\t    root.x1 = dx;\n\t    root.y1 = dy;\n\t    root.eachBefore(positionNode);\n\t    paddingStack = [0];\n\t    if (round) root.eachBefore(roundNode);\n\t    return root;\n\t  }\n\t\n\t  function positionNode(node) {\n\t    var p = paddingStack[node.depth],\n\t        x0 = node.x0 + p,\n\t        y0 = node.y0 + p,\n\t        x1 = node.x1 - p,\n\t        y1 = node.y1 - p;\n\t    if (x1 < x0) x0 = x1 = (x0 + x1) / 2;\n\t    if (y1 < y0) y0 = y1 = (y0 + y1) / 2;\n\t    node.x0 = x0;\n\t    node.y0 = y0;\n\t    node.x1 = x1;\n\t    node.y1 = y1;\n\t    if (node.children) {\n\t      p = paddingStack[node.depth + 1] = paddingInner(node) / 2;\n\t      x0 += paddingLeft(node) - p;\n\t      y0 += paddingTop(node) - p;\n\t      x1 -= paddingRight(node) - p;\n\t      y1 -= paddingBottom(node) - p;\n\t      if (x1 < x0) x0 = x1 = (x0 + x1) / 2;\n\t      if (y1 < y0) y0 = y1 = (y0 + y1) / 2;\n\t      tile(node, x0, y0, x1, y1);\n\t    }\n\t  }\n\t\n\t  treemap.round = function(x) {\n\t    return arguments.length ? (round = !!x, treemap) : round;\n\t  };\n\t\n\t  treemap.size = function(x) {\n\t    return arguments.length ? (dx = +x[0], dy = +x[1], treemap) : [dx, dy];\n\t  };\n\t\n\t  treemap.tile = function(x) {\n\t    return arguments.length ? (tile = required(x), treemap) : tile;\n\t  };\n\t\n\t  treemap.padding = function(x) {\n\t    return arguments.length ? treemap.paddingInner(x).paddingOuter(x) : treemap.paddingInner();\n\t  };\n\t\n\t  treemap.paddingInner = function(x) {\n\t    return arguments.length ? (paddingInner = typeof x === \"function\" ? x : constant$8(+x), treemap) : paddingInner;\n\t  };\n\t\n\t  treemap.paddingOuter = function(x) {\n\t    return arguments.length ? treemap.paddingTop(x).paddingRight(x).paddingBottom(x).paddingLeft(x) : treemap.paddingTop();\n\t  };\n\t\n\t  treemap.paddingTop = function(x) {\n\t    return arguments.length ? (paddingTop = typeof x === \"function\" ? x : constant$8(+x), treemap) : paddingTop;\n\t  };\n\t\n\t  treemap.paddingRight = function(x) {\n\t    return arguments.length ? (paddingRight = typeof x === \"function\" ? x : constant$8(+x), treemap) : paddingRight;\n\t  };\n\t\n\t  treemap.paddingBottom = function(x) {\n\t    return arguments.length ? (paddingBottom = typeof x === \"function\" ? x : constant$8(+x), treemap) : paddingBottom;\n\t  };\n\t\n\t  treemap.paddingLeft = function(x) {\n\t    return arguments.length ? (paddingLeft = typeof x === \"function\" ? x : constant$8(+x), treemap) : paddingLeft;\n\t  };\n\t\n\t  return treemap;\n\t};\n\t\n\tvar binary = function(parent, x0, y0, x1, y1) {\n\t  var nodes = parent.children,\n\t      i, n = nodes.length,\n\t      sum, sums = new Array(n + 1);\n\t\n\t  for (sums[0] = sum = i = 0; i < n; ++i) {\n\t    sums[i + 1] = sum += nodes[i].value;\n\t  }\n\t\n\t  partition(0, n, parent.value, x0, y0, x1, y1);\n\t\n\t  function partition(i, j, value, x0, y0, x1, y1) {\n\t    if (i >= j - 1) {\n\t      var node = nodes[i];\n\t      node.x0 = x0, node.y0 = y0;\n\t      node.x1 = x1, node.y1 = y1;\n\t      return;\n\t    }\n\t\n\t    var valueOffset = sums[i],\n\t        valueTarget = (value / 2) + valueOffset,\n\t        k = i + 1,\n\t        hi = j - 1;\n\t\n\t    while (k < hi) {\n\t      var mid = k + hi >>> 1;\n\t      if (sums[mid] < valueTarget) k = mid + 1;\n\t      else hi = mid;\n\t    }\n\t\n\t    if ((valueTarget - sums[k - 1]) < (sums[k] - valueTarget) && i + 1 < k) --k;\n\t\n\t    var valueLeft = sums[k] - valueOffset,\n\t        valueRight = value - valueLeft;\n\t\n\t    if ((x1 - x0) > (y1 - y0)) {\n\t      var xk = (x0 * valueRight + x1 * valueLeft) / value;\n\t      partition(i, k, valueLeft, x0, y0, xk, y1);\n\t      partition(k, j, valueRight, xk, y0, x1, y1);\n\t    } else {\n\t      var yk = (y0 * valueRight + y1 * valueLeft) / value;\n\t      partition(i, k, valueLeft, x0, y0, x1, yk);\n\t      partition(k, j, valueRight, x0, yk, x1, y1);\n\t    }\n\t  }\n\t};\n\t\n\tvar sliceDice = function(parent, x0, y0, x1, y1) {\n\t  (parent.depth & 1 ? treemapSlice : treemapDice)(parent, x0, y0, x1, y1);\n\t};\n\t\n\tvar resquarify = (function custom(ratio) {\n\t\n\t  function resquarify(parent, x0, y0, x1, y1) {\n\t    if ((rows = parent._squarify) && (rows.ratio === ratio)) {\n\t      var rows,\n\t          row,\n\t          nodes,\n\t          i,\n\t          j = -1,\n\t          n,\n\t          m = rows.length,\n\t          value = parent.value;\n\t\n\t      while (++j < m) {\n\t        row = rows[j], nodes = row.children;\n\t        for (i = row.value = 0, n = nodes.length; i < n; ++i) row.value += nodes[i].value;\n\t        if (row.dice) treemapDice(row, x0, y0, x1, y0 += (y1 - y0) * row.value / value);\n\t        else treemapSlice(row, x0, y0, x0 += (x1 - x0) * row.value / value, y1);\n\t        value -= row.value;\n\t      }\n\t    } else {\n\t      parent._squarify = rows = squarifyRatio(ratio, parent, x0, y0, x1, y1);\n\t      rows.ratio = ratio;\n\t    }\n\t  }\n\t\n\t  resquarify.ratio = function(x) {\n\t    return custom((x = +x) > 1 ? x : 1);\n\t  };\n\t\n\t  return resquarify;\n\t})(phi);\n\t\n\tvar area$1 = function(polygon) {\n\t  var i = -1,\n\t      n = polygon.length,\n\t      a,\n\t      b = polygon[n - 1],\n\t      area = 0;\n\t\n\t  while (++i < n) {\n\t    a = b;\n\t    b = polygon[i];\n\t    area += a[1] * b[0] - a[0] * b[1];\n\t  }\n\t\n\t  return area / 2;\n\t};\n\t\n\tvar centroid$1 = function(polygon) {\n\t  var i = -1,\n\t      n = polygon.length,\n\t      x = 0,\n\t      y = 0,\n\t      a,\n\t      b = polygon[n - 1],\n\t      c,\n\t      k = 0;\n\t\n\t  while (++i < n) {\n\t    a = b;\n\t    b = polygon[i];\n\t    k += c = a[0] * b[1] - b[0] * a[1];\n\t    x += (a[0] + b[0]) * c;\n\t    y += (a[1] + b[1]) * c;\n\t  }\n\t\n\t  return k *= 3, [x / k, y / k];\n\t};\n\t\n\t// Returns the 2D cross product of AB and AC vectors, i.e., the z-component of\n\t// the 3D cross product in a quadrant I Cartesian coordinate system (+x is\n\t// right, +y is up). Returns a positive value if ABC is counter-clockwise,\n\t// negative if clockwise, and zero if the points are collinear.\n\tvar cross$1 = function(a, b, c) {\n\t  return (b[0] - a[0]) * (c[1] - a[1]) - (b[1] - a[1]) * (c[0] - a[0]);\n\t};\n\t\n\tfunction lexicographicOrder(a, b) {\n\t  return a[0] - b[0] || a[1] - b[1];\n\t}\n\t\n\t// Computes the upper convex hull per the monotone chain algorithm.\n\t// Assumes points.length >= 3, is sorted by x, unique in y.\n\t// Returns an array of indices into points in left-to-right order.\n\tfunction computeUpperHullIndexes(points) {\n\t  var n = points.length,\n\t      indexes = [0, 1],\n\t      size = 2;\n\t\n\t  for (var i = 2; i < n; ++i) {\n\t    while (size > 1 && cross$1(points[indexes[size - 2]], points[indexes[size - 1]], points[i]) <= 0) --size;\n\t    indexes[size++] = i;\n\t  }\n\t\n\t  return indexes.slice(0, size); // remove popped points\n\t}\n\t\n\tvar hull = function(points) {\n\t  if ((n = points.length) < 3) return null;\n\t\n\t  var i,\n\t      n,\n\t      sortedPoints = new Array(n),\n\t      flippedPoints = new Array(n);\n\t\n\t  for (i = 0; i < n; ++i) sortedPoints[i] = [+points[i][0], +points[i][1], i];\n\t  sortedPoints.sort(lexicographicOrder);\n\t  for (i = 0; i < n; ++i) flippedPoints[i] = [sortedPoints[i][0], -sortedPoints[i][1]];\n\t\n\t  var upperIndexes = computeUpperHullIndexes(sortedPoints),\n\t      lowerIndexes = computeUpperHullIndexes(flippedPoints);\n\t\n\t  // Construct the hull polygon, removing possible duplicate endpoints.\n\t  var skipLeft = lowerIndexes[0] === upperIndexes[0],\n\t      skipRight = lowerIndexes[lowerIndexes.length - 1] === upperIndexes[upperIndexes.length - 1],\n\t      hull = [];\n\t\n\t  // Add upper hull in right-to-l order.\n\t  // Then add lower hull in left-to-right order.\n\t  for (i = upperIndexes.length - 1; i >= 0; --i) hull.push(points[sortedPoints[upperIndexes[i]][2]]);\n\t  for (i = +skipLeft; i < lowerIndexes.length - skipRight; ++i) hull.push(points[sortedPoints[lowerIndexes[i]][2]]);\n\t\n\t  return hull;\n\t};\n\t\n\tvar contains$1 = function(polygon, point) {\n\t  var n = polygon.length,\n\t      p = polygon[n - 1],\n\t      x = point[0], y = point[1],\n\t      x0 = p[0], y0 = p[1],\n\t      x1, y1,\n\t      inside = false;\n\t\n\t  for (var i = 0; i < n; ++i) {\n\t    p = polygon[i], x1 = p[0], y1 = p[1];\n\t    if (((y1 > y) !== (y0 > y)) && (x < (x0 - x1) * (y - y1) / (y0 - y1) + x1)) inside = !inside;\n\t    x0 = x1, y0 = y1;\n\t  }\n\t\n\t  return inside;\n\t};\n\t\n\tvar length$2 = function(polygon) {\n\t  var i = -1,\n\t      n = polygon.length,\n\t      b = polygon[n - 1],\n\t      xa,\n\t      ya,\n\t      xb = b[0],\n\t      yb = b[1],\n\t      perimeter = 0;\n\t\n\t  while (++i < n) {\n\t    xa = xb;\n\t    ya = yb;\n\t    b = polygon[i];\n\t    xb = b[0];\n\t    yb = b[1];\n\t    xa -= xb;\n\t    ya -= yb;\n\t    perimeter += Math.sqrt(xa * xa + ya * ya);\n\t  }\n\t\n\t  return perimeter;\n\t};\n\t\n\tvar slice$4 = [].slice;\n\t\n\tvar noabort = {};\n\t\n\tfunction Queue(size) {\n\t  this._size = size;\n\t  this._call =\n\t  this._error = null;\n\t  this._tasks = [];\n\t  this._data = [];\n\t  this._waiting =\n\t  this._active =\n\t  this._ended =\n\t  this._start = 0; // inside a synchronous task callback?\n\t}\n\t\n\tQueue.prototype = queue.prototype = {\n\t  constructor: Queue,\n\t  defer: function(callback) {\n\t    if (typeof callback !== \"function\") throw new Error(\"invalid callback\");\n\t    if (this._call) throw new Error(\"defer after await\");\n\t    if (this._error != null) return this;\n\t    var t = slice$4.call(arguments, 1);\n\t    t.push(callback);\n\t    ++this._waiting, this._tasks.push(t);\n\t    poke$1(this);\n\t    return this;\n\t  },\n\t  abort: function() {\n\t    if (this._error == null) abort(this, new Error(\"abort\"));\n\t    return this;\n\t  },\n\t  await: function(callback) {\n\t    if (typeof callback !== \"function\") throw new Error(\"invalid callback\");\n\t    if (this._call) throw new Error(\"multiple await\");\n\t    this._call = function(error, results) { callback.apply(null, [error].concat(results)); };\n\t    maybeNotify(this);\n\t    return this;\n\t  },\n\t  awaitAll: function(callback) {\n\t    if (typeof callback !== \"function\") throw new Error(\"invalid callback\");\n\t    if (this._call) throw new Error(\"multiple await\");\n\t    this._call = callback;\n\t    maybeNotify(this);\n\t    return this;\n\t  }\n\t};\n\t\n\tfunction poke$1(q) {\n\t  if (!q._start) {\n\t    try { start$1(q); } // let the current task complete\n\t    catch (e) {\n\t      if (q._tasks[q._ended + q._active - 1]) abort(q, e); // task errored synchronously\n\t      else if (!q._data) throw e; // await callback errored synchronously\n\t    }\n\t  }\n\t}\n\t\n\tfunction start$1(q) {\n\t  while (q._start = q._waiting && q._active < q._size) {\n\t    var i = q._ended + q._active,\n\t        t = q._tasks[i],\n\t        j = t.length - 1,\n\t        c = t[j];\n\t    t[j] = end(q, i);\n\t    --q._waiting, ++q._active;\n\t    t = c.apply(null, t);\n\t    if (!q._tasks[i]) continue; // task finished synchronously\n\t    q._tasks[i] = t || noabort;\n\t  }\n\t}\n\t\n\tfunction end(q, i) {\n\t  return function(e, r) {\n\t    if (!q._tasks[i]) return; // ignore multiple callbacks\n\t    --q._active, ++q._ended;\n\t    q._tasks[i] = null;\n\t    if (q._error != null) return; // ignore secondary errors\n\t    if (e != null) {\n\t      abort(q, e);\n\t    } else {\n\t      q._data[i] = r;\n\t      if (q._waiting) poke$1(q);\n\t      else maybeNotify(q);\n\t    }\n\t  };\n\t}\n\t\n\tfunction abort(q, e) {\n\t  var i = q._tasks.length, t;\n\t  q._error = e; // ignore active callbacks\n\t  q._data = undefined; // allow gc\n\t  q._waiting = NaN; // prevent starting\n\t\n\t  while (--i >= 0) {\n\t    if (t = q._tasks[i]) {\n\t      q._tasks[i] = null;\n\t      if (t.abort) {\n\t        try { t.abort(); }\n\t        catch (e) { /* ignore */ }\n\t      }\n\t    }\n\t  }\n\t\n\t  q._active = NaN; // allow notification\n\t  maybeNotify(q);\n\t}\n\t\n\tfunction maybeNotify(q) {\n\t  if (!q._active && q._call) {\n\t    var d = q._data;\n\t    q._data = undefined; // allow gc\n\t    q._call(q._error, d);\n\t  }\n\t}\n\t\n\tfunction queue(concurrency) {\n\t  if (concurrency == null) concurrency = Infinity;\n\t  else if (!((concurrency = +concurrency) >= 1)) throw new Error(\"invalid concurrency\");\n\t  return new Queue(concurrency);\n\t}\n\t\n\tvar defaultSource$1 = function() {\n\t  return Math.random();\n\t};\n\t\n\tvar uniform = (function sourceRandomUniform(source) {\n\t  function randomUniform(min, max) {\n\t    min = min == null ? 0 : +min;\n\t    max = max == null ? 1 : +max;\n\t    if (arguments.length === 1) max = min, min = 0;\n\t    else max -= min;\n\t    return function() {\n\t      return source() * max + min;\n\t    };\n\t  }\n\t\n\t  randomUniform.source = sourceRandomUniform;\n\t\n\t  return randomUniform;\n\t})(defaultSource$1);\n\t\n\tvar normal = (function sourceRandomNormal(source) {\n\t  function randomNormal(mu, sigma) {\n\t    var x, r;\n\t    mu = mu == null ? 0 : +mu;\n\t    sigma = sigma == null ? 1 : +sigma;\n\t    return function() {\n\t      var y;\n\t\n\t      // If available, use the second previously-generated uniform random.\n\t      if (x != null) y = x, x = null;\n\t\n\t      // Otherwise, generate a new x and y.\n\t      else do {\n\t        x = source() * 2 - 1;\n\t        y = source() * 2 - 1;\n\t        r = x * x + y * y;\n\t      } while (!r || r > 1);\n\t\n\t      return mu + sigma * y * Math.sqrt(-2 * Math.log(r) / r);\n\t    };\n\t  }\n\t\n\t  randomNormal.source = sourceRandomNormal;\n\t\n\t  return randomNormal;\n\t})(defaultSource$1);\n\t\n\tvar logNormal = (function sourceRandomLogNormal(source) {\n\t  function randomLogNormal() {\n\t    var randomNormal = normal.source(source).apply(this, arguments);\n\t    return function() {\n\t      return Math.exp(randomNormal());\n\t    };\n\t  }\n\t\n\t  randomLogNormal.source = sourceRandomLogNormal;\n\t\n\t  return randomLogNormal;\n\t})(defaultSource$1);\n\t\n\tvar irwinHall = (function sourceRandomIrwinHall(source) {\n\t  function randomIrwinHall(n) {\n\t    return function() {\n\t      for (var sum = 0, i = 0; i < n; ++i) sum += source();\n\t      return sum;\n\t    };\n\t  }\n\t\n\t  randomIrwinHall.source = sourceRandomIrwinHall;\n\t\n\t  return randomIrwinHall;\n\t})(defaultSource$1);\n\t\n\tvar bates = (function sourceRandomBates(source) {\n\t  function randomBates(n) {\n\t    var randomIrwinHall = irwinHall.source(source)(n);\n\t    return function() {\n\t      return randomIrwinHall() / n;\n\t    };\n\t  }\n\t\n\t  randomBates.source = sourceRandomBates;\n\t\n\t  return randomBates;\n\t})(defaultSource$1);\n\t\n\tvar exponential$1 = (function sourceRandomExponential(source) {\n\t  function randomExponential(lambda) {\n\t    return function() {\n\t      return -Math.log(1 - source()) / lambda;\n\t    };\n\t  }\n\t\n\t  randomExponential.source = sourceRandomExponential;\n\t\n\t  return randomExponential;\n\t})(defaultSource$1);\n\t\n\tvar request = function(url, callback) {\n\t  var request,\n\t      event = dispatch(\"beforesend\", \"progress\", \"load\", \"error\"),\n\t      mimeType,\n\t      headers = map$1(),\n\t      xhr = new XMLHttpRequest,\n\t      user = null,\n\t      password = null,\n\t      response,\n\t      responseType,\n\t      timeout = 0;\n\t\n\t  // If IE does not support CORS, use XDomainRequest.\n\t  if (typeof XDomainRequest !== \"undefined\"\n\t      && !(\"withCredentials\" in xhr)\n\t      && /^(http(s)?:)?\\/\\//.test(url)) xhr = new XDomainRequest;\n\t\n\t  \"onload\" in xhr\n\t      ? xhr.onload = xhr.onerror = xhr.ontimeout = respond\n\t      : xhr.onreadystatechange = function(o) { xhr.readyState > 3 && respond(o); };\n\t\n\t  function respond(o) {\n\t    var status = xhr.status, result;\n\t    if (!status && hasResponse(xhr)\n\t        || status >= 200 && status < 300\n\t        || status === 304) {\n\t      if (response) {\n\t        try {\n\t          result = response.call(request, xhr);\n\t        } catch (e) {\n\t          event.call(\"error\", request, e);\n\t          return;\n\t        }\n\t      } else {\n\t        result = xhr;\n\t      }\n\t      event.call(\"load\", request, result);\n\t    } else {\n\t      event.call(\"error\", request, o);\n\t    }\n\t  }\n\t\n\t  xhr.onprogress = function(e) {\n\t    event.call(\"progress\", request, e);\n\t  };\n\t\n\t  request = {\n\t    header: function(name, value) {\n\t      name = (name + \"\").toLowerCase();\n\t      if (arguments.length < 2) return headers.get(name);\n\t      if (value == null) headers.remove(name);\n\t      else headers.set(name, value + \"\");\n\t      return request;\n\t    },\n\t\n\t    // If mimeType is non-null and no Accept header is set, a default is used.\n\t    mimeType: function(value) {\n\t      if (!arguments.length) return mimeType;\n\t      mimeType = value == null ? null : value + \"\";\n\t      return request;\n\t    },\n\t\n\t    // Specifies what type the response value should take;\n\t    // for instance, arraybuffer, blob, document, or text.\n\t    responseType: function(value) {\n\t      if (!arguments.length) return responseType;\n\t      responseType = value;\n\t      return request;\n\t    },\n\t\n\t    timeout: function(value) {\n\t      if (!arguments.length) return timeout;\n\t      timeout = +value;\n\t      return request;\n\t    },\n\t\n\t    user: function(value) {\n\t      return arguments.length < 1 ? user : (user = value == null ? null : value + \"\", request);\n\t    },\n\t\n\t    password: function(value) {\n\t      return arguments.length < 1 ? password : (password = value == null ? null : value + \"\", request);\n\t    },\n\t\n\t    // Specify how to convert the response content to a specific type;\n\t    // changes the callback value on \"load\" events.\n\t    response: function(value) {\n\t      response = value;\n\t      return request;\n\t    },\n\t\n\t    // Alias for send(\"GET\", …).\n\t    get: function(data, callback) {\n\t      return request.send(\"GET\", data, callback);\n\t    },\n\t\n\t    // Alias for send(\"POST\", …).\n\t    post: function(data, callback) {\n\t      return request.send(\"POST\", data, callback);\n\t    },\n\t\n\t    // If callback is non-null, it will be used for error and load events.\n\t    send: function(method, data, callback) {\n\t      xhr.open(method, url, true, user, password);\n\t      if (mimeType != null && !headers.has(\"accept\")) headers.set(\"accept\", mimeType + \",*/*\");\n\t      if (xhr.setRequestHeader) headers.each(function(value, name) { xhr.setRequestHeader(name, value); });\n\t      if (mimeType != null && xhr.overrideMimeType) xhr.overrideMimeType(mimeType);\n\t      if (responseType != null) xhr.responseType = responseType;\n\t      if (timeout > 0) xhr.timeout = timeout;\n\t      if (callback == null && typeof data === \"function\") callback = data, data = null;\n\t      if (callback != null && callback.length === 1) callback = fixCallback(callback);\n\t      if (callback != null) request.on(\"error\", callback).on(\"load\", function(xhr) { callback(null, xhr); });\n\t      event.call(\"beforesend\", request, xhr);\n\t      xhr.send(data == null ? null : data);\n\t      return request;\n\t    },\n\t\n\t    abort: function() {\n\t      xhr.abort();\n\t      return request;\n\t    },\n\t\n\t    on: function() {\n\t      var value = event.on.apply(event, arguments);\n\t      return value === event ? request : value;\n\t    }\n\t  };\n\t\n\t  if (callback != null) {\n\t    if (typeof callback !== \"function\") throw new Error(\"invalid callback: \" + callback);\n\t    return request.get(callback);\n\t  }\n\t\n\t  return request;\n\t};\n\t\n\tfunction fixCallback(callback) {\n\t  return function(error, xhr) {\n\t    callback(error == null ? xhr : null);\n\t  };\n\t}\n\t\n\tfunction hasResponse(xhr) {\n\t  var type = xhr.responseType;\n\t  return type && type !== \"text\"\n\t      ? xhr.response // null on error\n\t      : xhr.responseText; // \"\" on error\n\t}\n\t\n\tvar type$1 = function(defaultMimeType, response) {\n\t  return function(url, callback) {\n\t    var r = request(url).mimeType(defaultMimeType).response(response);\n\t    if (callback != null) {\n\t      if (typeof callback !== \"function\") throw new Error(\"invalid callback: \" + callback);\n\t      return r.get(callback);\n\t    }\n\t    return r;\n\t  };\n\t};\n\t\n\tvar html = type$1(\"text/html\", function(xhr) {\n\t  return document.createRange().createContextualFragment(xhr.responseText);\n\t});\n\t\n\tvar json = type$1(\"application/json\", function(xhr) {\n\t  return JSON.parse(xhr.responseText);\n\t});\n\t\n\tvar text = type$1(\"text/plain\", function(xhr) {\n\t  return xhr.responseText;\n\t});\n\t\n\tvar xml = type$1(\"application/xml\", function(xhr) {\n\t  var xml = xhr.responseXML;\n\t  if (!xml) throw new Error(\"parse error\");\n\t  return xml;\n\t});\n\t\n\tvar dsv$1 = function(defaultMimeType, parse) {\n\t  return function(url, row, callback) {\n\t    if (arguments.length < 3) callback = row, row = null;\n\t    var r = request(url).mimeType(defaultMimeType);\n\t    r.row = function(_) { return arguments.length ? r.response(responseOf(parse, row = _)) : row; };\n\t    r.row(row);\n\t    return callback ? r.get(callback) : r;\n\t  };\n\t};\n\t\n\tfunction responseOf(parse, row) {\n\t  return function(request$$1) {\n\t    return parse(request$$1.responseText, row);\n\t  };\n\t}\n\t\n\tvar csv$1 = dsv$1(\"text/csv\", csvParse);\n\t\n\tvar tsv$1 = dsv$1(\"text/tab-separated-values\", tsvParse);\n\t\n\tvar array$2 = Array.prototype;\n\t\n\tvar map$3 = array$2.map;\n\tvar slice$5 = array$2.slice;\n\t\n\tvar implicit = {name: \"implicit\"};\n\t\n\tfunction ordinal(range) {\n\t  var index = map$1(),\n\t      domain = [],\n\t      unknown = implicit;\n\t\n\t  range = range == null ? [] : slice$5.call(range);\n\t\n\t  function scale(d) {\n\t    var key = d + \"\", i = index.get(key);\n\t    if (!i) {\n\t      if (unknown !== implicit) return unknown;\n\t      index.set(key, i = domain.push(d));\n\t    }\n\t    return range[(i - 1) % range.length];\n\t  }\n\t\n\t  scale.domain = function(_) {\n\t    if (!arguments.length) return domain.slice();\n\t    domain = [], index = map$1();\n\t    var i = -1, n = _.length, d, key;\n\t    while (++i < n) if (!index.has(key = (d = _[i]) + \"\")) index.set(key, domain.push(d));\n\t    return scale;\n\t  };\n\t\n\t  scale.range = function(_) {\n\t    return arguments.length ? (range = slice$5.call(_), scale) : range.slice();\n\t  };\n\t\n\t  scale.unknown = function(_) {\n\t    return arguments.length ? (unknown = _, scale) : unknown;\n\t  };\n\t\n\t  scale.copy = function() {\n\t    return ordinal()\n\t        .domain(domain)\n\t        .range(range)\n\t        .unknown(unknown);\n\t  };\n\t\n\t  return scale;\n\t}\n\t\n\tfunction band() {\n\t  var scale = ordinal().unknown(undefined),\n\t      domain = scale.domain,\n\t      ordinalRange = scale.range,\n\t      range$$1 = [0, 1],\n\t      step,\n\t      bandwidth,\n\t      round = false,\n\t      paddingInner = 0,\n\t      paddingOuter = 0,\n\t      align = 0.5;\n\t\n\t  delete scale.unknown;\n\t\n\t  function rescale() {\n\t    var n = domain().length,\n\t        reverse = range$$1[1] < range$$1[0],\n\t        start = range$$1[reverse - 0],\n\t        stop = range$$1[1 - reverse];\n\t    step = (stop - start) / Math.max(1, n - paddingInner + paddingOuter * 2);\n\t    if (round) step = Math.floor(step);\n\t    start += (stop - start - step * (n - paddingInner)) * align;\n\t    bandwidth = step * (1 - paddingInner);\n\t    if (round) start = Math.round(start), bandwidth = Math.round(bandwidth);\n\t    var values = sequence(n).map(function(i) { return start + step * i; });\n\t    return ordinalRange(reverse ? values.reverse() : values);\n\t  }\n\t\n\t  scale.domain = function(_) {\n\t    return arguments.length ? (domain(_), rescale()) : domain();\n\t  };\n\t\n\t  scale.range = function(_) {\n\t    return arguments.length ? (range$$1 = [+_[0], +_[1]], rescale()) : range$$1.slice();\n\t  };\n\t\n\t  scale.rangeRound = function(_) {\n\t    return range$$1 = [+_[0], +_[1]], round = true, rescale();\n\t  };\n\t\n\t  scale.bandwidth = function() {\n\t    return bandwidth;\n\t  };\n\t\n\t  scale.step = function() {\n\t    return step;\n\t  };\n\t\n\t  scale.round = function(_) {\n\t    return arguments.length ? (round = !!_, rescale()) : round;\n\t  };\n\t\n\t  scale.padding = function(_) {\n\t    return arguments.length ? (paddingInner = paddingOuter = Math.max(0, Math.min(1, _)), rescale()) : paddingInner;\n\t  };\n\t\n\t  scale.paddingInner = function(_) {\n\t    return arguments.length ? (paddingInner = Math.max(0, Math.min(1, _)), rescale()) : paddingInner;\n\t  };\n\t\n\t  scale.paddingOuter = function(_) {\n\t    return arguments.length ? (paddingOuter = Math.max(0, Math.min(1, _)), rescale()) : paddingOuter;\n\t  };\n\t\n\t  scale.align = function(_) {\n\t    return arguments.length ? (align = Math.max(0, Math.min(1, _)), rescale()) : align;\n\t  };\n\t\n\t  scale.copy = function() {\n\t    return band()\n\t        .domain(domain())\n\t        .range(range$$1)\n\t        .round(round)\n\t        .paddingInner(paddingInner)\n\t        .paddingOuter(paddingOuter)\n\t        .align(align);\n\t  };\n\t\n\t  return rescale();\n\t}\n\t\n\tfunction pointish(scale) {\n\t  var copy = scale.copy;\n\t\n\t  scale.padding = scale.paddingOuter;\n\t  delete scale.paddingInner;\n\t  delete scale.paddingOuter;\n\t\n\t  scale.copy = function() {\n\t    return pointish(copy());\n\t  };\n\t\n\t  return scale;\n\t}\n\t\n\tfunction point$1() {\n\t  return pointish(band().paddingInner(1));\n\t}\n\t\n\tvar constant$9 = function(x) {\n\t  return function() {\n\t    return x;\n\t  };\n\t};\n\t\n\tvar number$2 = function(x) {\n\t  return +x;\n\t};\n\t\n\tvar unit = [0, 1];\n\t\n\tfunction deinterpolateLinear(a, b) {\n\t  return (b -= (a = +a))\n\t      ? function(x) { return (x - a) / b; }\n\t      : constant$9(b);\n\t}\n\t\n\tfunction deinterpolateClamp(deinterpolate) {\n\t  return function(a, b) {\n\t    var d = deinterpolate(a = +a, b = +b);\n\t    return function(x) { return x <= a ? 0 : x >= b ? 1 : d(x); };\n\t  };\n\t}\n\t\n\tfunction reinterpolateClamp(reinterpolate) {\n\t  return function(a, b) {\n\t    var r = reinterpolate(a = +a, b = +b);\n\t    return function(t) { return t <= 0 ? a : t >= 1 ? b : r(t); };\n\t  };\n\t}\n\t\n\tfunction bimap(domain, range, deinterpolate, reinterpolate) {\n\t  var d0 = domain[0], d1 = domain[1], r0 = range[0], r1 = range[1];\n\t  if (d1 < d0) d0 = deinterpolate(d1, d0), r0 = reinterpolate(r1, r0);\n\t  else d0 = deinterpolate(d0, d1), r0 = reinterpolate(r0, r1);\n\t  return function(x) { return r0(d0(x)); };\n\t}\n\t\n\tfunction polymap(domain, range, deinterpolate, reinterpolate) {\n\t  var j = Math.min(domain.length, range.length) - 1,\n\t      d = new Array(j),\n\t      r = new Array(j),\n\t      i = -1;\n\t\n\t  // Reverse descending domains.\n\t  if (domain[j] < domain[0]) {\n\t    domain = domain.slice().reverse();\n\t    range = range.slice().reverse();\n\t  }\n\t\n\t  while (++i < j) {\n\t    d[i] = deinterpolate(domain[i], domain[i + 1]);\n\t    r[i] = reinterpolate(range[i], range[i + 1]);\n\t  }\n\t\n\t  return function(x) {\n\t    var i = bisectRight(domain, x, 1, j) - 1;\n\t    return r[i](d[i](x));\n\t  };\n\t}\n\t\n\tfunction copy(source, target) {\n\t  return target\n\t      .domain(source.domain())\n\t      .range(source.range())\n\t      .interpolate(source.interpolate())\n\t      .clamp(source.clamp());\n\t}\n\t\n\t// deinterpolate(a, b)(x) takes a domain value x in [a,b] and returns the corresponding parameter t in [0,1].\n\t// reinterpolate(a, b)(t) takes a parameter t in [0,1] and returns the corresponding domain value x in [a,b].\n\tfunction continuous(deinterpolate, reinterpolate) {\n\t  var domain = unit,\n\t      range = unit,\n\t      interpolate$$1 = interpolateValue,\n\t      clamp = false,\n\t      piecewise,\n\t      output,\n\t      input;\n\t\n\t  function rescale() {\n\t    piecewise = Math.min(domain.length, range.length) > 2 ? polymap : bimap;\n\t    output = input = null;\n\t    return scale;\n\t  }\n\t\n\t  function scale(x) {\n\t    return (output || (output = piecewise(domain, range, clamp ? deinterpolateClamp(deinterpolate) : deinterpolate, interpolate$$1)))(+x);\n\t  }\n\t\n\t  scale.invert = function(y) {\n\t    return (input || (input = piecewise(range, domain, deinterpolateLinear, clamp ? reinterpolateClamp(reinterpolate) : reinterpolate)))(+y);\n\t  };\n\t\n\t  scale.domain = function(_) {\n\t    return arguments.length ? (domain = map$3.call(_, number$2), rescale()) : domain.slice();\n\t  };\n\t\n\t  scale.range = function(_) {\n\t    return arguments.length ? (range = slice$5.call(_), rescale()) : range.slice();\n\t  };\n\t\n\t  scale.rangeRound = function(_) {\n\t    return range = slice$5.call(_), interpolate$$1 = interpolateRound, rescale();\n\t  };\n\t\n\t  scale.clamp = function(_) {\n\t    return arguments.length ? (clamp = !!_, rescale()) : clamp;\n\t  };\n\t\n\t  scale.interpolate = function(_) {\n\t    return arguments.length ? (interpolate$$1 = _, rescale()) : interpolate$$1;\n\t  };\n\t\n\t  return rescale();\n\t}\n\t\n\tvar tickFormat = function(domain, count, specifier) {\n\t  var start = domain[0],\n\t      stop = domain[domain.length - 1],\n\t      step = tickStep(start, stop, count == null ? 10 : count),\n\t      precision;\n\t  specifier = formatSpecifier(specifier == null ? \",f\" : specifier);\n\t  switch (specifier.type) {\n\t    case \"s\": {\n\t      var value = Math.max(Math.abs(start), Math.abs(stop));\n\t      if (specifier.precision == null && !isNaN(precision = precisionPrefix(step, value))) specifier.precision = precision;\n\t      return exports.formatPrefix(specifier, value);\n\t    }\n\t    case \"\":\n\t    case \"e\":\n\t    case \"g\":\n\t    case \"p\":\n\t    case \"r\": {\n\t      if (specifier.precision == null && !isNaN(precision = precisionRound(step, Math.max(Math.abs(start), Math.abs(stop))))) specifier.precision = precision - (specifier.type === \"e\");\n\t      break;\n\t    }\n\t    case \"f\":\n\t    case \"%\": {\n\t      if (specifier.precision == null && !isNaN(precision = precisionFixed(step))) specifier.precision = precision - (specifier.type === \"%\") * 2;\n\t      break;\n\t    }\n\t  }\n\t  return exports.format(specifier);\n\t};\n\t\n\tfunction linearish(scale) {\n\t  var domain = scale.domain;\n\t\n\t  scale.ticks = function(count) {\n\t    var d = domain();\n\t    return ticks(d[0], d[d.length - 1], count == null ? 10 : count);\n\t  };\n\t\n\t  scale.tickFormat = function(count, specifier) {\n\t    return tickFormat(domain(), count, specifier);\n\t  };\n\t\n\t  scale.nice = function(count) {\n\t    if (count == null) count = 10;\n\t\n\t    var d = domain(),\n\t        i0 = 0,\n\t        i1 = d.length - 1,\n\t        start = d[i0],\n\t        stop = d[i1],\n\t        step;\n\t\n\t    if (stop < start) {\n\t      step = start, start = stop, stop = step;\n\t      step = i0, i0 = i1, i1 = step;\n\t    }\n\t\n\t    step = tickIncrement(start, stop, count);\n\t\n\t    if (step > 0) {\n\t      start = Math.floor(start / step) * step;\n\t      stop = Math.ceil(stop / step) * step;\n\t      step = tickIncrement(start, stop, count);\n\t    } else if (step < 0) {\n\t      start = Math.ceil(start * step) / step;\n\t      stop = Math.floor(stop * step) / step;\n\t      step = tickIncrement(start, stop, count);\n\t    }\n\t\n\t    if (step > 0) {\n\t      d[i0] = Math.floor(start / step) * step;\n\t      d[i1] = Math.ceil(stop / step) * step;\n\t      domain(d);\n\t    } else if (step < 0) {\n\t      d[i0] = Math.ceil(start * step) / step;\n\t      d[i1] = Math.floor(stop * step) / step;\n\t      domain(d);\n\t    }\n\t\n\t    return scale;\n\t  };\n\t\n\t  return scale;\n\t}\n\t\n\tfunction linear$2() {\n\t  var scale = continuous(deinterpolateLinear, reinterpolate);\n\t\n\t  scale.copy = function() {\n\t    return copy(scale, linear$2());\n\t  };\n\t\n\t  return linearish(scale);\n\t}\n\t\n\tfunction identity$6() {\n\t  var domain = [0, 1];\n\t\n\t  function scale(x) {\n\t    return +x;\n\t  }\n\t\n\t  scale.invert = scale;\n\t\n\t  scale.domain = scale.range = function(_) {\n\t    return arguments.length ? (domain = map$3.call(_, number$2), scale) : domain.slice();\n\t  };\n\t\n\t  scale.copy = function() {\n\t    return identity$6().domain(domain);\n\t  };\n\t\n\t  return linearish(scale);\n\t}\n\t\n\tvar nice = function(domain, interval) {\n\t  domain = domain.slice();\n\t\n\t  var i0 = 0,\n\t      i1 = domain.length - 1,\n\t      x0 = domain[i0],\n\t      x1 = domain[i1],\n\t      t;\n\t\n\t  if (x1 < x0) {\n\t    t = i0, i0 = i1, i1 = t;\n\t    t = x0, x0 = x1, x1 = t;\n\t  }\n\t\n\t  domain[i0] = interval.floor(x0);\n\t  domain[i1] = interval.ceil(x1);\n\t  return domain;\n\t};\n\t\n\tfunction deinterpolate(a, b) {\n\t  return (b = Math.log(b / a))\n\t      ? function(x) { return Math.log(x / a) / b; }\n\t      : constant$9(b);\n\t}\n\t\n\tfunction reinterpolate$1(a, b) {\n\t  return a < 0\n\t      ? function(t) { return -Math.pow(-b, t) * Math.pow(-a, 1 - t); }\n\t      : function(t) { return Math.pow(b, t) * Math.pow(a, 1 - t); };\n\t}\n\t\n\tfunction pow10(x) {\n\t  return isFinite(x) ? +(\"1e\" + x) : x < 0 ? 0 : x;\n\t}\n\t\n\tfunction powp(base) {\n\t  return base === 10 ? pow10\n\t      : base === Math.E ? Math.exp\n\t      : function(x) { return Math.pow(base, x); };\n\t}\n\t\n\tfunction logp(base) {\n\t  return base === Math.E ? Math.log\n\t      : base === 10 && Math.log10\n\t      || base === 2 && Math.log2\n\t      || (base = Math.log(base), function(x) { return Math.log(x) / base; });\n\t}\n\t\n\tfunction reflect(f) {\n\t  return function(x) {\n\t    return -f(-x);\n\t  };\n\t}\n\t\n\tfunction log$1() {\n\t  var scale = continuous(deinterpolate, reinterpolate$1).domain([1, 10]),\n\t      domain = scale.domain,\n\t      base = 10,\n\t      logs = logp(10),\n\t      pows = powp(10);\n\t\n\t  function rescale() {\n\t    logs = logp(base), pows = powp(base);\n\t    if (domain()[0] < 0) logs = reflect(logs), pows = reflect(pows);\n\t    return scale;\n\t  }\n\t\n\t  scale.base = function(_) {\n\t    return arguments.length ? (base = +_, rescale()) : base;\n\t  };\n\t\n\t  scale.domain = function(_) {\n\t    return arguments.length ? (domain(_), rescale()) : domain();\n\t  };\n\t\n\t  scale.ticks = function(count) {\n\t    var d = domain(),\n\t        u = d[0],\n\t        v = d[d.length - 1],\n\t        r;\n\t\n\t    if (r = v < u) i = u, u = v, v = i;\n\t\n\t    var i = logs(u),\n\t        j = logs(v),\n\t        p,\n\t        k,\n\t        t,\n\t        n = count == null ? 10 : +count,\n\t        z = [];\n\t\n\t    if (!(base % 1) && j - i < n) {\n\t      i = Math.round(i) - 1, j = Math.round(j) + 1;\n\t      if (u > 0) for (; i < j; ++i) {\n\t        for (k = 1, p = pows(i); k < base; ++k) {\n\t          t = p * k;\n\t          if (t < u) continue;\n\t          if (t > v) break;\n\t          z.push(t);\n\t        }\n\t      } else for (; i < j; ++i) {\n\t        for (k = base - 1, p = pows(i); k >= 1; --k) {\n\t          t = p * k;\n\t          if (t < u) continue;\n\t          if (t > v) break;\n\t          z.push(t);\n\t        }\n\t      }\n\t    } else {\n\t      z = ticks(i, j, Math.min(j - i, n)).map(pows);\n\t    }\n\t\n\t    return r ? z.reverse() : z;\n\t  };\n\t\n\t  scale.tickFormat = function(count, specifier) {\n\t    if (specifier == null) specifier = base === 10 ? \".0e\" : \",\";\n\t    if (typeof specifier !== \"function\") specifier = exports.format(specifier);\n\t    if (count === Infinity) return specifier;\n\t    if (count == null) count = 10;\n\t    var k = Math.max(1, base * count / scale.ticks().length); // TODO fast estimate?\n\t    return function(d) {\n\t      var i = d / pows(Math.round(logs(d)));\n\t      if (i * base < base - 0.5) i *= base;\n\t      return i <= k ? specifier(d) : \"\";\n\t    };\n\t  };\n\t\n\t  scale.nice = function() {\n\t    return domain(nice(domain(), {\n\t      floor: function(x) { return pows(Math.floor(logs(x))); },\n\t      ceil: function(x) { return pows(Math.ceil(logs(x))); }\n\t    }));\n\t  };\n\t\n\t  scale.copy = function() {\n\t    return copy(scale, log$1().base(base));\n\t  };\n\t\n\t  return scale;\n\t}\n\t\n\tfunction raise$1(x, exponent) {\n\t  return x < 0 ? -Math.pow(-x, exponent) : Math.pow(x, exponent);\n\t}\n\t\n\tfunction pow$1() {\n\t  var exponent = 1,\n\t      scale = continuous(deinterpolate, reinterpolate),\n\t      domain = scale.domain;\n\t\n\t  function deinterpolate(a, b) {\n\t    return (b = raise$1(b, exponent) - (a = raise$1(a, exponent)))\n\t        ? function(x) { return (raise$1(x, exponent) - a) / b; }\n\t        : constant$9(b);\n\t  }\n\t\n\t  function reinterpolate(a, b) {\n\t    b = raise$1(b, exponent) - (a = raise$1(a, exponent));\n\t    return function(t) { return raise$1(a + b * t, 1 / exponent); };\n\t  }\n\t\n\t  scale.exponent = function(_) {\n\t    return arguments.length ? (exponent = +_, domain(domain())) : exponent;\n\t  };\n\t\n\t  scale.copy = function() {\n\t    return copy(scale, pow$1().exponent(exponent));\n\t  };\n\t\n\t  return linearish(scale);\n\t}\n\t\n\tfunction sqrt$1() {\n\t  return pow$1().exponent(0.5);\n\t}\n\t\n\tfunction quantile$$1() {\n\t  var domain = [],\n\t      range = [],\n\t      thresholds = [];\n\t\n\t  function rescale() {\n\t    var i = 0, n = Math.max(1, range.length);\n\t    thresholds = new Array(n - 1);\n\t    while (++i < n) thresholds[i - 1] = threshold(domain, i / n);\n\t    return scale;\n\t  }\n\t\n\t  function scale(x) {\n\t    if (!isNaN(x = +x)) return range[bisectRight(thresholds, x)];\n\t  }\n\t\n\t  scale.invertExtent = function(y) {\n\t    var i = range.indexOf(y);\n\t    return i < 0 ? [NaN, NaN] : [\n\t      i > 0 ? thresholds[i - 1] : domain[0],\n\t      i < thresholds.length ? thresholds[i] : domain[domain.length - 1]\n\t    ];\n\t  };\n\t\n\t  scale.domain = function(_) {\n\t    if (!arguments.length) return domain.slice();\n\t    domain = [];\n\t    for (var i = 0, n = _.length, d; i < n; ++i) if (d = _[i], d != null && !isNaN(d = +d)) domain.push(d);\n\t    domain.sort(ascending);\n\t    return rescale();\n\t  };\n\t\n\t  scale.range = function(_) {\n\t    return arguments.length ? (range = slice$5.call(_), rescale()) : range.slice();\n\t  };\n\t\n\t  scale.quantiles = function() {\n\t    return thresholds.slice();\n\t  };\n\t\n\t  scale.copy = function() {\n\t    return quantile$$1()\n\t        .domain(domain)\n\t        .range(range);\n\t  };\n\t\n\t  return scale;\n\t}\n\t\n\tfunction quantize$1() {\n\t  var x0 = 0,\n\t      x1 = 1,\n\t      n = 1,\n\t      domain = [0.5],\n\t      range = [0, 1];\n\t\n\t  function scale(x) {\n\t    if (x <= x) return range[bisectRight(domain, x, 0, n)];\n\t  }\n\t\n\t  function rescale() {\n\t    var i = -1;\n\t    domain = new Array(n);\n\t    while (++i < n) domain[i] = ((i + 1) * x1 - (i - n) * x0) / (n + 1);\n\t    return scale;\n\t  }\n\t\n\t  scale.domain = function(_) {\n\t    return arguments.length ? (x0 = +_[0], x1 = +_[1], rescale()) : [x0, x1];\n\t  };\n\t\n\t  scale.range = function(_) {\n\t    return arguments.length ? (n = (range = slice$5.call(_)).length - 1, rescale()) : range.slice();\n\t  };\n\t\n\t  scale.invertExtent = function(y) {\n\t    var i = range.indexOf(y);\n\t    return i < 0 ? [NaN, NaN]\n\t        : i < 1 ? [x0, domain[0]]\n\t        : i >= n ? [domain[n - 1], x1]\n\t        : [domain[i - 1], domain[i]];\n\t  };\n\t\n\t  scale.copy = function() {\n\t    return quantize$1()\n\t        .domain([x0, x1])\n\t        .range(range);\n\t  };\n\t\n\t  return linearish(scale);\n\t}\n\t\n\tfunction threshold$1() {\n\t  var domain = [0.5],\n\t      range = [0, 1],\n\t      n = 1;\n\t\n\t  function scale(x) {\n\t    if (x <= x) return range[bisectRight(domain, x, 0, n)];\n\t  }\n\t\n\t  scale.domain = function(_) {\n\t    return arguments.length ? (domain = slice$5.call(_), n = Math.min(domain.length, range.length - 1), scale) : domain.slice();\n\t  };\n\t\n\t  scale.range = function(_) {\n\t    return arguments.length ? (range = slice$5.call(_), n = Math.min(domain.length, range.length - 1), scale) : range.slice();\n\t  };\n\t\n\t  scale.invertExtent = function(y) {\n\t    var i = range.indexOf(y);\n\t    return [domain[i - 1], domain[i]];\n\t  };\n\t\n\t  scale.copy = function() {\n\t    return threshold$1()\n\t        .domain(domain)\n\t        .range(range);\n\t  };\n\t\n\t  return scale;\n\t}\n\t\n\tvar t0$1 = new Date;\n\tvar t1$1 = new Date;\n\t\n\tfunction newInterval(floori, offseti, count, field) {\n\t\n\t  function interval(date) {\n\t    return floori(date = new Date(+date)), date;\n\t  }\n\t\n\t  interval.floor = interval;\n\t\n\t  interval.ceil = function(date) {\n\t    return floori(date = new Date(date - 1)), offseti(date, 1), floori(date), date;\n\t  };\n\t\n\t  interval.round = function(date) {\n\t    var d0 = interval(date),\n\t        d1 = interval.ceil(date);\n\t    return date - d0 < d1 - date ? d0 : d1;\n\t  };\n\t\n\t  interval.offset = function(date, step) {\n\t    return offseti(date = new Date(+date), step == null ? 1 : Math.floor(step)), date;\n\t  };\n\t\n\t  interval.range = function(start, stop, step) {\n\t    var range = [];\n\t    start = interval.ceil(start);\n\t    step = step == null ? 1 : Math.floor(step);\n\t    if (!(start < stop) || !(step > 0)) return range; // also handles Invalid Date\n\t    do range.push(new Date(+start)); while (offseti(start, step), floori(start), start < stop)\n\t    return range;\n\t  };\n\t\n\t  interval.filter = function(test) {\n\t    return newInterval(function(date) {\n\t      if (date >= date) while (floori(date), !test(date)) date.setTime(date - 1);\n\t    }, function(date, step) {\n\t      if (date >= date) {\n\t        if (step < 0) while (++step <= 0) {\n\t          while (offseti(date, -1), !test(date)) {} // eslint-disable-line no-empty\n\t        } else while (--step >= 0) {\n\t          while (offseti(date, +1), !test(date)) {} // eslint-disable-line no-empty\n\t        }\n\t      }\n\t    });\n\t  };\n\t\n\t  if (count) {\n\t    interval.count = function(start, end) {\n\t      t0$1.setTime(+start), t1$1.setTime(+end);\n\t      floori(t0$1), floori(t1$1);\n\t      return Math.floor(count(t0$1, t1$1));\n\t    };\n\t\n\t    interval.every = function(step) {\n\t      step = Math.floor(step);\n\t      return !isFinite(step) || !(step > 0) ? null\n\t          : !(step > 1) ? interval\n\t          : interval.filter(field\n\t              ? function(d) { return field(d) % step === 0; }\n\t              : function(d) { return interval.count(0, d) % step === 0; });\n\t    };\n\t  }\n\t\n\t  return interval;\n\t}\n\t\n\tvar millisecond = newInterval(function() {\n\t  // noop\n\t}, function(date, step) {\n\t  date.setTime(+date + step);\n\t}, function(start, end) {\n\t  return end - start;\n\t});\n\t\n\t// An optimized implementation for this simple case.\n\tmillisecond.every = function(k) {\n\t  k = Math.floor(k);\n\t  if (!isFinite(k) || !(k > 0)) return null;\n\t  if (!(k > 1)) return millisecond;\n\t  return newInterval(function(date) {\n\t    date.setTime(Math.floor(date / k) * k);\n\t  }, function(date, step) {\n\t    date.setTime(+date + step * k);\n\t  }, function(start, end) {\n\t    return (end - start) / k;\n\t  });\n\t};\n\t\n\tvar milliseconds = millisecond.range;\n\t\n\tvar durationSecond$1 = 1e3;\n\tvar durationMinute$1 = 6e4;\n\tvar durationHour$1 = 36e5;\n\tvar durationDay$1 = 864e5;\n\tvar durationWeek$1 = 6048e5;\n\t\n\tvar second = newInterval(function(date) {\n\t  date.setTime(Math.floor(date / durationSecond$1) * durationSecond$1);\n\t}, function(date, step) {\n\t  date.setTime(+date + step * durationSecond$1);\n\t}, function(start, end) {\n\t  return (end - start) / durationSecond$1;\n\t}, function(date) {\n\t  return date.getUTCSeconds();\n\t});\n\t\n\tvar seconds = second.range;\n\t\n\tvar minute = newInterval(function(date) {\n\t  date.setTime(Math.floor(date / durationMinute$1) * durationMinute$1);\n\t}, function(date, step) {\n\t  date.setTime(+date + step * durationMinute$1);\n\t}, function(start, end) {\n\t  return (end - start) / durationMinute$1;\n\t}, function(date) {\n\t  return date.getMinutes();\n\t});\n\t\n\tvar minutes = minute.range;\n\t\n\tvar hour = newInterval(function(date) {\n\t  var offset = date.getTimezoneOffset() * durationMinute$1 % durationHour$1;\n\t  if (offset < 0) offset += durationHour$1;\n\t  date.setTime(Math.floor((+date - offset) / durationHour$1) * durationHour$1 + offset);\n\t}, function(date, step) {\n\t  date.setTime(+date + step * durationHour$1);\n\t}, function(start, end) {\n\t  return (end - start) / durationHour$1;\n\t}, function(date) {\n\t  return date.getHours();\n\t});\n\t\n\tvar hours = hour.range;\n\t\n\tvar day = newInterval(function(date) {\n\t  date.setHours(0, 0, 0, 0);\n\t}, function(date, step) {\n\t  date.setDate(date.getDate() + step);\n\t}, function(start, end) {\n\t  return (end - start - (end.getTimezoneOffset() - start.getTimezoneOffset()) * durationMinute$1) / durationDay$1;\n\t}, function(date) {\n\t  return date.getDate() - 1;\n\t});\n\t\n\tvar days = day.range;\n\t\n\tfunction weekday(i) {\n\t  return newInterval(function(date) {\n\t    date.setDate(date.getDate() - (date.getDay() + 7 - i) % 7);\n\t    date.setHours(0, 0, 0, 0);\n\t  }, function(date, step) {\n\t    date.setDate(date.getDate() + step * 7);\n\t  }, function(start, end) {\n\t    return (end - start - (end.getTimezoneOffset() - start.getTimezoneOffset()) * durationMinute$1) / durationWeek$1;\n\t  });\n\t}\n\t\n\tvar sunday = weekday(0);\n\tvar monday = weekday(1);\n\tvar tuesday = weekday(2);\n\tvar wednesday = weekday(3);\n\tvar thursday = weekday(4);\n\tvar friday = weekday(5);\n\tvar saturday = weekday(6);\n\t\n\tvar sundays = sunday.range;\n\tvar mondays = monday.range;\n\tvar tuesdays = tuesday.range;\n\tvar wednesdays = wednesday.range;\n\tvar thursdays = thursday.range;\n\tvar fridays = friday.range;\n\tvar saturdays = saturday.range;\n\t\n\tvar month = newInterval(function(date) {\n\t  date.setDate(1);\n\t  date.setHours(0, 0, 0, 0);\n\t}, function(date, step) {\n\t  date.setMonth(date.getMonth() + step);\n\t}, function(start, end) {\n\t  return end.getMonth() - start.getMonth() + (end.getFullYear() - start.getFullYear()) * 12;\n\t}, function(date) {\n\t  return date.getMonth();\n\t});\n\t\n\tvar months = month.range;\n\t\n\tvar year = newInterval(function(date) {\n\t  date.setMonth(0, 1);\n\t  date.setHours(0, 0, 0, 0);\n\t}, function(date, step) {\n\t  date.setFullYear(date.getFullYear() + step);\n\t}, function(start, end) {\n\t  return end.getFullYear() - start.getFullYear();\n\t}, function(date) {\n\t  return date.getFullYear();\n\t});\n\t\n\t// An optimized implementation for this simple case.\n\tyear.every = function(k) {\n\t  return !isFinite(k = Math.floor(k)) || !(k > 0) ? null : newInterval(function(date) {\n\t    date.setFullYear(Math.floor(date.getFullYear() / k) * k);\n\t    date.setMonth(0, 1);\n\t    date.setHours(0, 0, 0, 0);\n\t  }, function(date, step) {\n\t    date.setFullYear(date.getFullYear() + step * k);\n\t  });\n\t};\n\t\n\tvar years = year.range;\n\t\n\tvar utcMinute = newInterval(function(date) {\n\t  date.setUTCSeconds(0, 0);\n\t}, function(date, step) {\n\t  date.setTime(+date + step * durationMinute$1);\n\t}, function(start, end) {\n\t  return (end - start) / durationMinute$1;\n\t}, function(date) {\n\t  return date.getUTCMinutes();\n\t});\n\t\n\tvar utcMinutes = utcMinute.range;\n\t\n\tvar utcHour = newInterval(function(date) {\n\t  date.setUTCMinutes(0, 0, 0);\n\t}, function(date, step) {\n\t  date.setTime(+date + step * durationHour$1);\n\t}, function(start, end) {\n\t  return (end - start) / durationHour$1;\n\t}, function(date) {\n\t  return date.getUTCHours();\n\t});\n\t\n\tvar utcHours = utcHour.range;\n\t\n\tvar utcDay = newInterval(function(date) {\n\t  date.setUTCHours(0, 0, 0, 0);\n\t}, function(date, step) {\n\t  date.setUTCDate(date.getUTCDate() + step);\n\t}, function(start, end) {\n\t  return (end - start) / durationDay$1;\n\t}, function(date) {\n\t  return date.getUTCDate() - 1;\n\t});\n\t\n\tvar utcDays = utcDay.range;\n\t\n\tfunction utcWeekday(i) {\n\t  return newInterval(function(date) {\n\t    date.setUTCDate(date.getUTCDate() - (date.getUTCDay() + 7 - i) % 7);\n\t    date.setUTCHours(0, 0, 0, 0);\n\t  }, function(date, step) {\n\t    date.setUTCDate(date.getUTCDate() + step * 7);\n\t  }, function(start, end) {\n\t    return (end - start) / durationWeek$1;\n\t  });\n\t}\n\t\n\tvar utcSunday = utcWeekday(0);\n\tvar utcMonday = utcWeekday(1);\n\tvar utcTuesday = utcWeekday(2);\n\tvar utcWednesday = utcWeekday(3);\n\tvar utcThursday = utcWeekday(4);\n\tvar utcFriday = utcWeekday(5);\n\tvar utcSaturday = utcWeekday(6);\n\t\n\tvar utcSundays = utcSunday.range;\n\tvar utcMondays = utcMonday.range;\n\tvar utcTuesdays = utcTuesday.range;\n\tvar utcWednesdays = utcWednesday.range;\n\tvar utcThursdays = utcThursday.range;\n\tvar utcFridays = utcFriday.range;\n\tvar utcSaturdays = utcSaturday.range;\n\t\n\tvar utcMonth = newInterval(function(date) {\n\t  date.setUTCDate(1);\n\t  date.setUTCHours(0, 0, 0, 0);\n\t}, function(date, step) {\n\t  date.setUTCMonth(date.getUTCMonth() + step);\n\t}, function(start, end) {\n\t  return end.getUTCMonth() - start.getUTCMonth() + (end.getUTCFullYear() - start.getUTCFullYear()) * 12;\n\t}, function(date) {\n\t  return date.getUTCMonth();\n\t});\n\t\n\tvar utcMonths = utcMonth.range;\n\t\n\tvar utcYear = newInterval(function(date) {\n\t  date.setUTCMonth(0, 1);\n\t  date.setUTCHours(0, 0, 0, 0);\n\t}, function(date, step) {\n\t  date.setUTCFullYear(date.getUTCFullYear() + step);\n\t}, function(start, end) {\n\t  return end.getUTCFullYear() - start.getUTCFullYear();\n\t}, function(date) {\n\t  return date.getUTCFullYear();\n\t});\n\t\n\t// An optimized implementation for this simple case.\n\tutcYear.every = function(k) {\n\t  return !isFinite(k = Math.floor(k)) || !(k > 0) ? null : newInterval(function(date) {\n\t    date.setUTCFullYear(Math.floor(date.getUTCFullYear() / k) * k);\n\t    date.setUTCMonth(0, 1);\n\t    date.setUTCHours(0, 0, 0, 0);\n\t  }, function(date, step) {\n\t    date.setUTCFullYear(date.getUTCFullYear() + step * k);\n\t  });\n\t};\n\t\n\tvar utcYears = utcYear.range;\n\t\n\tfunction localDate(d) {\n\t  if (0 <= d.y && d.y < 100) {\n\t    var date = new Date(-1, d.m, d.d, d.H, d.M, d.S, d.L);\n\t    date.setFullYear(d.y);\n\t    return date;\n\t  }\n\t  return new Date(d.y, d.m, d.d, d.H, d.M, d.S, d.L);\n\t}\n\t\n\tfunction utcDate(d) {\n\t  if (0 <= d.y && d.y < 100) {\n\t    var date = new Date(Date.UTC(-1, d.m, d.d, d.H, d.M, d.S, d.L));\n\t    date.setUTCFullYear(d.y);\n\t    return date;\n\t  }\n\t  return new Date(Date.UTC(d.y, d.m, d.d, d.H, d.M, d.S, d.L));\n\t}\n\t\n\tfunction newYear(y) {\n\t  return {y: y, m: 0, d: 1, H: 0, M: 0, S: 0, L: 0};\n\t}\n\t\n\tfunction formatLocale$1(locale) {\n\t  var locale_dateTime = locale.dateTime,\n\t      locale_date = locale.date,\n\t      locale_time = locale.time,\n\t      locale_periods = locale.periods,\n\t      locale_weekdays = locale.days,\n\t      locale_shortWeekdays = locale.shortDays,\n\t      locale_months = locale.months,\n\t      locale_shortMonths = locale.shortMonths;\n\t\n\t  var periodRe = formatRe(locale_periods),\n\t      periodLookup = formatLookup(locale_periods),\n\t      weekdayRe = formatRe(locale_weekdays),\n\t      weekdayLookup = formatLookup(locale_weekdays),\n\t      shortWeekdayRe = formatRe(locale_shortWeekdays),\n\t      shortWeekdayLookup = formatLookup(locale_shortWeekdays),\n\t      monthRe = formatRe(locale_months),\n\t      monthLookup = formatLookup(locale_months),\n\t      shortMonthRe = formatRe(locale_shortMonths),\n\t      shortMonthLookup = formatLookup(locale_shortMonths);\n\t\n\t  var formats = {\n\t    \"a\": formatShortWeekday,\n\t    \"A\": formatWeekday,\n\t    \"b\": formatShortMonth,\n\t    \"B\": formatMonth,\n\t    \"c\": null,\n\t    \"d\": formatDayOfMonth,\n\t    \"e\": formatDayOfMonth,\n\t    \"H\": formatHour24,\n\t    \"I\": formatHour12,\n\t    \"j\": formatDayOfYear,\n\t    \"L\": formatMilliseconds,\n\t    \"m\": formatMonthNumber,\n\t    \"M\": formatMinutes,\n\t    \"p\": formatPeriod,\n\t    \"S\": formatSeconds,\n\t    \"U\": formatWeekNumberSunday,\n\t    \"w\": formatWeekdayNumber,\n\t    \"W\": formatWeekNumberMonday,\n\t    \"x\": null,\n\t    \"X\": null,\n\t    \"y\": formatYear,\n\t    \"Y\": formatFullYear,\n\t    \"Z\": formatZone,\n\t    \"%\": formatLiteralPercent\n\t  };\n\t\n\t  var utcFormats = {\n\t    \"a\": formatUTCShortWeekday,\n\t    \"A\": formatUTCWeekday,\n\t    \"b\": formatUTCShortMonth,\n\t    \"B\": formatUTCMonth,\n\t    \"c\": null,\n\t    \"d\": formatUTCDayOfMonth,\n\t    \"e\": formatUTCDayOfMonth,\n\t    \"H\": formatUTCHour24,\n\t    \"I\": formatUTCHour12,\n\t    \"j\": formatUTCDayOfYear,\n\t    \"L\": formatUTCMilliseconds,\n\t    \"m\": formatUTCMonthNumber,\n\t    \"M\": formatUTCMinutes,\n\t    \"p\": formatUTCPeriod,\n\t    \"S\": formatUTCSeconds,\n\t    \"U\": formatUTCWeekNumberSunday,\n\t    \"w\": formatUTCWeekdayNumber,\n\t    \"W\": formatUTCWeekNumberMonday,\n\t    \"x\": null,\n\t    \"X\": null,\n\t    \"y\": formatUTCYear,\n\t    \"Y\": formatUTCFullYear,\n\t    \"Z\": formatUTCZone,\n\t    \"%\": formatLiteralPercent\n\t  };\n\t\n\t  var parses = {\n\t    \"a\": parseShortWeekday,\n\t    \"A\": parseWeekday,\n\t    \"b\": parseShortMonth,\n\t    \"B\": parseMonth,\n\t    \"c\": parseLocaleDateTime,\n\t    \"d\": parseDayOfMonth,\n\t    \"e\": parseDayOfMonth,\n\t    \"H\": parseHour24,\n\t    \"I\": parseHour24,\n\t    \"j\": parseDayOfYear,\n\t    \"L\": parseMilliseconds,\n\t    \"m\": parseMonthNumber,\n\t    \"M\": parseMinutes,\n\t    \"p\": parsePeriod,\n\t    \"S\": parseSeconds,\n\t    \"U\": parseWeekNumberSunday,\n\t    \"w\": parseWeekdayNumber,\n\t    \"W\": parseWeekNumberMonday,\n\t    \"x\": parseLocaleDate,\n\t    \"X\": parseLocaleTime,\n\t    \"y\": parseYear,\n\t    \"Y\": parseFullYear,\n\t    \"Z\": parseZone,\n\t    \"%\": parseLiteralPercent\n\t  };\n\t\n\t  // These recursive directive definitions must be deferred.\n\t  formats.x = newFormat(locale_date, formats);\n\t  formats.X = newFormat(locale_time, formats);\n\t  formats.c = newFormat(locale_dateTime, formats);\n\t  utcFormats.x = newFormat(locale_date, utcFormats);\n\t  utcFormats.X = newFormat(locale_time, utcFormats);\n\t  utcFormats.c = newFormat(locale_dateTime, utcFormats);\n\t\n\t  function newFormat(specifier, formats) {\n\t    return function(date) {\n\t      var string = [],\n\t          i = -1,\n\t          j = 0,\n\t          n = specifier.length,\n\t          c,\n\t          pad,\n\t          format;\n\t\n\t      if (!(date instanceof Date)) date = new Date(+date);\n\t\n\t      while (++i < n) {\n\t        if (specifier.charCodeAt(i) === 37) {\n\t          string.push(specifier.slice(j, i));\n\t          if ((pad = pads[c = specifier.charAt(++i)]) != null) c = specifier.charAt(++i);\n\t          else pad = c === \"e\" ? \" \" : \"0\";\n\t          if (format = formats[c]) c = format(date, pad);\n\t          string.push(c);\n\t          j = i + 1;\n\t        }\n\t      }\n\t\n\t      string.push(specifier.slice(j, i));\n\t      return string.join(\"\");\n\t    };\n\t  }\n\t\n\t  function newParse(specifier, newDate) {\n\t    return function(string) {\n\t      var d = newYear(1900),\n\t          i = parseSpecifier(d, specifier, string += \"\", 0);\n\t      if (i != string.length) return null;\n\t\n\t      // The am-pm flag is 0 for AM, and 1 for PM.\n\t      if (\"p\" in d) d.H = d.H % 12 + d.p * 12;\n\t\n\t      // Convert day-of-week and week-of-year to day-of-year.\n\t      if (\"W\" in d || \"U\" in d) {\n\t        if (!(\"w\" in d)) d.w = \"W\" in d ? 1 : 0;\n\t        var day$$1 = \"Z\" in d ? utcDate(newYear(d.y)).getUTCDay() : newDate(newYear(d.y)).getDay();\n\t        d.m = 0;\n\t        d.d = \"W\" in d ? (d.w + 6) % 7 + d.W * 7 - (day$$1 + 5) % 7 : d.w + d.U * 7 - (day$$1 + 6) % 7;\n\t      }\n\t\n\t      // If a time zone is specified, all fields are interpreted as UTC and then\n\t      // offset according to the specified time zone.\n\t      if (\"Z\" in d) {\n\t        d.H += d.Z / 100 | 0;\n\t        d.M += d.Z % 100;\n\t        return utcDate(d);\n\t      }\n\t\n\t      // Otherwise, all fields are in local time.\n\t      return newDate(d);\n\t    };\n\t  }\n\t\n\t  function parseSpecifier(d, specifier, string, j) {\n\t    var i = 0,\n\t        n = specifier.length,\n\t        m = string.length,\n\t        c,\n\t        parse;\n\t\n\t    while (i < n) {\n\t      if (j >= m) return -1;\n\t      c = specifier.charCodeAt(i++);\n\t      if (c === 37) {\n\t        c = specifier.charAt(i++);\n\t        parse = parses[c in pads ? specifier.charAt(i++) : c];\n\t        if (!parse || ((j = parse(d, string, j)) < 0)) return -1;\n\t      } else if (c != string.charCodeAt(j++)) {\n\t        return -1;\n\t      }\n\t    }\n\t\n\t    return j;\n\t  }\n\t\n\t  function parsePeriod(d, string, i) {\n\t    var n = periodRe.exec(string.slice(i));\n\t    return n ? (d.p = periodLookup[n[0].toLowerCase()], i + n[0].length) : -1;\n\t  }\n\t\n\t  function parseShortWeekday(d, string, i) {\n\t    var n = shortWeekdayRe.exec(string.slice(i));\n\t    return n ? (d.w = shortWeekdayLookup[n[0].toLowerCase()], i + n[0].length) : -1;\n\t  }\n\t\n\t  function parseWeekday(d, string, i) {\n\t    var n = weekdayRe.exec(string.slice(i));\n\t    return n ? (d.w = weekdayLookup[n[0].toLowerCase()], i + n[0].length) : -1;\n\t  }\n\t\n\t  function parseShortMonth(d, string, i) {\n\t    var n = shortMonthRe.exec(string.slice(i));\n\t    return n ? (d.m = shortMonthLookup[n[0].toLowerCase()], i + n[0].length) : -1;\n\t  }\n\t\n\t  function parseMonth(d, string, i) {\n\t    var n = monthRe.exec(string.slice(i));\n\t    return n ? (d.m = monthLookup[n[0].toLowerCase()], i + n[0].length) : -1;\n\t  }\n\t\n\t  function parseLocaleDateTime(d, string, i) {\n\t    return parseSpecifier(d, locale_dateTime, string, i);\n\t  }\n\t\n\t  function parseLocaleDate(d, string, i) {\n\t    return parseSpecifier(d, locale_date, string, i);\n\t  }\n\t\n\t  function parseLocaleTime(d, string, i) {\n\t    return parseSpecifier(d, locale_time, string, i);\n\t  }\n\t\n\t  function formatShortWeekday(d) {\n\t    return locale_shortWeekdays[d.getDay()];\n\t  }\n\t\n\t  function formatWeekday(d) {\n\t    return locale_weekdays[d.getDay()];\n\t  }\n\t\n\t  function formatShortMonth(d) {\n\t    return locale_shortMonths[d.getMonth()];\n\t  }\n\t\n\t  function formatMonth(d) {\n\t    return locale_months[d.getMonth()];\n\t  }\n\t\n\t  function formatPeriod(d) {\n\t    return locale_periods[+(d.getHours() >= 12)];\n\t  }\n\t\n\t  function formatUTCShortWeekday(d) {\n\t    return locale_shortWeekdays[d.getUTCDay()];\n\t  }\n\t\n\t  function formatUTCWeekday(d) {\n\t    return locale_weekdays[d.getUTCDay()];\n\t  }\n\t\n\t  function formatUTCShortMonth(d) {\n\t    return locale_shortMonths[d.getUTCMonth()];\n\t  }\n\t\n\t  function formatUTCMonth(d) {\n\t    return locale_months[d.getUTCMonth()];\n\t  }\n\t\n\t  function formatUTCPeriod(d) {\n\t    return locale_periods[+(d.getUTCHours() >= 12)];\n\t  }\n\t\n\t  return {\n\t    format: function(specifier) {\n\t      var f = newFormat(specifier += \"\", formats);\n\t      f.toString = function() { return specifier; };\n\t      return f;\n\t    },\n\t    parse: function(specifier) {\n\t      var p = newParse(specifier += \"\", localDate);\n\t      p.toString = function() { return specifier; };\n\t      return p;\n\t    },\n\t    utcFormat: function(specifier) {\n\t      var f = newFormat(specifier += \"\", utcFormats);\n\t      f.toString = function() { return specifier; };\n\t      return f;\n\t    },\n\t    utcParse: function(specifier) {\n\t      var p = newParse(specifier, utcDate);\n\t      p.toString = function() { return specifier; };\n\t      return p;\n\t    }\n\t  };\n\t}\n\t\n\tvar pads = {\"-\": \"\", \"_\": \" \", \"0\": \"0\"};\n\tvar numberRe = /^\\s*\\d+/;\n\tvar percentRe = /^%/;\n\tvar requoteRe = /[\\\\\\^\\$\\*\\+\\?\\|\\[\\]\\(\\)\\.\\{\\}]/g;\n\t\n\tfunction pad(value, fill, width) {\n\t  var sign = value < 0 ? \"-\" : \"\",\n\t      string = (sign ? -value : value) + \"\",\n\t      length = string.length;\n\t  return sign + (length < width ? new Array(width - length + 1).join(fill) + string : string);\n\t}\n\t\n\tfunction requote(s) {\n\t  return s.replace(requoteRe, \"\\\\$&\");\n\t}\n\t\n\tfunction formatRe(names) {\n\t  return new RegExp(\"^(?:\" + names.map(requote).join(\"|\") + \")\", \"i\");\n\t}\n\t\n\tfunction formatLookup(names) {\n\t  var map = {}, i = -1, n = names.length;\n\t  while (++i < n) map[names[i].toLowerCase()] = i;\n\t  return map;\n\t}\n\t\n\tfunction parseWeekdayNumber(d, string, i) {\n\t  var n = numberRe.exec(string.slice(i, i + 1));\n\t  return n ? (d.w = +n[0], i + n[0].length) : -1;\n\t}\n\t\n\tfunction parseWeekNumberSunday(d, string, i) {\n\t  var n = numberRe.exec(string.slice(i));\n\t  return n ? (d.U = +n[0], i + n[0].length) : -1;\n\t}\n\t\n\tfunction parseWeekNumberMonday(d, string, i) {\n\t  var n = numberRe.exec(string.slice(i));\n\t  return n ? (d.W = +n[0], i + n[0].length) : -1;\n\t}\n\t\n\tfunction parseFullYear(d, string, i) {\n\t  var n = numberRe.exec(string.slice(i, i + 4));\n\t  return n ? (d.y = +n[0], i + n[0].length) : -1;\n\t}\n\t\n\tfunction parseYear(d, string, i) {\n\t  var n = numberRe.exec(string.slice(i, i + 2));\n\t  return n ? (d.y = +n[0] + (+n[0] > 68 ? 1900 : 2000), i + n[0].length) : -1;\n\t}\n\t\n\tfunction parseZone(d, string, i) {\n\t  var n = /^(Z)|([+-]\\d\\d)(?:\\:?(\\d\\d))?/.exec(string.slice(i, i + 6));\n\t  return n ? (d.Z = n[1] ? 0 : -(n[2] + (n[3] || \"00\")), i + n[0].length) : -1;\n\t}\n\t\n\tfunction parseMonthNumber(d, string, i) {\n\t  var n = numberRe.exec(string.slice(i, i + 2));\n\t  return n ? (d.m = n[0] - 1, i + n[0].length) : -1;\n\t}\n\t\n\tfunction parseDayOfMonth(d, string, i) {\n\t  var n = numberRe.exec(string.slice(i, i + 2));\n\t  return n ? (d.d = +n[0], i + n[0].length) : -1;\n\t}\n\t\n\tfunction parseDayOfYear(d, string, i) {\n\t  var n = numberRe.exec(string.slice(i, i + 3));\n\t  return n ? (d.m = 0, d.d = +n[0], i + n[0].length) : -1;\n\t}\n\t\n\tfunction parseHour24(d, string, i) {\n\t  var n = numberRe.exec(string.slice(i, i + 2));\n\t  return n ? (d.H = +n[0], i + n[0].length) : -1;\n\t}\n\t\n\tfunction parseMinutes(d, string, i) {\n\t  var n = numberRe.exec(string.slice(i, i + 2));\n\t  return n ? (d.M = +n[0], i + n[0].length) : -1;\n\t}\n\t\n\tfunction parseSeconds(d, string, i) {\n\t  var n = numberRe.exec(string.slice(i, i + 2));\n\t  return n ? (d.S = +n[0], i + n[0].length) : -1;\n\t}\n\t\n\tfunction parseMilliseconds(d, string, i) {\n\t  var n = numberRe.exec(string.slice(i, i + 3));\n\t  return n ? (d.L = +n[0], i + n[0].length) : -1;\n\t}\n\t\n\tfunction parseLiteralPercent(d, string, i) {\n\t  var n = percentRe.exec(string.slice(i, i + 1));\n\t  return n ? i + n[0].length : -1;\n\t}\n\t\n\tfunction formatDayOfMonth(d, p) {\n\t  return pad(d.getDate(), p, 2);\n\t}\n\t\n\tfunction formatHour24(d, p) {\n\t  return pad(d.getHours(), p, 2);\n\t}\n\t\n\tfunction formatHour12(d, p) {\n\t  return pad(d.getHours() % 12 || 12, p, 2);\n\t}\n\t\n\tfunction formatDayOfYear(d, p) {\n\t  return pad(1 + day.count(year(d), d), p, 3);\n\t}\n\t\n\tfunction formatMilliseconds(d, p) {\n\t  return pad(d.getMilliseconds(), p, 3);\n\t}\n\t\n\tfunction formatMonthNumber(d, p) {\n\t  return pad(d.getMonth() + 1, p, 2);\n\t}\n\t\n\tfunction formatMinutes(d, p) {\n\t  return pad(d.getMinutes(), p, 2);\n\t}\n\t\n\tfunction formatSeconds(d, p) {\n\t  return pad(d.getSeconds(), p, 2);\n\t}\n\t\n\tfunction formatWeekNumberSunday(d, p) {\n\t  return pad(sunday.count(year(d), d), p, 2);\n\t}\n\t\n\tfunction formatWeekdayNumber(d) {\n\t  return d.getDay();\n\t}\n\t\n\tfunction formatWeekNumberMonday(d, p) {\n\t  return pad(monday.count(year(d), d), p, 2);\n\t}\n\t\n\tfunction formatYear(d, p) {\n\t  return pad(d.getFullYear() % 100, p, 2);\n\t}\n\t\n\tfunction formatFullYear(d, p) {\n\t  return pad(d.getFullYear() % 10000, p, 4);\n\t}\n\t\n\tfunction formatZone(d) {\n\t  var z = d.getTimezoneOffset();\n\t  return (z > 0 ? \"-\" : (z *= -1, \"+\"))\n\t      + pad(z / 60 | 0, \"0\", 2)\n\t      + pad(z % 60, \"0\", 2);\n\t}\n\t\n\tfunction formatUTCDayOfMonth(d, p) {\n\t  return pad(d.getUTCDate(), p, 2);\n\t}\n\t\n\tfunction formatUTCHour24(d, p) {\n\t  return pad(d.getUTCHours(), p, 2);\n\t}\n\t\n\tfunction formatUTCHour12(d, p) {\n\t  return pad(d.getUTCHours() % 12 || 12, p, 2);\n\t}\n\t\n\tfunction formatUTCDayOfYear(d, p) {\n\t  return pad(1 + utcDay.count(utcYear(d), d), p, 3);\n\t}\n\t\n\tfunction formatUTCMilliseconds(d, p) {\n\t  return pad(d.getUTCMilliseconds(), p, 3);\n\t}\n\t\n\tfunction formatUTCMonthNumber(d, p) {\n\t  return pad(d.getUTCMonth() + 1, p, 2);\n\t}\n\t\n\tfunction formatUTCMinutes(d, p) {\n\t  return pad(d.getUTCMinutes(), p, 2);\n\t}\n\t\n\tfunction formatUTCSeconds(d, p) {\n\t  return pad(d.getUTCSeconds(), p, 2);\n\t}\n\t\n\tfunction formatUTCWeekNumberSunday(d, p) {\n\t  return pad(utcSunday.count(utcYear(d), d), p, 2);\n\t}\n\t\n\tfunction formatUTCWeekdayNumber(d) {\n\t  return d.getUTCDay();\n\t}\n\t\n\tfunction formatUTCWeekNumberMonday(d, p) {\n\t  return pad(utcMonday.count(utcYear(d), d), p, 2);\n\t}\n\t\n\tfunction formatUTCYear(d, p) {\n\t  return pad(d.getUTCFullYear() % 100, p, 2);\n\t}\n\t\n\tfunction formatUTCFullYear(d, p) {\n\t  return pad(d.getUTCFullYear() % 10000, p, 4);\n\t}\n\t\n\tfunction formatUTCZone() {\n\t  return \"+0000\";\n\t}\n\t\n\tfunction formatLiteralPercent() {\n\t  return \"%\";\n\t}\n\t\n\tvar locale$1;\n\t\n\t\n\t\n\t\n\t\n\tdefaultLocale$1({\n\t  dateTime: \"%x, %X\",\n\t  date: \"%-m/%-d/%Y\",\n\t  time: \"%-I:%M:%S %p\",\n\t  periods: [\"AM\", \"PM\"],\n\t  days: [\"Sunday\", \"Monday\", \"Tuesday\", \"Wednesday\", \"Thursday\", \"Friday\", \"Saturday\"],\n\t  shortDays: [\"Sun\", \"Mon\", \"Tue\", \"Wed\", \"Thu\", \"Fri\", \"Sat\"],\n\t  months: [\"January\", \"February\", \"March\", \"April\", \"May\", \"June\", \"July\", \"August\", \"September\", \"October\", \"November\", \"December\"],\n\t  shortMonths: [\"Jan\", \"Feb\", \"Mar\", \"Apr\", \"May\", \"Jun\", \"Jul\", \"Aug\", \"Sep\", \"Oct\", \"Nov\", \"Dec\"]\n\t});\n\t\n\tfunction defaultLocale$1(definition) {\n\t  locale$1 = formatLocale$1(definition);\n\t  exports.timeFormat = locale$1.format;\n\t  exports.timeParse = locale$1.parse;\n\t  exports.utcFormat = locale$1.utcFormat;\n\t  exports.utcParse = locale$1.utcParse;\n\t  return locale$1;\n\t}\n\t\n\tvar isoSpecifier = \"%Y-%m-%dT%H:%M:%S.%LZ\";\n\t\n\tfunction formatIsoNative(date) {\n\t  return date.toISOString();\n\t}\n\t\n\tvar formatIso = Date.prototype.toISOString\n\t    ? formatIsoNative\n\t    : exports.utcFormat(isoSpecifier);\n\t\n\tfunction parseIsoNative(string) {\n\t  var date = new Date(string);\n\t  return isNaN(date) ? null : date;\n\t}\n\t\n\tvar parseIso = +new Date(\"2000-01-01T00:00:00.000Z\")\n\t    ? parseIsoNative\n\t    : exports.utcParse(isoSpecifier);\n\t\n\tvar durationSecond = 1000;\n\tvar durationMinute = durationSecond * 60;\n\tvar durationHour = durationMinute * 60;\n\tvar durationDay = durationHour * 24;\n\tvar durationWeek = durationDay * 7;\n\tvar durationMonth = durationDay * 30;\n\tvar durationYear = durationDay * 365;\n\t\n\tfunction date$1(t) {\n\t  return new Date(t);\n\t}\n\t\n\tfunction number$3(t) {\n\t  return t instanceof Date ? +t : +new Date(+t);\n\t}\n\t\n\tfunction calendar(year$$1, month$$1, week, day$$1, hour$$1, minute$$1, second$$1, millisecond$$1, format) {\n\t  var scale = continuous(deinterpolateLinear, reinterpolate),\n\t      invert = scale.invert,\n\t      domain = scale.domain;\n\t\n\t  var formatMillisecond = format(\".%L\"),\n\t      formatSecond = format(\":%S\"),\n\t      formatMinute = format(\"%I:%M\"),\n\t      formatHour = format(\"%I %p\"),\n\t      formatDay = format(\"%a %d\"),\n\t      formatWeek = format(\"%b %d\"),\n\t      formatMonth = format(\"%B\"),\n\t      formatYear = format(\"%Y\");\n\t\n\t  var tickIntervals = [\n\t    [second$$1,  1,      durationSecond],\n\t    [second$$1,  5,  5 * durationSecond],\n\t    [second$$1, 15, 15 * durationSecond],\n\t    [second$$1, 30, 30 * durationSecond],\n\t    [minute$$1,  1,      durationMinute],\n\t    [minute$$1,  5,  5 * durationMinute],\n\t    [minute$$1, 15, 15 * durationMinute],\n\t    [minute$$1, 30, 30 * durationMinute],\n\t    [  hour$$1,  1,      durationHour  ],\n\t    [  hour$$1,  3,  3 * durationHour  ],\n\t    [  hour$$1,  6,  6 * durationHour  ],\n\t    [  hour$$1, 12, 12 * durationHour  ],\n\t    [   day$$1,  1,      durationDay   ],\n\t    [   day$$1,  2,  2 * durationDay   ],\n\t    [  week,  1,      durationWeek  ],\n\t    [ month$$1,  1,      durationMonth ],\n\t    [ month$$1,  3,  3 * durationMonth ],\n\t    [  year$$1,  1,      durationYear  ]\n\t  ];\n\t\n\t  function tickFormat(date) {\n\t    return (second$$1(date) < date ? formatMillisecond\n\t        : minute$$1(date) < date ? formatSecond\n\t        : hour$$1(date) < date ? formatMinute\n\t        : day$$1(date) < date ? formatHour\n\t        : month$$1(date) < date ? (week(date) < date ? formatDay : formatWeek)\n\t        : year$$1(date) < date ? formatMonth\n\t        : formatYear)(date);\n\t  }\n\t\n\t  function tickInterval(interval, start, stop, step) {\n\t    if (interval == null) interval = 10;\n\t\n\t    // If a desired tick count is specified, pick a reasonable tick interval\n\t    // based on the extent of the domain and a rough estimate of tick size.\n\t    // Otherwise, assume interval is already a time interval and use it.\n\t    if (typeof interval === \"number\") {\n\t      var target = Math.abs(stop - start) / interval,\n\t          i = bisector(function(i) { return i[2]; }).right(tickIntervals, target);\n\t      if (i === tickIntervals.length) {\n\t        step = tickStep(start / durationYear, stop / durationYear, interval);\n\t        interval = year$$1;\n\t      } else if (i) {\n\t        i = tickIntervals[target / tickIntervals[i - 1][2] < tickIntervals[i][2] / target ? i - 1 : i];\n\t        step = i[1];\n\t        interval = i[0];\n\t      } else {\n\t        step = tickStep(start, stop, interval);\n\t        interval = millisecond$$1;\n\t      }\n\t    }\n\t\n\t    return step == null ? interval : interval.every(step);\n\t  }\n\t\n\t  scale.invert = function(y) {\n\t    return new Date(invert(y));\n\t  };\n\t\n\t  scale.domain = function(_) {\n\t    return arguments.length ? domain(map$3.call(_, number$3)) : domain().map(date$1);\n\t  };\n\t\n\t  scale.ticks = function(interval, step) {\n\t    var d = domain(),\n\t        t0 = d[0],\n\t        t1 = d[d.length - 1],\n\t        r = t1 < t0,\n\t        t;\n\t    if (r) t = t0, t0 = t1, t1 = t;\n\t    t = tickInterval(interval, t0, t1, step);\n\t    t = t ? t.range(t0, t1 + 1) : []; // inclusive stop\n\t    return r ? t.reverse() : t;\n\t  };\n\t\n\t  scale.tickFormat = function(count, specifier) {\n\t    return specifier == null ? tickFormat : format(specifier);\n\t  };\n\t\n\t  scale.nice = function(interval, step) {\n\t    var d = domain();\n\t    return (interval = tickInterval(interval, d[0], d[d.length - 1], step))\n\t        ? domain(nice(d, interval))\n\t        : scale;\n\t  };\n\t\n\t  scale.copy = function() {\n\t    return copy(scale, calendar(year$$1, month$$1, week, day$$1, hour$$1, minute$$1, second$$1, millisecond$$1, format));\n\t  };\n\t\n\t  return scale;\n\t}\n\t\n\tvar time = function() {\n\t  return calendar(year, month, sunday, day, hour, minute, second, millisecond, exports.timeFormat).domain([new Date(2000, 0, 1), new Date(2000, 0, 2)]);\n\t};\n\t\n\tvar utcTime = function() {\n\t  return calendar(utcYear, utcMonth, utcSunday, utcDay, utcHour, utcMinute, second, millisecond, exports.utcFormat).domain([Date.UTC(2000, 0, 1), Date.UTC(2000, 0, 2)]);\n\t};\n\t\n\tvar colors = function(s) {\n\t  return s.match(/.{6}/g).map(function(x) {\n\t    return \"#\" + x;\n\t  });\n\t};\n\t\n\tvar category10 = colors(\"1f77b4ff7f0e2ca02cd627289467bd8c564be377c27f7f7fbcbd2217becf\");\n\t\n\tvar category20b = colors(\"393b795254a36b6ecf9c9ede6379398ca252b5cf6bcedb9c8c6d31bd9e39e7ba52e7cb94843c39ad494ad6616be7969c7b4173a55194ce6dbdde9ed6\");\n\t\n\tvar category20c = colors(\"3182bd6baed69ecae1c6dbefe6550dfd8d3cfdae6bfdd0a231a35474c476a1d99bc7e9c0756bb19e9ac8bcbddcdadaeb636363969696bdbdbdd9d9d9\");\n\t\n\tvar category20 = colors(\"1f77b4aec7e8ff7f0effbb782ca02c98df8ad62728ff98969467bdc5b0d58c564bc49c94e377c2f7b6d27f7f7fc7c7c7bcbd22dbdb8d17becf9edae5\");\n\t\n\tvar cubehelix$3 = cubehelixLong(cubehelix(300, 0.5, 0.0), cubehelix(-240, 0.5, 1.0));\n\t\n\tvar warm = cubehelixLong(cubehelix(-100, 0.75, 0.35), cubehelix(80, 1.50, 0.8));\n\t\n\tvar cool = cubehelixLong(cubehelix(260, 0.75, 0.35), cubehelix(80, 1.50, 0.8));\n\t\n\tvar rainbow = cubehelix();\n\t\n\tvar rainbow$1 = function(t) {\n\t  if (t < 0 || t > 1) t -= Math.floor(t);\n\t  var ts = Math.abs(t - 0.5);\n\t  rainbow.h = 360 * t - 100;\n\t  rainbow.s = 1.5 - 1.5 * ts;\n\t  rainbow.l = 0.8 - 0.9 * ts;\n\t  return rainbow + \"\";\n\t};\n\t\n\tfunction ramp(range) {\n\t  var n = range.length;\n\t  return function(t) {\n\t    return range[Math.max(0, Math.min(n - 1, Math.floor(t * n)))];\n\t  };\n\t}\n\t\n\tvar viridis = ramp(colors(\"44015444025645045745055946075a46085c460a5d460b5e470d60470e6147106347116447136548146748166848176948186a481a6c481b6d481c6e481d6f481f70482071482173482374482475482576482677482878482979472a7a472c7a472d7b472e7c472f7d46307e46327e46337f463480453581453781453882443983443a83443b84433d84433e85423f854240864241864142874144874045884046883f47883f48893e49893e4a893e4c8a3d4d8a3d4e8a3c4f8a3c508b3b518b3b528b3a538b3a548c39558c39568c38588c38598c375a8c375b8d365c8d365d8d355e8d355f8d34608d34618d33628d33638d32648e32658e31668e31678e31688e30698e306a8e2f6b8e2f6c8e2e6d8e2e6e8e2e6f8e2d708e2d718e2c718e2c728e2c738e2b748e2b758e2a768e2a778e2a788e29798e297a8e297b8e287c8e287d8e277e8e277f8e27808e26818e26828e26828e25838e25848e25858e24868e24878e23888e23898e238a8d228b8d228c8d228d8d218e8d218f8d21908d21918c20928c20928c20938c1f948c1f958b1f968b1f978b1f988b1f998a1f9a8a1e9b8a1e9c891e9d891f9e891f9f881fa0881fa1881fa1871fa28720a38620a48621a58521a68522a78522a88423a98324aa8325ab8225ac8226ad8127ad8128ae8029af7f2ab07f2cb17e2db27d2eb37c2fb47c31b57b32b67a34b67935b77937b87838b9773aba763bbb753dbc743fbc7340bd7242be7144bf7046c06f48c16e4ac16d4cc26c4ec36b50c46a52c56954c56856c66758c7655ac8645cc8635ec96260ca6063cb5f65cb5e67cc5c69cd5b6ccd5a6ece5870cf5773d05675d05477d1537ad1517cd2507fd34e81d34d84d44b86d54989d5488bd6468ed64590d74393d74195d84098d83e9bd93c9dd93ba0da39a2da37a5db36a8db34aadc32addc30b0dd2fb2dd2db5de2bb8de29bade28bddf26c0df25c2df23c5e021c8e020cae11fcde11dd0e11cd2e21bd5e21ad8e219dae319dde318dfe318e2e418e5e419e7e419eae51aece51befe51cf1e51df4e61ef6e620f8e621fbe723fde725\"));\n\t\n\tvar magma = ramp(colors(\"00000401000501010601010802010902020b02020d03030f03031204041405041606051806051a07061c08071e0907200a08220b09240c09260d0a290e0b2b100b2d110c2f120d31130d34140e36150e38160f3b180f3d19103f1a10421c10441d11471e114920114b21114e22115024125325125527125829115a2a115c2c115f2d11612f116331116533106734106936106b38106c390f6e3b0f703d0f713f0f72400f74420f75440f764510774710784910784a10794c117a4e117b4f127b51127c52137c54137d56147d57157e59157e5a167e5c167f5d177f5f187f601880621980641a80651a80671b80681c816a1c816b1d816d1d816e1e81701f81721f817320817521817621817822817922827b23827c23827e24828025828125818326818426818627818827818928818b29818c29818e2a81902a81912b81932b80942c80962c80982d80992d809b2e7f9c2e7f9e2f7fa02f7fa1307ea3307ea5317ea6317da8327daa337dab337cad347cae347bb0357bb2357bb3367ab5367ab73779b83779ba3878bc3978bd3977bf3a77c03a76c23b75c43c75c53c74c73d73c83e73ca3e72cc3f71cd4071cf4070d0416fd2426fd3436ed5446dd6456cd8456cd9466bdb476adc4869de4968df4a68e04c67e24d66e34e65e44f64e55064e75263e85362e95462ea5661eb5760ec5860ed5a5fee5b5eef5d5ef05f5ef1605df2625df2645cf3655cf4675cf4695cf56b5cf66c5cf66e5cf7705cf7725cf8745cf8765cf9785df9795df97b5dfa7d5efa7f5efa815ffb835ffb8560fb8761fc8961fc8a62fc8c63fc8e64fc9065fd9266fd9467fd9668fd9869fd9a6afd9b6bfe9d6cfe9f6dfea16efea36ffea571fea772fea973feaa74feac76feae77feb078feb27afeb47bfeb67cfeb77efeb97ffebb81febd82febf84fec185fec287fec488fec68afec88cfeca8dfecc8ffecd90fecf92fed194fed395fed597fed799fed89afdda9cfddc9efddea0fde0a1fde2a3fde3a5fde5a7fde7a9fde9aafdebacfcecaefceeb0fcf0b2fcf2b4fcf4b6fcf6b8fcf7b9fcf9bbfcfbbdfcfdbf\"));\n\t\n\tvar inferno = ramp(colors(\"00000401000501010601010802010a02020c02020e03021004031204031405041706041907051b08051d09061f0a07220b07240c08260d08290e092b10092d110a30120a32140b34150b37160b39180c3c190c3e1b0c411c0c431e0c451f0c48210c4a230c4c240c4f260c51280b53290b552b0b572d0b592f0a5b310a5c320a5e340a5f3609613809623909633b09643d09653e0966400a67420a68440a68450a69470b6a490b6a4a0c6b4c0c6b4d0d6c4f0d6c510e6c520e6d540f6d550f6d57106e59106e5a116e5c126e5d126e5f136e61136e62146e64156e65156e67166e69166e6a176e6c186e6d186e6f196e71196e721a6e741a6e751b6e771c6d781c6d7a1d6d7c1d6d7d1e6d7f1e6c801f6c82206c84206b85216b87216b88226a8a226a8c23698d23698f24699025689225689326679526679727669827669a28659b29649d29649f2a63a02a63a22b62a32c61a52c60a62d60a82e5fa92e5eab2f5ead305dae305cb0315bb1325ab3325ab43359b63458b73557b93556ba3655bc3754bd3853bf3952c03a51c13a50c33b4fc43c4ec63d4dc73e4cc83f4bca404acb4149cc4248ce4347cf4446d04545d24644d34743d44842d54a41d74b3fd84c3ed94d3dda4e3cdb503bdd513ade5238df5337e05536e15635e25734e35933e45a31e55c30e65d2fe75e2ee8602de9612bea632aeb6429eb6628ec6726ed6925ee6a24ef6c23ef6e21f06f20f1711ff1731df2741cf3761bf37819f47918f57b17f57d15f67e14f68013f78212f78410f8850ff8870ef8890cf98b0bf98c0af98e09fa9008fa9207fa9407fb9606fb9706fb9906fb9b06fb9d07fc9f07fca108fca309fca50afca60cfca80dfcaa0ffcac11fcae12fcb014fcb216fcb418fbb61afbb81dfbba1ffbbc21fbbe23fac026fac228fac42afac62df9c72ff9c932f9cb35f8cd37f8cf3af7d13df7d340f6d543f6d746f5d949f5db4cf4dd4ff4df53f4e156f3e35af3e55df2e661f2e865f2ea69f1ec6df1ed71f1ef75f1f179f2f27df2f482f3f586f3f68af4f88ef5f992f6fa96f8fb9af9fc9dfafda1fcffa4\"));\n\t\n\tvar plasma = ramp(colors(\"0d088710078813078916078a19068c1b068d1d068e20068f2206902406912605912805922a05932c05942e05952f059631059733059735049837049938049a3a049a3c049b3e049c3f049c41049d43039e44039e46039f48039f4903a04b03a14c02a14e02a25002a25102a35302a35502a45601a45801a45901a55b01a55c01a65e01a66001a66100a76300a76400a76600a76700a86900a86a00a86c00a86e00a86f00a87100a87201a87401a87501a87701a87801a87a02a87b02a87d03a87e03a88004a88104a78305a78405a78606a68707a68808a68a09a58b0aa58d0ba58e0ca48f0da4910ea3920fa39410a29511a19613a19814a099159f9a169f9c179e9d189d9e199da01a9ca11b9ba21d9aa31e9aa51f99a62098a72197a82296aa2395ab2494ac2694ad2793ae2892b02991b12a90b22b8fb32c8eb42e8db52f8cb6308bb7318ab83289ba3388bb3488bc3587bd3786be3885bf3984c03a83c13b82c23c81c33d80c43e7fc5407ec6417dc7427cc8437bc9447aca457acb4679cc4778cc4977cd4a76ce4b75cf4c74d04d73d14e72d24f71d35171d45270d5536fd5546ed6556dd7566cd8576bd9586ada5a6ada5b69db5c68dc5d67dd5e66de5f65de6164df6263e06363e16462e26561e26660e3685fe4695ee56a5de56b5de66c5ce76e5be76f5ae87059e97158e97257ea7457eb7556eb7655ec7754ed7953ed7a52ee7b51ef7c51ef7e50f07f4ff0804ef1814df1834cf2844bf3854bf3874af48849f48948f58b47f58c46f68d45f68f44f79044f79143f79342f89441f89540f9973ff9983ef99a3efa9b3dfa9c3cfa9e3bfb9f3afba139fba238fca338fca537fca636fca835fca934fdab33fdac33fdae32fdaf31fdb130fdb22ffdb42ffdb52efeb72dfeb82cfeba2cfebb2bfebd2afebe2afec029fdc229fdc328fdc527fdc627fdc827fdca26fdcb26fccd25fcce25fcd025fcd225fbd324fbd524fbd724fad824fada24f9dc24f9dd25f8df25f8e125f7e225f7e425f6e626f6e826f5e926f5eb27f4ed27f3ee27f3f027f2f227f1f426f1f525f0f724f0f921\"));\n\t\n\tfunction sequential(interpolator) {\n\t  var x0 = 0,\n\t      x1 = 1,\n\t      clamp = false;\n\t\n\t  function scale(x) {\n\t    var t = (x - x0) / (x1 - x0);\n\t    return interpolator(clamp ? Math.max(0, Math.min(1, t)) : t);\n\t  }\n\t\n\t  scale.domain = function(_) {\n\t    return arguments.length ? (x0 = +_[0], x1 = +_[1], scale) : [x0, x1];\n\t  };\n\t\n\t  scale.clamp = function(_) {\n\t    return arguments.length ? (clamp = !!_, scale) : clamp;\n\t  };\n\t\n\t  scale.interpolator = function(_) {\n\t    return arguments.length ? (interpolator = _, scale) : interpolator;\n\t  };\n\t\n\t  scale.copy = function() {\n\t    return sequential(interpolator).domain([x0, x1]).clamp(clamp);\n\t  };\n\t\n\t  return linearish(scale);\n\t}\n\t\n\tvar constant$10 = function(x) {\n\t  return function constant() {\n\t    return x;\n\t  };\n\t};\n\t\n\tvar abs$1 = Math.abs;\n\tvar atan2$1 = Math.atan2;\n\tvar cos$2 = Math.cos;\n\tvar max$2 = Math.max;\n\tvar min$1 = Math.min;\n\tvar sin$2 = Math.sin;\n\tvar sqrt$2 = Math.sqrt;\n\t\n\tvar epsilon$3 = 1e-12;\n\tvar pi$4 = Math.PI;\n\tvar halfPi$3 = pi$4 / 2;\n\tvar tau$4 = 2 * pi$4;\n\t\n\tfunction acos$1(x) {\n\t  return x > 1 ? 0 : x < -1 ? pi$4 : Math.acos(x);\n\t}\n\t\n\tfunction asin$1(x) {\n\t  return x >= 1 ? halfPi$3 : x <= -1 ? -halfPi$3 : Math.asin(x);\n\t}\n\t\n\tfunction arcInnerRadius(d) {\n\t  return d.innerRadius;\n\t}\n\t\n\tfunction arcOuterRadius(d) {\n\t  return d.outerRadius;\n\t}\n\t\n\tfunction arcStartAngle(d) {\n\t  return d.startAngle;\n\t}\n\t\n\tfunction arcEndAngle(d) {\n\t  return d.endAngle;\n\t}\n\t\n\tfunction arcPadAngle(d) {\n\t  return d && d.padAngle; // Note: optional!\n\t}\n\t\n\tfunction intersect(x0, y0, x1, y1, x2, y2, x3, y3) {\n\t  var x10 = x1 - x0, y10 = y1 - y0,\n\t      x32 = x3 - x2, y32 = y3 - y2,\n\t      t = (x32 * (y0 - y2) - y32 * (x0 - x2)) / (y32 * x10 - x32 * y10);\n\t  return [x0 + t * x10, y0 + t * y10];\n\t}\n\t\n\t// Compute perpendicular offset line of length rc.\n\t// http://mathworld.wolfram.com/Circle-LineIntersection.html\n\tfunction cornerTangents(x0, y0, x1, y1, r1, rc, cw) {\n\t  var x01 = x0 - x1,\n\t      y01 = y0 - y1,\n\t      lo = (cw ? rc : -rc) / sqrt$2(x01 * x01 + y01 * y01),\n\t      ox = lo * y01,\n\t      oy = -lo * x01,\n\t      x11 = x0 + ox,\n\t      y11 = y0 + oy,\n\t      x10 = x1 + ox,\n\t      y10 = y1 + oy,\n\t      x00 = (x11 + x10) / 2,\n\t      y00 = (y11 + y10) / 2,\n\t      dx = x10 - x11,\n\t      dy = y10 - y11,\n\t      d2 = dx * dx + dy * dy,\n\t      r = r1 - rc,\n\t      D = x11 * y10 - x10 * y11,\n\t      d = (dy < 0 ? -1 : 1) * sqrt$2(max$2(0, r * r * d2 - D * D)),\n\t      cx0 = (D * dy - dx * d) / d2,\n\t      cy0 = (-D * dx - dy * d) / d2,\n\t      cx1 = (D * dy + dx * d) / d2,\n\t      cy1 = (-D * dx + dy * d) / d2,\n\t      dx0 = cx0 - x00,\n\t      dy0 = cy0 - y00,\n\t      dx1 = cx1 - x00,\n\t      dy1 = cy1 - y00;\n\t\n\t  // Pick the closer of the two intersection points.\n\t  // TODO Is there a faster way to determine which intersection to use?\n\t  if (dx0 * dx0 + dy0 * dy0 > dx1 * dx1 + dy1 * dy1) cx0 = cx1, cy0 = cy1;\n\t\n\t  return {\n\t    cx: cx0,\n\t    cy: cy0,\n\t    x01: -ox,\n\t    y01: -oy,\n\t    x11: cx0 * (r1 / r - 1),\n\t    y11: cy0 * (r1 / r - 1)\n\t  };\n\t}\n\t\n\tvar arc = function() {\n\t  var innerRadius = arcInnerRadius,\n\t      outerRadius = arcOuterRadius,\n\t      cornerRadius = constant$10(0),\n\t      padRadius = null,\n\t      startAngle = arcStartAngle,\n\t      endAngle = arcEndAngle,\n\t      padAngle = arcPadAngle,\n\t      context = null;\n\t\n\t  function arc() {\n\t    var buffer,\n\t        r,\n\t        r0 = +innerRadius.apply(this, arguments),\n\t        r1 = +outerRadius.apply(this, arguments),\n\t        a0 = startAngle.apply(this, arguments) - halfPi$3,\n\t        a1 = endAngle.apply(this, arguments) - halfPi$3,\n\t        da = abs$1(a1 - a0),\n\t        cw = a1 > a0;\n\t\n\t    if (!context) context = buffer = path();\n\t\n\t    // Ensure that the outer radius is always larger than the inner radius.\n\t    if (r1 < r0) r = r1, r1 = r0, r0 = r;\n\t\n\t    // Is it a point?\n\t    if (!(r1 > epsilon$3)) context.moveTo(0, 0);\n\t\n\t    // Or is it a circle or annulus?\n\t    else if (da > tau$4 - epsilon$3) {\n\t      context.moveTo(r1 * cos$2(a0), r1 * sin$2(a0));\n\t      context.arc(0, 0, r1, a0, a1, !cw);\n\t      if (r0 > epsilon$3) {\n\t        context.moveTo(r0 * cos$2(a1), r0 * sin$2(a1));\n\t        context.arc(0, 0, r0, a1, a0, cw);\n\t      }\n\t    }\n\t\n\t    // Or is it a circular or annular sector?\n\t    else {\n\t      var a01 = a0,\n\t          a11 = a1,\n\t          a00 = a0,\n\t          a10 = a1,\n\t          da0 = da,\n\t          da1 = da,\n\t          ap = padAngle.apply(this, arguments) / 2,\n\t          rp = (ap > epsilon$3) && (padRadius ? +padRadius.apply(this, arguments) : sqrt$2(r0 * r0 + r1 * r1)),\n\t          rc = min$1(abs$1(r1 - r0) / 2, +cornerRadius.apply(this, arguments)),\n\t          rc0 = rc,\n\t          rc1 = rc,\n\t          t0,\n\t          t1;\n\t\n\t      // Apply padding? Note that since r1 ≥ r0, da1 ≥ da0.\n\t      if (rp > epsilon$3) {\n\t        var p0 = asin$1(rp / r0 * sin$2(ap)),\n\t            p1 = asin$1(rp / r1 * sin$2(ap));\n\t        if ((da0 -= p0 * 2) > epsilon$3) p0 *= (cw ? 1 : -1), a00 += p0, a10 -= p0;\n\t        else da0 = 0, a00 = a10 = (a0 + a1) / 2;\n\t        if ((da1 -= p1 * 2) > epsilon$3) p1 *= (cw ? 1 : -1), a01 += p1, a11 -= p1;\n\t        else da1 = 0, a01 = a11 = (a0 + a1) / 2;\n\t      }\n\t\n\t      var x01 = r1 * cos$2(a01),\n\t          y01 = r1 * sin$2(a01),\n\t          x10 = r0 * cos$2(a10),\n\t          y10 = r0 * sin$2(a10);\n\t\n\t      // Apply rounded corners?\n\t      if (rc > epsilon$3) {\n\t        var x11 = r1 * cos$2(a11),\n\t            y11 = r1 * sin$2(a11),\n\t            x00 = r0 * cos$2(a00),\n\t            y00 = r0 * sin$2(a00);\n\t\n\t        // Restrict the corner radius according to the sector angle.\n\t        if (da < pi$4) {\n\t          var oc = da0 > epsilon$3 ? intersect(x01, y01, x00, y00, x11, y11, x10, y10) : [x10, y10],\n\t              ax = x01 - oc[0],\n\t              ay = y01 - oc[1],\n\t              bx = x11 - oc[0],\n\t              by = y11 - oc[1],\n\t              kc = 1 / sin$2(acos$1((ax * bx + ay * by) / (sqrt$2(ax * ax + ay * ay) * sqrt$2(bx * bx + by * by))) / 2),\n\t              lc = sqrt$2(oc[0] * oc[0] + oc[1] * oc[1]);\n\t          rc0 = min$1(rc, (r0 - lc) / (kc - 1));\n\t          rc1 = min$1(rc, (r1 - lc) / (kc + 1));\n\t        }\n\t      }\n\t\n\t      // Is the sector collapsed to a line?\n\t      if (!(da1 > epsilon$3)) context.moveTo(x01, y01);\n\t\n\t      // Does the sector’s outer ring have rounded corners?\n\t      else if (rc1 > epsilon$3) {\n\t        t0 = cornerTangents(x00, y00, x01, y01, r1, rc1, cw);\n\t        t1 = cornerTangents(x11, y11, x10, y10, r1, rc1, cw);\n\t\n\t        context.moveTo(t0.cx + t0.x01, t0.cy + t0.y01);\n\t\n\t        // Have the corners merged?\n\t        if (rc1 < rc) context.arc(t0.cx, t0.cy, rc1, atan2$1(t0.y01, t0.x01), atan2$1(t1.y01, t1.x01), !cw);\n\t\n\t        // Otherwise, draw the two corners and the ring.\n\t        else {\n\t          context.arc(t0.cx, t0.cy, rc1, atan2$1(t0.y01, t0.x01), atan2$1(t0.y11, t0.x11), !cw);\n\t          context.arc(0, 0, r1, atan2$1(t0.cy + t0.y11, t0.cx + t0.x11), atan2$1(t1.cy + t1.y11, t1.cx + t1.x11), !cw);\n\t          context.arc(t1.cx, t1.cy, rc1, atan2$1(t1.y11, t1.x11), atan2$1(t1.y01, t1.x01), !cw);\n\t        }\n\t      }\n\t\n\t      // Or is the outer ring just a circular arc?\n\t      else context.moveTo(x01, y01), context.arc(0, 0, r1, a01, a11, !cw);\n\t\n\t      // Is there no inner ring, and it’s a circular sector?\n\t      // Or perhaps it’s an annular sector collapsed due to padding?\n\t      if (!(r0 > epsilon$3) || !(da0 > epsilon$3)) context.lineTo(x10, y10);\n\t\n\t      // Does the sector’s inner ring (or point) have rounded corners?\n\t      else if (rc0 > epsilon$3) {\n\t        t0 = cornerTangents(x10, y10, x11, y11, r0, -rc0, cw);\n\t        t1 = cornerTangents(x01, y01, x00, y00, r0, -rc0, cw);\n\t\n\t        context.lineTo(t0.cx + t0.x01, t0.cy + t0.y01);\n\t\n\t        // Have the corners merged?\n\t        if (rc0 < rc) context.arc(t0.cx, t0.cy, rc0, atan2$1(t0.y01, t0.x01), atan2$1(t1.y01, t1.x01), !cw);\n\t\n\t        // Otherwise, draw the two corners and the ring.\n\t        else {\n\t          context.arc(t0.cx, t0.cy, rc0, atan2$1(t0.y01, t0.x01), atan2$1(t0.y11, t0.x11), !cw);\n\t          context.arc(0, 0, r0, atan2$1(t0.cy + t0.y11, t0.cx + t0.x11), atan2$1(t1.cy + t1.y11, t1.cx + t1.x11), cw);\n\t          context.arc(t1.cx, t1.cy, rc0, atan2$1(t1.y11, t1.x11), atan2$1(t1.y01, t1.x01), !cw);\n\t        }\n\t      }\n\t\n\t      // Or is the inner ring just a circular arc?\n\t      else context.arc(0, 0, r0, a10, a00, cw);\n\t    }\n\t\n\t    context.closePath();\n\t\n\t    if (buffer) return context = null, buffer + \"\" || null;\n\t  }\n\t\n\t  arc.centroid = function() {\n\t    var r = (+innerRadius.apply(this, arguments) + +outerRadius.apply(this, arguments)) / 2,\n\t        a = (+startAngle.apply(this, arguments) + +endAngle.apply(this, arguments)) / 2 - pi$4 / 2;\n\t    return [cos$2(a) * r, sin$2(a) * r];\n\t  };\n\t\n\t  arc.innerRadius = function(_) {\n\t    return arguments.length ? (innerRadius = typeof _ === \"function\" ? _ : constant$10(+_), arc) : innerRadius;\n\t  };\n\t\n\t  arc.outerRadius = function(_) {\n\t    return arguments.length ? (outerRadius = typeof _ === \"function\" ? _ : constant$10(+_), arc) : outerRadius;\n\t  };\n\t\n\t  arc.cornerRadius = function(_) {\n\t    return arguments.length ? (cornerRadius = typeof _ === \"function\" ? _ : constant$10(+_), arc) : cornerRadius;\n\t  };\n\t\n\t  arc.padRadius = function(_) {\n\t    return arguments.length ? (padRadius = _ == null ? null : typeof _ === \"function\" ? _ : constant$10(+_), arc) : padRadius;\n\t  };\n\t\n\t  arc.startAngle = function(_) {\n\t    return arguments.length ? (startAngle = typeof _ === \"function\" ? _ : constant$10(+_), arc) : startAngle;\n\t  };\n\t\n\t  arc.endAngle = function(_) {\n\t    return arguments.length ? (endAngle = typeof _ === \"function\" ? _ : constant$10(+_), arc) : endAngle;\n\t  };\n\t\n\t  arc.padAngle = function(_) {\n\t    return arguments.length ? (padAngle = typeof _ === \"function\" ? _ : constant$10(+_), arc) : padAngle;\n\t  };\n\t\n\t  arc.context = function(_) {\n\t    return arguments.length ? ((context = _ == null ? null : _), arc) : context;\n\t  };\n\t\n\t  return arc;\n\t};\n\t\n\tfunction Linear(context) {\n\t  this._context = context;\n\t}\n\t\n\tLinear.prototype = {\n\t  areaStart: function() {\n\t    this._line = 0;\n\t  },\n\t  areaEnd: function() {\n\t    this._line = NaN;\n\t  },\n\t  lineStart: function() {\n\t    this._point = 0;\n\t  },\n\t  lineEnd: function() {\n\t    if (this._line || (this._line !== 0 && this._point === 1)) this._context.closePath();\n\t    this._line = 1 - this._line;\n\t  },\n\t  point: function(x, y) {\n\t    x = +x, y = +y;\n\t    switch (this._point) {\n\t      case 0: this._point = 1; this._line ? this._context.lineTo(x, y) : this._context.moveTo(x, y); break;\n\t      case 1: this._point = 2; // proceed\n\t      default: this._context.lineTo(x, y); break;\n\t    }\n\t  }\n\t};\n\t\n\tvar curveLinear = function(context) {\n\t  return new Linear(context);\n\t};\n\t\n\tfunction x$3(p) {\n\t  return p[0];\n\t}\n\t\n\tfunction y$3(p) {\n\t  return p[1];\n\t}\n\t\n\tvar line = function() {\n\t  var x$$1 = x$3,\n\t      y$$1 = y$3,\n\t      defined = constant$10(true),\n\t      context = null,\n\t      curve = curveLinear,\n\t      output = null;\n\t\n\t  function line(data) {\n\t    var i,\n\t        n = data.length,\n\t        d,\n\t        defined0 = false,\n\t        buffer;\n\t\n\t    if (context == null) output = curve(buffer = path());\n\t\n\t    for (i = 0; i <= n; ++i) {\n\t      if (!(i < n && defined(d = data[i], i, data)) === defined0) {\n\t        if (defined0 = !defined0) output.lineStart();\n\t        else output.lineEnd();\n\t      }\n\t      if (defined0) output.point(+x$$1(d, i, data), +y$$1(d, i, data));\n\t    }\n\t\n\t    if (buffer) return output = null, buffer + \"\" || null;\n\t  }\n\t\n\t  line.x = function(_) {\n\t    return arguments.length ? (x$$1 = typeof _ === \"function\" ? _ : constant$10(+_), line) : x$$1;\n\t  };\n\t\n\t  line.y = function(_) {\n\t    return arguments.length ? (y$$1 = typeof _ === \"function\" ? _ : constant$10(+_), line) : y$$1;\n\t  };\n\t\n\t  line.defined = function(_) {\n\t    return arguments.length ? (defined = typeof _ === \"function\" ? _ : constant$10(!!_), line) : defined;\n\t  };\n\t\n\t  line.curve = function(_) {\n\t    return arguments.length ? (curve = _, context != null && (output = curve(context)), line) : curve;\n\t  };\n\t\n\t  line.context = function(_) {\n\t    return arguments.length ? (_ == null ? context = output = null : output = curve(context = _), line) : context;\n\t  };\n\t\n\t  return line;\n\t};\n\t\n\tvar area$2 = function() {\n\t  var x0 = x$3,\n\t      x1 = null,\n\t      y0 = constant$10(0),\n\t      y1 = y$3,\n\t      defined = constant$10(true),\n\t      context = null,\n\t      curve = curveLinear,\n\t      output = null;\n\t\n\t  function area(data) {\n\t    var i,\n\t        j,\n\t        k,\n\t        n = data.length,\n\t        d,\n\t        defined0 = false,\n\t        buffer,\n\t        x0z = new Array(n),\n\t        y0z = new Array(n);\n\t\n\t    if (context == null) output = curve(buffer = path());\n\t\n\t    for (i = 0; i <= n; ++i) {\n\t      if (!(i < n && defined(d = data[i], i, data)) === defined0) {\n\t        if (defined0 = !defined0) {\n\t          j = i;\n\t          output.areaStart();\n\t          output.lineStart();\n\t        } else {\n\t          output.lineEnd();\n\t          output.lineStart();\n\t          for (k = i - 1; k >= j; --k) {\n\t            output.point(x0z[k], y0z[k]);\n\t          }\n\t          output.lineEnd();\n\t          output.areaEnd();\n\t        }\n\t      }\n\t      if (defined0) {\n\t        x0z[i] = +x0(d, i, data), y0z[i] = +y0(d, i, data);\n\t        output.point(x1 ? +x1(d, i, data) : x0z[i], y1 ? +y1(d, i, data) : y0z[i]);\n\t      }\n\t    }\n\t\n\t    if (buffer) return output = null, buffer + \"\" || null;\n\t  }\n\t\n\t  function arealine() {\n\t    return line().defined(defined).curve(curve).context(context);\n\t  }\n\t\n\t  area.x = function(_) {\n\t    return arguments.length ? (x0 = typeof _ === \"function\" ? _ : constant$10(+_), x1 = null, area) : x0;\n\t  };\n\t\n\t  area.x0 = function(_) {\n\t    return arguments.length ? (x0 = typeof _ === \"function\" ? _ : constant$10(+_), area) : x0;\n\t  };\n\t\n\t  area.x1 = function(_) {\n\t    return arguments.length ? (x1 = _ == null ? null : typeof _ === \"function\" ? _ : constant$10(+_), area) : x1;\n\t  };\n\t\n\t  area.y = function(_) {\n\t    return arguments.length ? (y0 = typeof _ === \"function\" ? _ : constant$10(+_), y1 = null, area) : y0;\n\t  };\n\t\n\t  area.y0 = function(_) {\n\t    return arguments.length ? (y0 = typeof _ === \"function\" ? _ : constant$10(+_), area) : y0;\n\t  };\n\t\n\t  area.y1 = function(_) {\n\t    return arguments.length ? (y1 = _ == null ? null : typeof _ === \"function\" ? _ : constant$10(+_), area) : y1;\n\t  };\n\t\n\t  area.lineX0 =\n\t  area.lineY0 = function() {\n\t    return arealine().x(x0).y(y0);\n\t  };\n\t\n\t  area.lineY1 = function() {\n\t    return arealine().x(x0).y(y1);\n\t  };\n\t\n\t  area.lineX1 = function() {\n\t    return arealine().x(x1).y(y0);\n\t  };\n\t\n\t  area.defined = function(_) {\n\t    return arguments.length ? (defined = typeof _ === \"function\" ? _ : constant$10(!!_), area) : defined;\n\t  };\n\t\n\t  area.curve = function(_) {\n\t    return arguments.length ? (curve = _, context != null && (output = curve(context)), area) : curve;\n\t  };\n\t\n\t  area.context = function(_) {\n\t    return arguments.length ? (_ == null ? context = output = null : output = curve(context = _), area) : context;\n\t  };\n\t\n\t  return area;\n\t};\n\t\n\tvar descending$1 = function(a, b) {\n\t  return b < a ? -1 : b > a ? 1 : b >= a ? 0 : NaN;\n\t};\n\t\n\tvar identity$7 = function(d) {\n\t  return d;\n\t};\n\t\n\tvar pie = function() {\n\t  var value = identity$7,\n\t      sortValues = descending$1,\n\t      sort = null,\n\t      startAngle = constant$10(0),\n\t      endAngle = constant$10(tau$4),\n\t      padAngle = constant$10(0);\n\t\n\t  function pie(data) {\n\t    var i,\n\t        n = data.length,\n\t        j,\n\t        k,\n\t        sum = 0,\n\t        index = new Array(n),\n\t        arcs = new Array(n),\n\t        a0 = +startAngle.apply(this, arguments),\n\t        da = Math.min(tau$4, Math.max(-tau$4, endAngle.apply(this, arguments) - a0)),\n\t        a1,\n\t        p = Math.min(Math.abs(da) / n, padAngle.apply(this, arguments)),\n\t        pa = p * (da < 0 ? -1 : 1),\n\t        v;\n\t\n\t    for (i = 0; i < n; ++i) {\n\t      if ((v = arcs[index[i] = i] = +value(data[i], i, data)) > 0) {\n\t        sum += v;\n\t      }\n\t    }\n\t\n\t    // Optionally sort the arcs by previously-computed values or by data.\n\t    if (sortValues != null) index.sort(function(i, j) { return sortValues(arcs[i], arcs[j]); });\n\t    else if (sort != null) index.sort(function(i, j) { return sort(data[i], data[j]); });\n\t\n\t    // Compute the arcs! They are stored in the original data's order.\n\t    for (i = 0, k = sum ? (da - n * pa) / sum : 0; i < n; ++i, a0 = a1) {\n\t      j = index[i], v = arcs[j], a1 = a0 + (v > 0 ? v * k : 0) + pa, arcs[j] = {\n\t        data: data[j],\n\t        index: i,\n\t        value: v,\n\t        startAngle: a0,\n\t        endAngle: a1,\n\t        padAngle: p\n\t      };\n\t    }\n\t\n\t    return arcs;\n\t  }\n\t\n\t  pie.value = function(_) {\n\t    return arguments.length ? (value = typeof _ === \"function\" ? _ : constant$10(+_), pie) : value;\n\t  };\n\t\n\t  pie.sortValues = function(_) {\n\t    return arguments.length ? (sortValues = _, sort = null, pie) : sortValues;\n\t  };\n\t\n\t  pie.sort = function(_) {\n\t    return arguments.length ? (sort = _, sortValues = null, pie) : sort;\n\t  };\n\t\n\t  pie.startAngle = function(_) {\n\t    return arguments.length ? (startAngle = typeof _ === \"function\" ? _ : constant$10(+_), pie) : startAngle;\n\t  };\n\t\n\t  pie.endAngle = function(_) {\n\t    return arguments.length ? (endAngle = typeof _ === \"function\" ? _ : constant$10(+_), pie) : endAngle;\n\t  };\n\t\n\t  pie.padAngle = function(_) {\n\t    return arguments.length ? (padAngle = typeof _ === \"function\" ? _ : constant$10(+_), pie) : padAngle;\n\t  };\n\t\n\t  return pie;\n\t};\n\t\n\tvar curveRadialLinear = curveRadial(curveLinear);\n\t\n\tfunction Radial(curve) {\n\t  this._curve = curve;\n\t}\n\t\n\tRadial.prototype = {\n\t  areaStart: function() {\n\t    this._curve.areaStart();\n\t  },\n\t  areaEnd: function() {\n\t    this._curve.areaEnd();\n\t  },\n\t  lineStart: function() {\n\t    this._curve.lineStart();\n\t  },\n\t  lineEnd: function() {\n\t    this._curve.lineEnd();\n\t  },\n\t  point: function(a, r) {\n\t    this._curve.point(r * Math.sin(a), r * -Math.cos(a));\n\t  }\n\t};\n\t\n\tfunction curveRadial(curve) {\n\t\n\t  function radial(context) {\n\t    return new Radial(curve(context));\n\t  }\n\t\n\t  radial._curve = curve;\n\t\n\t  return radial;\n\t}\n\t\n\tfunction lineRadial(l) {\n\t  var c = l.curve;\n\t\n\t  l.angle = l.x, delete l.x;\n\t  l.radius = l.y, delete l.y;\n\t\n\t  l.curve = function(_) {\n\t    return arguments.length ? c(curveRadial(_)) : c()._curve;\n\t  };\n\t\n\t  return l;\n\t}\n\t\n\tvar lineRadial$1 = function() {\n\t  return lineRadial(line().curve(curveRadialLinear));\n\t};\n\t\n\tvar areaRadial = function() {\n\t  var a = area$2().curve(curveRadialLinear),\n\t      c = a.curve,\n\t      x0 = a.lineX0,\n\t      x1 = a.lineX1,\n\t      y0 = a.lineY0,\n\t      y1 = a.lineY1;\n\t\n\t  a.angle = a.x, delete a.x;\n\t  a.startAngle = a.x0, delete a.x0;\n\t  a.endAngle = a.x1, delete a.x1;\n\t  a.radius = a.y, delete a.y;\n\t  a.innerRadius = a.y0, delete a.y0;\n\t  a.outerRadius = a.y1, delete a.y1;\n\t  a.lineStartAngle = function() { return lineRadial(x0()); }, delete a.lineX0;\n\t  a.lineEndAngle = function() { return lineRadial(x1()); }, delete a.lineX1;\n\t  a.lineInnerRadius = function() { return lineRadial(y0()); }, delete a.lineY0;\n\t  a.lineOuterRadius = function() { return lineRadial(y1()); }, delete a.lineY1;\n\t\n\t  a.curve = function(_) {\n\t    return arguments.length ? c(curveRadial(_)) : c()._curve;\n\t  };\n\t\n\t  return a;\n\t};\n\t\n\tvar pointRadial = function(x, y) {\n\t  return [(y = +y) * Math.cos(x -= Math.PI / 2), y * Math.sin(x)];\n\t};\n\t\n\tvar slice$6 = Array.prototype.slice;\n\t\n\tfunction linkSource(d) {\n\t  return d.source;\n\t}\n\t\n\tfunction linkTarget(d) {\n\t  return d.target;\n\t}\n\t\n\tfunction link$2(curve) {\n\t  var source = linkSource,\n\t      target = linkTarget,\n\t      x$$1 = x$3,\n\t      y$$1 = y$3,\n\t      context = null;\n\t\n\t  function link() {\n\t    var buffer, argv = slice$6.call(arguments), s = source.apply(this, argv), t = target.apply(this, argv);\n\t    if (!context) context = buffer = path();\n\t    curve(context, +x$$1.apply(this, (argv[0] = s, argv)), +y$$1.apply(this, argv), +x$$1.apply(this, (argv[0] = t, argv)), +y$$1.apply(this, argv));\n\t    if (buffer) return context = null, buffer + \"\" || null;\n\t  }\n\t\n\t  link.source = function(_) {\n\t    return arguments.length ? (source = _, link) : source;\n\t  };\n\t\n\t  link.target = function(_) {\n\t    return arguments.length ? (target = _, link) : target;\n\t  };\n\t\n\t  link.x = function(_) {\n\t    return arguments.length ? (x$$1 = typeof _ === \"function\" ? _ : constant$10(+_), link) : x$$1;\n\t  };\n\t\n\t  link.y = function(_) {\n\t    return arguments.length ? (y$$1 = typeof _ === \"function\" ? _ : constant$10(+_), link) : y$$1;\n\t  };\n\t\n\t  link.context = function(_) {\n\t    return arguments.length ? ((context = _ == null ? null : _), link) : context;\n\t  };\n\t\n\t  return link;\n\t}\n\t\n\tfunction curveHorizontal(context, x0, y0, x1, y1) {\n\t  context.moveTo(x0, y0);\n\t  context.bezierCurveTo(x0 = (x0 + x1) / 2, y0, x0, y1, x1, y1);\n\t}\n\t\n\tfunction curveVertical(context, x0, y0, x1, y1) {\n\t  context.moveTo(x0, y0);\n\t  context.bezierCurveTo(x0, y0 = (y0 + y1) / 2, x1, y0, x1, y1);\n\t}\n\t\n\tfunction curveRadial$1(context, x0, y0, x1, y1) {\n\t  var p0 = pointRadial(x0, y0),\n\t      p1 = pointRadial(x0, y0 = (y0 + y1) / 2),\n\t      p2 = pointRadial(x1, y0),\n\t      p3 = pointRadial(x1, y1);\n\t  context.moveTo(p0[0], p0[1]);\n\t  context.bezierCurveTo(p1[0], p1[1], p2[0], p2[1], p3[0], p3[1]);\n\t}\n\t\n\tfunction linkHorizontal() {\n\t  return link$2(curveHorizontal);\n\t}\n\t\n\tfunction linkVertical() {\n\t  return link$2(curveVertical);\n\t}\n\t\n\tfunction linkRadial() {\n\t  var l = link$2(curveRadial$1);\n\t  l.angle = l.x, delete l.x;\n\t  l.radius = l.y, delete l.y;\n\t  return l;\n\t}\n\t\n\tvar circle$2 = {\n\t  draw: function(context, size) {\n\t    var r = Math.sqrt(size / pi$4);\n\t    context.moveTo(r, 0);\n\t    context.arc(0, 0, r, 0, tau$4);\n\t  }\n\t};\n\t\n\tvar cross$2 = {\n\t  draw: function(context, size) {\n\t    var r = Math.sqrt(size / 5) / 2;\n\t    context.moveTo(-3 * r, -r);\n\t    context.lineTo(-r, -r);\n\t    context.lineTo(-r, -3 * r);\n\t    context.lineTo(r, -3 * r);\n\t    context.lineTo(r, -r);\n\t    context.lineTo(3 * r, -r);\n\t    context.lineTo(3 * r, r);\n\t    context.lineTo(r, r);\n\t    context.lineTo(r, 3 * r);\n\t    context.lineTo(-r, 3 * r);\n\t    context.lineTo(-r, r);\n\t    context.lineTo(-3 * r, r);\n\t    context.closePath();\n\t  }\n\t};\n\t\n\tvar tan30 = Math.sqrt(1 / 3);\n\tvar tan30_2 = tan30 * 2;\n\t\n\tvar diamond = {\n\t  draw: function(context, size) {\n\t    var y = Math.sqrt(size / tan30_2),\n\t        x = y * tan30;\n\t    context.moveTo(0, -y);\n\t    context.lineTo(x, 0);\n\t    context.lineTo(0, y);\n\t    context.lineTo(-x, 0);\n\t    context.closePath();\n\t  }\n\t};\n\t\n\tvar ka = 0.89081309152928522810;\n\tvar kr = Math.sin(pi$4 / 10) / Math.sin(7 * pi$4 / 10);\n\tvar kx = Math.sin(tau$4 / 10) * kr;\n\tvar ky = -Math.cos(tau$4 / 10) * kr;\n\t\n\tvar star = {\n\t  draw: function(context, size) {\n\t    var r = Math.sqrt(size * ka),\n\t        x = kx * r,\n\t        y = ky * r;\n\t    context.moveTo(0, -r);\n\t    context.lineTo(x, y);\n\t    for (var i = 1; i < 5; ++i) {\n\t      var a = tau$4 * i / 5,\n\t          c = Math.cos(a),\n\t          s = Math.sin(a);\n\t      context.lineTo(s * r, -c * r);\n\t      context.lineTo(c * x - s * y, s * x + c * y);\n\t    }\n\t    context.closePath();\n\t  }\n\t};\n\t\n\tvar square = {\n\t  draw: function(context, size) {\n\t    var w = Math.sqrt(size),\n\t        x = -w / 2;\n\t    context.rect(x, x, w, w);\n\t  }\n\t};\n\t\n\tvar sqrt3 = Math.sqrt(3);\n\t\n\tvar triangle = {\n\t  draw: function(context, size) {\n\t    var y = -Math.sqrt(size / (sqrt3 * 3));\n\t    context.moveTo(0, y * 2);\n\t    context.lineTo(-sqrt3 * y, -y);\n\t    context.lineTo(sqrt3 * y, -y);\n\t    context.closePath();\n\t  }\n\t};\n\t\n\tvar c = -0.5;\n\tvar s = Math.sqrt(3) / 2;\n\tvar k = 1 / Math.sqrt(12);\n\tvar a = (k / 2 + 1) * 3;\n\t\n\tvar wye = {\n\t  draw: function(context, size) {\n\t    var r = Math.sqrt(size / a),\n\t        x0 = r / 2,\n\t        y0 = r * k,\n\t        x1 = x0,\n\t        y1 = r * k + r,\n\t        x2 = -x1,\n\t        y2 = y1;\n\t    context.moveTo(x0, y0);\n\t    context.lineTo(x1, y1);\n\t    context.lineTo(x2, y2);\n\t    context.lineTo(c * x0 - s * y0, s * x0 + c * y0);\n\t    context.lineTo(c * x1 - s * y1, s * x1 + c * y1);\n\t    context.lineTo(c * x2 - s * y2, s * x2 + c * y2);\n\t    context.lineTo(c * x0 + s * y0, c * y0 - s * x0);\n\t    context.lineTo(c * x1 + s * y1, c * y1 - s * x1);\n\t    context.lineTo(c * x2 + s * y2, c * y2 - s * x2);\n\t    context.closePath();\n\t  }\n\t};\n\t\n\tvar symbols = [\n\t  circle$2,\n\t  cross$2,\n\t  diamond,\n\t  square,\n\t  star,\n\t  triangle,\n\t  wye\n\t];\n\t\n\tvar symbol = function() {\n\t  var type = constant$10(circle$2),\n\t      size = constant$10(64),\n\t      context = null;\n\t\n\t  function symbol() {\n\t    var buffer;\n\t    if (!context) context = buffer = path();\n\t    type.apply(this, arguments).draw(context, +size.apply(this, arguments));\n\t    if (buffer) return context = null, buffer + \"\" || null;\n\t  }\n\t\n\t  symbol.type = function(_) {\n\t    return arguments.length ? (type = typeof _ === \"function\" ? _ : constant$10(_), symbol) : type;\n\t  };\n\t\n\t  symbol.size = function(_) {\n\t    return arguments.length ? (size = typeof _ === \"function\" ? _ : constant$10(+_), symbol) : size;\n\t  };\n\t\n\t  symbol.context = function(_) {\n\t    return arguments.length ? (context = _ == null ? null : _, symbol) : context;\n\t  };\n\t\n\t  return symbol;\n\t};\n\t\n\tvar noop$2 = function() {};\n\t\n\tfunction point$2(that, x, y) {\n\t  that._context.bezierCurveTo(\n\t    (2 * that._x0 + that._x1) / 3,\n\t    (2 * that._y0 + that._y1) / 3,\n\t    (that._x0 + 2 * that._x1) / 3,\n\t    (that._y0 + 2 * that._y1) / 3,\n\t    (that._x0 + 4 * that._x1 + x) / 6,\n\t    (that._y0 + 4 * that._y1 + y) / 6\n\t  );\n\t}\n\t\n\tfunction Basis(context) {\n\t  this._context = context;\n\t}\n\t\n\tBasis.prototype = {\n\t  areaStart: function() {\n\t    this._line = 0;\n\t  },\n\t  areaEnd: function() {\n\t    this._line = NaN;\n\t  },\n\t  lineStart: function() {\n\t    this._x0 = this._x1 =\n\t    this._y0 = this._y1 = NaN;\n\t    this._point = 0;\n\t  },\n\t  lineEnd: function() {\n\t    switch (this._point) {\n\t      case 3: point$2(this, this._x1, this._y1); // proceed\n\t      case 2: this._context.lineTo(this._x1, this._y1); break;\n\t    }\n\t    if (this._line || (this._line !== 0 && this._point === 1)) this._context.closePath();\n\t    this._line = 1 - this._line;\n\t  },\n\t  point: function(x, y) {\n\t    x = +x, y = +y;\n\t    switch (this._point) {\n\t      case 0: this._point = 1; this._line ? this._context.lineTo(x, y) : this._context.moveTo(x, y); break;\n\t      case 1: this._point = 2; break;\n\t      case 2: this._point = 3; this._context.lineTo((5 * this._x0 + this._x1) / 6, (5 * this._y0 + this._y1) / 6); // proceed\n\t      default: point$2(this, x, y); break;\n\t    }\n\t    this._x0 = this._x1, this._x1 = x;\n\t    this._y0 = this._y1, this._y1 = y;\n\t  }\n\t};\n\t\n\tvar basis$2 = function(context) {\n\t  return new Basis(context);\n\t};\n\t\n\tfunction BasisClosed(context) {\n\t  this._context = context;\n\t}\n\t\n\tBasisClosed.prototype = {\n\t  areaStart: noop$2,\n\t  areaEnd: noop$2,\n\t  lineStart: function() {\n\t    this._x0 = this._x1 = this._x2 = this._x3 = this._x4 =\n\t    this._y0 = this._y1 = this._y2 = this._y3 = this._y4 = NaN;\n\t    this._point = 0;\n\t  },\n\t  lineEnd: function() {\n\t    switch (this._point) {\n\t      case 1: {\n\t        this._context.moveTo(this._x2, this._y2);\n\t        this._context.closePath();\n\t        break;\n\t      }\n\t      case 2: {\n\t        this._context.moveTo((this._x2 + 2 * this._x3) / 3, (this._y2 + 2 * this._y3) / 3);\n\t        this._context.lineTo((this._x3 + 2 * this._x2) / 3, (this._y3 + 2 * this._y2) / 3);\n\t        this._context.closePath();\n\t        break;\n\t      }\n\t      case 3: {\n\t        this.point(this._x2, this._y2);\n\t        this.point(this._x3, this._y3);\n\t        this.point(this._x4, this._y4);\n\t        break;\n\t      }\n\t    }\n\t  },\n\t  point: function(x, y) {\n\t    x = +x, y = +y;\n\t    switch (this._point) {\n\t      case 0: this._point = 1; this._x2 = x, this._y2 = y; break;\n\t      case 1: this._point = 2; this._x3 = x, this._y3 = y; break;\n\t      case 2: this._point = 3; this._x4 = x, this._y4 = y; this._context.moveTo((this._x0 + 4 * this._x1 + x) / 6, (this._y0 + 4 * this._y1 + y) / 6); break;\n\t      default: point$2(this, x, y); break;\n\t    }\n\t    this._x0 = this._x1, this._x1 = x;\n\t    this._y0 = this._y1, this._y1 = y;\n\t  }\n\t};\n\t\n\tvar basisClosed$1 = function(context) {\n\t  return new BasisClosed(context);\n\t};\n\t\n\tfunction BasisOpen(context) {\n\t  this._context = context;\n\t}\n\t\n\tBasisOpen.prototype = {\n\t  areaStart: function() {\n\t    this._line = 0;\n\t  },\n\t  areaEnd: function() {\n\t    this._line = NaN;\n\t  },\n\t  lineStart: function() {\n\t    this._x0 = this._x1 =\n\t    this._y0 = this._y1 = NaN;\n\t    this._point = 0;\n\t  },\n\t  lineEnd: function() {\n\t    if (this._line || (this._line !== 0 && this._point === 3)) this._context.closePath();\n\t    this._line = 1 - this._line;\n\t  },\n\t  point: function(x, y) {\n\t    x = +x, y = +y;\n\t    switch (this._point) {\n\t      case 0: this._point = 1; break;\n\t      case 1: this._point = 2; break;\n\t      case 2: this._point = 3; var x0 = (this._x0 + 4 * this._x1 + x) / 6, y0 = (this._y0 + 4 * this._y1 + y) / 6; this._line ? this._context.lineTo(x0, y0) : this._context.moveTo(x0, y0); break;\n\t      case 3: this._point = 4; // proceed\n\t      default: point$2(this, x, y); break;\n\t    }\n\t    this._x0 = this._x1, this._x1 = x;\n\t    this._y0 = this._y1, this._y1 = y;\n\t  }\n\t};\n\t\n\tvar basisOpen = function(context) {\n\t  return new BasisOpen(context);\n\t};\n\t\n\tfunction Bundle(context, beta) {\n\t  this._basis = new Basis(context);\n\t  this._beta = beta;\n\t}\n\t\n\tBundle.prototype = {\n\t  lineStart: function() {\n\t    this._x = [];\n\t    this._y = [];\n\t    this._basis.lineStart();\n\t  },\n\t  lineEnd: function() {\n\t    var x = this._x,\n\t        y = this._y,\n\t        j = x.length - 1;\n\t\n\t    if (j > 0) {\n\t      var x0 = x[0],\n\t          y0 = y[0],\n\t          dx = x[j] - x0,\n\t          dy = y[j] - y0,\n\t          i = -1,\n\t          t;\n\t\n\t      while (++i <= j) {\n\t        t = i / j;\n\t        this._basis.point(\n\t          this._beta * x[i] + (1 - this._beta) * (x0 + t * dx),\n\t          this._beta * y[i] + (1 - this._beta) * (y0 + t * dy)\n\t        );\n\t      }\n\t    }\n\t\n\t    this._x = this._y = null;\n\t    this._basis.lineEnd();\n\t  },\n\t  point: function(x, y) {\n\t    this._x.push(+x);\n\t    this._y.push(+y);\n\t  }\n\t};\n\t\n\tvar bundle = (function custom(beta) {\n\t\n\t  function bundle(context) {\n\t    return beta === 1 ? new Basis(context) : new Bundle(context, beta);\n\t  }\n\t\n\t  bundle.beta = function(beta) {\n\t    return custom(+beta);\n\t  };\n\t\n\t  return bundle;\n\t})(0.85);\n\t\n\tfunction point$3(that, x, y) {\n\t  that._context.bezierCurveTo(\n\t    that._x1 + that._k * (that._x2 - that._x0),\n\t    that._y1 + that._k * (that._y2 - that._y0),\n\t    that._x2 + that._k * (that._x1 - x),\n\t    that._y2 + that._k * (that._y1 - y),\n\t    that._x2,\n\t    that._y2\n\t  );\n\t}\n\t\n\tfunction Cardinal(context, tension) {\n\t  this._context = context;\n\t  this._k = (1 - tension) / 6;\n\t}\n\t\n\tCardinal.prototype = {\n\t  areaStart: function() {\n\t    this._line = 0;\n\t  },\n\t  areaEnd: function() {\n\t    this._line = NaN;\n\t  },\n\t  lineStart: function() {\n\t    this._x0 = this._x1 = this._x2 =\n\t    this._y0 = this._y1 = this._y2 = NaN;\n\t    this._point = 0;\n\t  },\n\t  lineEnd: function() {\n\t    switch (this._point) {\n\t      case 2: this._context.lineTo(this._x2, this._y2); break;\n\t      case 3: point$3(this, this._x1, this._y1); break;\n\t    }\n\t    if (this._line || (this._line !== 0 && this._point === 1)) this._context.closePath();\n\t    this._line = 1 - this._line;\n\t  },\n\t  point: function(x, y) {\n\t    x = +x, y = +y;\n\t    switch (this._point) {\n\t      case 0: this._point = 1; this._line ? this._context.lineTo(x, y) : this._context.moveTo(x, y); break;\n\t      case 1: this._point = 2; this._x1 = x, this._y1 = y; break;\n\t      case 2: this._point = 3; // proceed\n\t      default: point$3(this, x, y); break;\n\t    }\n\t    this._x0 = this._x1, this._x1 = this._x2, this._x2 = x;\n\t    this._y0 = this._y1, this._y1 = this._y2, this._y2 = y;\n\t  }\n\t};\n\t\n\tvar cardinal = (function custom(tension) {\n\t\n\t  function cardinal(context) {\n\t    return new Cardinal(context, tension);\n\t  }\n\t\n\t  cardinal.tension = function(tension) {\n\t    return custom(+tension);\n\t  };\n\t\n\t  return cardinal;\n\t})(0);\n\t\n\tfunction CardinalClosed(context, tension) {\n\t  this._context = context;\n\t  this._k = (1 - tension) / 6;\n\t}\n\t\n\tCardinalClosed.prototype = {\n\t  areaStart: noop$2,\n\t  areaEnd: noop$2,\n\t  lineStart: function() {\n\t    this._x0 = this._x1 = this._x2 = this._x3 = this._x4 = this._x5 =\n\t    this._y0 = this._y1 = this._y2 = this._y3 = this._y4 = this._y5 = NaN;\n\t    this._point = 0;\n\t  },\n\t  lineEnd: function() {\n\t    switch (this._point) {\n\t      case 1: {\n\t        this._context.moveTo(this._x3, this._y3);\n\t        this._context.closePath();\n\t        break;\n\t      }\n\t      case 2: {\n\t        this._context.lineTo(this._x3, this._y3);\n\t        this._context.closePath();\n\t        break;\n\t      }\n\t      case 3: {\n\t        this.point(this._x3, this._y3);\n\t        this.point(this._x4, this._y4);\n\t        this.point(this._x5, this._y5);\n\t        break;\n\t      }\n\t    }\n\t  },\n\t  point: function(x, y) {\n\t    x = +x, y = +y;\n\t    switch (this._point) {\n\t      case 0: this._point = 1; this._x3 = x, this._y3 = y; break;\n\t      case 1: this._point = 2; this._context.moveTo(this._x4 = x, this._y4 = y); break;\n\t      case 2: this._point = 3; this._x5 = x, this._y5 = y; break;\n\t      default: point$3(this, x, y); break;\n\t    }\n\t    this._x0 = this._x1, this._x1 = this._x2, this._x2 = x;\n\t    this._y0 = this._y1, this._y1 = this._y2, this._y2 = y;\n\t  }\n\t};\n\t\n\tvar cardinalClosed = (function custom(tension) {\n\t\n\t  function cardinal$$1(context) {\n\t    return new CardinalClosed(context, tension);\n\t  }\n\t\n\t  cardinal$$1.tension = function(tension) {\n\t    return custom(+tension);\n\t  };\n\t\n\t  return cardinal$$1;\n\t})(0);\n\t\n\tfunction CardinalOpen(context, tension) {\n\t  this._context = context;\n\t  this._k = (1 - tension) / 6;\n\t}\n\t\n\tCardinalOpen.prototype = {\n\t  areaStart: function() {\n\t    this._line = 0;\n\t  },\n\t  areaEnd: function() {\n\t    this._line = NaN;\n\t  },\n\t  lineStart: function() {\n\t    this._x0 = this._x1 = this._x2 =\n\t    this._y0 = this._y1 = this._y2 = NaN;\n\t    this._point = 0;\n\t  },\n\t  lineEnd: function() {\n\t    if (this._line || (this._line !== 0 && this._point === 3)) this._context.closePath();\n\t    this._line = 1 - this._line;\n\t  },\n\t  point: function(x, y) {\n\t    x = +x, y = +y;\n\t    switch (this._point) {\n\t      case 0: this._point = 1; break;\n\t      case 1: this._point = 2; break;\n\t      case 2: this._point = 3; this._line ? this._context.lineTo(this._x2, this._y2) : this._context.moveTo(this._x2, this._y2); break;\n\t      case 3: this._point = 4; // proceed\n\t      default: point$3(this, x, y); break;\n\t    }\n\t    this._x0 = this._x1, this._x1 = this._x2, this._x2 = x;\n\t    this._y0 = this._y1, this._y1 = this._y2, this._y2 = y;\n\t  }\n\t};\n\t\n\tvar cardinalOpen = (function custom(tension) {\n\t\n\t  function cardinal$$1(context) {\n\t    return new CardinalOpen(context, tension);\n\t  }\n\t\n\t  cardinal$$1.tension = function(tension) {\n\t    return custom(+tension);\n\t  };\n\t\n\t  return cardinal$$1;\n\t})(0);\n\t\n\tfunction point$4(that, x, y) {\n\t  var x1 = that._x1,\n\t      y1 = that._y1,\n\t      x2 = that._x2,\n\t      y2 = that._y2;\n\t\n\t  if (that._l01_a > epsilon$3) {\n\t    var a = 2 * that._l01_2a + 3 * that._l01_a * that._l12_a + that._l12_2a,\n\t        n = 3 * that._l01_a * (that._l01_a + that._l12_a);\n\t    x1 = (x1 * a - that._x0 * that._l12_2a + that._x2 * that._l01_2a) / n;\n\t    y1 = (y1 * a - that._y0 * that._l12_2a + that._y2 * that._l01_2a) / n;\n\t  }\n\t\n\t  if (that._l23_a > epsilon$3) {\n\t    var b = 2 * that._l23_2a + 3 * that._l23_a * that._l12_a + that._l12_2a,\n\t        m = 3 * that._l23_a * (that._l23_a + that._l12_a);\n\t    x2 = (x2 * b + that._x1 * that._l23_2a - x * that._l12_2a) / m;\n\t    y2 = (y2 * b + that._y1 * that._l23_2a - y * that._l12_2a) / m;\n\t  }\n\t\n\t  that._context.bezierCurveTo(x1, y1, x2, y2, that._x2, that._y2);\n\t}\n\t\n\tfunction CatmullRom(context, alpha) {\n\t  this._context = context;\n\t  this._alpha = alpha;\n\t}\n\t\n\tCatmullRom.prototype = {\n\t  areaStart: function() {\n\t    this._line = 0;\n\t  },\n\t  areaEnd: function() {\n\t    this._line = NaN;\n\t  },\n\t  lineStart: function() {\n\t    this._x0 = this._x1 = this._x2 =\n\t    this._y0 = this._y1 = this._y2 = NaN;\n\t    this._l01_a = this._l12_a = this._l23_a =\n\t    this._l01_2a = this._l12_2a = this._l23_2a =\n\t    this._point = 0;\n\t  },\n\t  lineEnd: function() {\n\t    switch (this._point) {\n\t      case 2: this._context.lineTo(this._x2, this._y2); break;\n\t      case 3: this.point(this._x2, this._y2); break;\n\t    }\n\t    if (this._line || (this._line !== 0 && this._point === 1)) this._context.closePath();\n\t    this._line = 1 - this._line;\n\t  },\n\t  point: function(x, y) {\n\t    x = +x, y = +y;\n\t\n\t    if (this._point) {\n\t      var x23 = this._x2 - x,\n\t          y23 = this._y2 - y;\n\t      this._l23_a = Math.sqrt(this._l23_2a = Math.pow(x23 * x23 + y23 * y23, this._alpha));\n\t    }\n\t\n\t    switch (this._point) {\n\t      case 0: this._point = 1; this._line ? this._context.lineTo(x, y) : this._context.moveTo(x, y); break;\n\t      case 1: this._point = 2; break;\n\t      case 2: this._point = 3; // proceed\n\t      default: point$4(this, x, y); break;\n\t    }\n\t\n\t    this._l01_a = this._l12_a, this._l12_a = this._l23_a;\n\t    this._l01_2a = this._l12_2a, this._l12_2a = this._l23_2a;\n\t    this._x0 = this._x1, this._x1 = this._x2, this._x2 = x;\n\t    this._y0 = this._y1, this._y1 = this._y2, this._y2 = y;\n\t  }\n\t};\n\t\n\tvar catmullRom = (function custom(alpha) {\n\t\n\t  function catmullRom(context) {\n\t    return alpha ? new CatmullRom(context, alpha) : new Cardinal(context, 0);\n\t  }\n\t\n\t  catmullRom.alpha = function(alpha) {\n\t    return custom(+alpha);\n\t  };\n\t\n\t  return catmullRom;\n\t})(0.5);\n\t\n\tfunction CatmullRomClosed(context, alpha) {\n\t  this._context = context;\n\t  this._alpha = alpha;\n\t}\n\t\n\tCatmullRomClosed.prototype = {\n\t  areaStart: noop$2,\n\t  areaEnd: noop$2,\n\t  lineStart: function() {\n\t    this._x0 = this._x1 = this._x2 = this._x3 = this._x4 = this._x5 =\n\t    this._y0 = this._y1 = this._y2 = this._y3 = this._y4 = this._y5 = NaN;\n\t    this._l01_a = this._l12_a = this._l23_a =\n\t    this._l01_2a = this._l12_2a = this._l23_2a =\n\t    this._point = 0;\n\t  },\n\t  lineEnd: function() {\n\t    switch (this._point) {\n\t      case 1: {\n\t        this._context.moveTo(this._x3, this._y3);\n\t        this._context.closePath();\n\t        break;\n\t      }\n\t      case 2: {\n\t        this._context.lineTo(this._x3, this._y3);\n\t        this._context.closePath();\n\t        break;\n\t      }\n\t      case 3: {\n\t        this.point(this._x3, this._y3);\n\t        this.point(this._x4, this._y4);\n\t        this.point(this._x5, this._y5);\n\t        break;\n\t      }\n\t    }\n\t  },\n\t  point: function(x, y) {\n\t    x = +x, y = +y;\n\t\n\t    if (this._point) {\n\t      var x23 = this._x2 - x,\n\t          y23 = this._y2 - y;\n\t      this._l23_a = Math.sqrt(this._l23_2a = Math.pow(x23 * x23 + y23 * y23, this._alpha));\n\t    }\n\t\n\t    switch (this._point) {\n\t      case 0: this._point = 1; this._x3 = x, this._y3 = y; break;\n\t      case 1: this._point = 2; this._context.moveTo(this._x4 = x, this._y4 = y); break;\n\t      case 2: this._point = 3; this._x5 = x, this._y5 = y; break;\n\t      default: point$4(this, x, y); break;\n\t    }\n\t\n\t    this._l01_a = this._l12_a, this._l12_a = this._l23_a;\n\t    this._l01_2a = this._l12_2a, this._l12_2a = this._l23_2a;\n\t    this._x0 = this._x1, this._x1 = this._x2, this._x2 = x;\n\t    this._y0 = this._y1, this._y1 = this._y2, this._y2 = y;\n\t  }\n\t};\n\t\n\tvar catmullRomClosed = (function custom(alpha) {\n\t\n\t  function catmullRom$$1(context) {\n\t    return alpha ? new CatmullRomClosed(context, alpha) : new CardinalClosed(context, 0);\n\t  }\n\t\n\t  catmullRom$$1.alpha = function(alpha) {\n\t    return custom(+alpha);\n\t  };\n\t\n\t  return catmullRom$$1;\n\t})(0.5);\n\t\n\tfunction CatmullRomOpen(context, alpha) {\n\t  this._context = context;\n\t  this._alpha = alpha;\n\t}\n\t\n\tCatmullRomOpen.prototype = {\n\t  areaStart: function() {\n\t    this._line = 0;\n\t  },\n\t  areaEnd: function() {\n\t    this._line = NaN;\n\t  },\n\t  lineStart: function() {\n\t    this._x0 = this._x1 = this._x2 =\n\t    this._y0 = this._y1 = this._y2 = NaN;\n\t    this._l01_a = this._l12_a = this._l23_a =\n\t    this._l01_2a = this._l12_2a = this._l23_2a =\n\t    this._point = 0;\n\t  },\n\t  lineEnd: function() {\n\t    if (this._line || (this._line !== 0 && this._point === 3)) this._context.closePath();\n\t    this._line = 1 - this._line;\n\t  },\n\t  point: function(x, y) {\n\t    x = +x, y = +y;\n\t\n\t    if (this._point) {\n\t      var x23 = this._x2 - x,\n\t          y23 = this._y2 - y;\n\t      this._l23_a = Math.sqrt(this._l23_2a = Math.pow(x23 * x23 + y23 * y23, this._alpha));\n\t    }\n\t\n\t    switch (this._point) {\n\t      case 0: this._point = 1; break;\n\t      case 1: this._point = 2; break;\n\t      case 2: this._point = 3; this._line ? this._context.lineTo(this._x2, this._y2) : this._context.moveTo(this._x2, this._y2); break;\n\t      case 3: this._point = 4; // proceed\n\t      default: point$4(this, x, y); break;\n\t    }\n\t\n\t    this._l01_a = this._l12_a, this._l12_a = this._l23_a;\n\t    this._l01_2a = this._l12_2a, this._l12_2a = this._l23_2a;\n\t    this._x0 = this._x1, this._x1 = this._x2, this._x2 = x;\n\t    this._y0 = this._y1, this._y1 = this._y2, this._y2 = y;\n\t  }\n\t};\n\t\n\tvar catmullRomOpen = (function custom(alpha) {\n\t\n\t  function catmullRom$$1(context) {\n\t    return alpha ? new CatmullRomOpen(context, alpha) : new CardinalOpen(context, 0);\n\t  }\n\t\n\t  catmullRom$$1.alpha = function(alpha) {\n\t    return custom(+alpha);\n\t  };\n\t\n\t  return catmullRom$$1;\n\t})(0.5);\n\t\n\tfunction LinearClosed(context) {\n\t  this._context = context;\n\t}\n\t\n\tLinearClosed.prototype = {\n\t  areaStart: noop$2,\n\t  areaEnd: noop$2,\n\t  lineStart: function() {\n\t    this._point = 0;\n\t  },\n\t  lineEnd: function() {\n\t    if (this._point) this._context.closePath();\n\t  },\n\t  point: function(x, y) {\n\t    x = +x, y = +y;\n\t    if (this._point) this._context.lineTo(x, y);\n\t    else this._point = 1, this._context.moveTo(x, y);\n\t  }\n\t};\n\t\n\tvar linearClosed = function(context) {\n\t  return new LinearClosed(context);\n\t};\n\t\n\tfunction sign$1(x) {\n\t  return x < 0 ? -1 : 1;\n\t}\n\t\n\t// Calculate the slopes of the tangents (Hermite-type interpolation) based on\n\t// the following paper: Steffen, M. 1990. A Simple Method for Monotonic\n\t// Interpolation in One Dimension. Astronomy and Astrophysics, Vol. 239, NO.\n\t// NOV(II), P. 443, 1990.\n\tfunction slope3(that, x2, y2) {\n\t  var h0 = that._x1 - that._x0,\n\t      h1 = x2 - that._x1,\n\t      s0 = (that._y1 - that._y0) / (h0 || h1 < 0 && -0),\n\t      s1 = (y2 - that._y1) / (h1 || h0 < 0 && -0),\n\t      p = (s0 * h1 + s1 * h0) / (h0 + h1);\n\t  return (sign$1(s0) + sign$1(s1)) * Math.min(Math.abs(s0), Math.abs(s1), 0.5 * Math.abs(p)) || 0;\n\t}\n\t\n\t// Calculate a one-sided slope.\n\tfunction slope2(that, t) {\n\t  var h = that._x1 - that._x0;\n\t  return h ? (3 * (that._y1 - that._y0) / h - t) / 2 : t;\n\t}\n\t\n\t// According to https://en.wikipedia.org/wiki/Cubic_Hermite_spline#Representations\n\t// \"you can express cubic Hermite interpolation in terms of cubic Bézier curves\n\t// with respect to the four values p0, p0 + m0 / 3, p1 - m1 / 3, p1\".\n\tfunction point$5(that, t0, t1) {\n\t  var x0 = that._x0,\n\t      y0 = that._y0,\n\t      x1 = that._x1,\n\t      y1 = that._y1,\n\t      dx = (x1 - x0) / 3;\n\t  that._context.bezierCurveTo(x0 + dx, y0 + dx * t0, x1 - dx, y1 - dx * t1, x1, y1);\n\t}\n\t\n\tfunction MonotoneX(context) {\n\t  this._context = context;\n\t}\n\t\n\tMonotoneX.prototype = {\n\t  areaStart: function() {\n\t    this._line = 0;\n\t  },\n\t  areaEnd: function() {\n\t    this._line = NaN;\n\t  },\n\t  lineStart: function() {\n\t    this._x0 = this._x1 =\n\t    this._y0 = this._y1 =\n\t    this._t0 = NaN;\n\t    this._point = 0;\n\t  },\n\t  lineEnd: function() {\n\t    switch (this._point) {\n\t      case 2: this._context.lineTo(this._x1, this._y1); break;\n\t      case 3: point$5(this, this._t0, slope2(this, this._t0)); break;\n\t    }\n\t    if (this._line || (this._line !== 0 && this._point === 1)) this._context.closePath();\n\t    this._line = 1 - this._line;\n\t  },\n\t  point: function(x, y) {\n\t    var t1 = NaN;\n\t\n\t    x = +x, y = +y;\n\t    if (x === this._x1 && y === this._y1) return; // Ignore coincident points.\n\t    switch (this._point) {\n\t      case 0: this._point = 1; this._line ? this._context.lineTo(x, y) : this._context.moveTo(x, y); break;\n\t      case 1: this._point = 2; break;\n\t      case 2: this._point = 3; point$5(this, slope2(this, t1 = slope3(this, x, y)), t1); break;\n\t      default: point$5(this, this._t0, t1 = slope3(this, x, y)); break;\n\t    }\n\t\n\t    this._x0 = this._x1, this._x1 = x;\n\t    this._y0 = this._y1, this._y1 = y;\n\t    this._t0 = t1;\n\t  }\n\t};\n\t\n\tfunction MonotoneY(context) {\n\t  this._context = new ReflectContext(context);\n\t}\n\t\n\t(MonotoneY.prototype = Object.create(MonotoneX.prototype)).point = function(x, y) {\n\t  MonotoneX.prototype.point.call(this, y, x);\n\t};\n\t\n\tfunction ReflectContext(context) {\n\t  this._context = context;\n\t}\n\t\n\tReflectContext.prototype = {\n\t  moveTo: function(x, y) { this._context.moveTo(y, x); },\n\t  closePath: function() { this._context.closePath(); },\n\t  lineTo: function(x, y) { this._context.lineTo(y, x); },\n\t  bezierCurveTo: function(x1, y1, x2, y2, x, y) { this._context.bezierCurveTo(y1, x1, y2, x2, y, x); }\n\t};\n\t\n\tfunction monotoneX(context) {\n\t  return new MonotoneX(context);\n\t}\n\t\n\tfunction monotoneY(context) {\n\t  return new MonotoneY(context);\n\t}\n\t\n\tfunction Natural(context) {\n\t  this._context = context;\n\t}\n\t\n\tNatural.prototype = {\n\t  areaStart: function() {\n\t    this._line = 0;\n\t  },\n\t  areaEnd: function() {\n\t    this._line = NaN;\n\t  },\n\t  lineStart: function() {\n\t    this._x = [];\n\t    this._y = [];\n\t  },\n\t  lineEnd: function() {\n\t    var x = this._x,\n\t        y = this._y,\n\t        n = x.length;\n\t\n\t    if (n) {\n\t      this._line ? this._context.lineTo(x[0], y[0]) : this._context.moveTo(x[0], y[0]);\n\t      if (n === 2) {\n\t        this._context.lineTo(x[1], y[1]);\n\t      } else {\n\t        var px = controlPoints(x),\n\t            py = controlPoints(y);\n\t        for (var i0 = 0, i1 = 1; i1 < n; ++i0, ++i1) {\n\t          this._context.bezierCurveTo(px[0][i0], py[0][i0], px[1][i0], py[1][i0], x[i1], y[i1]);\n\t        }\n\t      }\n\t    }\n\t\n\t    if (this._line || (this._line !== 0 && n === 1)) this._context.closePath();\n\t    this._line = 1 - this._line;\n\t    this._x = this._y = null;\n\t  },\n\t  point: function(x, y) {\n\t    this._x.push(+x);\n\t    this._y.push(+y);\n\t  }\n\t};\n\t\n\t// See https://www.particleincell.com/2012/bezier-splines/ for derivation.\n\tfunction controlPoints(x) {\n\t  var i,\n\t      n = x.length - 1,\n\t      m,\n\t      a = new Array(n),\n\t      b = new Array(n),\n\t      r = new Array(n);\n\t  a[0] = 0, b[0] = 2, r[0] = x[0] + 2 * x[1];\n\t  for (i = 1; i < n - 1; ++i) a[i] = 1, b[i] = 4, r[i] = 4 * x[i] + 2 * x[i + 1];\n\t  a[n - 1] = 2, b[n - 1] = 7, r[n - 1] = 8 * x[n - 1] + x[n];\n\t  for (i = 1; i < n; ++i) m = a[i] / b[i - 1], b[i] -= m, r[i] -= m * r[i - 1];\n\t  a[n - 1] = r[n - 1] / b[n - 1];\n\t  for (i = n - 2; i >= 0; --i) a[i] = (r[i] - a[i + 1]) / b[i];\n\t  b[n - 1] = (x[n] + a[n - 1]) / 2;\n\t  for (i = 0; i < n - 1; ++i) b[i] = 2 * x[i + 1] - a[i + 1];\n\t  return [a, b];\n\t}\n\t\n\tvar natural = function(context) {\n\t  return new Natural(context);\n\t};\n\t\n\tfunction Step(context, t) {\n\t  this._context = context;\n\t  this._t = t;\n\t}\n\t\n\tStep.prototype = {\n\t  areaStart: function() {\n\t    this._line = 0;\n\t  },\n\t  areaEnd: function() {\n\t    this._line = NaN;\n\t  },\n\t  lineStart: function() {\n\t    this._x = this._y = NaN;\n\t    this._point = 0;\n\t  },\n\t  lineEnd: function() {\n\t    if (0 < this._t && this._t < 1 && this._point === 2) this._context.lineTo(this._x, this._y);\n\t    if (this._line || (this._line !== 0 && this._point === 1)) this._context.closePath();\n\t    if (this._line >= 0) this._t = 1 - this._t, this._line = 1 - this._line;\n\t  },\n\t  point: function(x, y) {\n\t    x = +x, y = +y;\n\t    switch (this._point) {\n\t      case 0: this._point = 1; this._line ? this._context.lineTo(x, y) : this._context.moveTo(x, y); break;\n\t      case 1: this._point = 2; // proceed\n\t      default: {\n\t        if (this._t <= 0) {\n\t          this._context.lineTo(this._x, y);\n\t          this._context.lineTo(x, y);\n\t        } else {\n\t          var x1 = this._x * (1 - this._t) + x * this._t;\n\t          this._context.lineTo(x1, this._y);\n\t          this._context.lineTo(x1, y);\n\t        }\n\t        break;\n\t      }\n\t    }\n\t    this._x = x, this._y = y;\n\t  }\n\t};\n\t\n\tvar step = function(context) {\n\t  return new Step(context, 0.5);\n\t};\n\t\n\tfunction stepBefore(context) {\n\t  return new Step(context, 0);\n\t}\n\t\n\tfunction stepAfter(context) {\n\t  return new Step(context, 1);\n\t}\n\t\n\tvar none$1 = function(series, order) {\n\t  if (!((n = series.length) > 1)) return;\n\t  for (var i = 1, j, s0, s1 = series[order[0]], n, m = s1.length; i < n; ++i) {\n\t    s0 = s1, s1 = series[order[i]];\n\t    for (j = 0; j < m; ++j) {\n\t      s1[j][1] += s1[j][0] = isNaN(s0[j][1]) ? s0[j][0] : s0[j][1];\n\t    }\n\t  }\n\t};\n\t\n\tvar none$2 = function(series) {\n\t  var n = series.length, o = new Array(n);\n\t  while (--n >= 0) o[n] = n;\n\t  return o;\n\t};\n\t\n\tfunction stackValue(d, key) {\n\t  return d[key];\n\t}\n\t\n\tvar stack = function() {\n\t  var keys = constant$10([]),\n\t      order = none$2,\n\t      offset = none$1,\n\t      value = stackValue;\n\t\n\t  function stack(data) {\n\t    var kz = keys.apply(this, arguments),\n\t        i,\n\t        m = data.length,\n\t        n = kz.length,\n\t        sz = new Array(n),\n\t        oz;\n\t\n\t    for (i = 0; i < n; ++i) {\n\t      for (var ki = kz[i], si = sz[i] = new Array(m), j = 0, sij; j < m; ++j) {\n\t        si[j] = sij = [0, +value(data[j], ki, j, data)];\n\t        sij.data = data[j];\n\t      }\n\t      si.key = ki;\n\t    }\n\t\n\t    for (i = 0, oz = order(sz); i < n; ++i) {\n\t      sz[oz[i]].index = i;\n\t    }\n\t\n\t    offset(sz, oz);\n\t    return sz;\n\t  }\n\t\n\t  stack.keys = function(_) {\n\t    return arguments.length ? (keys = typeof _ === \"function\" ? _ : constant$10(slice$6.call(_)), stack) : keys;\n\t  };\n\t\n\t  stack.value = function(_) {\n\t    return arguments.length ? (value = typeof _ === \"function\" ? _ : constant$10(+_), stack) : value;\n\t  };\n\t\n\t  stack.order = function(_) {\n\t    return arguments.length ? (order = _ == null ? none$2 : typeof _ === \"function\" ? _ : constant$10(slice$6.call(_)), stack) : order;\n\t  };\n\t\n\t  stack.offset = function(_) {\n\t    return arguments.length ? (offset = _ == null ? none$1 : _, stack) : offset;\n\t  };\n\t\n\t  return stack;\n\t};\n\t\n\tvar expand = function(series, order) {\n\t  if (!((n = series.length) > 0)) return;\n\t  for (var i, n, j = 0, m = series[0].length, y; j < m; ++j) {\n\t    for (y = i = 0; i < n; ++i) y += series[i][j][1] || 0;\n\t    if (y) for (i = 0; i < n; ++i) series[i][j][1] /= y;\n\t  }\n\t  none$1(series, order);\n\t};\n\t\n\tvar diverging = function(series, order) {\n\t  if (!((n = series.length) > 1)) return;\n\t  for (var i, j = 0, d, dy, yp, yn, n, m = series[order[0]].length; j < m; ++j) {\n\t    for (yp = yn = 0, i = 0; i < n; ++i) {\n\t      if ((dy = (d = series[order[i]][j])[1] - d[0]) >= 0) {\n\t        d[0] = yp, d[1] = yp += dy;\n\t      } else if (dy < 0) {\n\t        d[1] = yn, d[0] = yn += dy;\n\t      } else {\n\t        d[0] = yp;\n\t      }\n\t    }\n\t  }\n\t};\n\t\n\tvar silhouette = function(series, order) {\n\t  if (!((n = series.length) > 0)) return;\n\t  for (var j = 0, s0 = series[order[0]], n, m = s0.length; j < m; ++j) {\n\t    for (var i = 0, y = 0; i < n; ++i) y += series[i][j][1] || 0;\n\t    s0[j][1] += s0[j][0] = -y / 2;\n\t  }\n\t  none$1(series, order);\n\t};\n\t\n\tvar wiggle = function(series, order) {\n\t  if (!((n = series.length) > 0) || !((m = (s0 = series[order[0]]).length) > 0)) return;\n\t  for (var y = 0, j = 1, s0, m, n; j < m; ++j) {\n\t    for (var i = 0, s1 = 0, s2 = 0; i < n; ++i) {\n\t      var si = series[order[i]],\n\t          sij0 = si[j][1] || 0,\n\t          sij1 = si[j - 1][1] || 0,\n\t          s3 = (sij0 - sij1) / 2;\n\t      for (var k = 0; k < i; ++k) {\n\t        var sk = series[order[k]],\n\t            skj0 = sk[j][1] || 0,\n\t            skj1 = sk[j - 1][1] || 0;\n\t        s3 += skj0 - skj1;\n\t      }\n\t      s1 += sij0, s2 += s3 * sij0;\n\t    }\n\t    s0[j - 1][1] += s0[j - 1][0] = y;\n\t    if (s1) y -= s2 / s1;\n\t  }\n\t  s0[j - 1][1] += s0[j - 1][0] = y;\n\t  none$1(series, order);\n\t};\n\t\n\tvar ascending$2 = function(series) {\n\t  var sums = series.map(sum$2);\n\t  return none$2(series).sort(function(a, b) { return sums[a] - sums[b]; });\n\t};\n\t\n\tfunction sum$2(series) {\n\t  var s = 0, i = -1, n = series.length, v;\n\t  while (++i < n) if (v = +series[i][1]) s += v;\n\t  return s;\n\t}\n\t\n\tvar descending$2 = function(series) {\n\t  return ascending$2(series).reverse();\n\t};\n\t\n\tvar insideOut = function(series) {\n\t  var n = series.length,\n\t      i,\n\t      j,\n\t      sums = series.map(sum$2),\n\t      order = none$2(series).sort(function(a, b) { return sums[b] - sums[a]; }),\n\t      top = 0,\n\t      bottom = 0,\n\t      tops = [],\n\t      bottoms = [];\n\t\n\t  for (i = 0; i < n; ++i) {\n\t    j = order[i];\n\t    if (top < bottom) {\n\t      top += sums[j];\n\t      tops.push(j);\n\t    } else {\n\t      bottom += sums[j];\n\t      bottoms.push(j);\n\t    }\n\t  }\n\t\n\t  return bottoms.reverse().concat(tops);\n\t};\n\t\n\tvar reverse = function(series) {\n\t  return none$2(series).reverse();\n\t};\n\t\n\tvar constant$11 = function(x) {\n\t  return function() {\n\t    return x;\n\t  };\n\t};\n\t\n\tfunction x$4(d) {\n\t  return d[0];\n\t}\n\t\n\tfunction y$4(d) {\n\t  return d[1];\n\t}\n\t\n\tfunction RedBlackTree() {\n\t  this._ = null; // root node\n\t}\n\t\n\tfunction RedBlackNode(node) {\n\t  node.U = // parent node\n\t  node.C = // color - true for red, false for black\n\t  node.L = // left node\n\t  node.R = // right node\n\t  node.P = // previous node\n\t  node.N = null; // next node\n\t}\n\t\n\tRedBlackTree.prototype = {\n\t  constructor: RedBlackTree,\n\t\n\t  insert: function(after, node) {\n\t    var parent, grandpa, uncle;\n\t\n\t    if (after) {\n\t      node.P = after;\n\t      node.N = after.N;\n\t      if (after.N) after.N.P = node;\n\t      after.N = node;\n\t      if (after.R) {\n\t        after = after.R;\n\t        while (after.L) after = after.L;\n\t        after.L = node;\n\t      } else {\n\t        after.R = node;\n\t      }\n\t      parent = after;\n\t    } else if (this._) {\n\t      after = RedBlackFirst(this._);\n\t      node.P = null;\n\t      node.N = after;\n\t      after.P = after.L = node;\n\t      parent = after;\n\t    } else {\n\t      node.P = node.N = null;\n\t      this._ = node;\n\t      parent = null;\n\t    }\n\t    node.L = node.R = null;\n\t    node.U = parent;\n\t    node.C = true;\n\t\n\t    after = node;\n\t    while (parent && parent.C) {\n\t      grandpa = parent.U;\n\t      if (parent === grandpa.L) {\n\t        uncle = grandpa.R;\n\t        if (uncle && uncle.C) {\n\t          parent.C = uncle.C = false;\n\t          grandpa.C = true;\n\t          after = grandpa;\n\t        } else {\n\t          if (after === parent.R) {\n\t            RedBlackRotateLeft(this, parent);\n\t            after = parent;\n\t            parent = after.U;\n\t          }\n\t          parent.C = false;\n\t          grandpa.C = true;\n\t          RedBlackRotateRight(this, grandpa);\n\t        }\n\t      } else {\n\t        uncle = grandpa.L;\n\t        if (uncle && uncle.C) {\n\t          parent.C = uncle.C = false;\n\t          grandpa.C = true;\n\t          after = grandpa;\n\t        } else {\n\t          if (after === parent.L) {\n\t            RedBlackRotateRight(this, parent);\n\t            after = parent;\n\t            parent = after.U;\n\t          }\n\t          parent.C = false;\n\t          grandpa.C = true;\n\t          RedBlackRotateLeft(this, grandpa);\n\t        }\n\t      }\n\t      parent = after.U;\n\t    }\n\t    this._.C = false;\n\t  },\n\t\n\t  remove: function(node) {\n\t    if (node.N) node.N.P = node.P;\n\t    if (node.P) node.P.N = node.N;\n\t    node.N = node.P = null;\n\t\n\t    var parent = node.U,\n\t        sibling,\n\t        left = node.L,\n\t        right = node.R,\n\t        next,\n\t        red;\n\t\n\t    if (!left) next = right;\n\t    else if (!right) next = left;\n\t    else next = RedBlackFirst(right);\n\t\n\t    if (parent) {\n\t      if (parent.L === node) parent.L = next;\n\t      else parent.R = next;\n\t    } else {\n\t      this._ = next;\n\t    }\n\t\n\t    if (left && right) {\n\t      red = next.C;\n\t      next.C = node.C;\n\t      next.L = left;\n\t      left.U = next;\n\t      if (next !== right) {\n\t        parent = next.U;\n\t        next.U = node.U;\n\t        node = next.R;\n\t        parent.L = node;\n\t        next.R = right;\n\t        right.U = next;\n\t      } else {\n\t        next.U = parent;\n\t        parent = next;\n\t        node = next.R;\n\t      }\n\t    } else {\n\t      red = node.C;\n\t      node = next;\n\t    }\n\t\n\t    if (node) node.U = parent;\n\t    if (red) return;\n\t    if (node && node.C) { node.C = false; return; }\n\t\n\t    do {\n\t      if (node === this._) break;\n\t      if (node === parent.L) {\n\t        sibling = parent.R;\n\t        if (sibling.C) {\n\t          sibling.C = false;\n\t          parent.C = true;\n\t          RedBlackRotateLeft(this, parent);\n\t          sibling = parent.R;\n\t        }\n\t        if ((sibling.L && sibling.L.C)\n\t            || (sibling.R && sibling.R.C)) {\n\t          if (!sibling.R || !sibling.R.C) {\n\t            sibling.L.C = false;\n\t            sibling.C = true;\n\t            RedBlackRotateRight(this, sibling);\n\t            sibling = parent.R;\n\t          }\n\t          sibling.C = parent.C;\n\t          parent.C = sibling.R.C = false;\n\t          RedBlackRotateLeft(this, parent);\n\t          node = this._;\n\t          break;\n\t        }\n\t      } else {\n\t        sibling = parent.L;\n\t        if (sibling.C) {\n\t          sibling.C = false;\n\t          parent.C = true;\n\t          RedBlackRotateRight(this, parent);\n\t          sibling = parent.L;\n\t        }\n\t        if ((sibling.L && sibling.L.C)\n\t          || (sibling.R && sibling.R.C)) {\n\t          if (!sibling.L || !sibling.L.C) {\n\t            sibling.R.C = false;\n\t            sibling.C = true;\n\t            RedBlackRotateLeft(this, sibling);\n\t            sibling = parent.L;\n\t          }\n\t          sibling.C = parent.C;\n\t          parent.C = sibling.L.C = false;\n\t          RedBlackRotateRight(this, parent);\n\t          node = this._;\n\t          break;\n\t        }\n\t      }\n\t      sibling.C = true;\n\t      node = parent;\n\t      parent = parent.U;\n\t    } while (!node.C);\n\t\n\t    if (node) node.C = false;\n\t  }\n\t};\n\t\n\tfunction RedBlackRotateLeft(tree, node) {\n\t  var p = node,\n\t      q = node.R,\n\t      parent = p.U;\n\t\n\t  if (parent) {\n\t    if (parent.L === p) parent.L = q;\n\t    else parent.R = q;\n\t  } else {\n\t    tree._ = q;\n\t  }\n\t\n\t  q.U = parent;\n\t  p.U = q;\n\t  p.R = q.L;\n\t  if (p.R) p.R.U = p;\n\t  q.L = p;\n\t}\n\t\n\tfunction RedBlackRotateRight(tree, node) {\n\t  var p = node,\n\t      q = node.L,\n\t      parent = p.U;\n\t\n\t  if (parent) {\n\t    if (parent.L === p) parent.L = q;\n\t    else parent.R = q;\n\t  } else {\n\t    tree._ = q;\n\t  }\n\t\n\t  q.U = parent;\n\t  p.U = q;\n\t  p.L = q.R;\n\t  if (p.L) p.L.U = p;\n\t  q.R = p;\n\t}\n\t\n\tfunction RedBlackFirst(node) {\n\t  while (node.L) node = node.L;\n\t  return node;\n\t}\n\t\n\tfunction createEdge(left, right, v0, v1) {\n\t  var edge = [null, null],\n\t      index = edges.push(edge) - 1;\n\t  edge.left = left;\n\t  edge.right = right;\n\t  if (v0) setEdgeEnd(edge, left, right, v0);\n\t  if (v1) setEdgeEnd(edge, right, left, v1);\n\t  cells[left.index].halfedges.push(index);\n\t  cells[right.index].halfedges.push(index);\n\t  return edge;\n\t}\n\t\n\tfunction createBorderEdge(left, v0, v1) {\n\t  var edge = [v0, v1];\n\t  edge.left = left;\n\t  return edge;\n\t}\n\t\n\tfunction setEdgeEnd(edge, left, right, vertex) {\n\t  if (!edge[0] && !edge[1]) {\n\t    edge[0] = vertex;\n\t    edge.left = left;\n\t    edge.right = right;\n\t  } else if (edge.left === right) {\n\t    edge[1] = vertex;\n\t  } else {\n\t    edge[0] = vertex;\n\t  }\n\t}\n\t\n\t// Liang–Barsky line clipping.\n\tfunction clipEdge(edge, x0, y0, x1, y1) {\n\t  var a = edge[0],\n\t      b = edge[1],\n\t      ax = a[0],\n\t      ay = a[1],\n\t      bx = b[0],\n\t      by = b[1],\n\t      t0 = 0,\n\t      t1 = 1,\n\t      dx = bx - ax,\n\t      dy = by - ay,\n\t      r;\n\t\n\t  r = x0 - ax;\n\t  if (!dx && r > 0) return;\n\t  r /= dx;\n\t  if (dx < 0) {\n\t    if (r < t0) return;\n\t    if (r < t1) t1 = r;\n\t  } else if (dx > 0) {\n\t    if (r > t1) return;\n\t    if (r > t0) t0 = r;\n\t  }\n\t\n\t  r = x1 - ax;\n\t  if (!dx && r < 0) return;\n\t  r /= dx;\n\t  if (dx < 0) {\n\t    if (r > t1) return;\n\t    if (r > t0) t0 = r;\n\t  } else if (dx > 0) {\n\t    if (r < t0) return;\n\t    if (r < t1) t1 = r;\n\t  }\n\t\n\t  r = y0 - ay;\n\t  if (!dy && r > 0) return;\n\t  r /= dy;\n\t  if (dy < 0) {\n\t    if (r < t0) return;\n\t    if (r < t1) t1 = r;\n\t  } else if (dy > 0) {\n\t    if (r > t1) return;\n\t    if (r > t0) t0 = r;\n\t  }\n\t\n\t  r = y1 - ay;\n\t  if (!dy && r < 0) return;\n\t  r /= dy;\n\t  if (dy < 0) {\n\t    if (r > t1) return;\n\t    if (r > t0) t0 = r;\n\t  } else if (dy > 0) {\n\t    if (r < t0) return;\n\t    if (r < t1) t1 = r;\n\t  }\n\t\n\t  if (!(t0 > 0) && !(t1 < 1)) return true; // TODO Better check?\n\t\n\t  if (t0 > 0) edge[0] = [ax + t0 * dx, ay + t0 * dy];\n\t  if (t1 < 1) edge[1] = [ax + t1 * dx, ay + t1 * dy];\n\t  return true;\n\t}\n\t\n\tfunction connectEdge(edge, x0, y0, x1, y1) {\n\t  var v1 = edge[1];\n\t  if (v1) return true;\n\t\n\t  var v0 = edge[0],\n\t      left = edge.left,\n\t      right = edge.right,\n\t      lx = left[0],\n\t      ly = left[1],\n\t      rx = right[0],\n\t      ry = right[1],\n\t      fx = (lx + rx) / 2,\n\t      fy = (ly + ry) / 2,\n\t      fm,\n\t      fb;\n\t\n\t  if (ry === ly) {\n\t    if (fx < x0 || fx >= x1) return;\n\t    if (lx > rx) {\n\t      if (!v0) v0 = [fx, y0];\n\t      else if (v0[1] >= y1) return;\n\t      v1 = [fx, y1];\n\t    } else {\n\t      if (!v0) v0 = [fx, y1];\n\t      else if (v0[1] < y0) return;\n\t      v1 = [fx, y0];\n\t    }\n\t  } else {\n\t    fm = (lx - rx) / (ry - ly);\n\t    fb = fy - fm * fx;\n\t    if (fm < -1 || fm > 1) {\n\t      if (lx > rx) {\n\t        if (!v0) v0 = [(y0 - fb) / fm, y0];\n\t        else if (v0[1] >= y1) return;\n\t        v1 = [(y1 - fb) / fm, y1];\n\t      } else {\n\t        if (!v0) v0 = [(y1 - fb) / fm, y1];\n\t        else if (v0[1] < y0) return;\n\t        v1 = [(y0 - fb) / fm, y0];\n\t      }\n\t    } else {\n\t      if (ly < ry) {\n\t        if (!v0) v0 = [x0, fm * x0 + fb];\n\t        else if (v0[0] >= x1) return;\n\t        v1 = [x1, fm * x1 + fb];\n\t      } else {\n\t        if (!v0) v0 = [x1, fm * x1 + fb];\n\t        else if (v0[0] < x0) return;\n\t        v1 = [x0, fm * x0 + fb];\n\t      }\n\t    }\n\t  }\n\t\n\t  edge[0] = v0;\n\t  edge[1] = v1;\n\t  return true;\n\t}\n\t\n\tfunction clipEdges(x0, y0, x1, y1) {\n\t  var i = edges.length,\n\t      edge;\n\t\n\t  while (i--) {\n\t    if (!connectEdge(edge = edges[i], x0, y0, x1, y1)\n\t        || !clipEdge(edge, x0, y0, x1, y1)\n\t        || !(Math.abs(edge[0][0] - edge[1][0]) > epsilon$4\n\t            || Math.abs(edge[0][1] - edge[1][1]) > epsilon$4)) {\n\t      delete edges[i];\n\t    }\n\t  }\n\t}\n\t\n\tfunction createCell(site) {\n\t  return cells[site.index] = {\n\t    site: site,\n\t    halfedges: []\n\t  };\n\t}\n\t\n\tfunction cellHalfedgeAngle(cell, edge) {\n\t  var site = cell.site,\n\t      va = edge.left,\n\t      vb = edge.right;\n\t  if (site === vb) vb = va, va = site;\n\t  if (vb) return Math.atan2(vb[1] - va[1], vb[0] - va[0]);\n\t  if (site === va) va = edge[1], vb = edge[0];\n\t  else va = edge[0], vb = edge[1];\n\t  return Math.atan2(va[0] - vb[0], vb[1] - va[1]);\n\t}\n\t\n\tfunction cellHalfedgeStart(cell, edge) {\n\t  return edge[+(edge.left !== cell.site)];\n\t}\n\t\n\tfunction cellHalfedgeEnd(cell, edge) {\n\t  return edge[+(edge.left === cell.site)];\n\t}\n\t\n\tfunction sortCellHalfedges() {\n\t  for (var i = 0, n = cells.length, cell, halfedges, j, m; i < n; ++i) {\n\t    if ((cell = cells[i]) && (m = (halfedges = cell.halfedges).length)) {\n\t      var index = new Array(m),\n\t          array = new Array(m);\n\t      for (j = 0; j < m; ++j) index[j] = j, array[j] = cellHalfedgeAngle(cell, edges[halfedges[j]]);\n\t      index.sort(function(i, j) { return array[j] - array[i]; });\n\t      for (j = 0; j < m; ++j) array[j] = halfedges[index[j]];\n\t      for (j = 0; j < m; ++j) halfedges[j] = array[j];\n\t    }\n\t  }\n\t}\n\t\n\tfunction clipCells(x0, y0, x1, y1) {\n\t  var nCells = cells.length,\n\t      iCell,\n\t      cell,\n\t      site,\n\t      iHalfedge,\n\t      halfedges,\n\t      nHalfedges,\n\t      start,\n\t      startX,\n\t      startY,\n\t      end,\n\t      endX,\n\t      endY,\n\t      cover = true;\n\t\n\t  for (iCell = 0; iCell < nCells; ++iCell) {\n\t    if (cell = cells[iCell]) {\n\t      site = cell.site;\n\t      halfedges = cell.halfedges;\n\t      iHalfedge = halfedges.length;\n\t\n\t      // Remove any dangling clipped edges.\n\t      while (iHalfedge--) {\n\t        if (!edges[halfedges[iHalfedge]]) {\n\t          halfedges.splice(iHalfedge, 1);\n\t        }\n\t      }\n\t\n\t      // Insert any border edges as necessary.\n\t      iHalfedge = 0, nHalfedges = halfedges.length;\n\t      while (iHalfedge < nHalfedges) {\n\t        end = cellHalfedgeEnd(cell, edges[halfedges[iHalfedge]]), endX = end[0], endY = end[1];\n\t        start = cellHalfedgeStart(cell, edges[halfedges[++iHalfedge % nHalfedges]]), startX = start[0], startY = start[1];\n\t        if (Math.abs(endX - startX) > epsilon$4 || Math.abs(endY - startY) > epsilon$4) {\n\t          halfedges.splice(iHalfedge, 0, edges.push(createBorderEdge(site, end,\n\t              Math.abs(endX - x0) < epsilon$4 && y1 - endY > epsilon$4 ? [x0, Math.abs(startX - x0) < epsilon$4 ? startY : y1]\n\t              : Math.abs(endY - y1) < epsilon$4 && x1 - endX > epsilon$4 ? [Math.abs(startY - y1) < epsilon$4 ? startX : x1, y1]\n\t              : Math.abs(endX - x1) < epsilon$4 && endY - y0 > epsilon$4 ? [x1, Math.abs(startX - x1) < epsilon$4 ? startY : y0]\n\t              : Math.abs(endY - y0) < epsilon$4 && endX - x0 > epsilon$4 ? [Math.abs(startY - y0) < epsilon$4 ? startX : x0, y0]\n\t              : null)) - 1);\n\t          ++nHalfedges;\n\t        }\n\t      }\n\t\n\t      if (nHalfedges) cover = false;\n\t    }\n\t  }\n\t\n\t  // If there weren’t any edges, have the closest site cover the extent.\n\t  // It doesn’t matter which corner of the extent we measure!\n\t  if (cover) {\n\t    var dx, dy, d2, dc = Infinity;\n\t\n\t    for (iCell = 0, cover = null; iCell < nCells; ++iCell) {\n\t      if (cell = cells[iCell]) {\n\t        site = cell.site;\n\t        dx = site[0] - x0;\n\t        dy = site[1] - y0;\n\t        d2 = dx * dx + dy * dy;\n\t        if (d2 < dc) dc = d2, cover = cell;\n\t      }\n\t    }\n\t\n\t    if (cover) {\n\t      var v00 = [x0, y0], v01 = [x0, y1], v11 = [x1, y1], v10 = [x1, y0];\n\t      cover.halfedges.push(\n\t        edges.push(createBorderEdge(site = cover.site, v00, v01)) - 1,\n\t        edges.push(createBorderEdge(site, v01, v11)) - 1,\n\t        edges.push(createBorderEdge(site, v11, v10)) - 1,\n\t        edges.push(createBorderEdge(site, v10, v00)) - 1\n\t      );\n\t    }\n\t  }\n\t\n\t  // Lastly delete any cells with no edges; these were entirely clipped.\n\t  for (iCell = 0; iCell < nCells; ++iCell) {\n\t    if (cell = cells[iCell]) {\n\t      if (!cell.halfedges.length) {\n\t        delete cells[iCell];\n\t      }\n\t    }\n\t  }\n\t}\n\t\n\tvar circlePool = [];\n\t\n\tvar firstCircle;\n\t\n\tfunction Circle() {\n\t  RedBlackNode(this);\n\t  this.x =\n\t  this.y =\n\t  this.arc =\n\t  this.site =\n\t  this.cy = null;\n\t}\n\t\n\tfunction attachCircle(arc) {\n\t  var lArc = arc.P,\n\t      rArc = arc.N;\n\t\n\t  if (!lArc || !rArc) return;\n\t\n\t  var lSite = lArc.site,\n\t      cSite = arc.site,\n\t      rSite = rArc.site;\n\t\n\t  if (lSite === rSite) return;\n\t\n\t  var bx = cSite[0],\n\t      by = cSite[1],\n\t      ax = lSite[0] - bx,\n\t      ay = lSite[1] - by,\n\t      cx = rSite[0] - bx,\n\t      cy = rSite[1] - by;\n\t\n\t  var d = 2 * (ax * cy - ay * cx);\n\t  if (d >= -epsilon2$2) return;\n\t\n\t  var ha = ax * ax + ay * ay,\n\t      hc = cx * cx + cy * cy,\n\t      x = (cy * ha - ay * hc) / d,\n\t      y = (ax * hc - cx * ha) / d;\n\t\n\t  var circle = circlePool.pop() || new Circle;\n\t  circle.arc = arc;\n\t  circle.site = cSite;\n\t  circle.x = x + bx;\n\t  circle.y = (circle.cy = y + by) + Math.sqrt(x * x + y * y); // y bottom\n\t\n\t  arc.circle = circle;\n\t\n\t  var before = null,\n\t      node = circles._;\n\t\n\t  while (node) {\n\t    if (circle.y < node.y || (circle.y === node.y && circle.x <= node.x)) {\n\t      if (node.L) node = node.L;\n\t      else { before = node.P; break; }\n\t    } else {\n\t      if (node.R) node = node.R;\n\t      else { before = node; break; }\n\t    }\n\t  }\n\t\n\t  circles.insert(before, circle);\n\t  if (!before) firstCircle = circle;\n\t}\n\t\n\tfunction detachCircle(arc) {\n\t  var circle = arc.circle;\n\t  if (circle) {\n\t    if (!circle.P) firstCircle = circle.N;\n\t    circles.remove(circle);\n\t    circlePool.push(circle);\n\t    RedBlackNode(circle);\n\t    arc.circle = null;\n\t  }\n\t}\n\t\n\tvar beachPool = [];\n\t\n\tfunction Beach() {\n\t  RedBlackNode(this);\n\t  this.edge =\n\t  this.site =\n\t  this.circle = null;\n\t}\n\t\n\tfunction createBeach(site) {\n\t  var beach = beachPool.pop() || new Beach;\n\t  beach.site = site;\n\t  return beach;\n\t}\n\t\n\tfunction detachBeach(beach) {\n\t  detachCircle(beach);\n\t  beaches.remove(beach);\n\t  beachPool.push(beach);\n\t  RedBlackNode(beach);\n\t}\n\t\n\tfunction removeBeach(beach) {\n\t  var circle = beach.circle,\n\t      x = circle.x,\n\t      y = circle.cy,\n\t      vertex = [x, y],\n\t      previous = beach.P,\n\t      next = beach.N,\n\t      disappearing = [beach];\n\t\n\t  detachBeach(beach);\n\t\n\t  var lArc = previous;\n\t  while (lArc.circle\n\t      && Math.abs(x - lArc.circle.x) < epsilon$4\n\t      && Math.abs(y - lArc.circle.cy) < epsilon$4) {\n\t    previous = lArc.P;\n\t    disappearing.unshift(lArc);\n\t    detachBeach(lArc);\n\t    lArc = previous;\n\t  }\n\t\n\t  disappearing.unshift(lArc);\n\t  detachCircle(lArc);\n\t\n\t  var rArc = next;\n\t  while (rArc.circle\n\t      && Math.abs(x - rArc.circle.x) < epsilon$4\n\t      && Math.abs(y - rArc.circle.cy) < epsilon$4) {\n\t    next = rArc.N;\n\t    disappearing.push(rArc);\n\t    detachBeach(rArc);\n\t    rArc = next;\n\t  }\n\t\n\t  disappearing.push(rArc);\n\t  detachCircle(rArc);\n\t\n\t  var nArcs = disappearing.length,\n\t      iArc;\n\t  for (iArc = 1; iArc < nArcs; ++iArc) {\n\t    rArc = disappearing[iArc];\n\t    lArc = disappearing[iArc - 1];\n\t    setEdgeEnd(rArc.edge, lArc.site, rArc.site, vertex);\n\t  }\n\t\n\t  lArc = disappearing[0];\n\t  rArc = disappearing[nArcs - 1];\n\t  rArc.edge = createEdge(lArc.site, rArc.site, null, vertex);\n\t\n\t  attachCircle(lArc);\n\t  attachCircle(rArc);\n\t}\n\t\n\tfunction addBeach(site) {\n\t  var x = site[0],\n\t      directrix = site[1],\n\t      lArc,\n\t      rArc,\n\t      dxl,\n\t      dxr,\n\t      node = beaches._;\n\t\n\t  while (node) {\n\t    dxl = leftBreakPoint(node, directrix) - x;\n\t    if (dxl > epsilon$4) node = node.L; else {\n\t      dxr = x - rightBreakPoint(node, directrix);\n\t      if (dxr > epsilon$4) {\n\t        if (!node.R) {\n\t          lArc = node;\n\t          break;\n\t        }\n\t        node = node.R;\n\t      } else {\n\t        if (dxl > -epsilon$4) {\n\t          lArc = node.P;\n\t          rArc = node;\n\t        } else if (dxr > -epsilon$4) {\n\t          lArc = node;\n\t          rArc = node.N;\n\t        } else {\n\t          lArc = rArc = node;\n\t        }\n\t        break;\n\t      }\n\t    }\n\t  }\n\t\n\t  createCell(site);\n\t  var newArc = createBeach(site);\n\t  beaches.insert(lArc, newArc);\n\t\n\t  if (!lArc && !rArc) return;\n\t\n\t  if (lArc === rArc) {\n\t    detachCircle(lArc);\n\t    rArc = createBeach(lArc.site);\n\t    beaches.insert(newArc, rArc);\n\t    newArc.edge = rArc.edge = createEdge(lArc.site, newArc.site);\n\t    attachCircle(lArc);\n\t    attachCircle(rArc);\n\t    return;\n\t  }\n\t\n\t  if (!rArc) { // && lArc\n\t    newArc.edge = createEdge(lArc.site, newArc.site);\n\t    return;\n\t  }\n\t\n\t  // else lArc !== rArc\n\t  detachCircle(lArc);\n\t  detachCircle(rArc);\n\t\n\t  var lSite = lArc.site,\n\t      ax = lSite[0],\n\t      ay = lSite[1],\n\t      bx = site[0] - ax,\n\t      by = site[1] - ay,\n\t      rSite = rArc.site,\n\t      cx = rSite[0] - ax,\n\t      cy = rSite[1] - ay,\n\t      d = 2 * (bx * cy - by * cx),\n\t      hb = bx * bx + by * by,\n\t      hc = cx * cx + cy * cy,\n\t      vertex = [(cy * hb - by * hc) / d + ax, (bx * hc - cx * hb) / d + ay];\n\t\n\t  setEdgeEnd(rArc.edge, lSite, rSite, vertex);\n\t  newArc.edge = createEdge(lSite, site, null, vertex);\n\t  rArc.edge = createEdge(site, rSite, null, vertex);\n\t  attachCircle(lArc);\n\t  attachCircle(rArc);\n\t}\n\t\n\tfunction leftBreakPoint(arc, directrix) {\n\t  var site = arc.site,\n\t      rfocx = site[0],\n\t      rfocy = site[1],\n\t      pby2 = rfocy - directrix;\n\t\n\t  if (!pby2) return rfocx;\n\t\n\t  var lArc = arc.P;\n\t  if (!lArc) return -Infinity;\n\t\n\t  site = lArc.site;\n\t  var lfocx = site[0],\n\t      lfocy = site[1],\n\t      plby2 = lfocy - directrix;\n\t\n\t  if (!plby2) return lfocx;\n\t\n\t  var hl = lfocx - rfocx,\n\t      aby2 = 1 / pby2 - 1 / plby2,\n\t      b = hl / plby2;\n\t\n\t  if (aby2) return (-b + Math.sqrt(b * b - 2 * aby2 * (hl * hl / (-2 * plby2) - lfocy + plby2 / 2 + rfocy - pby2 / 2))) / aby2 + rfocx;\n\t\n\t  return (rfocx + lfocx) / 2;\n\t}\n\t\n\tfunction rightBreakPoint(arc, directrix) {\n\t  var rArc = arc.N;\n\t  if (rArc) return leftBreakPoint(rArc, directrix);\n\t  var site = arc.site;\n\t  return site[1] === directrix ? site[0] : Infinity;\n\t}\n\t\n\tvar epsilon$4 = 1e-6;\n\tvar epsilon2$2 = 1e-12;\n\tvar beaches;\n\tvar cells;\n\tvar circles;\n\tvar edges;\n\t\n\tfunction triangleArea(a, b, c) {\n\t  return (a[0] - c[0]) * (b[1] - a[1]) - (a[0] - b[0]) * (c[1] - a[1]);\n\t}\n\t\n\tfunction lexicographic(a, b) {\n\t  return b[1] - a[1]\n\t      || b[0] - a[0];\n\t}\n\t\n\tfunction Diagram(sites, extent) {\n\t  var site = sites.sort(lexicographic).pop(),\n\t      x,\n\t      y,\n\t      circle;\n\t\n\t  edges = [];\n\t  cells = new Array(sites.length);\n\t  beaches = new RedBlackTree;\n\t  circles = new RedBlackTree;\n\t\n\t  while (true) {\n\t    circle = firstCircle;\n\t    if (site && (!circle || site[1] < circle.y || (site[1] === circle.y && site[0] < circle.x))) {\n\t      if (site[0] !== x || site[1] !== y) {\n\t        addBeach(site);\n\t        x = site[0], y = site[1];\n\t      }\n\t      site = sites.pop();\n\t    } else if (circle) {\n\t      removeBeach(circle.arc);\n\t    } else {\n\t      break;\n\t    }\n\t  }\n\t\n\t  sortCellHalfedges();\n\t\n\t  if (extent) {\n\t    var x0 = +extent[0][0],\n\t        y0 = +extent[0][1],\n\t        x1 = +extent[1][0],\n\t        y1 = +extent[1][1];\n\t    clipEdges(x0, y0, x1, y1);\n\t    clipCells(x0, y0, x1, y1);\n\t  }\n\t\n\t  this.edges = edges;\n\t  this.cells = cells;\n\t\n\t  beaches =\n\t  circles =\n\t  edges =\n\t  cells = null;\n\t}\n\t\n\tDiagram.prototype = {\n\t  constructor: Diagram,\n\t\n\t  polygons: function() {\n\t    var edges = this.edges;\n\t\n\t    return this.cells.map(function(cell) {\n\t      var polygon = cell.halfedges.map(function(i) { return cellHalfedgeStart(cell, edges[i]); });\n\t      polygon.data = cell.site.data;\n\t      return polygon;\n\t    });\n\t  },\n\t\n\t  triangles: function() {\n\t    var triangles = [],\n\t        edges = this.edges;\n\t\n\t    this.cells.forEach(function(cell, i) {\n\t      if (!(m = (halfedges = cell.halfedges).length)) return;\n\t      var site = cell.site,\n\t          halfedges,\n\t          j = -1,\n\t          m,\n\t          s0,\n\t          e1 = edges[halfedges[m - 1]],\n\t          s1 = e1.left === site ? e1.right : e1.left;\n\t\n\t      while (++j < m) {\n\t        s0 = s1;\n\t        e1 = edges[halfedges[j]];\n\t        s1 = e1.left === site ? e1.right : e1.left;\n\t        if (s0 && s1 && i < s0.index && i < s1.index && triangleArea(site, s0, s1) < 0) {\n\t          triangles.push([site.data, s0.data, s1.data]);\n\t        }\n\t      }\n\t    });\n\t\n\t    return triangles;\n\t  },\n\t\n\t  links: function() {\n\t    return this.edges.filter(function(edge) {\n\t      return edge.right;\n\t    }).map(function(edge) {\n\t      return {\n\t        source: edge.left.data,\n\t        target: edge.right.data\n\t      };\n\t    });\n\t  },\n\t\n\t  find: function(x, y, radius) {\n\t    var that = this, i0, i1 = that._found || 0, n = that.cells.length, cell;\n\t\n\t    // Use the previously-found cell, or start with an arbitrary one.\n\t    while (!(cell = that.cells[i1])) if (++i1 >= n) return null;\n\t    var dx = x - cell.site[0], dy = y - cell.site[1], d2 = dx * dx + dy * dy;\n\t\n\t    // Traverse the half-edges to find a closer cell, if any.\n\t    do {\n\t      cell = that.cells[i0 = i1], i1 = null;\n\t      cell.halfedges.forEach(function(e) {\n\t        var edge = that.edges[e], v = edge.left;\n\t        if ((v === cell.site || !v) && !(v = edge.right)) return;\n\t        var vx = x - v[0], vy = y - v[1], v2 = vx * vx + vy * vy;\n\t        if (v2 < d2) d2 = v2, i1 = v.index;\n\t      });\n\t    } while (i1 !== null);\n\t\n\t    that._found = i0;\n\t\n\t    return radius == null || d2 <= radius * radius ? cell.site : null;\n\t  }\n\t};\n\t\n\tvar voronoi = function() {\n\t  var x$$1 = x$4,\n\t      y$$1 = y$4,\n\t      extent = null;\n\t\n\t  function voronoi(data) {\n\t    return new Diagram(data.map(function(d, i) {\n\t      var s = [Math.round(x$$1(d, i, data) / epsilon$4) * epsilon$4, Math.round(y$$1(d, i, data) / epsilon$4) * epsilon$4];\n\t      s.index = i;\n\t      s.data = d;\n\t      return s;\n\t    }), extent);\n\t  }\n\t\n\t  voronoi.polygons = function(data) {\n\t    return voronoi(data).polygons();\n\t  };\n\t\n\t  voronoi.links = function(data) {\n\t    return voronoi(data).links();\n\t  };\n\t\n\t  voronoi.triangles = function(data) {\n\t    return voronoi(data).triangles();\n\t  };\n\t\n\t  voronoi.x = function(_) {\n\t    return arguments.length ? (x$$1 = typeof _ === \"function\" ? _ : constant$11(+_), voronoi) : x$$1;\n\t  };\n\t\n\t  voronoi.y = function(_) {\n\t    return arguments.length ? (y$$1 = typeof _ === \"function\" ? _ : constant$11(+_), voronoi) : y$$1;\n\t  };\n\t\n\t  voronoi.extent = function(_) {\n\t    return arguments.length ? (extent = _ == null ? null : [[+_[0][0], +_[0][1]], [+_[1][0], +_[1][1]]], voronoi) : extent && [[extent[0][0], extent[0][1]], [extent[1][0], extent[1][1]]];\n\t  };\n\t\n\t  voronoi.size = function(_) {\n\t    return arguments.length ? (extent = _ == null ? null : [[0, 0], [+_[0], +_[1]]], voronoi) : extent && [extent[1][0] - extent[0][0], extent[1][1] - extent[0][1]];\n\t  };\n\t\n\t  return voronoi;\n\t};\n\t\n\tvar constant$12 = function(x) {\n\t  return function() {\n\t    return x;\n\t  };\n\t};\n\t\n\tfunction ZoomEvent(target, type, transform) {\n\t  this.target = target;\n\t  this.type = type;\n\t  this.transform = transform;\n\t}\n\t\n\tfunction Transform(k, x, y) {\n\t  this.k = k;\n\t  this.x = x;\n\t  this.y = y;\n\t}\n\t\n\tTransform.prototype = {\n\t  constructor: Transform,\n\t  scale: function(k) {\n\t    return k === 1 ? this : new Transform(this.k * k, this.x, this.y);\n\t  },\n\t  translate: function(x, y) {\n\t    return x === 0 & y === 0 ? this : new Transform(this.k, this.x + this.k * x, this.y + this.k * y);\n\t  },\n\t  apply: function(point) {\n\t    return [point[0] * this.k + this.x, point[1] * this.k + this.y];\n\t  },\n\t  applyX: function(x) {\n\t    return x * this.k + this.x;\n\t  },\n\t  applyY: function(y) {\n\t    return y * this.k + this.y;\n\t  },\n\t  invert: function(location) {\n\t    return [(location[0] - this.x) / this.k, (location[1] - this.y) / this.k];\n\t  },\n\t  invertX: function(x) {\n\t    return (x - this.x) / this.k;\n\t  },\n\t  invertY: function(y) {\n\t    return (y - this.y) / this.k;\n\t  },\n\t  rescaleX: function(x) {\n\t    return x.copy().domain(x.range().map(this.invertX, this).map(x.invert, x));\n\t  },\n\t  rescaleY: function(y) {\n\t    return y.copy().domain(y.range().map(this.invertY, this).map(y.invert, y));\n\t  },\n\t  toString: function() {\n\t    return \"translate(\" + this.x + \",\" + this.y + \") scale(\" + this.k + \")\";\n\t  }\n\t};\n\t\n\tvar identity$8 = new Transform(1, 0, 0);\n\t\n\ttransform$1.prototype = Transform.prototype;\n\t\n\tfunction transform$1(node) {\n\t  return node.__zoom || identity$8;\n\t}\n\t\n\tfunction nopropagation$2() {\n\t  exports.event.stopImmediatePropagation();\n\t}\n\t\n\tvar noevent$2 = function() {\n\t  exports.event.preventDefault();\n\t  exports.event.stopImmediatePropagation();\n\t};\n\t\n\t// Ignore right-click, since that should open the context menu.\n\tfunction defaultFilter$2() {\n\t  return !exports.event.button;\n\t}\n\t\n\tfunction defaultExtent$1() {\n\t  var e = this, w, h;\n\t  if (e instanceof SVGElement) {\n\t    e = e.ownerSVGElement || e;\n\t    w = e.width.baseVal.value;\n\t    h = e.height.baseVal.value;\n\t  } else {\n\t    w = e.clientWidth;\n\t    h = e.clientHeight;\n\t  }\n\t  return [[0, 0], [w, h]];\n\t}\n\t\n\tfunction defaultTransform() {\n\t  return this.__zoom || identity$8;\n\t}\n\t\n\tfunction defaultWheelDelta() {\n\t  return -exports.event.deltaY * (exports.event.deltaMode ? 120 : 1) / 500;\n\t}\n\t\n\tfunction defaultTouchable$1() {\n\t  return \"ontouchstart\" in this;\n\t}\n\t\n\tvar zoom = function() {\n\t  var filter = defaultFilter$2,\n\t      extent = defaultExtent$1,\n\t      wheelDelta = defaultWheelDelta,\n\t      touchable = defaultTouchable$1,\n\t      k0 = 0,\n\t      k1 = Infinity,\n\t      x0 = -k1,\n\t      x1 = k1,\n\t      y0 = x0,\n\t      y1 = x1,\n\t      duration = 250,\n\t      interpolate = interpolateZoom,\n\t      gestures = [],\n\t      listeners = dispatch(\"start\", \"zoom\", \"end\"),\n\t      touchstarting,\n\t      touchending,\n\t      touchDelay = 500,\n\t      wheelDelay = 150,\n\t      clickDistance2 = 0;\n\t\n\t  function zoom(selection) {\n\t    selection\n\t        .property(\"__zoom\", defaultTransform)\n\t        .on(\"wheel.zoom\", wheeled)\n\t        .on(\"mousedown.zoom\", mousedowned)\n\t        .on(\"dblclick.zoom\", dblclicked)\n\t      .filter(touchable)\n\t        .on(\"touchstart.zoom\", touchstarted)\n\t        .on(\"touchmove.zoom\", touchmoved)\n\t        .on(\"touchend.zoom touchcancel.zoom\", touchended)\n\t        .style(\"touch-action\", \"none\")\n\t        .style(\"-webkit-tap-highlight-color\", \"rgba(0,0,0,0)\");\n\t  }\n\t\n\t  zoom.transform = function(collection, transform$$1) {\n\t    var selection = collection.selection ? collection.selection() : collection;\n\t    selection.property(\"__zoom\", defaultTransform);\n\t    if (collection !== selection) {\n\t      schedule(collection, transform$$1);\n\t    } else {\n\t      selection.interrupt().each(function() {\n\t        gesture(this, arguments)\n\t            .start()\n\t            .zoom(null, typeof transform$$1 === \"function\" ? transform$$1.apply(this, arguments) : transform$$1)\n\t            .end();\n\t      });\n\t    }\n\t  };\n\t\n\t  zoom.scaleBy = function(selection, k) {\n\t    zoom.scaleTo(selection, function() {\n\t      var k0 = this.__zoom.k,\n\t          k1 = typeof k === \"function\" ? k.apply(this, arguments) : k;\n\t      return k0 * k1;\n\t    });\n\t  };\n\t\n\t  zoom.scaleTo = function(selection, k) {\n\t    zoom.transform(selection, function() {\n\t      var e = extent.apply(this, arguments),\n\t          t0 = this.__zoom,\n\t          p0 = centroid(e),\n\t          p1 = t0.invert(p0),\n\t          k1 = typeof k === \"function\" ? k.apply(this, arguments) : k;\n\t      return constrain(translate(scale(t0, k1), p0, p1), e);\n\t    });\n\t  };\n\t\n\t  zoom.translateBy = function(selection, x, y) {\n\t    zoom.transform(selection, function() {\n\t      return constrain(this.__zoom.translate(\n\t        typeof x === \"function\" ? x.apply(this, arguments) : x,\n\t        typeof y === \"function\" ? y.apply(this, arguments) : y\n\t      ), extent.apply(this, arguments));\n\t    });\n\t  };\n\t\n\t  zoom.translateTo = function(selection, x, y) {\n\t    zoom.transform(selection, function() {\n\t      var e = extent.apply(this, arguments),\n\t          t = this.__zoom,\n\t          p = centroid(e);\n\t      return constrain(identity$8.translate(p[0], p[1]).scale(t.k).translate(\n\t        typeof x === \"function\" ? -x.apply(this, arguments) : -x,\n\t        typeof y === \"function\" ? -y.apply(this, arguments) : -y\n\t      ), e);\n\t    });\n\t  };\n\t\n\t  function scale(transform$$1, k) {\n\t    k = Math.max(k0, Math.min(k1, k));\n\t    return k === transform$$1.k ? transform$$1 : new Transform(k, transform$$1.x, transform$$1.y);\n\t  }\n\t\n\t  function translate(transform$$1, p0, p1) {\n\t    var x = p0[0] - p1[0] * transform$$1.k, y = p0[1] - p1[1] * transform$$1.k;\n\t    return x === transform$$1.x && y === transform$$1.y ? transform$$1 : new Transform(transform$$1.k, x, y);\n\t  }\n\t\n\t  function constrain(transform$$1, extent) {\n\t    var dx0 = transform$$1.invertX(extent[0][0]) - x0,\n\t        dx1 = transform$$1.invertX(extent[1][0]) - x1,\n\t        dy0 = transform$$1.invertY(extent[0][1]) - y0,\n\t        dy1 = transform$$1.invertY(extent[1][1]) - y1;\n\t    return transform$$1.translate(\n\t      dx1 > dx0 ? (dx0 + dx1) / 2 : Math.min(0, dx0) || Math.max(0, dx1),\n\t      dy1 > dy0 ? (dy0 + dy1) / 2 : Math.min(0, dy0) || Math.max(0, dy1)\n\t    );\n\t  }\n\t\n\t  function centroid(extent) {\n\t    return [(+extent[0][0] + +extent[1][0]) / 2, (+extent[0][1] + +extent[1][1]) / 2];\n\t  }\n\t\n\t  function schedule(transition, transform$$1, center) {\n\t    transition\n\t        .on(\"start.zoom\", function() { gesture(this, arguments).start(); })\n\t        .on(\"interrupt.zoom end.zoom\", function() { gesture(this, arguments).end(); })\n\t        .tween(\"zoom\", function() {\n\t          var that = this,\n\t              args = arguments,\n\t              g = gesture(that, args),\n\t              e = extent.apply(that, args),\n\t              p = center || centroid(e),\n\t              w = Math.max(e[1][0] - e[0][0], e[1][1] - e[0][1]),\n\t              a = that.__zoom,\n\t              b = typeof transform$$1 === \"function\" ? transform$$1.apply(that, args) : transform$$1,\n\t              i = interpolate(a.invert(p).concat(w / a.k), b.invert(p).concat(w / b.k));\n\t          return function(t) {\n\t            if (t === 1) t = b; // Avoid rounding error on end.\n\t            else { var l = i(t), k = w / l[2]; t = new Transform(k, p[0] - l[0] * k, p[1] - l[1] * k); }\n\t            g.zoom(null, t);\n\t          };\n\t        });\n\t  }\n\t\n\t  function gesture(that, args) {\n\t    for (var i = 0, n = gestures.length, g; i < n; ++i) {\n\t      if ((g = gestures[i]).that === that) {\n\t        return g;\n\t      }\n\t    }\n\t    return new Gesture(that, args);\n\t  }\n\t\n\t  function Gesture(that, args) {\n\t    this.that = that;\n\t    this.args = args;\n\t    this.index = -1;\n\t    this.active = 0;\n\t    this.extent = extent.apply(that, args);\n\t  }\n\t\n\t  Gesture.prototype = {\n\t    start: function() {\n\t      if (++this.active === 1) {\n\t        this.index = gestures.push(this) - 1;\n\t        this.emit(\"start\");\n\t      }\n\t      return this;\n\t    },\n\t    zoom: function(key, transform$$1) {\n\t      if (this.mouse && key !== \"mouse\") this.mouse[1] = transform$$1.invert(this.mouse[0]);\n\t      if (this.touch0 && key !== \"touch\") this.touch0[1] = transform$$1.invert(this.touch0[0]);\n\t      if (this.touch1 && key !== \"touch\") this.touch1[1] = transform$$1.invert(this.touch1[0]);\n\t      this.that.__zoom = transform$$1;\n\t      this.emit(\"zoom\");\n\t      return this;\n\t    },\n\t    end: function() {\n\t      if (--this.active === 0) {\n\t        gestures.splice(this.index, 1);\n\t        this.index = -1;\n\t        this.emit(\"end\");\n\t      }\n\t      return this;\n\t    },\n\t    emit: function(type) {\n\t      customEvent(new ZoomEvent(zoom, type, this.that.__zoom), listeners.apply, listeners, [type, this.that, this.args]);\n\t    }\n\t  };\n\t\n\t  function wheeled() {\n\t    if (!filter.apply(this, arguments)) return;\n\t    var g = gesture(this, arguments),\n\t        t = this.__zoom,\n\t        k = Math.max(k0, Math.min(k1, t.k * Math.pow(2, wheelDelta.apply(this, arguments)))),\n\t        p = mouse(this);\n\t\n\t    // If the mouse is in the same location as before, reuse it.\n\t    // If there were recent wheel events, reset the wheel idle timeout.\n\t    if (g.wheel) {\n\t      if (g.mouse[0][0] !== p[0] || g.mouse[0][1] !== p[1]) {\n\t        g.mouse[1] = t.invert(g.mouse[0] = p);\n\t      }\n\t      clearTimeout(g.wheel);\n\t    }\n\t\n\t    // If this wheel event won’t trigger a transform change, ignore it.\n\t    else if (t.k === k) return;\n\t\n\t    // Otherwise, capture the mouse point and location at the start.\n\t    else {\n\t      g.mouse = [p, t.invert(p)];\n\t      interrupt(this);\n\t      g.start();\n\t    }\n\t\n\t    noevent$2();\n\t    g.wheel = setTimeout(wheelidled, wheelDelay);\n\t    g.zoom(\"mouse\", constrain(translate(scale(t, k), g.mouse[0], g.mouse[1]), g.extent));\n\t\n\t    function wheelidled() {\n\t      g.wheel = null;\n\t      g.end();\n\t    }\n\t  }\n\t\n\t  function mousedowned() {\n\t    if (touchending || !filter.apply(this, arguments)) return;\n\t    var g = gesture(this, arguments),\n\t        v = select(exports.event.view).on(\"mousemove.zoom\", mousemoved, true).on(\"mouseup.zoom\", mouseupped, true),\n\t        p = mouse(this),\n\t        x0 = exports.event.clientX,\n\t        y0 = exports.event.clientY;\n\t\n\t    dragDisable(exports.event.view);\n\t    nopropagation$2();\n\t    g.mouse = [p, this.__zoom.invert(p)];\n\t    interrupt(this);\n\t    g.start();\n\t\n\t    function mousemoved() {\n\t      noevent$2();\n\t      if (!g.moved) {\n\t        var dx = exports.event.clientX - x0, dy = exports.event.clientY - y0;\n\t        g.moved = dx * dx + dy * dy > clickDistance2;\n\t      }\n\t      g.zoom(\"mouse\", constrain(translate(g.that.__zoom, g.mouse[0] = mouse(g.that), g.mouse[1]), g.extent));\n\t    }\n\t\n\t    function mouseupped() {\n\t      v.on(\"mousemove.zoom mouseup.zoom\", null);\n\t      yesdrag(exports.event.view, g.moved);\n\t      noevent$2();\n\t      g.end();\n\t    }\n\t  }\n\t\n\t  function dblclicked() {\n\t    if (!filter.apply(this, arguments)) return;\n\t    var t0 = this.__zoom,\n\t        p0 = mouse(this),\n\t        p1 = t0.invert(p0),\n\t        k1 = t0.k * (exports.event.shiftKey ? 0.5 : 2),\n\t        t1 = constrain(translate(scale(t0, k1), p0, p1), extent.apply(this, arguments));\n\t\n\t    noevent$2();\n\t    if (duration > 0) select(this).transition().duration(duration).call(schedule, t1, p0);\n\t    else select(this).call(zoom.transform, t1);\n\t  }\n\t\n\t  function touchstarted() {\n\t    if (!filter.apply(this, arguments)) return;\n\t    var g = gesture(this, arguments),\n\t        touches = exports.event.changedTouches,\n\t        started,\n\t        n = touches.length, i, t, p;\n\t\n\t    nopropagation$2();\n\t    for (i = 0; i < n; ++i) {\n\t      t = touches[i], p = touch(this, touches, t.identifier);\n\t      p = [p, this.__zoom.invert(p), t.identifier];\n\t      if (!g.touch0) g.touch0 = p, started = true;\n\t      else if (!g.touch1) g.touch1 = p;\n\t    }\n\t\n\t    // If this is a dbltap, reroute to the (optional) dblclick.zoom handler.\n\t    if (touchstarting) {\n\t      touchstarting = clearTimeout(touchstarting);\n\t      if (!g.touch1) {\n\t        g.end();\n\t        p = select(this).on(\"dblclick.zoom\");\n\t        if (p) p.apply(this, arguments);\n\t        return;\n\t      }\n\t    }\n\t\n\t    if (started) {\n\t      touchstarting = setTimeout(function() { touchstarting = null; }, touchDelay);\n\t      interrupt(this);\n\t      g.start();\n\t    }\n\t  }\n\t\n\t  function touchmoved() {\n\t    var g = gesture(this, arguments),\n\t        touches = exports.event.changedTouches,\n\t        n = touches.length, i, t, p, l;\n\t\n\t    noevent$2();\n\t    if (touchstarting) touchstarting = clearTimeout(touchstarting);\n\t    for (i = 0; i < n; ++i) {\n\t      t = touches[i], p = touch(this, touches, t.identifier);\n\t      if (g.touch0 && g.touch0[2] === t.identifier) g.touch0[0] = p;\n\t      else if (g.touch1 && g.touch1[2] === t.identifier) g.touch1[0] = p;\n\t    }\n\t    t = g.that.__zoom;\n\t    if (g.touch1) {\n\t      var p0 = g.touch0[0], l0 = g.touch0[1],\n\t          p1 = g.touch1[0], l1 = g.touch1[1],\n\t          dp = (dp = p1[0] - p0[0]) * dp + (dp = p1[1] - p0[1]) * dp,\n\t          dl = (dl = l1[0] - l0[0]) * dl + (dl = l1[1] - l0[1]) * dl;\n\t      t = scale(t, Math.sqrt(dp / dl));\n\t      p = [(p0[0] + p1[0]) / 2, (p0[1] + p1[1]) / 2];\n\t      l = [(l0[0] + l1[0]) / 2, (l0[1] + l1[1]) / 2];\n\t    }\n\t    else if (g.touch0) p = g.touch0[0], l = g.touch0[1];\n\t    else return;\n\t    g.zoom(\"touch\", constrain(translate(t, p, l), g.extent));\n\t  }\n\t\n\t  function touchended() {\n\t    var g = gesture(this, arguments),\n\t        touches = exports.event.changedTouches,\n\t        n = touches.length, i, t;\n\t\n\t    nopropagation$2();\n\t    if (touchending) clearTimeout(touchending);\n\t    touchending = setTimeout(function() { touchending = null; }, touchDelay);\n\t    for (i = 0; i < n; ++i) {\n\t      t = touches[i];\n\t      if (g.touch0 && g.touch0[2] === t.identifier) delete g.touch0;\n\t      else if (g.touch1 && g.touch1[2] === t.identifier) delete g.touch1;\n\t    }\n\t    if (g.touch1 && !g.touch0) g.touch0 = g.touch1, delete g.touch1;\n\t    if (g.touch0) g.touch0[1] = this.__zoom.invert(g.touch0[0]);\n\t    else g.end();\n\t  }\n\t\n\t  zoom.wheelDelta = function(_) {\n\t    return arguments.length ? (wheelDelta = typeof _ === \"function\" ? _ : constant$12(+_), zoom) : wheelDelta;\n\t  };\n\t\n\t  zoom.filter = function(_) {\n\t    return arguments.length ? (filter = typeof _ === \"function\" ? _ : constant$12(!!_), zoom) : filter;\n\t  };\n\t\n\t  zoom.touchable = function(_) {\n\t    return arguments.length ? (touchable = typeof _ === \"function\" ? _ : constant$12(!!_), zoom) : touchable;\n\t  };\n\t\n\t  zoom.extent = function(_) {\n\t    return arguments.length ? (extent = typeof _ === \"function\" ? _ : constant$12([[+_[0][0], +_[0][1]], [+_[1][0], +_[1][1]]]), zoom) : extent;\n\t  };\n\t\n\t  zoom.scaleExtent = function(_) {\n\t    return arguments.length ? (k0 = +_[0], k1 = +_[1], zoom) : [k0, k1];\n\t  };\n\t\n\t  zoom.translateExtent = function(_) {\n\t    return arguments.length ? (x0 = +_[0][0], x1 = +_[1][0], y0 = +_[0][1], y1 = +_[1][1], zoom) : [[x0, y0], [x1, y1]];\n\t  };\n\t\n\t  zoom.duration = function(_) {\n\t    return arguments.length ? (duration = +_, zoom) : duration;\n\t  };\n\t\n\t  zoom.interpolate = function(_) {\n\t    return arguments.length ? (interpolate = _, zoom) : interpolate;\n\t  };\n\t\n\t  zoom.on = function() {\n\t    var value = listeners.on.apply(listeners, arguments);\n\t    return value === listeners ? zoom : value;\n\t  };\n\t\n\t  zoom.clickDistance = function(_) {\n\t    return arguments.length ? (clickDistance2 = (_ = +_) * _, zoom) : Math.sqrt(clickDistance2);\n\t  };\n\t\n\t  return zoom;\n\t};\n\t\n\texports.version = version;\n\texports.bisect = bisectRight;\n\texports.bisectRight = bisectRight;\n\texports.bisectLeft = bisectLeft;\n\texports.ascending = ascending;\n\texports.bisector = bisector;\n\texports.cross = cross;\n\texports.descending = descending;\n\texports.deviation = deviation;\n\texports.extent = extent;\n\texports.histogram = histogram;\n\texports.thresholdFreedmanDiaconis = freedmanDiaconis;\n\texports.thresholdScott = scott;\n\texports.thresholdSturges = sturges;\n\texports.max = max;\n\texports.mean = mean;\n\texports.median = median;\n\texports.merge = merge;\n\texports.min = min;\n\texports.pairs = pairs;\n\texports.permute = permute;\n\texports.quantile = threshold;\n\texports.range = sequence;\n\texports.scan = scan;\n\texports.shuffle = shuffle;\n\texports.sum = sum;\n\texports.ticks = ticks;\n\texports.tickIncrement = tickIncrement;\n\texports.tickStep = tickStep;\n\texports.transpose = transpose;\n\texports.variance = variance;\n\texports.zip = zip;\n\texports.axisTop = axisTop;\n\texports.axisRight = axisRight;\n\texports.axisBottom = axisBottom;\n\texports.axisLeft = axisLeft;\n\texports.brush = brush;\n\texports.brushX = brushX;\n\texports.brushY = brushY;\n\texports.brushSelection = brushSelection;\n\texports.chord = chord;\n\texports.ribbon = ribbon;\n\texports.nest = nest;\n\texports.set = set$2;\n\texports.map = map$1;\n\texports.keys = keys;\n\texports.values = values;\n\texports.entries = entries;\n\texports.color = color;\n\texports.rgb = rgb;\n\texports.hsl = hsl;\n\texports.lab = lab;\n\texports.hcl = hcl;\n\texports.cubehelix = cubehelix;\n\texports.dispatch = dispatch;\n\texports.drag = drag;\n\texports.dragDisable = dragDisable;\n\texports.dragEnable = yesdrag;\n\texports.dsvFormat = dsv;\n\texports.csvParse = csvParse;\n\texports.csvParseRows = csvParseRows;\n\texports.csvFormat = csvFormat;\n\texports.csvFormatRows = csvFormatRows;\n\texports.tsvParse = tsvParse;\n\texports.tsvParseRows = tsvParseRows;\n\texports.tsvFormat = tsvFormat;\n\texports.tsvFormatRows = tsvFormatRows;\n\texports.easeLinear = linear$1;\n\texports.easeQuad = quadInOut;\n\texports.easeQuadIn = quadIn;\n\texports.easeQuadOut = quadOut;\n\texports.easeQuadInOut = quadInOut;\n\texports.easeCubic = cubicInOut;\n\texports.easeCubicIn = cubicIn;\n\texports.easeCubicOut = cubicOut;\n\texports.easeCubicInOut = cubicInOut;\n\texports.easePoly = polyInOut;\n\texports.easePolyIn = polyIn;\n\texports.easePolyOut = polyOut;\n\texports.easePolyInOut = polyInOut;\n\texports.easeSin = sinInOut;\n\texports.easeSinIn = sinIn;\n\texports.easeSinOut = sinOut;\n\texports.easeSinInOut = sinInOut;\n\texports.easeExp = expInOut;\n\texports.easeExpIn = expIn;\n\texports.easeExpOut = expOut;\n\texports.easeExpInOut = expInOut;\n\texports.easeCircle = circleInOut;\n\texports.easeCircleIn = circleIn;\n\texports.easeCircleOut = circleOut;\n\texports.easeCircleInOut = circleInOut;\n\texports.easeBounce = bounceOut;\n\texports.easeBounceIn = bounceIn;\n\texports.easeBounceOut = bounceOut;\n\texports.easeBounceInOut = bounceInOut;\n\texports.easeBack = backInOut;\n\texports.easeBackIn = backIn;\n\texports.easeBackOut = backOut;\n\texports.easeBackInOut = backInOut;\n\texports.easeElastic = elasticOut;\n\texports.easeElasticIn = elasticIn;\n\texports.easeElasticOut = elasticOut;\n\texports.easeElasticInOut = elasticInOut;\n\texports.forceCenter = center$1;\n\texports.forceCollide = collide;\n\texports.forceLink = link;\n\texports.forceManyBody = manyBody;\n\texports.forceRadial = radial;\n\texports.forceSimulation = simulation;\n\texports.forceX = x$2;\n\texports.forceY = y$2;\n\texports.formatDefaultLocale = defaultLocale;\n\texports.formatLocale = formatLocale;\n\texports.formatSpecifier = formatSpecifier;\n\texports.precisionFixed = precisionFixed;\n\texports.precisionPrefix = precisionPrefix;\n\texports.precisionRound = precisionRound;\n\texports.geoArea = area;\n\texports.geoBounds = bounds;\n\texports.geoCentroid = centroid;\n\texports.geoCircle = circle;\n\texports.geoClipAntimeridian = clipAntimeridian;\n\texports.geoClipCircle = clipCircle;\n\texports.geoClipExtent = extent$1;\n\texports.geoClipRectangle = clipRectangle;\n\texports.geoContains = contains;\n\texports.geoDistance = distance;\n\texports.geoGraticule = graticule;\n\texports.geoGraticule10 = graticule10;\n\texports.geoInterpolate = interpolate$1;\n\texports.geoLength = length$1;\n\texports.geoPath = index$1;\n\texports.geoAlbers = albers;\n\texports.geoAlbersUsa = albersUsa;\n\texports.geoAzimuthalEqualArea = azimuthalEqualArea;\n\texports.geoAzimuthalEqualAreaRaw = azimuthalEqualAreaRaw;\n\texports.geoAzimuthalEquidistant = azimuthalEquidistant;\n\texports.geoAzimuthalEquidistantRaw = azimuthalEquidistantRaw;\n\texports.geoConicConformal = conicConformal;\n\texports.geoConicConformalRaw = conicConformalRaw;\n\texports.geoConicEqualArea = conicEqualArea;\n\texports.geoConicEqualAreaRaw = conicEqualAreaRaw;\n\texports.geoConicEquidistant = conicEquidistant;\n\texports.geoConicEquidistantRaw = conicEquidistantRaw;\n\texports.geoEquirectangular = equirectangular;\n\texports.geoEquirectangularRaw = equirectangularRaw;\n\texports.geoGnomonic = gnomonic;\n\texports.geoGnomonicRaw = gnomonicRaw;\n\texports.geoIdentity = identity$5;\n\texports.geoProjection = projection;\n\texports.geoProjectionMutator = projectionMutator;\n\texports.geoMercator = mercator;\n\texports.geoMercatorRaw = mercatorRaw;\n\texports.geoNaturalEarth1 = naturalEarth1;\n\texports.geoNaturalEarth1Raw = naturalEarth1Raw;\n\texports.geoOrthographic = orthographic;\n\texports.geoOrthographicRaw = orthographicRaw;\n\texports.geoStereographic = stereographic;\n\texports.geoStereographicRaw = stereographicRaw;\n\texports.geoTransverseMercator = transverseMercator;\n\texports.geoTransverseMercatorRaw = transverseMercatorRaw;\n\texports.geoRotation = rotation;\n\texports.geoStream = geoStream;\n\texports.geoTransform = transform;\n\texports.cluster = cluster;\n\texports.hierarchy = hierarchy;\n\texports.pack = index$2;\n\texports.packSiblings = siblings;\n\texports.packEnclose = enclose;\n\texports.partition = partition;\n\texports.stratify = stratify;\n\texports.tree = tree;\n\texports.treemap = index$3;\n\texports.treemapBinary = binary;\n\texports.treemapDice = treemapDice;\n\texports.treemapSlice = treemapSlice;\n\texports.treemapSliceDice = sliceDice;\n\texports.treemapSquarify = squarify;\n\texports.treemapResquarify = resquarify;\n\texports.interpolate = interpolateValue;\n\texports.interpolateArray = array$1;\n\texports.interpolateBasis = basis$1;\n\texports.interpolateBasisClosed = basisClosed;\n\texports.interpolateDate = date;\n\texports.interpolateNumber = reinterpolate;\n\texports.interpolateObject = object;\n\texports.interpolateRound = interpolateRound;\n\texports.interpolateString = interpolateString;\n\texports.interpolateTransformCss = interpolateTransformCss;\n\texports.interpolateTransformSvg = interpolateTransformSvg;\n\texports.interpolateZoom = interpolateZoom;\n\texports.interpolateRgb = interpolateRgb;\n\texports.interpolateRgbBasis = rgbBasis;\n\texports.interpolateRgbBasisClosed = rgbBasisClosed;\n\texports.interpolateHsl = hsl$2;\n\texports.interpolateHslLong = hslLong;\n\texports.interpolateLab = lab$1;\n\texports.interpolateHcl = hcl$2;\n\texports.interpolateHclLong = hclLong;\n\texports.interpolateCubehelix = cubehelix$2;\n\texports.interpolateCubehelixLong = cubehelixLong;\n\texports.quantize = quantize;\n\texports.path = path;\n\texports.polygonArea = area$1;\n\texports.polygonCentroid = centroid$1;\n\texports.polygonHull = hull;\n\texports.polygonContains = contains$1;\n\texports.polygonLength = length$2;\n\texports.quadtree = quadtree;\n\texports.queue = queue;\n\texports.randomUniform = uniform;\n\texports.randomNormal = normal;\n\texports.randomLogNormal = logNormal;\n\texports.randomBates = bates;\n\texports.randomIrwinHall = irwinHall;\n\texports.randomExponential = exponential$1;\n\texports.request = request;\n\texports.html = html;\n\texports.json = json;\n\texports.text = text;\n\texports.xml = xml;\n\texports.csv = csv$1;\n\texports.tsv = tsv$1;\n\texports.scaleBand = band;\n\texports.scalePoint = point$1;\n\texports.scaleIdentity = identity$6;\n\texports.scaleLinear = linear$2;\n\texports.scaleLog = log$1;\n\texports.scaleOrdinal = ordinal;\n\texports.scaleImplicit = implicit;\n\texports.scalePow = pow$1;\n\texports.scaleSqrt = sqrt$1;\n\texports.scaleQuantile = quantile$$1;\n\texports.scaleQuantize = quantize$1;\n\texports.scaleThreshold = threshold$1;\n\texports.scaleTime = time;\n\texports.scaleUtc = utcTime;\n\texports.schemeCategory10 = category10;\n\texports.schemeCategory20b = category20b;\n\texports.schemeCategory20c = category20c;\n\texports.schemeCategory20 = category20;\n\texports.interpolateCubehelixDefault = cubehelix$3;\n\texports.interpolateRainbow = rainbow$1;\n\texports.interpolateWarm = warm;\n\texports.interpolateCool = cool;\n\texports.interpolateViridis = viridis;\n\texports.interpolateMagma = magma;\n\texports.interpolateInferno = inferno;\n\texports.interpolatePlasma = plasma;\n\texports.scaleSequential = sequential;\n\texports.creator = creator;\n\texports.local = local$1;\n\texports.matcher = matcher$1;\n\texports.mouse = mouse;\n\texports.namespace = namespace;\n\texports.namespaces = namespaces;\n\texports.select = select;\n\texports.selectAll = selectAll;\n\texports.selection = selection;\n\texports.selector = selector;\n\texports.selectorAll = selectorAll;\n\texports.style = styleValue;\n\texports.touch = touch;\n\texports.touches = touches;\n\texports.window = defaultView;\n\texports.customEvent = customEvent;\n\texports.arc = arc;\n\texports.area = area$2;\n\texports.line = line;\n\texports.pie = pie;\n\texports.areaRadial = areaRadial;\n\texports.radialArea = areaRadial;\n\texports.lineRadial = lineRadial$1;\n\texports.radialLine = lineRadial$1;\n\texports.pointRadial = pointRadial;\n\texports.linkHorizontal = linkHorizontal;\n\texports.linkVertical = linkVertical;\n\texports.linkRadial = linkRadial;\n\texports.symbol = symbol;\n\texports.symbols = symbols;\n\texports.symbolCircle = circle$2;\n\texports.symbolCross = cross$2;\n\texports.symbolDiamond = diamond;\n\texports.symbolSquare = square;\n\texports.symbolStar = star;\n\texports.symbolTriangle = triangle;\n\texports.symbolWye = wye;\n\texports.curveBasisClosed = basisClosed$1;\n\texports.curveBasisOpen = basisOpen;\n\texports.curveBasis = basis$2;\n\texports.curveBundle = bundle;\n\texports.curveCardinalClosed = cardinalClosed;\n\texports.curveCardinalOpen = cardinalOpen;\n\texports.curveCardinal = cardinal;\n\texports.curveCatmullRomClosed = catmullRomClosed;\n\texports.curveCatmullRomOpen = catmullRomOpen;\n\texports.curveCatmullRom = catmullRom;\n\texports.curveLinearClosed = linearClosed;\n\texports.curveLinear = curveLinear;\n\texports.curveMonotoneX = monotoneX;\n\texports.curveMonotoneY = monotoneY;\n\texports.curveNatural = natural;\n\texports.curveStep = step;\n\texports.curveStepAfter = stepAfter;\n\texports.curveStepBefore = stepBefore;\n\texports.stack = stack;\n\texports.stackOffsetExpand = expand;\n\texports.stackOffsetDiverging = diverging;\n\texports.stackOffsetNone = none$1;\n\texports.stackOffsetSilhouette = silhouette;\n\texports.stackOffsetWiggle = wiggle;\n\texports.stackOrderAscending = ascending$2;\n\texports.stackOrderDescending = descending$2;\n\texports.stackOrderInsideOut = insideOut;\n\texports.stackOrderNone = none$2;\n\texports.stackOrderReverse = reverse;\n\texports.timeInterval = newInterval;\n\texports.timeMillisecond = millisecond;\n\texports.timeMilliseconds = milliseconds;\n\texports.utcMillisecond = millisecond;\n\texports.utcMilliseconds = milliseconds;\n\texports.timeSecond = second;\n\texports.timeSeconds = seconds;\n\texports.utcSecond = second;\n\texports.utcSeconds = seconds;\n\texports.timeMinute = minute;\n\texports.timeMinutes = minutes;\n\texports.timeHour = hour;\n\texports.timeHours = hours;\n\texports.timeDay = day;\n\texports.timeDays = days;\n\texports.timeWeek = sunday;\n\texports.timeWeeks = sundays;\n\texports.timeSunday = sunday;\n\texports.timeSundays = sundays;\n\texports.timeMonday = monday;\n\texports.timeMondays = mondays;\n\texports.timeTuesday = tuesday;\n\texports.timeTuesdays = tuesdays;\n\texports.timeWednesday = wednesday;\n\texports.timeWednesdays = wednesdays;\n\texports.timeThursday = thursday;\n\texports.timeThursdays = thursdays;\n\texports.timeFriday = friday;\n\texports.timeFridays = fridays;\n\texports.timeSaturday = saturday;\n\texports.timeSaturdays = saturdays;\n\texports.timeMonth = month;\n\texports.timeMonths = months;\n\texports.timeYear = year;\n\texports.timeYears = years;\n\texports.utcMinute = utcMinute;\n\texports.utcMinutes = utcMinutes;\n\texports.utcHour = utcHour;\n\texports.utcHours = utcHours;\n\texports.utcDay = utcDay;\n\texports.utcDays = utcDays;\n\texports.utcWeek = utcSunday;\n\texports.utcWeeks = utcSundays;\n\texports.utcSunday = utcSunday;\n\texports.utcSundays = utcSundays;\n\texports.utcMonday = utcMonday;\n\texports.utcMondays = utcMondays;\n\texports.utcTuesday = utcTuesday;\n\texports.utcTuesdays = utcTuesdays;\n\texports.utcWednesday = utcWednesday;\n\texports.utcWednesdays = utcWednesdays;\n\texports.utcThursday = utcThursday;\n\texports.utcThursdays = utcThursdays;\n\texports.utcFriday = utcFriday;\n\texports.utcFridays = utcFridays;\n\texports.utcSaturday = utcSaturday;\n\texports.utcSaturdays = utcSaturdays;\n\texports.utcMonth = utcMonth;\n\texports.utcMonths = utcMonths;\n\texports.utcYear = utcYear;\n\texports.utcYears = utcYears;\n\texports.timeFormatDefaultLocale = defaultLocale$1;\n\texports.timeFormatLocale = formatLocale$1;\n\texports.isoFormat = formatIso;\n\texports.isoParse = parseIso;\n\texports.now = now;\n\texports.timer = timer;\n\texports.timerFlush = timerFlush;\n\texports.timeout = timeout$1;\n\texports.interval = interval$1;\n\texports.transition = transition;\n\texports.active = active;\n\texports.interrupt = interrupt;\n\texports.voronoi = voronoi;\n\texports.zoom = zoom;\n\texports.zoomTransform = transform$1;\n\texports.zoomIdentity = identity$8;\n\t\n\tObject.defineProperty(exports, '__esModule', { value: true });\n\t\n\t})));\n\n\n/***/ }),\n/* 4 */\n/***/ (function(module, exports) {\n\n\t\"use strict\";\n\t\n\tObject.defineProperty(exports, \"__esModule\", {\n\t  value: true\n\t});\n\tvar mapdUI = exports.mapdUI = {\n\t  skyBlue: \"#22A7F0\"\n\t};\n\t\n\tvar mapdColors = exports.mapdColors = [\"#ea5545\", \"#bdcf32\", \"#b33dc6\", \"#ef9b20\", \"#87bc45\", \"#f46a9b\", \"#ace5c7\", \"#ede15b\", \"#836dc5\", \"#86d87f\", \"#27aeef\"];\n\t\n\tvar grey = exports.grey = [\"#F8F8FA\", \"#EFF2F5\", \"#D2D6DF\", \"#C3C6CF\", \"#ADB0B6\", \"#666A73\", \"#45494E\", \"#363A43\", \"#282C35\"];\n\t\n\tvar colors = exports.colors = {\n\t  mapdUI: mapdUI,\n\t  mapdColors: mapdColors,\n\t  grey: grey\n\t};\n\n/***/ }),\n/* 5 */\n/***/ (function(module, exports) {\n\n\t\"use strict\";\n\t\n\tObject.defineProperty(exports, \"__esModule\", {\n\t  value: true\n\t});\n\tvar keys = exports.keys = {\n\t  DATA: \"key\",\n\t  VALUE: \"value\",\n\t  ID: \"id\",\n\t  LABEL: \"label\",\n\t  GROUP: \"group\",\n\t  VALUES: \"values\",\n\t  SERIES: \"series\"\n\t};\n\n/***/ }),\n/* 6 */\n/***/ (function(module, exports, __webpack_require__) {\n\n\t\"use strict\";\n\t\n\tObject.defineProperty(exports, \"__esModule\", {\n\t  value: true\n\t});\n\texports.cloneData = cloneData;\n\texports.sortData = sortData;\n\texports.getUnique = getUnique;\n\texports.invertScale = invertScale;\n\texports.override = override;\n\texports.throttle = throttle;\n\texports.rebind = rebind;\n\texports.stringToType = stringToType;\n\t\n\tvar _constants = __webpack_require__(5);\n\t\n\tfunction _toConsumableArray(arr) { if (Array.isArray(arr)) { for (var i = 0, arr2 = Array(arr.length); i < arr.length; i++) { arr2[i] = arr[i]; } return arr2; } else { return Array.from(arr); } }\n\t\n\t/**\n\t * Clones the passed array of data\n\t * @param  {Object[]} dataToClone Data to clone\n\t * @return {Object[]}             Cloned data\n\t */\n\tfunction cloneData(_dataToClone) {\n\t  return JSON.parse(JSON.stringify(_dataToClone));\n\t}\n\t\n\tfunction sortData(_data, _keyType) {\n\t  var sortedData = cloneData(_data);\n\t  if (_keyType === \"time\") {\n\t    sortedData.forEach(function (d) {\n\t      d[_constants.keys.DATA] = new Date(d[_constants.keys.DATA]);\n\t    });\n\t    sortedData.sort(function (a, b) {\n\t      return a[_constants.keys.DATA].getTime() - b[_constants.keys.DATA].getTime();\n\t    });\n\t  } else if (_keyType === \"string\") {\n\t    sortedData.sort(function (a, b) {\n\t      return a[_constants.keys.DATA].localeCompare(b[_constants.keys.DATA], \"en\", { numeric: false });\n\t    });\n\t  } else {\n\t    sortedData.sort(function (a, b) {\n\t      return a[_constants.keys.DATA] - b[_constants.keys.DATA];\n\t    });\n\t  }\n\t  return sortedData;\n\t}\n\t\n\tfunction getUnique(arr) {\n\t  return [].concat(_toConsumableArray(new Set(arr)));\n\t}\n\t\n\tfunction invertScale(_scale, _mouseX, _keyType) {\n\t  if (_keyType === \"time\" || _keyType === \"number\") {\n\t    return _scale.invert(_mouseX);\n\t  } else {\n\t    var bandStep = _scale.step();\n\t    var index = Math.round(_mouseX / bandStep);\n\t    return _scale.domain()[index];\n\t  }\n\t}\n\t\n\tfunction override(a, b) {\n\t  var accum = {};\n\t  for (var x in a) {\n\t    if (a.hasOwnProperty(x)) {\n\t      accum[x] = x in b ? b[x] : a[x];\n\t    }\n\t  }\n\t  return accum;\n\t}\n\t\n\tfunction throttle(callback, limit) {\n\t  var wait = false;\n\t  var timer = null;\n\t  return function throttleFn() {\n\t    for (var _len = arguments.length, args = Array(_len), _key = 0; _key < _len; _key++) {\n\t      args[_key] = arguments[_key];\n\t    }\n\t\n\t    if (!wait) {\n\t      wait = true;\n\t      clearTimeout(timer);\n\t      timer = setTimeout(function () {\n\t        wait = false;\n\t        callback.apply(undefined, args);\n\t      }, limit);\n\t    }\n\t  };\n\t}\n\t\n\tfunction rebind(target) {\n\t  return function reapply() {\n\t    for (var _len2 = arguments.length, args = Array(_len2), _key2 = 0; _key2 < _len2; _key2++) {\n\t      args[_key2] = arguments[_key2];\n\t    }\n\t\n\t    target.on.apply(target, [args[0] + \".rebind\"].concat(_toConsumableArray(args.slice(1))));\n\t    return this;\n\t  };\n\t}\n\t\n\tfunction stringToType(str, type) {\n\t  var converted = str;\n\t  if (type === \"time\") {\n\t    converted = new Date(str);\n\t  } else if (type === \"number\") {\n\t    converted = Number(str);\n\t  }\n\t  return converted;\n\t}\n\n/***/ }),\n/* 7 */\n/***/ (function(module, exports, __webpack_require__) {\n\n\t\"use strict\";\n\t\n\tObject.defineProperty(exports, \"__esModule\", {\n\t  value: true\n\t});\n\texports.default = Scale;\n\t\n\tvar _d3Service = __webpack_require__(2);\n\t\n\tvar d3 = _interopRequireWildcard(_d3Service);\n\t\n\tvar _constants = __webpack_require__(5);\n\t\n\tvar _common = __webpack_require__(6);\n\t\n\tfunction _interopRequireWildcard(obj) { if (obj && obj.__esModule) { return obj; } else { var newObj = {}; if (obj != null) { for (var key in obj) { if (Object.prototype.hasOwnProperty.call(obj, key)) newObj[key] = obj[key]; } } newObj.default = obj; return newObj; } }\n\t\n\tfunction Scale() {\n\t\n\t  var config = {\n\t    margin: {\n\t      top: 60,\n\t      right: 30,\n\t      bottom: 40,\n\t      left: 70\n\t    },\n\t    height: null,\n\t    width: null,\n\t    keyType: null,\n\t    chartType: null,\n\t    colorSchema: null,\n\t    defaultColor: null,\n\t    xDomain: \"auto\",\n\t    yDomain: \"auto\",\n\t    y2Domain: \"auto\"\n\t  };\n\t\n\t  var data = {\n\t    dataByKey: null,\n\t    dataBySeries: null,\n\t    flatDataSorted: null,\n\t    groupKeys: null\n\t  };\n\t\n\t  var getID = function getID(d) {\n\t    return d[_constants.keys.ID];\n\t  };\n\t  var getKey = function getKey(d) {\n\t    return d[_constants.keys.DATA];\n\t  };\n\t  var getValue = function getValue(d) {\n\t    return d[_constants.keys.VALUE];\n\t  };\n\t\n\t  function buildXScale(_allKeys) {\n\t    var chartWidth = config.width - config.margin.left - config.margin.right;\n\t    var xScale = null;\n\t    var domain = null;\n\t\n\t    if (config.keyType === \"time\") {\n\t      xScale = d3.scaleTime();\n\t    } else if (config.keyType === \"number\") {\n\t      xScale = d3.scaleLinear();\n\t    } else {\n\t      xScale = config.chartType === \"bar\" || config.chartType === \"stackedBar\" ? d3.scaleBand() : d3.scalePoint();\n\t      xScale.padding(0);\n\t    }\n\t\n\t    if (config.xDomain === \"auto\") {\n\t      if (config.keyType === \"string\") {\n\t        domain = _allKeys;\n\t      } else {\n\t        domain = d3.extent(_allKeys);\n\t      }\n\t    } else {\n\t      domain = config.xDomain;\n\t    }\n\t\n\t    xScale.domain(domain).range([0, chartWidth]);\n\t\n\t    return xScale;\n\t  }\n\t\n\t  function buildYScale(_extent) {\n\t    var chartHeight = config.height - config.margin.top - config.margin.bottom;\n\t    var yScale = d3.scaleLinear().domain(_extent).rangeRound([chartHeight, 0]).nice();\n\t\n\t    return yScale;\n\t  }\n\t\n\t  function buildColorScale() {\n\t    var ids = data.dataBySeries.map(getID);\n\t    var colorScale = d3.scaleOrdinal().range(config.colorSchema.map(function (d) {\n\t      return d.value;\n\t    })).domain(config.colorSchema.map(function (d, i) {\n\t      return d.key || ids[i];\n\t    })).unknown(config.defaultColor);\n\t\n\t    return colorScale;\n\t  }\n\t\n\t  function splitByGroups() {\n\t    var groups = {};\n\t    data.dataBySeries.forEach(function (d) {\n\t      var key = d[_constants.keys.GROUP];\n\t      if (!groups[key]) {\n\t        groups[key] = {\n\t          allValues: [],\n\t          allKeys: []\n\t        };\n\t      }\n\t      groups[key].allValues = groups[key].allValues.concat(d[_constants.keys.VALUES].map(getValue));\n\t      groups[key].allKeys = groups[key].allKeys.concat(d[_constants.keys.VALUES].map(getKey));\n\t    });\n\t\n\t    return groups;\n\t  }\n\t\n\t  function getStackedScales() {\n\t    var allStackHeights = data.dataByKey.map(function (d) {\n\t      return d3.sum(d.series.map(function (dB) {\n\t        return dB.value;\n\t      }));\n\t    });\n\t\n\t    var allKeys = data.flatDataSorted.map(getKey);\n\t    var allUniqueKeys = (0, _common.getUnique)(allKeys);\n\t\n\t    var xScale = buildXScale(allUniqueKeys);\n\t    var colorScale = buildColorScale();\n\t\n\t    var yDomain = null;\n\t    if (config.yDomain === \"auto\") {\n\t      var valuesExtent = d3.extent(allStackHeights);\n\t      yDomain = [0, valuesExtent[1]];\n\t    } else {\n\t      yDomain = config.yDomain;\n\t    }\n\t    var yScale = buildYScale(yDomain);\n\t\n\t    return {\n\t      xScale: xScale,\n\t      yScale: yScale,\n\t      colorScale: colorScale\n\t    };\n\t  }\n\t\n\t  function getHorizontalScales() {\n\t    var groups = splitByGroups();\n\t\n\t    var hasSecondAxis = Object.keys(data.groupKeys).length > 1;\n\t\n\t    var groupAxis1 = groups[0];\n\t    var allUniqueKeys = groupAxis1.allKeys;\n\t\n\t    var xScale = buildXScale(allUniqueKeys);\n\t    var colorScale = buildColorScale();\n\t\n\t    var yDomain = null;\n\t    if (config.yDomain === \"auto\") {\n\t      yDomain = d3.extent(groupAxis1.allValues);\n\t    } else {\n\t      yDomain = config.yDomain;\n\t    }\n\t    var yScale = buildYScale(yDomain);\n\t\n\t    var y2Scale = null;\n\t    if (hasSecondAxis) {\n\t      var y2Domain = null;\n\t      if (config.y2Domain === \"auto\") {\n\t        var groupAxis2 = groups[1];\n\t        y2Domain = d3.extent(groupAxis2.allValues);\n\t      } else {\n\t        y2Domain = config.y2Domain;\n\t      }\n\t\n\t      y2Scale = yScale.copy().domain(y2Domain);\n\t    }\n\t\n\t    return {\n\t      hasSecondAxis: hasSecondAxis,\n\t      xScale: xScale,\n\t      yScale: yScale,\n\t      y2Scale: y2Scale,\n\t      colorScale: colorScale\n\t    };\n\t  }\n\t\n\t  function getScales() {\n\t    if (config.chartType === \"stackedBar\" || config.chartType === \"stackedArea\") {\n\t      return getStackedScales();\n\t    } else {\n\t      return getHorizontalScales();\n\t    }\n\t  }\n\t\n\t  function setConfig(_config) {\n\t    config = (0, _common.override)(config, _config);\n\t    return this;\n\t  }\n\t\n\t  function setData(_data) {\n\t    data = Object.assign({}, data, _data);\n\t    return this;\n\t  }\n\t\n\t  return {\n\t    setConfig: setConfig,\n\t    setData: setData,\n\t    getScales: getScales\n\t  };\n\t}\n\n/***/ }),\n/* 8 */\n/***/ (function(module, exports, __webpack_require__) {\n\n\t\"use strict\";\n\t\n\tObject.defineProperty(exports, \"__esModule\", {\n\t  value: true\n\t});\n\texports.default = Line;\n\t\n\tvar _d3Service = __webpack_require__(2);\n\t\n\tvar d3 = _interopRequireWildcard(_d3Service);\n\t\n\tvar _constants = __webpack_require__(5);\n\t\n\tvar _common = __webpack_require__(6);\n\t\n\tfunction _interopRequireWildcard(obj) { if (obj && obj.__esModule) { return obj; } else { var newObj = {}; if (obj != null) { for (var key in obj) { if (Object.prototype.hasOwnProperty.call(obj, key)) newObj[key] = obj[key]; } } newObj.default = obj; return newObj; } }\n\t\n\tfunction Line(_container) {\n\t\n\t  var config = {\n\t    margin: {\n\t      top: 60,\n\t      right: 30,\n\t      bottom: 40,\n\t      left: 70\n\t    },\n\t    width: 800,\n\t    height: 500,\n\t    chartType: null\n\t  };\n\t\n\t  var scales = {\n\t    colorScale: null,\n\t    xScale: null,\n\t    yScale: null,\n\t    y2Scale: null\n\t  };\n\t\n\t  var cache = {\n\t    container: _container,\n\t    svg: null,\n\t    chartHeight: null\n\t  };\n\t\n\t  var data = {\n\t    dataBySeries: null,\n\t    groupKeys: null,\n\t    stack: null,\n\t    stackData: null,\n\t    fileData: \"\"\n\t  };\n\t\n\t  var getColor = function getColor(d) {\n\t    return scales.colorScale(d[_constants.keys.ID]);\n\t  };\n\t\n\t  function buildSVG() {\n\t    cache.chartWidth = config.width - config.margin.left - config.margin.right;\n\t    cache.chartHeight = config.height - config.margin.top - config.margin.bottom;\n\t\n\t    if (!cache.svg) {\n\t      cache.svg = cache.container.append(\"g\").classed(\"mark-group\", true);\n\t    }\n\t  }\n\t\n\t  function drawLines() {\n\t    var seriesLine = d3.line().x(function (d) {\n\t      return scales.xScale(d[_constants.keys.DATA]);\n\t    }).y(function (d) {\n\t      return scales.yScale(d[_constants.keys.VALUE]);\n\t    });\n\t\n\t    var seriesLine2 = d3.line().x(function (d) {\n\t      return scales.xScale(d[_constants.keys.DATA]);\n\t    }).y(function (d) {\n\t      return scales.y2Scale(d[_constants.keys.VALUE]);\n\t    }).curve(d3.curveCatmullRom);\n\t\n\t    var lines = cache.svg.selectAll(\".mark\").data(data.dataBySeries);\n\t\n\t    lines.enter().append(\"path\").merge(lines).attr(\"class\", \"mark line\").classed(\"y2-line\", function (d) {\n\t      return d[_constants.keys.GROUP] > 0;\n\t    }).attr(\"d\", function (d) {\n\t      if (d[_constants.keys.GROUP] === 0) {\n\t        return seriesLine(d[_constants.keys.VALUES]);\n\t      } else {\n\t        return seriesLine2(d[_constants.keys.VALUES]);\n\t      }\n\t    }).style(\"stroke\", getColor).style(\"fill\", \"none\");\n\t\n\t    lines.exit().remove();\n\t  }\n\t\n\t  function drawAreas() {\n\t    var seriesArea = d3.area().x(function (d) {\n\t      return scales.xScale(d[_constants.keys.DATA]);\n\t    }).y0(function (d) {\n\t      return scales.yScale(d[_constants.keys.VALUE]);\n\t    }).y1(function () {\n\t      return cache.chartHeight;\n\t    });\n\t\n\t    var seriesArea2 = d3.area().x(function (d) {\n\t      return scales.xScale(d[_constants.keys.DATA]);\n\t    }).y0(function (d) {\n\t      return scales.y2Scale(d[_constants.keys.VALUE]);\n\t    }).y1(function () {\n\t      return cache.chartHeight;\n\t    }).curve(d3.curveCatmullRom);\n\t\n\t    var areas = cache.svg.selectAll(\".mark\").data(data.dataBySeries);\n\t\n\t    areas.enter().append(\"path\").merge(areas).attr(\"class\", \"mark area\").classed(\"y2-area\", function (d) {\n\t      return d[_constants.keys.GROUP] > 0;\n\t    }).attr(\"d\", function (d) {\n\t      if (d[_constants.keys.GROUP] === 0) {\n\t        return seriesArea(d[_constants.keys.VALUES]);\n\t      } else {\n\t        return seriesArea2(d[_constants.keys.VALUES]);\n\t      }\n\t    }).style(\"stroke\", getColor).style(\"fill\", getColor);\n\t\n\t    areas.exit().remove();\n\t  }\n\t\n\t  function drawStackedAreas() {\n\t    var seriesLine = d3.area().x(function (d) {\n\t      return scales.xScale(d.data[_constants.keys.DATA]);\n\t    }).y0(function (d) {\n\t      return scales.yScale(d[0]);\n\t    }).y1(function (d) {\n\t      return scales.yScale(d[1]);\n\t    });\n\t\n\t    var areas = cache.svg.selectAll(\".mark\").data(data.stack(data.stackData));\n\t\n\t    areas.enter().append(\"path\").merge(areas).attr(\"class\", \"mark stacked-area\").attr(\"d\", seriesLine).style(\"stroke\", \"none\").style(\"fill\", function (d) {\n\t      return scales.colorScale(d.key);\n\t    });\n\t\n\t    areas.exit().remove();\n\t  }\n\t\n\t  function drawMarks() {\n\t    buildSVG();\n\t\n\t    if (config.chartType === \"area\") {\n\t      drawAreas();\n\t    } else if (config.chartType === \"line\") {\n\t      drawLines();\n\t    } else if (config.chartType === \"stackedArea\") {\n\t      drawStackedAreas();\n\t    }\n\t  }\n\t\n\t  function setConfig(_config) {\n\t    config = (0, _common.override)(config, _config);\n\t    return this;\n\t  }\n\t\n\t  function setScales(_scales) {\n\t    scales = (0, _common.override)(scales, _scales);\n\t    return this;\n\t  }\n\t\n\t  function setData(_data) {\n\t    data = Object.assign({}, data, _data);\n\t    return this;\n\t  }\n\t\n\t  function loadData() {\n\t    console.log(\"load data\");\n\t    //console.log(`load: ${config.fileData}`)\n\t    return this;\n\t  }\n\t\n\t  return {\n\t    setConfig: setConfig,\n\t    setScales: setScales,\n\t    setData: setData,\n\t    drawMarks: drawMarks,\n\t    loadData: loadData\n\t  };\n\t}\n\n/***/ }),\n/* 9 */\n/***/ (function(module, exports, __webpack_require__) {\n\n\t\"use strict\";\n\t\n\tObject.defineProperty(exports, \"__esModule\", {\n\t  value: true\n\t});\n\texports.default = Bar;\n\t\n\tvar _constants = __webpack_require__(5);\n\t\n\tvar _common = __webpack_require__(6);\n\t\n\tfunction Bar(_container) {\n\t\n\t  var config = {\n\t    margin: {\n\t      top: 60,\n\t      right: 30,\n\t      bottom: 40,\n\t      left: 70\n\t    },\n\t    width: 800,\n\t    height: 500,\n\t    chartType: null\n\t  };\n\t\n\t  var scales = {\n\t    colorScale: null,\n\t    xScale: null,\n\t    yScale: null,\n\t    y2Scale: null\n\t  };\n\t\n\t  var cache = {\n\t    container: _container,\n\t    svg: null,\n\t    chartHeight: null\n\t  };\n\t\n\t  var data = {\n\t    dataBySeries: null,\n\t    groupKeys: null,\n\t    stack: null,\n\t    stackData: null\n\t  };\n\t\n\t  var getColor = function getColor(d) {\n\t    return scales.colorScale(d[_constants.keys.ID]);\n\t  };\n\t\n\t  function buildSVG() {\n\t    cache.chartWidth = config.width - config.margin.left - config.margin.right;\n\t    cache.chartHeight = config.height - config.margin.top - config.margin.bottom;\n\t\n\t    if (!cache.svg) {\n\t      cache.svg = cache.container.append(\"g\").classed(\"mark-group\", true);\n\t    }\n\t  }\n\t\n\t  function drawBars() {\n\t    var bars = cache.svg.selectAll(\".mark\").data(data.dataBySeries[0].values);\n\t\n\t    bars.enter().append(\"rect\").attr(\"class\", \"mark rect\").merge(bars).attr(\"x\", function (d) {\n\t      return scales.xScale(d[_constants.keys.DATA]);\n\t    }).attr(\"y\", function (d) {\n\t      return scales.yScale(d[_constants.keys.VALUE]);\n\t    }).attr(\"width\", function () {\n\t      return scales.xScale.bandwidth();\n\t    }).attr(\"height\", function (d) {\n\t      return cache.chartHeight - scales.yScale(d[_constants.keys.VALUE]);\n\t    }).style(\"stroke\", \"white\").style(\"fill\", getColor);\n\t\n\t    bars.exit().remove();\n\t  }\n\t\n\t  function drawStackedBars() {\n\t\n\t    var stackedBarGroups = cache.svg.selectAll(\".bar-group\").data(data.stack(data.stackData));\n\t\n\t    var stackedUpdate = stackedBarGroups.enter().append(\"g\").attr(\"class\", \"bar-group\").merge(stackedBarGroups).attr(\"fill\", function (d) {\n\t      return scales.colorScale(d.key);\n\t    }).attr(\"stroke\", \"white\");\n\t\n\t    stackedBarGroups.exit().remove();\n\t\n\t    var stackedBars = stackedUpdate.selectAll(\".mark\").data(function (d) {\n\t      return d;\n\t    });\n\t\n\t    stackedBars.enter().append(\"rect\").attr(\"class\", \"mark\").merge(stackedBars).attr(\"x\", function (d) {\n\t      return scales.xScale(d.data[_constants.keys.DATA]);\n\t    }).attr(\"y\", function (d) {\n\t      return scales.yScale(d[1]);\n\t    }).attr(\"height\", function (d) {\n\t      return scales.yScale(d[0]) - scales.yScale(d[1]);\n\t    }).attr(\"width\", scales.xScale.bandwidth());\n\t\n\t    stackedBars.exit().remove();\n\t  }\n\t\n\t  function drawMarks() {\n\t    buildSVG();\n\t\n\t    if (config.chartType === \"bar\") {\n\t      drawBars();\n\t    } else if (config.chartType === \"stackedBar\") {\n\t      drawStackedBars();\n\t    }\n\t  }\n\t\n\t  function setConfig(_config) {\n\t    config = (0, _common.override)(config, _config);\n\t    return this;\n\t  }\n\t\n\t  function setScales(_scales) {\n\t    scales = (0, _common.override)(scales, _scales);\n\t    return this;\n\t  }\n\t\n\t  function setData(_data) {\n\t    data = Object.assign({}, data, _data);\n\t    return this;\n\t  }\n\t\n\t  return {\n\t    setConfig: setConfig,\n\t    setScales: setScales,\n\t    setData: setData,\n\t    drawMarks: drawMarks\n\t  };\n\t}\n\n/***/ }),\n/* 10 */\n/***/ (function(module, exports, __webpack_require__) {\n\n\t\"use strict\";\n\t\n\tObject.defineProperty(exports, \"__esModule\", {\n\t  value: true\n\t});\n\texports.default = Sunburst;\n\t\n\tvar _d3Service = __webpack_require__(2);\n\t\n\tvar d3 = _interopRequireWildcard(_d3Service);\n\t\n\tvar _constants = __webpack_require__(5);\n\t\n\tvar _common = __webpack_require__(6);\n\t\n\tvar _scale = __webpack_require__(7);\n\t\n\tvar _scale2 = _interopRequireDefault(_scale);\n\t\n\tvar _axis = __webpack_require__(11);\n\t\n\tvar _axis2 = _interopRequireDefault(_axis);\n\t\n\tvar _tooltip = __webpack_require__(12);\n\t\n\tvar _tooltip2 = _interopRequireDefault(_tooltip);\n\t\n\tvar _legend = __webpack_require__(13);\n\t\n\tvar _legend2 = _interopRequireDefault(_legend);\n\t\n\tvar _brush = __webpack_require__(14);\n\t\n\tvar _brush2 = _interopRequireDefault(_brush);\n\t\n\tvar _hover = __webpack_require__(15);\n\t\n\tvar _hover2 = _interopRequireDefault(_hover);\n\t\n\tvar _binning = __webpack_require__(16);\n\t\n\tvar _binning2 = _interopRequireDefault(_binning);\n\t\n\tvar _domainEditor = __webpack_require__(18);\n\t\n\tvar _domainEditor2 = _interopRequireDefault(_domainEditor);\n\t\n\tvar _brushRangeEditor = __webpack_require__(19);\n\t\n\tvar _brushRangeEditor2 = _interopRequireDefault(_brushRangeEditor);\n\t\n\tvar _label = __webpack_require__(20);\n\t\n\tvar _label2 = _interopRequireDefault(_label);\n\t\n\tfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\t\n\tfunction _interopRequireWildcard(obj) { if (obj && obj.__esModule) { return obj; } else { var newObj = {}; if (obj != null) { for (var key in obj) { if (Object.prototype.hasOwnProperty.call(obj, key)) newObj[key] = obj[key]; } } newObj.default = obj; return newObj; } }\n\t\n\t//import DataManager from \"./data-manager\"\n\t\n\tfunction Sunburst(_container) {\n\t\n\t  var config = {\n\t    margin: {\n\t      top: 400,\n\t      right: 400,\n\t      bottom: 40,\n\t      left: 300\n\t    },\n\t    width: 800,\n\t    height: 800,\n\t    chartType: null\n\t  };\n\t\n\t  var scales = {\n\t    colorScale: null,\n\t    xScale: null,\n\t    yScale: null,\n\t    yScale2: null\n\t  };\n\t\n\t  var cache = {\n\t    container: _container,\n\t    svg: null,\n\t    chartHeight: null\n\t  };\n\t\n\t  var containers = {};\n\t\n\t  var data = {};\n\t\n\t  Object.assign(config, {\n\t    radius: Math.min(config.width, config.height) / 2\n\t  });\n\t\n\t  var b = {\n\t    w: 75,\n\t    h: 30,\n\t    s: 3,\n\t    t: 10\n\t  };\n\t\n\t  var colors = {\n\t    \"(MK)\": \"#5687d1\",\n\t    \"(JJ GO)\": \"#7b615c\",\n\t    \"(CJ GO)\": \"#de783b\",\n\t    \"(CHURN)\": \"#6ab975\",\n\t    \"(OR)\": \"#a173d1\",\n\t    \"(PP GO)\": \"#bbbbbb\",\n\t    \"(GG GO)\": \"#a7bb7c\",\n\t    \"(CJ IOS)\": \"#58bb66\"\n\t  };\n\t\n\t  var totalSize = 10;\n\t\n\t  var getColor = function getColor(d) {\n\t    return scales.colorScale(d[_constants.keys.ID]);\n\t  };\n\t\n\t  var partition = d3.partition().size([2 * Math.PI, config.radius * config.radius]);\n\t\n\t  var arc = d3.arc().startAngle(function (d) {\n\t    return d.x0;\n\t  }).endAngle(function (d) {\n\t    return d.x1;\n\t  }).innerRadius(function (d) {\n\t    return Math.sqrt(d.y0);\n\t  }).outerRadius(function (d) {\n\t    return Math.sqrt(d.y1);\n\t  });\n\t  buildSVG();\n\t\n\t  function buildSVG() {\n\t    var w = config.width === \"auto\" ? cache.container.clientWidth : config.width;\n\t    var h = config.height === \"auto\" ? cache.container.clientHeight : config.height;\n\t    cache.chartWidth = Math.max(w - config.margin.left - config.margin.right, 0);\n\t    cache.chartHeight = Math.max(h - config.margin.top - config.margin.bottom, 0);\n\t\n\t    var template = null;\n\t\n\t    if (!cache.svg) {\n\t      template = \"<div id=\\\"sunburst\\\">\\n        <div id=\\\"sequence\\\"></div>\\n        <div id=\\\"chart\\\">\\n          <div id=\\\"explanation\\\" style=\\\"visibility: hidden;\\\">\\n            <span id=\\\"percentage\\\"></span><br/>\\n            of visits begin with this sequence of pages\\n          </div>\\n        </div>\\n      </div>\\n      <div id=\\\"sidebar\\\">\\n        <input type=\\\"checkbox\\\" id=\\\"togglelegend\\\"> Legend<br/>\\n        <div id=\\\"legend\\\" style=\\\"visibility: hidden;\\\"></div>\\n      </div>\";\n\t\n\t      containers.base = d3.select(cache.container).html(template);\n\t\n\t      containers.vis = containers.base.select(\"#chart\").append(\"svg:svg\").attr(\"width\", config.width).attr(\"height\", config.height).append(\"svg:g\").attr(\"id\", \"container\").attr(\"transform\", \"translate(\" + config.width / 2 + \",\" + config.height / 2 + \")\");\n\t\n\t      var _h = parseInt(containers.base.select(\"#explanation\").style(\"height\"));\n\t      var _w = parseInt(containers.base.select(\"#explanation\").style(\"width\"));\n\t\n\t      containers.base.select(\"#explanation\").style(\"top\", config.height / 2 - _h / 2 + \"px\").style(\"left\", config.width / 2 - _w / 2 + \"px\");\n\t    }\n\t    return this;\n\t  }\n\t\n\t  function setConfig(_config) {\n\t    config = (0, _common.override)(config, _config);\n\t    return this;\n\t  }\n\t\n\t  function setScales(_scales) {\n\t    scales = (0, _common.override)(scales, _scales);\n\t    return this;\n\t  }\n\t\n\t  function setData(_data) {\n\t    data = Object.assign({}, data, _data);\n\t    render(data);\n\t    return this;\n\t  }\n\t\n\t  /**\n\t    Main function to draw and set up the visualization, once we have the data.\n\t    @param data: Parsed data\n\t   **/\n\t  function render(data) {\n\t\n\t    initializeBreadcrumbTrail();\n\t    drawLegend();\n\t\n\t    containers.base.select(\"#togglelegend\").on(\"click\", toggleLegend);\n\t\n\t    containers.vis.append(\"svg:circle\").attr(\"r\", config.radius).style(\"opacity\", 0);\n\t\n\t    var root = d3.hierarchy(data).sum(function (d) {\n\t      return d.size;\n\t    }).sort(function (a, b) {\n\t      return b.value - a.value;\n\t    });\n\t\n\t    var nodes = partition(root).descendants().filter(function (d) {\n\t      return d.x1 - d.x0 > 0.005; // 0.005 radians = 0.29 degrees\n\t    });\n\t\n\t    var path = containers.vis.data([data]).selectAll(\"path\").data(nodes).enter().append(\"svg:path\").attr(\"display\", function (d) {\n\t      return d.depth ? null : \"none\";\n\t    }).attr(\"d\", arc).attr(\"fill-rule\", \"evenodd\").style(\"fill\", function (d) {\n\t      return colors[d.data.name];\n\t    }).style(\"opacity\", 1).on(\"mouseover\", mouseover);\n\t\n\t    containers.base.select(\"#container\").on(\"mouseleave\", mouseleave);\n\t\n\t    totalSize = path.datum().value;\n\t  };\n\t\n\t  function initializeBreadcrumbTrail() {\n\t    var trail = containers.base.select(\"#sequence\").append(\"svg:svg\").attr(\"width\", config.width).attr(\"height\", 50).attr(\"id\", \"trail\");\n\t\n\t    trail.append(\"svg:text\").attr(\"id\", \"endlabel\").style(\"fill\", \"#000\");\n\t  }\n\t\n\t  function breadcrumbPoints(d, i) {\n\t    var points = [];\n\t    points.push(\"0,0\");\n\t    points.push(b.w + \",0\");\n\t    points.push(b.w + b.t + \",\" + b.h / 2);\n\t    points.push(b.w + \",\" + b.h);\n\t    points.push(\"0,\" + b.h);\n\t    if (i > 0) {\n\t      points.push(b.t + \",\" + b.h / 2);\n\t    }\n\t    return points.join(\" \");\n\t  }\n\t\n\t  // Update the breadcrumb trail to show the current sequence and percentage.\n\t  function updateBreadcrumbs(nodeArray, percentageString) {\n\t\n\t    // Data join; key function combines name and depth (= position in sequence).\n\t    var trail = d3.select(\"#trail\").selectAll(\"g\").data(nodeArray, function (d) {\n\t      return d.data.name + d.depth;\n\t    });\n\t\n\t    // Remove exiting nodes.\n\t    trail.exit().remove();\n\t\n\t    // Add breadcrumb and label for entering nodes.\n\t    var entering = trail.enter().append(\"svg:g\");\n\t\n\t    entering.append(\"svg:polygon\").attr(\"points\", breadcrumbPoints).style(\"fill\", function (d) {\n\t      return colors[d.data.name];\n\t    });\n\t\n\t    entering.append(\"svg:text\").attr(\"x\", (b.w + b.t) / 2).attr(\"y\", b.h / 2).attr(\"dy\", \"0.35em\").attr(\"text-anchor\", \"middle\").text(function (d) {\n\t      return d.data.name;\n\t    });\n\t\n\t    // Merge enter and update selections; set position for all nodes.\n\t    entering.merge(trail).attr(\"transform\", function (d, i) {\n\t      return \"translate(\" + i * (b.w + b.s) + \", 0)\";\n\t    });\n\t\n\t    // Now move and update the percentage at the end.\n\t    d3.select(\"#trail\").select(\"#endlabel\").attr(\"x\", (nodeArray.length + 0.5) * (b.w + b.s)).attr(\"y\", b.h / 2).attr(\"dy\", \"0.35em\").attr(\"text-anchor\", \"middle\").text(percentageString);\n\t\n\t    // Make the breadcrumb trail visible, if it's hidden.\n\t    d3.select(\"#trail\").style(\"visibility\", \"visible\");\n\t  }\n\t\n\t  function drawLegend() {\n\t\n\t    // Dimensions of legend item: width, height, spacing, radius of rounded rect.\n\t    var legend_item = {\n\t      w: 75, h: 30, s: 3, r: 3\n\t    };\n\t\n\t    var legend = containers.base.select(\"#legend\").append(\"svg:svg\").attr(\"width\", legend_item.w).attr(\"height\", d3.keys(colors).length * (legend_item.h + legend_item.s));\n\t\n\t    var g = legend.selectAll(\"g\").data(d3.entries(colors)).enter().append(\"svg:g\").attr(\"transform\", function (d, i) {\n\t      return \"translate(0,\" + i * (legend_item.h + legend_item.s) + \")\";\n\t    });\n\t\n\t    g.append(\"svg:rect\").attr(\"rx\", legend_item.r).attr(\"ry\", legend_item.r).attr(\"width\", legend_item.w).attr(\"height\", legend_item.h).style(\"fill\", function (d) {\n\t      return d.value;\n\t    });\n\t\n\t    g.append(\"svg:text\").attr(\"x\", legend_item.w / 2).attr(\"y\", legend_item.h / 2).attr(\"dy\", \"0.35em\").attr(\"text-anchor\", \"middle\").text(function (d) {\n\t      return d.key;\n\t    });\n\t  }\n\t\n\t  function toggleLegend() {\n\t    var legend = containers.base.select(\"#legend\");\n\t    if (legend.style(\"visibility\") === \"hidden\") {\n\t      legend.style(\"visibility\", \"visible\");\n\t    } else {\n\t      legend.style(\"visibility\", \"hidden\");\n\t    }\n\t  }\n\t\n\t  function mouseover(d) {\n\t    var percentage = (100 * d.value / totalSize).toPrecision(3);\n\t    var percentageString = percentage + \"%\";\n\t    if (percentage < 0.1) {\n\t      percentageString = \"< 0.1%\";\n\t    }\n\t\n\t    containers.base.select(\"#percentage\").text(percentageString);\n\t\n\t    containers.base.select(\"#explanation\").style(\"visibility\", \"visible\");\n\t\n\t    var sequenceArray = d.ancestors().reverse();\n\t    sequenceArray.shift(); // remove root node from the array\n\t    updateBreadcrumbs(sequenceArray, percentageString);\n\t\n\t    containers.vis.selectAll(\"path\").style(\"opacity\", 0.3);\n\t\n\t    containers.vis.selectAll(\"path\").filter(function (node) {\n\t      return sequenceArray.indexOf(node) >= 0;\n\t    }).style(\"opacity\", 1);\n\t  }\n\t\n\t  function mouseleave(d) {\n\t    containers.vis.select(\"#trail\").style(\"visibility\", \"hidden\");\n\t\n\t    containers.base.select(\"#explanation\").style(\"visibility\", \"visible\");\n\t\n\t    containers.vis.selectAll(\"path\").on(\"mouseover\", null);\n\t\n\t    containers.vis.selectAll(\"path\").transition().duration(1000).style(\"opacity\", 1).on(\"end\", function () {\n\t      d3.select(this).on(\"mouseover\", mouseover);\n\t    });\n\t\n\t    containers.vis.select(\"#explanation\").style(\"visibility\", \"hidden\");\n\t  }\n\t\n\t  function csvToJson(csv) {\n\t    var json = { \"name\": \"root\", \"children\": [] };\n\t    for (var i = 0; i < csv.length; i++) {\n\t      var sequence = csv[i][0];\n\t      var size = +csv[i][1];\n\t      if (isNaN(size)) {\n\t        continue;\n\t      }\n\t      var parts = sequence.split(\"-\");\n\t      var currentNode = json;\n\t      for (var j = 0; j < parts.length; j++) {\n\t        var children = currentNode[\"children\"];\n\t        var nodeName = parts[j];\n\t        var childNode = void 0;\n\t        if (j + 1 < parts.length) {\n\t          var foundChild = false;\n\t          for (var k = 0; k < children.length; k++) {\n\t            if (children[k][\"name\"] == nodeName) {\n\t              childNode = children[k];\n\t              foundChild = true;\n\t              break;\n\t            }\n\t          }\n\t          if (!foundChild) {\n\t            childNode = { \"name\": nodeName, \"children\": [] };\n\t            children.push(childNode);\n\t          }\n\t          currentNode = childNode;\n\t        } else {\n\t          childNode = { \"name\": nodeName, \"size\": size };\n\t          children.push(childNode);\n\t        }\n\t      }\n\t    }\n\t    return json;\n\t  }\n\t\n\t  return {\n\t    setConfig: setConfig,\n\t    setScales: setScales,\n\t    setData: setData,\n\t    csvToJson: csvToJson\n\t  };\n\t}\n\t//import Line from \"./line\"\n\t//import Bar from \"./bar\"\n\t//import Sunburst from \"./sunburst\"\n\n/***/ }),\n/* 11 */\n/***/ (function(module, exports, __webpack_require__) {\n\n\t\"use strict\";\n\t\n\tObject.defineProperty(exports, \"__esModule\", {\n\t  value: true\n\t});\n\texports.default = Axis;\n\t\n\tvar _d3Service = __webpack_require__(2);\n\t\n\tvar d3 = _interopRequireWildcard(_d3Service);\n\t\n\tvar _common = __webpack_require__(6);\n\t\n\tfunction _interopRequireWildcard(obj) { if (obj && obj.__esModule) { return obj; } else { var newObj = {}; if (obj != null) { for (var key in obj) { if (Object.prototype.hasOwnProperty.call(obj, key)) newObj[key] = obj[key]; } } newObj.default = obj; return newObj; } }\n\t\n\tfunction Axis(_container) {\n\t\n\t  var config = {\n\t    margin: {\n\t      top: 60,\n\t      right: 30,\n\t      bottom: 40,\n\t      left: 70\n\t    },\n\t    width: 800,\n\t    height: 500,\n\t    tickSizes: null,\n\t    tickPadding: null,\n\t    xAxisFormat: null,\n\t    yAxisFormat: null,\n\t    y2AxisFormat: null,\n\t    keyType: null,\n\t    yTicks: null,\n\t    y2Ticks: null,\n\t    xTickSkip: null,\n\t    axisTransitionDuration: null,\n\t    ease: null,\n\t    grid: null,\n\t    hoverZoneSize: 30,\n\t    tickSpacing: 40,\n\t    dateFormat: \"%b %d, %Y\",\n\t    numberFormat: \".2f\"\n\t  };\n\t\n\t  var scales = {\n\t    xScale: null,\n\t    yScale: null,\n\t    y2Scale: null,\n\t    hasSecondAxis: null\n\t  };\n\t\n\t  var cache = {\n\t    container: _container,\n\t    background: null,\n\t    chartHeight: null,\n\t    chartWidth: null,\n\t    xAxis: null,\n\t    yAxis: null,\n\t    y2Axis: null,\n\t    horizontalGridLines: null,\n\t    verticalGridLines: null\n\t  };\n\t\n\t  function buildSVG() {\n\t    cache.chartWidth = config.width - config.margin.left - config.margin.right;\n\t    cache.chartHeight = config.height - config.margin.top - config.margin.bottom;\n\t\n\t    if (!cache.svg) {\n\t      cache.svg = cache.container.append(\"g\").classed(\"axis-group\", true).style(\"pointer-events\", \"none\");\n\t\n\t      cache.svg.append(\"g\").attr(\"class\", \"grid-lines-group\");\n\t\n\t      cache.svg.append(\"g\").attr(\"class\", \"axis x\");\n\t\n\t      cache.svg.append(\"g\").attr(\"class\", \"axis y\");\n\t\n\t      cache.svg.append(\"g\").attr(\"class\", \"axis y2\");\n\t    }\n\t\n\t    cache.svg.attr(\"transform\", \"translate(\" + config.margin.left + \", \" + config.margin.top + \")\");\n\t  }\n\t\n\t  function formatXAxis() {\n\t    if (config.keyType === \"time\") {\n\t      if (config.xAxisFormat && config.xAxisFormat !== \"auto\") {\n\t        var formatter = d3.timeFormat(config.xAxisFormat);\n\t        cache.xAxis.tickFormat(formatter);\n\t      }\n\t    } else if (config.keyType === \"string\") {\n\t      cache.xAxis.tickValues(scales.xScale.domain().filter(function (d, i) {\n\t        return !(i % config.xTickSkip);\n\t      }));\n\t    } else if (config.keyType === \"number\") {\n\t      if (config.xAxisFormat && config.xAxisFormat !== \"auto\") {\n\t        var _formatter = d3.format(config.xAxisFormat);\n\t        cache.xAxis.tickFormat(_formatter);\n\t      }\n\t    }\n\t  }\n\t\n\t  function formatYAxis(axis) {\n\t    if (config.yAxisFormat === \"auto\") {\n\t      var yFormat = config.numberFormat;\n\t      var yExtent = scales.yScale.domain();\n\t      if (yExtent[1] - yExtent[0] > 10000) {\n\t        yFormat = \".0s\";\n\t      } else if (yExtent[1] - yExtent[0] > 1000) {\n\t        yFormat = \".2s\";\n\t      }\n\t      axis.tickFormat(d3.format(yFormat));\n\t    } else if (typeof config.yAxisFormat === \"string\") {\n\t      axis.tickFormat(d3.format(config.yAxisFormat));\n\t    }\n\t  }\n\t\n\t  function buildAxis() {\n\t    cache.xAxis = d3.axisBottom(scales.xScale).tickSize(config.tickSizes, 0).tickPadding(config.tickPadding);\n\t\n\t    formatXAxis();\n\t\n\t    cache.yAxis = d3.axisLeft(scales.yScale).tickSize([config.tickSizes]).tickPadding(config.tickPadding);\n\t\n\t    formatYAxis(cache.yAxis);\n\t\n\t    if (Number.isInteger(config.yTicks)) {\n\t      cache.yAxis.ticks(config.yTicks);\n\t    } else {\n\t      cache.yAxis.ticks(Math.ceil(cache.chartHeight / config.tickSpacing));\n\t    }\n\t\n\t    if (scales.hasSecondAxis) {\n\t      cache.y2Axis = d3.axisRight(scales.y2Scale).tickSize([config.tickSizes]).tickPadding(config.tickPadding);\n\t\n\t      formatYAxis(cache.y2Axis);\n\t\n\t      if (!isNaN(config.y2Ticks)) {\n\t        cache.y2Axis.ticks(config.y2Ticks);\n\t      }\n\t    }\n\t  }\n\t\n\t  function drawAxis() {\n\t    buildSVG();\n\t    buildAxis();\n\t\n\t    cache.svg.select(\".axis.x\").attr(\"transform\", \"translate(0, \" + cache.chartHeight + \")\").call(cache.xAxis);\n\t\n\t    cache.svg.select(\".axis.y\").transition().duration(config.axisTransitionDuration).ease(config.ease).call(cache.yAxis);\n\t\n\t    if (scales.hasSecondAxis) {\n\t      cache.svg.select(\".axis.y2\").attr(\"transform\", \"translate(\" + cache.chartWidth + \", 0)\").transition().duration(config.axisTransitionDuration).ease(config.ease).call(cache.y2Axis);\n\t    }\n\t\n\t    return this;\n\t  }\n\t\n\t  function drawGridLines() {\n\t    if (config.grid === \"horizontal\" || config.grid === \"full\") {\n\t      var ticks = null;\n\t      if (Number.isInteger(config.yTicks)) {\n\t        ticks = config.yTicks;\n\t      } else {\n\t        ticks = Math.ceil(cache.chartHeight / config.tickSpacing);\n\t      }\n\t\n\t      cache.horizontalGridLines = cache.svg.select(\".grid-lines-group\").selectAll(\"line.horizontal-grid-line\").data(scales.yScale.ticks(ticks));\n\t\n\t      cache.horizontalGridLines.enter().append(\"line\").attr(\"class\", \"horizontal-grid-line\").merge(cache.horizontalGridLines).transition().duration(config.axisTransitionDuration).attr(\"x2\", cache.chartWidth).attr(\"y1\", scales.yScale).attr(\"y2\", scales.yScale);\n\t\n\t      cache.horizontalGridLines.exit().remove();\n\t    }\n\t\n\t    if (config.grid === \"vertical\" || config.grid === \"full\") {\n\t      cache.verticalGridLines = cache.svg.select(\".grid-lines-group\").selectAll(\"line.vertical-grid-line\").data(cache.xAxis.tickValues());\n\t\n\t      cache.verticalGridLines.enter().append(\"line\").attr(\"class\", \"vertical-grid-line\").merge(cache.verticalGridLines).transition().duration(config.axisTransitionDuration).attr(\"y1\", 0).attr(\"y2\", cache.chartHeight).attr(\"x1\", scales.xScale).attr(\"x2\", scales.xScale);\n\t\n\t      cache.verticalGridLines.exit().remove();\n\t    }\n\t\n\t    return this;\n\t  }\n\t\n\t  function setConfig(_config) {\n\t    config = (0, _common.override)(config, _config);\n\t    return this;\n\t  }\n\t\n\t  function setScales(_scales) {\n\t    scales = (0, _common.override)(scales, _scales);\n\t    return this;\n\t  }\n\t\n\t  return {\n\t    setConfig: setConfig,\n\t    setScales: setScales,\n\t    drawAxis: drawAxis,\n\t    drawGridLines: drawGridLines\n\t  };\n\t}\n\n/***/ }),\n/* 12 */\n/***/ (function(module, exports, __webpack_require__) {\n\n\t\"use strict\";\n\t\n\tObject.defineProperty(exports, \"__esModule\", {\n\t  value: true\n\t});\n\t\n\tvar _slicedToArray = function () { function sliceIterator(arr, i) { var _arr = []; var _n = true; var _d = false; var _e = undefined; try { for (var _i = arr[Symbol.iterator](), _s; !(_n = (_s = _i.next()).done); _n = true) { _arr.push(_s.value); if (i && _arr.length === i) break; } } catch (err) { _d = true; _e = err; } finally { try { if (!_n && _i[\"return\"]) _i[\"return\"](); } finally { if (_d) throw _e; } } return _arr; } return function (arr, i) { if (Array.isArray(arr)) { return arr; } else if (Symbol.iterator in Object(arr)) { return sliceIterator(arr, i); } else { throw new TypeError(\"Invalid attempt to destructure non-iterable instance\"); } }; }();\n\t\n\tvar _typeof = typeof Symbol === \"function\" && typeof Symbol.iterator === \"symbol\" ? function (obj) { return typeof obj; } : function (obj) { return obj && typeof Symbol === \"function\" && obj.constructor === Symbol && obj !== Symbol.prototype ? \"symbol\" : typeof obj; };\n\t\n\texports.default = Tooltip;\n\t\n\tvar _d3Service = __webpack_require__(2);\n\t\n\tvar d3 = _interopRequireWildcard(_d3Service);\n\t\n\tvar _constants = __webpack_require__(5);\n\t\n\tvar _common = __webpack_require__(6);\n\t\n\tfunction _interopRequireWildcard(obj) { if (obj && obj.__esModule) { return obj; } else { var newObj = {}; if (obj != null) { for (var key in obj) { if (Object.prototype.hasOwnProperty.call(obj, key)) newObj[key] = obj[key]; } } newObj.default = obj; return newObj; } }\n\t\n\tfunction Tooltip(_container) {\n\t  var isLegend = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : false;\n\t\n\t\n\t  var config = {\n\t    margin: {\n\t      top: 2,\n\t      right: 2,\n\t      bottom: 2,\n\t      left: 2\n\t    },\n\t    width: 250,\n\t    height: 45,\n\t\n\t    // Animations\n\t    mouseChaseDuration: 0,\n\t    tooltipEase: d3.easeQuadInOut,\n\t\n\t    tooltipHeight: 48,\n\t    tooltipWidth: 160,\n\t\n\t    dateFormat: \"%b %d, %Y\",\n\t    numberFormat: \".2f\",\n\t    seriesOrder: [],\n\t\n\t    // from chart\n\t    keyType: \"time\"\n\t  };\n\t\n\t  var scales = {\n\t    colorScale: null\n\t  };\n\t\n\t  var cache = {\n\t    container: _container,\n\t    root: null,\n\t    chartWidth: null,\n\t    chartHeight: null,\n\t    tooltipDivider: null,\n\t    tooltipBody: null,\n\t    tooltipTitle: null,\n\t    tooltipBackground: null,\n\t    xPosition: null,\n\t    yPosition: null,\n\t    content: null,\n\t    title: null,\n\t    isEnabled: true\n\t  };\n\t\n\t  function buildSVG() {\n\t    cache.chartWidth = config.width - config.margin.left - config.margin.right;\n\t    cache.chartHeight = config.height - config.margin.top - config.margin.bottom;\n\t\n\t    if (!cache.root) {\n\t      cache.root = cache.container.append(\"div\").attr(\"class\", isLegend ? \"legend-group\" : \"tooltip-group\").style(\"position\", \"absolute\").style(\"pointer-events\", \"none\");\n\t\n\t      cache.tooltipTitle = cache.root.append(\"div\").attr(\"class\", \"tooltip-title\");\n\t\n\t      cache.tooltipBody = cache.root.append(\"div\").attr(\"class\", \"tooltip-body\");\n\t    }\n\t  }\n\t\n\t  function calculateTooltipPosition(_mouseX, _mouseY) {\n\t    var OFFSET = 4;\n\t    var tooltipSize = cache.root.node().getBoundingClientRect();\n\t    var tooltipX = _mouseX;\n\t    var avoidanceOffset = OFFSET;\n\t    var tooltipY = _mouseY + config.margin.top - tooltipSize.height / 2;\n\t\n\t    if (_mouseX > cache.chartWidth / 2) {\n\t      avoidanceOffset = -tooltipSize.width - OFFSET;\n\t    }\n\t    return [tooltipX + avoidanceOffset, tooltipY];\n\t  }\n\t\n\t  function move() {\n\t    var xPosition = cache.xPosition === \"auto\" ? cache.chartWidth : cache.xPosition;\n\t\n\t    var yPosition = cache.yPosition === \"auto\" ? config.margin.top : cache.yPosition;\n\t\n\t    cache.root.transition().duration(config.mouseChaseDuration).ease(config.tooltipEase).style(\"top\", yPosition + \"px\").style(\"left\", function left() {\n\t      var width = cache.yPosition === \"auto\" ? this.getBoundingClientRect().width : 0;\n\t      return xPosition + config.margin.left - width + \"px\";\n\t    });\n\t    return this;\n\t  }\n\t\n\t  function drawContent() {\n\t    var content = cache.content;\n\t    var formatter = d3.format(config.numberFormat);\n\t\n\t    var tooltipItems = cache.tooltipBody.selectAll(\".tooltip-item\").data(content);\n\t    var tooltipItemsUpdate = tooltipItems.enter().append(\"div\").attr(\"class\", \"tooltip-item\").merge(tooltipItems);\n\t    tooltipItems.exit().remove();\n\t\n\t    var tooltipItem = tooltipItemsUpdate.selectAll(\".section\").data(function (d) {\n\t      var legendData = [{ key: \"tooltip-color\", value: scales.colorScale(d[_constants.keys.ID]) }, { key: \"tooltip-label\", value: d[_constants.keys.LABEL] }];\n\t      if (typeof d[_constants.keys.VALUE] !== \"undefined\") {\n\t        legendData.push({ key: \"value\", value: d[_constants.keys.VALUE] });\n\t      }\n\t      return legendData;\n\t    });\n\t    tooltipItem.enter().append(\"div\").merge(tooltipItem).attr(\"class\", function (d) {\n\t      return [\"section\", d.key].join(\" \");\n\t    }).each(function each(d) {\n\t      var selection = d3.select(this);\n\t      if (d.key === \"tooltip-color\") {\n\t        selection.style(\"background\", d.value);\n\t      } else if (d.key === \"value\") {\n\t        selection.html(formatter(d.value));\n\t      } else {\n\t        selection.html(d.value);\n\t      }\n\t    });\n\t    tooltipItem.exit().remove();\n\t    return this;\n\t  }\n\t\n\t  function drawTitle() {\n\t    var title = cache.title;\n\t\n\t    if ((typeof title === \"undefined\" ? \"undefined\" : _typeof(title)) === \"object\") {\n\t      title = d3.timeFormat(config.dateFormat)(title);\n\t    }\n\t\n\t    cache.tooltipTitle.html(title);\n\t    return this;\n\t  }\n\t\n\t  function drawTooltip() {\n\t    buildSVG();\n\t    drawTitle();\n\t    drawContent();\n\t    move();\n\t    return this;\n\t  }\n\t\n\t  function setupContent(_series) {\n\t    var series = _series;\n\t\n\t    if (config.seriesOrder.length) {\n\t      series = sortByTopicsOrder(_series);\n\t    } else if (_series.length && _series[0][_constants.keys.LABEL]) {\n\t      series = sortByAlpha(_series);\n\t    }\n\t\n\t    cache.content = series;\n\t    return this;\n\t  }\n\t\n\t  function sortByTopicsOrder(_series) {\n\t    var _order = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : seriesOrder;\n\t\n\t    return _order.map(function (orderName) {\n\t      return _series.filter(function (_ref) {\n\t        var name = _ref.name;\n\t        return name === orderName;\n\t      })[0];\n\t    });\n\t  }\n\t\n\t  function sortByAlpha(_series) {\n\t    var series = (0, _common.cloneData)(_series);\n\t    return series.sort(function (a, b) {\n\t      return a[_constants.keys.LABEL].localeCompare(b[_constants.keys.LABEL], \"en\", { numeric: false });\n\t    });\n\t  }\n\t\n\t  function hide() {\n\t    if (!cache.root) {\n\t      return null;\n\t    }\n\t    cache.root.style(\"display\", \"none\");\n\t    return this;\n\t  }\n\t\n\t  function show() {\n\t    if (!cache.root) {\n\t      return null;\n\t    }\n\t    cache.root.style(\"display\", \"block\");\n\t    return this;\n\t  }\n\t\n\t  function setVisibility(_shouldBeVisible) {\n\t    cache.isEnabled = _shouldBeVisible;\n\t    if (!cache.root) {\n\t      return null;\n\t    }\n\t    if (cache.isEnabled) {\n\t      show();\n\t    } else {\n\t      hide();\n\t    }\n\t    return this;\n\t  }\n\t\n\t  function setupTooltip(_dataPoint, _xPosition, _yPosition) {\n\t    buildSVG();\n\t\n\t    var _calculateTooltipPosi = calculateTooltipPosition(_xPosition, _yPosition),\n\t        _calculateTooltipPosi2 = _slicedToArray(_calculateTooltipPosi, 2),\n\t        tooltipX = _calculateTooltipPosi2[0],\n\t        tooltipY = _calculateTooltipPosi2[1];\n\t\n\t    setXPosition(tooltipX);\n\t    setYPosition(tooltipY);\n\t    setTitle(_dataPoint[_constants.keys.DATA]);\n\t    setupContent(_dataPoint[_constants.keys.SERIES]);\n\t\n\t    drawTooltip();\n\t    return this;\n\t  }\n\t\n\t  function bindEvents(_dispatcher) {\n\t    _dispatcher.on(\"mouseOverPanel.tooltip\", show).on(\"mouseMovePanel.tooltip\", setupTooltip).on(\"mouseOutPanel.tooltip\", hide);\n\t    return this;\n\t  }\n\t\n\t  function setConfig(_config) {\n\t    config = (0, _common.override)(config, _config);\n\t    return this;\n\t  }\n\t\n\t  function setScales(_scales) {\n\t    scales = (0, _common.override)(scales, _scales);\n\t    return this;\n\t  }\n\t\n\t  function setTitle(_title) {\n\t    cache.title = _title;\n\t    return this;\n\t  }\n\t\n\t  function setXPosition(_xPosition) {\n\t    cache.xPosition = _xPosition;\n\t    return this;\n\t  }\n\t\n\t  function setYPosition(_yPosition) {\n\t    cache.yPosition = _yPosition;\n\t    return this;\n\t  }\n\t\n\t  function setContent(_content) {\n\t    cache.content = _content;\n\t    return this;\n\t  }\n\t\n\t  return {\n\t    bindEvents: bindEvents,\n\t    setXPosition: setXPosition,\n\t    setYPosition: setYPosition,\n\t    setContent: setContent,\n\t    setTitle: setTitle,\n\t    hide: hide,\n\t    show: show,\n\t    drawTooltip: drawTooltip,\n\t    setConfig: setConfig,\n\t    setScales: setScales,\n\t    setVisibility: setVisibility\n\t  };\n\t}\n\n/***/ }),\n/* 13 */\n/***/ (function(module, exports, __webpack_require__) {\n\n\t\"use strict\";\n\t\n\tObject.defineProperty(exports, \"__esModule\", {\n\t  value: true\n\t});\n\texports.default = Legend;\n\t\n\tvar _tooltip = __webpack_require__(12);\n\t\n\tvar _tooltip2 = _interopRequireDefault(_tooltip);\n\t\n\tfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\t\n\tfunction Legend(_container) {\n\t  var IS_LEGEND = true;\n\t  return (0, _tooltip2.default)(_container, IS_LEGEND);\n\t}\n\n/***/ }),\n/* 14 */\n/***/ (function(module, exports, __webpack_require__) {\n\n\t\"use strict\";\n\t\n\tObject.defineProperty(exports, \"__esModule\", {\n\t  value: true\n\t});\n\texports.default = Brush;\n\t\n\tvar _d3Service = __webpack_require__(2);\n\t\n\tvar d3 = _interopRequireWildcard(_d3Service);\n\t\n\tvar _constants = __webpack_require__(5);\n\t\n\tvar _common = __webpack_require__(6);\n\t\n\tfunction _interopRequireWildcard(obj) { if (obj && obj.__esModule) { return obj; } else { var newObj = {}; if (obj != null) { for (var key in obj) { if (Object.prototype.hasOwnProperty.call(obj, key)) newObj[key] = obj[key]; } } newObj.default = obj; return newObj; } }\n\t\n\tfunction Brush(_container) {\n\t\n\t  var config = {\n\t    margin: {\n\t      top: 60,\n\t      right: 30,\n\t      bottom: 40,\n\t      left: 70\n\t    },\n\t    width: 800,\n\t    height: 500,\n\t    keyType: null\n\t  };\n\t\n\t  var scales = {\n\t    xScale: null\n\t  };\n\t\n\t  var cache = {\n\t    container: _container,\n\t    dateRange: [null, null],\n\t    brush: null,\n\t    chartBrush: null,\n\t    handle: null,\n\t    chartWidth: null,\n\t    chartHeight: null,\n\t    isEnabled: true\n\t  };\n\t\n\t  var data = {\n\t    dataBySeries: null\n\t  };\n\t\n\t  var brushExtent = null;\n\t\n\t  // events\n\t  var dispatcher = d3.dispatch(\"brushStart\", \"brushMove\", \"brushEnd\");\n\t\n\t  function buildSVG() {\n\t    cache.chartWidth = Math.max(config.width - config.margin.left - config.margin.right, 0);\n\t    cache.chartHeight = Math.max(config.height - config.margin.top - config.margin.bottom, 0);\n\t\n\t    if (!cache.svg) {\n\t      cache.svg = cache.container.append(\"g\").classed(\"brush-group\", true);\n\t    }\n\t  }\n\t\n\t  function buildBrush() {\n\t    cache.brush = cache.brush || d3.brushX().on(\"start\", handleBrushStart).on(\"brush\", handleBrushMove).on(\"end\", handleBrushEnd);\n\t\n\t    cache.brush.extent([[0, 0], [cache.chartWidth, cache.chartHeight]]);\n\t\n\t    cache.chartBrush = cache.svg.call(cache.brush);\n\t\n\t    cache.chartBrush.selectAll(\".brush-rect\").attr(\"height\", cache.chartHeight);\n\t\n\t    moveBrush();\n\t  }\n\t\n\t  function getDataExtent() {\n\t    var selection = d3.event.selection;\n\t    var dataExtent = selection.map(function (d) {\n\t      return (0, _common.invertScale)(scales.xScale, d, config.keyType);\n\t    });\n\t    return dataExtent;\n\t  }\n\t\n\t  function validateExtent(_brushExtent) {\n\t    return Array.isArray(_brushExtent) && _brushExtent[0] !== null && typeof _brushExtent[0] !== \"undefined\" && _brushExtent[1] !== null && typeof _brushExtent[1] !== \"undefined\";\n\t  }\n\t\n\t  function clampBrush(_dataExtent, _brushExtent) {\n\t    return [Math.max(_dataExtent[0], _brushExtent[0]), Math.min(_dataExtent[1], _brushExtent[1])];\n\t  }\n\t\n\t  function moveBrush() {\n\t    if (brushExtent === null) {\n\t      return this;\n\t    }\n\t    var dataExtent = scales.xScale.domain();\n\t    var extent = clampBrush(dataExtent, brushExtent);\n\t    if (extent) {\n\t      cache.svg.call(cache.brush.move, extent.map(function (d) {\n\t        return scales.xScale(d);\n\t      }));\n\t    }\n\t    return this;\n\t  }\n\t\n\t  function handleBrushStart() {\n\t    if (!d3.event.sourceEvent || !d3.event.selection) {\n\t      return;\n\t    }\n\t    dispatcher.call(\"brushStart\", this, getDataExtent(), config);\n\t  }\n\t\n\t  function handleBrushMove() {\n\t    if (!d3.event.sourceEvent || !d3.event.selection) {\n\t      return;\n\t    }\n\t    dispatcher.call(\"brushMove\", this, getDataExtent(), config);\n\t  }\n\t\n\t  function handleBrushEnd() {\n\t    // Skip programatic setting and empty selection\n\t    if (!d3.event.sourceEvent || !d3.event.selection) {\n\t      return;\n\t    }\n\t\n\t    var dataExtent = getDataExtent();\n\t    dispatcher.call(\"brushEnd\", this, dataExtent, config);\n\t  }\n\t\n\t  function drawBrush() {\n\t    if (!cache.isEnabled) {\n\t      destroy();\n\t    }\n\t\n\t    buildSVG();\n\t\n\t    if (data.dataBySeries) {\n\t      buildBrush();\n\t    }\n\t    return this;\n\t  }\n\t\n\t  function on() {\n\t    dispatcher.on.apply(dispatcher, arguments);\n\t    return this;\n\t  }\n\t\n\t  function setVisibility(_isEnabled) {\n\t    cache.isEnabled = _isEnabled;\n\t    return this;\n\t  }\n\t\n\t  function setConfig(_config) {\n\t    config = (0, _common.override)(config, _config);\n\t    return this;\n\t  }\n\t\n\t  function setBrushExtent(_brushExtent) {\n\t    if (validateExtent(_brushExtent)) {\n\t      brushExtent = _brushExtent;\n\t    } else {\n\t      brushExtent = null;\n\t    }\n\t    return this;\n\t  }\n\t\n\t  function setScales(_scales) {\n\t    scales = (0, _common.override)(scales, _scales);\n\t    return this;\n\t  }\n\t\n\t  function setData(_data) {\n\t    data = Object.assign({}, data, _data);\n\t    return this;\n\t  }\n\t\n\t  function destroy() {\n\t    cache.svg.remove();\n\t    return this;\n\t  }\n\t\n\t  return {\n\t    on: on,\n\t    setConfig: setConfig,\n\t    setData: setData,\n\t    setScales: setScales,\n\t    setBrushExtent: setBrushExtent,\n\t    drawBrush: drawBrush,\n\t    setVisibility: setVisibility,\n\t    destroy: destroy\n\t  };\n\t}\n\n/***/ }),\n/* 15 */\n/***/ (function(module, exports, __webpack_require__) {\n\n\t\"use strict\";\n\t\n\tObject.defineProperty(exports, \"__esModule\", {\n\t  value: true\n\t});\n\texports.default = Hover;\n\t\n\tvar _d3Service = __webpack_require__(2);\n\t\n\tvar d3 = _interopRequireWildcard(_d3Service);\n\t\n\tvar _constants = __webpack_require__(5);\n\t\n\tvar _common = __webpack_require__(6);\n\t\n\tfunction _interopRequireWildcard(obj) { if (obj && obj.__esModule) { return obj; } else { var newObj = {}; if (obj != null) { for (var key in obj) { if (Object.prototype.hasOwnProperty.call(obj, key)) newObj[key] = obj[key]; } } newObj.default = obj; return newObj; } }\n\t\n\tfunction Hover(_container) {\n\t\n\t  var config = {\n\t    margin: {\n\t      top: 60,\n\t      right: 30,\n\t      bottom: 40,\n\t      left: 70\n\t    },\n\t    width: 800,\n\t    height: 500,\n\t    dotRadius: null,\n\t    chartType: null\n\t  };\n\t\n\t  var scales = {\n\t    yScale: null,\n\t    y2Scale: null,\n\t    hasSecondAxis: null,\n\t    colorScale: null\n\t  };\n\t\n\t  var cache = {\n\t    container: _container,\n\t    svg: null,\n\t    chartWidth: null,\n\t    chartHeight: null,\n\t    dateRange: [null, null],\n\t    brush: null,\n\t    chartBrush: null,\n\t    handle: null,\n\t    data: null,\n\t    isEnabled: true\n\t  };\n\t\n\t  var data = {\n\t    stack: null,\n\t    groupKeys: null\n\t\n\t    // events\n\t  };var dispatcher = d3.dispatch(\"hover\");\n\t\n\t  var getColor = function getColor(d) {\n\t    return scales.colorScale(d[_constants.keys.ID]);\n\t  };\n\t\n\t  function buildSVG() {\n\t    cache.chartWidth = config.width - config.margin.left - config.margin.right;\n\t    cache.chartHeight = config.height - config.margin.top - config.margin.bottom;\n\t\n\t    if (!cache.svg) {\n\t      cache.svg = cache.container.append(\"g\").classed(\"hover-group\", true).style(\"pointer-events\", \"none\");\n\t    }\n\t  }\n\t\n\t  function drawHover(_dataPoint, _dataPointXPosition) {\n\t    buildSVG();\n\t\n\t    if (!isNaN(_dataPointXPosition)) {\n\t      moveVerticalMarker(_dataPointXPosition);\n\t      drawVerticalMarker();\n\t      if (config.chartType === \"stackedLine\" || config.chartType === \"stackedArea\" || config.chartType === \"stackedBar\") {\n\t        highlightStackedDataPoints(_dataPoint);\n\t      } else {\n\t        highlightDataPoints(_dataPoint);\n\t      }\n\t      dispatcher.call(\"hover\", this, _dataPoint);\n\t    }\n\t  }\n\t\n\t  function show() {\n\t    if (!cache.svg) {\n\t      return null;\n\t    }\n\t    cache.svg.style(\"display\", \"block\");\n\t    return this;\n\t  }\n\t\n\t  function hide() {\n\t    if (!cache.svg) {\n\t      return null;\n\t    }\n\t    cache.svg.style(\"display\", \"none\");\n\t    return this;\n\t  }\n\t\n\t  function highlightDataPoints(_dataPoint) {\n\t    var dotsData = _dataPoint[_constants.keys.SERIES];\n\t\n\t    drawHighlightDataPoints(dotsData);\n\t  }\n\t\n\t  function drawHighlightDataPoints(_dotsData) {\n\t    var dots = cache.svg.selectAll(\".dot\").data(_dotsData);\n\t\n\t    dots.enter().append(\"circle\").attr(\"class\", \"dot\").merge(dots).attr(\"cy\", function (d) {\n\t      if (config.chartType === \"stackedArea\" || data.groupKeys[0].indexOf(d[_constants.keys.ID]) > -1) {\n\t        return scales.yScale(d[_constants.keys.VALUE]);\n\t      } else {\n\t        return scales.y2Scale(d[_constants.keys.VALUE]);\n\t      }\n\t    }).attr(\"r\", config.dotRadius).style(\"stroke\", \"none\").style(\"fill\", getColor);\n\t\n\t    dots.exit().remove();\n\t  }\n\t\n\t  function highlightStackedDataPoints(_dataPoint) {\n\t    var stackedDataPoint = { key: _dataPoint[_constants.keys.DATA] };\n\t    _dataPoint.series.forEach(function (d) {\n\t      var id = d[_constants.keys.ID];\n\t      stackedDataPoint[id] = d[_constants.keys.VALUE];\n\t    });\n\t\n\t    var dotsStack = data.stack([stackedDataPoint]);\n\t    var dotsData = dotsStack.map(function (d) {\n\t      var dot = { value: d[0][1] };\n\t      dot[_constants.keys.ID] = d.key;\n\t      return dot;\n\t    });\n\t\n\t    drawHighlightDataPoints(dotsData);\n\t  }\n\t\n\t  function drawVerticalMarker() {\n\t    var verticalMarkerLine = cache.svg.selectAll(\"line\").data([0]);\n\t\n\t    verticalMarkerLine.enter().append(\"line\").classed(\"vertical-marker\", true).merge(verticalMarkerLine).attr(\"y1\", 0).attr(\"y2\", cache.chartHeight);\n\t\n\t    verticalMarkerLine.exit().remove();\n\t  }\n\t\n\t  function moveVerticalMarker(_verticalMarkerXPosition) {\n\t    cache.svg.attr(\"transform\", \"translate(\" + [_verticalMarkerXPosition, 0] + \")\");\n\t  }\n\t\n\t  function bindEvents(_dispatcher) {\n\t    _dispatcher.on(\"mouseOverPanel.hover\", show).on(\"mouseMovePanel.hover\", drawHover).on(\"mouseOutPanel.hover\", hide);\n\t    return this;\n\t  }\n\t\n\t  function on() {\n\t    dispatcher.on.apply(dispatcher, arguments);\n\t    return this;\n\t  }\n\t\n\t  function setConfig(_config) {\n\t    config = (0, _common.override)(config, _config);\n\t    return this;\n\t  }\n\t\n\t  function setScales(_scales) {\n\t    scales = (0, _common.override)(scales, _scales);\n\t    return this;\n\t  }\n\t\n\t  function setData(_data) {\n\t    data = Object.assign({}, data, _data);\n\t    return this;\n\t  }\n\t\n\t  return {\n\t    setConfig: setConfig,\n\t    setScales: setScales,\n\t    setData: setData,\n\t    bindEvents: bindEvents,\n\t    highlightDataPoints: highlightDataPoints,\n\t    highlightStackedDataPoints: highlightStackedDataPoints,\n\t    drawVerticalMarker: drawVerticalMarker,\n\t    moveVerticalMarker: moveVerticalMarker,\n\t    on: on\n\t  };\n\t}\n\n/***/ }),\n/* 16 */\n/***/ (function(module, exports, __webpack_require__) {\n\n\t\"use strict\";\n\t\n\tObject.defineProperty(exports, \"__esModule\", {\n\t  value: true\n\t});\n\texports.default = Binning;\n\t\n\tvar _d3Service = __webpack_require__(2);\n\t\n\tvar d3 = _interopRequireWildcard(_d3Service);\n\t\n\tvar _interactors = __webpack_require__(17);\n\t\n\tfunction _interopRequireWildcard(obj) { if (obj && obj.__esModule) { return obj; } else { var newObj = {}; if (obj != null) { for (var key in obj) { if (Object.prototype.hasOwnProperty.call(obj, key)) newObj[key] = obj[key]; } } newObj.default = obj; return newObj; } }\n\t\n\tfunction Binning(_container) {\n\t\n\t  var config = {\n\t    margin: {\n\t      top: 60,\n\t      right: 30,\n\t      bottom: 40,\n\t      left: 70\n\t    },\n\t    width: 800,\n\t    height: 500,\n\t    autoLabel: \"auto\",\n\t    binningToggles: [],\n\t    label: \"BIN:\"\n\t  };\n\t\n\t  var cache = {\n\t    container: _container,\n\t    root: null,\n\t    autoItem: null,\n\t    binningItems: null,\n\t    selectedBin: null,\n\t    isAuto: true,\n\t    isEnabled: true\n\t\n\t    // events\n\t  };var dispatcher = d3.dispatch(\"change\");\n\t\n\t  function buildSVG() {\n\t\n\t    if (!cache.root) {\n\t      cache.root = cache.container.append(\"div\").attr(\"class\", \"binning-group\").style(\"float\", \"left\");\n\t\n\t      cache.label = cache.root.append(\"div\").attr(\"class\", \"bin-label\").text(config.label);\n\t\n\t      cache.autoItem = cache.root.append(\"div\").attr(\"class\", \"item item-auto toggleOnOff\").on(\"click.select\", function click() {\n\t        var isSelected = this.classList.contains(\"selected\");\n\t        var toggled = !isSelected;\n\t        setAuto(toggled);\n\t        drawBinning();\n\t        dispatcher.call(\"change\", this, { name: config.autoLabel, isSelected: toggled });\n\t      }).text(config.autoLabel);\n\t\n\t      cache.binningItems = cache.root.selectAll(\".toggleExclusive\").data(config.binningToggles).enter().append(\"div\").attr(\"class\", function (d) {\n\t        return \"item item-\" + d + \" toggleExclusive\";\n\t      }).on(\"click.select\", function click(d) {\n\t        setBinning(d);\n\t        drawBinning();\n\t        var isSelected = this.classList.contains(\"selected\");\n\t        dispatcher.call(\"change\", this, { name: d, isSelected: isSelected });\n\t      }).text(function (d) {\n\t        return d;\n\t      });\n\t    }\n\t\n\t    var LINE_HEIGHT = 20;\n\t    cache.root.style(\"top\", config.margin.top - LINE_HEIGHT + \"px\").style(\"left\", config.margin.left + \"px\");\n\t\n\t    changeBinning(cache.selectedBin);\n\t    toggleAuto(cache.isAuto);\n\t  }\n\t\n\t  function changeBinning(_selectedItemName) {\n\t    if (_selectedItemName) {\n\t      (0, _interactors.exclusiveToggle)(cache.binningItems, \".item-\" + _selectedItemName);\n\t    }\n\t  }\n\t\n\t  function toggleAuto(_shouldBeSelected) {\n\t    cache.autoItem.classed(\"selected\", _shouldBeSelected).classed(\"dimmed\", !_shouldBeSelected);\n\t  }\n\t\n\t  function drawBinning() {\n\t    if (cache.isEnabled) {\n\t      buildSVG();\n\t    } else {\n\t      destroy();\n\t    }\n\t    return this;\n\t  }\n\t\n\t  function setVisibility(_shouldBeVisible) {\n\t    cache.isEnabled = _shouldBeVisible;\n\t    drawBinning();\n\t    return this;\n\t  }\n\t\n\t  function setBinning(_selectedBin) {\n\t    cache.selectedBin = _selectedBin;\n\t    return this;\n\t  }\n\t\n\t  function setAuto(_isAuto) {\n\t    cache.isAuto = _isAuto;\n\t    return this;\n\t  }\n\t\n\t  function on() {\n\t    dispatcher.on.apply(dispatcher, arguments);\n\t    return this;\n\t  }\n\t\n\t  function setConfig(_config) {\n\t    config = Object.assign({}, config, _config);\n\t    return this;\n\t  }\n\t\n\t  function destroy() {\n\t    cache.root.remove();\n\t  }\n\t\n\t  return {\n\t    on: on,\n\t    setConfig: setConfig,\n\t    destroy: destroy,\n\t    drawBinning: drawBinning,\n\t    setBinning: setBinning,\n\t    setAuto: setAuto,\n\t    setVisibility: setVisibility\n\t  };\n\t}\n\n/***/ }),\n/* 17 */\n/***/ (function(module, exports, __webpack_require__) {\n\n\t\"use strict\";\n\t\n\tObject.defineProperty(exports, \"__esModule\", {\n\t  value: true\n\t});\n\texports.toggleOnOff = toggleOnOff;\n\texports.exclusiveToggle = exclusiveToggle;\n\texports.toggle = toggle;\n\texports.blurOnEnter = blurOnEnter;\n\t\n\tvar _d3Service = __webpack_require__(2);\n\t\n\tvar d3 = _interopRequireWildcard(_d3Service);\n\t\n\tfunction _interopRequireWildcard(obj) { if (obj && obj.__esModule) { return obj; } else { var newObj = {}; if (obj != null) { for (var key in obj) { if (Object.prototype.hasOwnProperty.call(obj, key)) newObj[key] = obj[key]; } } newObj.default = obj; return newObj; } }\n\t\n\t/**\n\t * Toggles selection on clickable elements. Will set classes \"selected\" and \"dimmed\".\n\t * @param  {Number} selector A valid selector of the elements to toggle\n\t * @example\n\t * barChart.on('customClick', britecharts.interactors.multiToggle('rect.bar'))\n\t *\n\t * @return {void}\n\t */\n\t\n\tfunction toggleOnOff(selector, bool) {\n\t  var shouldBeSelected = typeof bool === \"undefined\" ? !d3.select(selector).classed(\"selected\") : bool;\n\t  d3.select(selector).classed(\"selected\", shouldBeSelected).classed(\"dimmed\", !shouldBeSelected);\n\t}\n\t\n\tfunction exclusiveToggle(othersSelection, selector) {\n\t  return toggle(othersSelection, selector, {\n\t    toggleOffIsEnabled: false,\n\t    toggleMultipleIsEnabled: false\n\t  });\n\t}\n\t\n\tfunction toggle(othersSelection, selector) {\n\t  var options = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : { toggleOffIsEnabled: false, toggleMultipleIsEnabled: false };\n\t\n\t  /* eslint-disable consistent-this */\n\t  var hasSelection = false;\n\t  var selectionNode = document.querySelector(selector);\n\t\n\t  othersSelection.classed(\"selected\", function selectedClass() {\n\t    var isSelected = this.classList.contains(\"selected\");\n\t    var hasJustBeenClicked = this === selectionNode;\n\t    var shouldBeSelected = false;\n\t\n\t    if (hasJustBeenClicked) {\n\t      shouldBeSelected = options.toggleOffIsEnabled ? !isSelected : true;\n\t    } else {\n\t      shouldBeSelected = options.toggleMultipleIsEnabled ? isSelected : false;\n\t    }\n\t\n\t    hasSelection = hasSelection || shouldBeSelected;\n\t    return shouldBeSelected;\n\t  });\n\t\n\t  othersSelection.classed(\"dimmed\", function dimmedClass() {\n\t    return hasSelection && !this.classList.contains(\"selected\");\n\t  });\n\t  /* eslint-enable consistent-this */\n\t}\n\t\n\tfunction blurOnEnter(selection) {\n\t  selection.on(\"keypress.enter\", function keypress() {\n\t    if (d3.event.key === \"Enter\") {\n\t      this.blur();\n\t    }\n\t  });\n\t}\n\n/***/ }),\n/* 18 */\n/***/ (function(module, exports, __webpack_require__) {\n\n\t\"use strict\";\n\t\n\tObject.defineProperty(exports, \"__esModule\", {\n\t  value: true\n\t});\n\texports.default = DomainEditor;\n\t\n\tvar _d3Service = __webpack_require__(2);\n\t\n\tvar d3 = _interopRequireWildcard(_d3Service);\n\t\n\tvar _common = __webpack_require__(6);\n\t\n\tvar _interactors = __webpack_require__(17);\n\t\n\tfunction _interopRequireWildcard(obj) { if (obj && obj.__esModule) { return obj; } else { var newObj = {}; if (obj != null) { for (var key in obj) { if (Object.prototype.hasOwnProperty.call(obj, key)) newObj[key] = obj[key]; } } newObj.default = obj; return newObj; } }\n\t\n\tfunction DomainEditor(_container) {\n\t\n\t  var config = {\n\t    margin: {\n\t      top: 60,\n\t      right: 30,\n\t      bottom: 40,\n\t      left: 70\n\t    },\n\t    width: 800,\n\t    height: 500,\n\t    keyType: null,\n\t    dateFormat: \"%b %d, %Y\",\n\t    numberFormat: \".2f\",\n\t    xDomain: \"auto\",\n\t    yDomain: \"auto\",\n\t    y2Domain: \"auto\",\n\t    xLock: false,\n\t    yLock: false,\n\t    y2Lock: false\n\t  };\n\t\n\t  var cache = {\n\t    container: _container,\n\t    root: null,\n\t    xHitZone: null,\n\t    yHitZone: null,\n\t    y2HitZone: null,\n\t    yMaxInput: null,\n\t    yMinInput: null,\n\t    yLockIcon: null,\n\t    y2MaxInput: null,\n\t    y2MinInput: null,\n\t    y2LockIcon: null,\n\t    xMinInput: null,\n\t    xMaxInput: null,\n\t    xLockIcon: null,\n\t    chartWidth: null,\n\t    chartHeight: null,\n\t    isEnabled: true\n\t  };\n\t\n\t  var scales = {\n\t    xScale: null,\n\t    yScale: null,\n\t    y2Scale: null,\n\t    hasSecondAxis: null\n\t\n\t    // events\n\t  };var dispatcher = d3.dispatch(\"domainChange\", \"domainLockToggle\");\n\t\n\t  function buildSVG() {\n\t    cache.chartWidth = config.width - config.margin.left - config.margin.right;\n\t    cache.chartHeight = config.height - config.margin.top - config.margin.bottom;\n\t    var xDomain = config.xDomain === \"auto\" ? scales.xScale.domain() : config.xDomain;\n\t    var yDomain = config.yDomain === \"auto\" ? scales.yScale.domain() : config.yDomain;\n\t    var y2Domain = config.y2Domain === \"auto\" && scales.y2Scale ? scales.y2Scale.domain() : config.y2Domain;\n\t\n\t    var xFormatter = function xFormatter(d) {\n\t      return d;\n\t    };\n\t    if (config.keyType === \"time\") {\n\t      xFormatter = d3.utcFormat(config.dateFormat);\n\t    } else if (config.keyType === \"number\") {\n\t      xFormatter = d3.format(config.numberFormat);\n\t    }\n\t\n\t    var yFormatter = d3.format(config.numberFormat);\n\t    var y2Formatter = d3.format(config.numberFormat);\n\t\n\t    if (!cache.root) {\n\t      cache.root = cache.container.append(\"div\").attr(\"class\", \"domain-input-group\").style(\"position\", \"absolute\").style(\"top\", 0);\n\t\n\t      // hit zones\n\t      cache.xHitZone = cache.root.append(\"div\").attr(\"class\", \"hit-zone x\").style(\"pointer-events\", \"all\").style(\"position\", \"absolute\").on(\"mouseover.dispatch\", showXEditor).on(\"mouseout.dispatch\", hideXEditor);\n\t\n\t      cache.yHitZone = cache.root.append(\"div\").attr(\"class\", \"hit-zone y\").style(\"pointer-events\", \"all\").style(\"position\", \"absolute\").on(\"mouseover.dispatch\", showYEditor).on(\"mouseout.dispatch\", hideYEditor);\n\t\n\t      cache.y2HitZone = cache.root.append(\"div\").attr(\"class\", \"hit-zone y2\").style(\"pointer-events\", \"all\").style(\"position\", \"absolute\");\n\t      if (scales.hasSecondAxis) {\n\t        cache.y2HitZone.on(\"mouseover.dispatch\", showY2Editor).on(\"mouseout.dispatch\", hideY2Editor);\n\t      }\n\t\n\t      // y input group\n\t      cache.yMaxInput = cache.yHitZone.append(\"div\").attr(\"class\", \"domain-input y max\").style(\"position\", \"absolute\").attr(\"contentEditable\", true).on(\"blur\", function change() {\n\t        var domain = scales.yScale.domain();\n\t        dispatcher.call(\"domainChange\", this, { axis: \"y\", extent: [domain[0], Number(this.innerText)] });\n\t      }).call(_interactors.blurOnEnter);\n\t\n\t      cache.yMinInput = cache.yHitZone.append(\"div\").attr(\"class\", \"domain-input y min\").style(\"position\", \"absolute\").attr(\"contentEditable\", true).on(\"blur\", function change() {\n\t        var domain = scales.yScale.domain();\n\t        dispatcher.call(\"domainChange\", this, { axis: \"y\", extent: [Number(this.innerText), domain[1]] });\n\t      }).call(_interactors.blurOnEnter);\n\t\n\t      cache.yLockIcon = cache.yHitZone.append(\"div\").attr(\"class\", \"domain-lock y\").style(\"position\", \"absolute\").on(\"click\", function change() {\n\t        var isLocked = this.classList.contains(\"locked\");\n\t        this.classList.toggle(\"locked\", !isLocked);\n\t        dispatcher.call(\"domainLockToggle\", this, { isLocked: !isLocked, axis: \"y\" });\n\t      });\n\t\n\t      // y2 input group\n\t      cache.y2MaxInput = cache.y2HitZone.append(\"div\").attr(\"class\", \"domain-input y2 max\").style(\"position\", \"absolute\").attr(\"contentEditable\", true).on(\"blur\", function change() {\n\t        var domain = scales.y2Scale.domain();\n\t        dispatcher.call(\"domainChange\", this, { axis: \"y2\", extent: [domain[0], Number(this.innerText)] });\n\t      }).call(_interactors.blurOnEnter);\n\t\n\t      cache.y2MinInput = cache.y2HitZone.append(\"div\").attr(\"class\", \"domain-input y2 min\").style(\"position\", \"absolute\").attr(\"contentEditable\", true).on(\"blur\", function change() {\n\t        var domain = scales.y2Scale.domain();\n\t        dispatcher.call(\"domainChange\", this, { axis: \"y2\", extent: [Number(this.innerText), domain[1]] });\n\t      }).call(_interactors.blurOnEnter);\n\t\n\t      cache.y2LockIcon = cache.y2HitZone.append(\"div\").attr(\"class\", \"domain-lock y2\").style(\"position\", \"absolute\").on(\"click\", function change() {\n\t        var isLocked = this.classList.contains(\"locked\");\n\t        this.classList.toggle(\"locked\", !isLocked);\n\t        dispatcher.call(\"domainLockToggle\", this, { isLocked: !isLocked, axis: \"y2\" });\n\t      });\n\t\n\t      // x input group\n\t      cache.xMinInput = cache.xHitZone.append(\"div\").attr(\"class\", \"domain-input x min\").style(\"position\", \"absolute\").attr(\"contentEditable\", true).on(\"blur\", function change() {\n\t        var domain = scales.xScale.domain();\n\t        var min = (0, _common.stringToType)(this.innerText, config.keyType);\n\t        dispatcher.call(\"domainChange\", this, { axis: \"x\", extent: [min, domain[1]] });\n\t      }).call(_interactors.blurOnEnter);\n\t\n\t      cache.xMaxInput = cache.xHitZone.append(\"div\").attr(\"class\", \"domain-input x max\").style(\"position\", \"absolute\").attr(\"contentEditable\", true).on(\"blur\", function change() {\n\t        var domain = scales.xScale.domain();\n\t        var max = (0, _common.stringToType)(this.innerText, config.keyType);\n\t        dispatcher.call(\"domainChange\", this, { axis: \"x\", extent: [domain[0], max] });\n\t      }).call(_interactors.blurOnEnter);\n\t\n\t      cache.xLockIcon = cache.xHitZone.append(\"div\").attr(\"class\", \"domain-lock x\").style(\"position\", \"absolute\").on(\"click\", function change() {\n\t        var isLocked = this.classList.contains(\"locked\");\n\t        this.classList.toggle(\"locked\", !isLocked);\n\t        dispatcher.call(\"domainLockToggle\", this, { isLocked: !isLocked, axis: \"x\" });\n\t      });\n\t\n\t      hideYEditor();\n\t      hideY2Editor();\n\t      hideXEditor();\n\t    }\n\t\n\t    var HOVER_ZONE_SIZE = 40;\n\t    var LOCK_SIZE = 12;\n\t    var INPUT_HEIGHT = 12;\n\t    var PADDING = 4;\n\t    var INPUT_WIDTH = HOVER_ZONE_SIZE - PADDING;\n\t\n\t    cache.xHitZone.style(\"width\", cache.chartWidth + HOVER_ZONE_SIZE * 2 + \"px\").style(\"height\", HOVER_ZONE_SIZE + \"px\").style(\"top\", config.margin.top + cache.chartHeight + \"px\").style(\"left\", config.margin.left - HOVER_ZONE_SIZE + \"px\");\n\t\n\t    cache.yHitZone.style(\"width\", HOVER_ZONE_SIZE + \"px\").style(\"height\", cache.chartHeight + HOVER_ZONE_SIZE + \"px\").style(\"top\", config.margin.top - HOVER_ZONE_SIZE + \"px\").style(\"left\", config.margin.left - HOVER_ZONE_SIZE + \"px\");\n\t\n\t    cache.y2HitZone.style(\"width\", HOVER_ZONE_SIZE + \"px\").style(\"height\", cache.chartHeight + HOVER_ZONE_SIZE + \"px\").style(\"top\", config.margin.top - HOVER_ZONE_SIZE + \"px\").style(\"left\", config.margin.left + cache.chartWidth + \"px\");\n\t\n\t    cache.yMaxInput.style(\"width\", INPUT_WIDTH + \"px\").style(\"top\", HOVER_ZONE_SIZE + \"px\").text(yFormatter(yDomain[1]));\n\t\n\t    cache.yMinInput.style(\"width\", INPUT_WIDTH + \"px\").style(\"top\", cache.chartHeight + HOVER_ZONE_SIZE - INPUT_HEIGHT + \"px\").text(yFormatter(yDomain[0]));\n\t\n\t    cache.yLockIcon.classed(\"locked\", config.yLock).style(\"width\", LOCK_SIZE + \"px\").style(\"height\", LOCK_SIZE + \"px\").style(\"left\", HOVER_ZONE_SIZE - LOCK_SIZE + \"px\").style(\"top\", HOVER_ZONE_SIZE - LOCK_SIZE + \"px\");\n\t\n\t    cache.y2MaxInput.style(\"width\", INPUT_WIDTH + \"px\").style(\"top\", HOVER_ZONE_SIZE + \"px\").style(\"left\", PADDING + \"px\").text(y2Formatter(y2Domain[1]));\n\t\n\t    cache.y2MinInput.style(\"width\", INPUT_WIDTH + \"px\").style(\"top\", cache.chartHeight + HOVER_ZONE_SIZE - INPUT_HEIGHT + \"px\").style(\"left\", PADDING + \"px\").text(y2Formatter(y2Domain[0]));\n\t\n\t    cache.y2LockIcon.classed(\"locked\", config.y2Lock).style(\"width\", LOCK_SIZE + \"px\").style(\"height\", LOCK_SIZE + \"px\").style(\"top\", HOVER_ZONE_SIZE - LOCK_SIZE + \"px\");\n\t\n\t    cache.xMinInput.style(\"width\", INPUT_WIDTH + \"px\").style(\"top\", PADDING + \"px\").style(\"left\", HOVER_ZONE_SIZE + \"px\").text(xFormatter(xDomain[0]));\n\t\n\t    cache.xMaxInput.style(\"width\", INPUT_WIDTH + \"px\").style(\"top\", PADDING + \"px\").style(\"left\", HOVER_ZONE_SIZE + cache.chartWidth - INPUT_WIDTH + \"px\").text(xFormatter(xDomain[1]));\n\t\n\t    cache.xLockIcon.classed(\"locked\", config.xLock).style(\"width\", LOCK_SIZE + \"px\").style(\"height\", LOCK_SIZE + \"px\").style(\"left\", HOVER_ZONE_SIZE + cache.chartWidth + \"px\");\n\t  }\n\t\n\t  function showYEditor() {\n\t    cache.yHitZone.style(\"opacity\", \"1\");\n\t  }\n\t\n\t  function hideYEditor() {\n\t    cache.yHitZone.style(\"opacity\", \"0\");\n\t  }\n\t\n\t  function showY2Editor() {\n\t    cache.y2HitZone.style(\"opacity\", \"1\");\n\t  }\n\t\n\t  function hideY2Editor() {\n\t    cache.y2HitZone.style(\"opacity\", \"0\");\n\t  }\n\t\n\t  function showXEditor() {\n\t    cache.xHitZone.style(\"opacity\", \"1\");\n\t  }\n\t\n\t  function hideXEditor() {\n\t    cache.xHitZone.style(\"opacity\", \"0\");\n\t  }\n\t\n\t  function drawDomainEditor() {\n\t    if (cache.isEnabled) {\n\t      buildSVG();\n\t    } else {\n\t      destroy();\n\t    }\n\t    return this;\n\t  }\n\t\n\t  function on() {\n\t    dispatcher.on.apply(dispatcher, arguments);\n\t    return this;\n\t  }\n\t\n\t  function setVisibility(_shouldBeVisible) {\n\t    cache.isEnabled = _shouldBeVisible;\n\t    drawDomainEditor();\n\t    return this;\n\t  }\n\t\n\t  function setScales(_scales) {\n\t    scales = (0, _common.override)(scales, _scales);\n\t    return this;\n\t  }\n\t\n\t  function setConfig(_config) {\n\t    config = (0, _common.override)(config, _config);\n\t    return this;\n\t  }\n\t\n\t  function destroy() {\n\t    if (cache.root) {\n\t      cache.root.remove();\n\t    }\n\t  }\n\t\n\t  return {\n\t    on: on,\n\t    setScales: setScales,\n\t    setConfig: setConfig,\n\t    drawDomainEditor: drawDomainEditor,\n\t    setVisibility: setVisibility,\n\t    destroy: destroy\n\t  };\n\t}\n\n/***/ }),\n/* 19 */\n/***/ (function(module, exports, __webpack_require__) {\n\n\t\"use strict\";\n\t\n\tObject.defineProperty(exports, \"__esModule\", {\n\t  value: true\n\t});\n\texports.default = BrushRangeEditor;\n\t\n\tvar _d3Service = __webpack_require__(2);\n\t\n\tvar d3 = _interopRequireWildcard(_d3Service);\n\t\n\tvar _common = __webpack_require__(6);\n\t\n\tvar _interactors = __webpack_require__(17);\n\t\n\tfunction _interopRequireWildcard(obj) { if (obj && obj.__esModule) { return obj; } else { var newObj = {}; if (obj != null) { for (var key in obj) { if (Object.prototype.hasOwnProperty.call(obj, key)) newObj[key] = obj[key]; } } newObj.default = obj; return newObj; } }\n\t\n\tfunction BrushRangeEditor(_container) {\n\t\n\t  var config = {\n\t    margin: {\n\t      top: 60,\n\t      right: 30,\n\t      bottom: 40,\n\t      left: 70\n\t    },\n\t    width: 800,\n\t    height: 500,\n\t    keyType: \"time\",\n\t    dateFormat: \"%b %d, %Y\",\n\t    numberFormat: \".2f\"\n\t  };\n\t\n\t  var cache = {\n\t    container: _container,\n\t    root: null,\n\t    inputMin: null,\n\t    inputMax: null,\n\t    rangeMin: null,\n\t    rangeMax: null,\n\t    chartWidth: null,\n\t    chartHeight: null,\n\t    isEnabled: true\n\t  };\n\t\n\t  var scales = {\n\t    xScale: null\n\t\n\t    // events\n\t  };var dispatcher = d3.dispatch(\"rangeChange\");\n\t\n\t  function buildSVG() {\n\t    cache.chartWidth = config.width - config.margin.left - config.margin.right;\n\t    cache.chartHeight = config.height - config.margin.top - config.margin.bottom;\n\t\n\t    if (!cache.root) {\n\t      cache.root = cache.container.append(\"div\").attr(\"class\", \"brush-range-input-group\").style(\"top\", 0);\n\t\n\t      cache.inputMax = cache.root.append(\"div\").attr(\"class\", \"brush-range-input max\").attr(\"contentEditable\", true).on(\"blur\", function change() {\n\t        cache.rangeMax = cache.inputMax.text();\n\t        dispatcher.call(\"rangeChange\", this, { value: cache.rangeMax, type: \"max\" });\n\t      }).call(_interactors.blurOnEnter).style(\"float\", \"right\");\n\t\n\t      cache.root.append(\"div\").attr(\"class\", \"separator\").text(\"-\").style(\"float\", \"right\");\n\t\n\t      cache.inputMin = cache.root.append(\"div\").attr(\"class\", \"brush-range-input min\").attr(\"contentEditable\", true).on(\"blur\", function change() {\n\t        cache.rangeMin = cache.inputMin.text();\n\t        dispatcher.call(\"rangeChange\", this, { value: cache.rangeMin, type: \"min\" });\n\t      }).call(_interactors.blurOnEnter).style(\"float\", \"right\");\n\t    }\n\t\n\t    var domain = scales.xScale.domain();\n\t    var rangeMin = cache.rangeMin === null ? domain[0] : cache.rangeMin;\n\t    var rangeMax = cache.rangeMax === null ? domain[1] : cache.rangeMax;\n\t    if (config.keyType === \"time\") {\n\t      var format = d3.utcFormat(config.dateFormat);\n\t      rangeMin = format(new Date(rangeMin));\n\t      rangeMax = format(new Date(rangeMax));\n\t    } else {\n\t      var _format = d3.format(config.numberFormat);\n\t      rangeMin = _format(rangeMin);\n\t      rangeMax = _format(rangeMax);\n\t    }\n\t\n\t    cache.inputMin.text(rangeMin);\n\t    cache.inputMax.text(rangeMax);\n\t  }\n\t\n\t  function drawRangeEditor() {\n\t    if (cache.isEnabled) {\n\t      buildSVG();\n\t    } else {\n\t      destroy();\n\t    }\n\t    return this;\n\t  }\n\t\n\t  function setRangeMin(_rangeMin) {\n\t    cache.rangeMin = _rangeMin;\n\t    return this;\n\t  }\n\t\n\t  function setRangeMax(_rangeMax) {\n\t    cache.rangeMax = _rangeMax;\n\t    return this;\n\t  }\n\t\n\t  function setVisibility(_shouldBeVisible) {\n\t    cache.isEnabled = _shouldBeVisible;\n\t    drawRangeEditor();\n\t    return this;\n\t  }\n\t\n\t  function on() {\n\t    dispatcher.on.apply(dispatcher, arguments);\n\t    return this;\n\t  }\n\t\n\t  function setConfig(_config) {\n\t    config = (0, _common.override)(config, _config);\n\t    return this;\n\t  }\n\t\n\t  function setScales(_scales) {\n\t    scales = (0, _common.override)(scales, _scales);\n\t    return this;\n\t  }\n\t\n\t  function destroy() {\n\t    if (cache.root) {\n\t      cache.root.remove();\n\t    }\n\t  }\n\t\n\t  return {\n\t    on: on,\n\t    setConfig: setConfig,\n\t    drawRangeEditor: drawRangeEditor,\n\t    setRangeMin: setRangeMin,\n\t    setRangeMax: setRangeMax,\n\t    setScales: setScales,\n\t    setVisibility: setVisibility\n\t  };\n\t}\n\n/***/ }),\n/* 20 */\n/***/ (function(module, exports, __webpack_require__) {\n\n\t\"use strict\";\n\t\n\tObject.defineProperty(exports, \"__esModule\", {\n\t  value: true\n\t});\n\texports.default = Label;\n\t\n\tvar _d3Service = __webpack_require__(2);\n\t\n\tvar d3 = _interopRequireWildcard(_d3Service);\n\t\n\tvar _common = __webpack_require__(6);\n\t\n\tfunction _interopRequireWildcard(obj) { if (obj && obj.__esModule) { return obj; } else { var newObj = {}; if (obj != null) { for (var key in obj) { if (Object.prototype.hasOwnProperty.call(obj, key)) newObj[key] = obj[key]; } } newObj.default = obj; return newObj; } }\n\t\n\tfunction Label(_container) {\n\t\n\t  var config = {\n\t    margin: {\n\t      top: 60,\n\t      right: 30,\n\t      bottom: 40,\n\t      left: 70\n\t    },\n\t    width: 800,\n\t    height: 500\n\t  };\n\t\n\t  var cache = {\n\t    container: _container,\n\t    root: null,\n\t    xAxisLabel: null,\n\t    yAxisLabel: null,\n\t    y2AxisLabel: null,\n\t    xLabel: null,\n\t    yLabel: null,\n\t    y2Label: null,\n\t    chartWidth: null,\n\t    chartHeight: null\n\t\n\t    // events\n\t  };var dispatcher = d3.dispatch(\"axisLabelChange\");\n\t\n\t  function buildSVG() {\n\t    cache.chartWidth = config.width - config.margin.left - config.margin.right;\n\t    cache.chartHeight = config.height - config.margin.top - config.margin.bottom;\n\t\n\t    if (!cache.root) {\n\t      cache.root = cache.container.append(\"div\").attr(\"class\", \"label-group\").style(\"position\", \"absolute\").style(\"top\", 0).style(\"white-space\", \"nowrap\");\n\t\n\t      cache.xAxisLabel = cache.root.append(\"div\").attr(\"class\", \"axis-label x\").style(\"position\", \"absolute\").attr(\"contentEditable\", true).on(\"blur\", function blur() {\n\t        config.xLabel = this.innerText;\n\t        dispatcher.call(\"axisLabelChange\", this, { value: this.innerText, type: \"x\" });\n\t      }).on(\"keypress\", function keypress() {\n\t        if (d3.event.key === \"Enter\") {\n\t          this.blur();\n\t        }\n\t      }).style(\"transform\", \"translate(-50%)\");\n\t\n\t      cache.yAxisLabel = cache.root.append(\"div\").attr(\"class\", \"axis-label y\").style(\"position\", \"absolute\").attr(\"contentEditable\", true).on(\"blur\", function blur() {\n\t        config.yLabel = this.innerText;\n\t        dispatcher.call(\"axisLabelChange\", this, { value: this.innerText, type: \"y\" });\n\t      }).on(\"keypress\", function keypress() {\n\t        if (d3.event.key === \"Enter\") {\n\t          this.blur();\n\t        }\n\t      }).style(\"left\", 0).style(\"transform\", \"translate(-50%) rotate(-90deg)\");\n\t\n\t      cache.y2AxisLabel = cache.root.append(\"div\").attr(\"class\", \"axis-label y2\").style(\"position\", \"absolute\").attr(\"contentEditable\", true).on(\"blur\", function blur() {\n\t        config.y2Label = this.innerText;\n\t        dispatcher.call(\"axisLabelChange\", this, { value: this.innerText, type: \"y2\" });\n\t      }).on(\"keypress\", function keypress() {\n\t        if (d3.event.key === \"Enter\") {\n\t          this.blur();\n\t        }\n\t      }).style(\"transform\", \"translate(-50%) rotate(90deg)\");\n\t    }\n\t\n\t    cache.xAxisLabel.text(config.xLabel).style(\"top\", function top() {\n\t      var textHeight = this.getBoundingClientRect().height;\n\t      return config.height - textHeight + \"px\";\n\t    }).style(\"left\", config.margin.left + cache.chartWidth / 2 + \"px\");\n\t\n\t    cache.yAxisLabel.text(config.yLabel).style(\"top\", config.margin.top + cache.chartHeight / 2 + \"px\").style(\"left\", function top() {\n\t      var textWidth = this.getBoundingClientRect().width;\n\t      return textWidth / 2 + \"px\";\n\t    });\n\t\n\t    cache.y2AxisLabel.text(config.y2Label).style(\"top\", config.margin.top + cache.chartHeight / 2 + \"px\").style(\"left\", function top() {\n\t      var textWidth = this.getBoundingClientRect().width;\n\t      return config.width - textWidth / 2 + \"px\";\n\t    });\n\t  }\n\t\n\t  function drawLabels() {\n\t    buildSVG();\n\t    return this;\n\t  }\n\t\n\t  function setXLabels(_xLabel) {\n\t    config.xLabel = _xLabel;\n\t    return this;\n\t  }\n\t\n\t  function setYLabels(_yLabel) {\n\t    config.yLabel = _yLabel;\n\t    return this;\n\t  }\n\t\n\t  function setY2Labels(_y2Label) {\n\t    config.y2Label = _y2Label;\n\t    return this;\n\t  }\n\t\n\t  function on() {\n\t    dispatcher.on.apply(dispatcher, arguments);\n\t    return this;\n\t  }\n\t\n\t  function setConfig(_config) {\n\t    config = (0, _common.override)(config, _config);\n\t    return this;\n\t  }\n\t\n\t  return {\n\t    on: on,\n\t    setConfig: setConfig,\n\t    setXLabels: setXLabels,\n\t    setYLabels: setYLabels,\n\t    setY2Labels: setY2Labels,\n\t    drawLabels: drawLabels\n\t  };\n\t}\n\n/***/ }),\n/* 21 */\n/***/ (function(module, exports, __webpack_require__) {\n\n\t\"use strict\";\n\t\n\tObject.defineProperty(exports, \"__esModule\", {\n\t  value: true\n\t});\n\texports.default = DataManager;\n\t\n\tvar _d3Service = __webpack_require__(2);\n\t\n\tvar d3 = _interopRequireWildcard(_d3Service);\n\t\n\tvar _constants = __webpack_require__(5);\n\t\n\tvar _common = __webpack_require__(6);\n\t\n\tfunction _interopRequireWildcard(obj) { if (obj && obj.__esModule) { return obj; } else { var newObj = {}; if (obj != null) { for (var key in obj) { if (Object.prototype.hasOwnProperty.call(obj, key)) newObj[key] = obj[key]; } } newObj.default = obj; return newObj; } }\n\t\n\tfunction _toConsumableArray(arr) { if (Array.isArray(arr)) { for (var i = 0, arr2 = Array(arr.length); i < arr.length; i++) { arr2[i] = arr[i]; } return arr2; } else { return Array.from(arr); } }\n\t\n\tfunction DataManager() {\n\t  /* eslint-disable no-magic-numbers */\n\t  var config = {\n\t    keyType: \"number\", // number, string, time,\n\t    range: [0, 100],\n\t    pointCount: 200,\n\t    groupCount: 2,\n\t    lineCount: 4\n\t  };\n\t  var cache = {\n\t    data: null,\n\t    baseDate: null\n\t\n\t    // accessors\n\t  };var getKey = function getKey(d) {\n\t    return d[_constants.keys.DATA];\n\t  };\n\t  var getID = function getID(d) {\n\t    return d[_constants.keys.ID];\n\t  };\n\t\n\t  var DAY_IN_MS = 1000 * 60 * 60 * 24;\n\t\n\t  function generateRandomString(_length) {\n\t    return Math.random().toString(36).replace(/[^a-z0-9]+/g, \"\").substr(0, _length || 5);\n\t  }\n\t\n\t  function generateSeries(_dataKeys, _range, _allowNegative) {\n\t    var value = d3.randomUniform.apply(d3, _toConsumableArray(_range))();\n\t    var variabilityRatio = 50;\n\t    var randomWalkStepSize = (_range[1] - _range[0]) / variabilityRatio;\n\t    var rnd = d3.randomNormal(0, 1);\n\t    return _dataKeys.map(function (d) {\n\t      value = value + rnd() * randomWalkStepSize;\n\t      if (!_allowNegative && value < randomWalkStepSize) {\n\t        value = value + randomWalkStepSize;\n\t      }\n\t      return {\n\t        value: value.toFixed(2),\n\t        key: config.keyType === \"time\" ? d.toISOString() : d\n\t      };\n\t    });\n\t  }\n\t\n\t  function generateTestDataset() {\n\t    var dataKeys = null;\n\t    if (config.keyType === \"time\") {\n\t      cache.baseDate = new Date();\n\t      var previousDate = new Date(cache.baseDate.getTime() - DAY_IN_MS * config.pointCount);\n\t      dataKeys = d3.timeDay.range(previousDate, cache.baseDate);\n\t    } else if (config.keyType === \"string\") {\n\t      dataKeys = d3.range(0, config.pointCount).map(function () {\n\t        return generateRandomString();\n\t      });\n\t      dataKeys.sort(function (a, b) {\n\t        return a.localeCompare(b, \"en\", { numeric: false });\n\t      });\n\t    } else if (config.keyType === \"number\") {\n\t      dataKeys = d3.range(0, config.pointCount).map(function (d, i) {\n\t        return i;\n\t      });\n\t    }\n\t\n\t    var series = d3.range(config.lineCount).map(function (d) {\n\t      return {\n\t        label: \"Label \" + d,\n\t        id: d,\n\t        group: d < config.groupCount ? d : 0,\n\t        values: generateSeries(dataKeys, config.range)\n\t      };\n\t    });\n\t\n\t    cache.data = { series: series\n\t\n\t      // console.log(\"generated data\", cache.data)\n\t\n\t    };return cache.data;\n\t  }\n\t\n\t  function cleanData(_data, _keyType, _dataType) {\n\t    var dataBySeries = (0, _common.cloneData)(_data[_constants.keys.SERIES]);\n\t    var flatData = [];\n\t\n\t    // Normalize dataBySeries\n\t    dataBySeries.forEach(function (serie) {\n\t      serie[_constants.keys.VALUES] = (0, _common.sortData)(serie[_constants.keys.VALUES], _keyType);\n\t      serie[_constants.keys.VALUES].forEach(function (d) {\n\t        d[_constants.keys.DATA] = _keyType === \"time\" ? new Date(d[_constants.keys.DATA]) : d[_constants.keys.DATA];\n\t        d[_constants.keys.VALUE] = Number(d[_constants.keys.VALUE]);\n\t      });\n\t    });\n\t\n\t    dataBySeries.forEach(function (serie) {\n\t      serie[_constants.keys.VALUES].forEach(function (d) {\n\t        var dataPoint = {};\n\t        dataPoint[_constants.keys.LABEL] = serie[_constants.keys.LABEL];\n\t        dataPoint[_constants.keys.GROUP] = serie[_constants.keys.GROUP];\n\t        dataPoint[_constants.keys.ID] = serie[_constants.keys.ID];\n\t        dataPoint[_constants.keys.DATA] = _keyType === \"time\" ? new Date(d[_constants.keys.DATA]) : d[_constants.keys.DATA];\n\t        dataPoint[_constants.keys.VALUE] = d[_constants.keys.VALUE];\n\t        flatData.push(dataPoint);\n\t      });\n\t    });\n\t\n\t    var flatDataSorted = (0, _common.sortData)(flatData, _keyType);\n\t\n\t    var dataByKey = d3.nest().key(getKey).entries(flatDataSorted).map(function (d) {\n\t      var dataPoint = {};\n\t      dataPoint[_constants.keys.DATA] = _keyType === \"time\" ? new Date(d.key) : d.key;\n\t      dataPoint[_constants.keys.SERIES] = d.values;\n\t      return dataPoint;\n\t    });\n\t\n\t    var groupKeys = {};\n\t    dataBySeries.forEach(function (d) {\n\t      if (!groupKeys[d[_constants.keys.GROUP]]) {\n\t        groupKeys[d[_constants.keys.GROUP]] = [];\n\t      }\n\t      groupKeys[d[_constants.keys.GROUP]].push(d[_constants.keys.ID]);\n\t    });\n\t\n\t    var stackData = dataByKey.map(function (d) {\n\t      var points = {\n\t        key: d[_constants.keys.DATA]\n\t      };\n\t      d.series.forEach(function (dB) {\n\t        points[dB[_constants.keys.ID]] = dB[_constants.keys.VALUE];\n\t      });\n\t\n\t      return points;\n\t    });\n\t\n\t    var stack = d3.stack().keys(dataBySeries.map(getID)).order(d3.stackOrderNone).offset(d3.stackOffsetNone);\n\t\n\t    return { dataBySeries: dataBySeries, dataByKey: dataByKey, stack: stack, stackData: stackData, flatDataSorted: flatDataSorted, groupKeys: groupKeys };\n\t  }\n\t\n\t  function getNearestDataPoint(_mouseX, _dataObject, _scales, _keyType) {\n\t    var keyFromInvertedX = (0, _common.invertScale)(_scales.xScale, _mouseX, _keyType);\n\t    var bisectLeft = d3.bisector(getKey).left;\n\t    var dataEntryIndex = bisectLeft(_dataObject.dataByKey, keyFromInvertedX);\n\t    var dataEntryForXPosition = _dataObject.dataByKey[dataEntryIndex];\n\t    var dataEntryForXPositionPrev = _dataObject.dataByKey[Math.max(dataEntryIndex - 1, 0)];\n\t\n\t    var nearestDataPoint = null;\n\t    if (keyFromInvertedX && dataEntryForXPosition && dataEntryForXPositionPrev) {\n\t      if (keyFromInvertedX - dataEntryForXPositionPrev.key < dataEntryForXPosition.key - keyFromInvertedX) {\n\t        nearestDataPoint = dataEntryForXPositionPrev;\n\t      } else {\n\t        nearestDataPoint = dataEntryForXPosition;\n\t      }\n\t    }\n\t    return nearestDataPoint;\n\t  }\n\t\n\t  function filterByKey(_extent) {\n\t    var data = (0, _common.cloneData)(cache.data);\n\t\n\t    data[_constants.keys.SERIES].forEach(function (series) {\n\t      var values = series[_constants.keys.VALUES];\n\t      var allKeys = values.map(function (d) {\n\t        return d[_constants.keys.DATA];\n\t      });\n\t      var extentMinIndex = allKeys.indexOf(_extent[0]);\n\t      var extentMaxIndex = allKeys.indexOf(_extent[1]);\n\t      series[_constants.keys.VALUES] = series[_constants.keys.VALUES].slice(extentMinIndex, extentMaxIndex);\n\t    });\n\t\n\t    return data;\n\t  }\n\t\n\t  function filterByDate(_dateExtent) {\n\t    var data = (0, _common.cloneData)(cache.data);\n\t\n\t    data[_constants.keys.SERIES].forEach(function (series) {\n\t      series[_constants.keys.VALUES] = series[_constants.keys.VALUES].filter(function (d) {\n\t        var epoch = new Date(d[_constants.keys.DATA]).getTime();\n\t        return epoch >= _dateExtent[0].getTime() && epoch <= _dateExtent[1].getTime();\n\t      });\n\t    });\n\t\n\t    return data;\n\t  }\n\t\n\t  function setConfig(_config) {\n\t    config = Object.assign({}, config, _config);\n\t    return this;\n\t  }\n\t\n\t  function loadCSVData(filename) {\n\t    return new Promise(function (resolve, reject) {\n\t      d3.text(filename, function (text) {\n\t        if (text) {\n\t          resolve(d3.csvParseRows(text));\n\t        } else {\n\t          reject(\"Cannot load \" + filename);\n\t        }\n\t      });\n\t    });\n\t  }\n\t\n\t  return {\n\t    generateTestDataset: generateTestDataset,\n\t    generateSeries: generateSeries,\n\t    cleanData: cleanData,\n\t    getNearestDataPoint: getNearestDataPoint,\n\t    filterByDate: filterByDate,\n\t    filterByKey: filterByKey,\n\t    setConfig: setConfig,\n\t    loadCSVData: loadCSVData\n\t  };\n\t}\n\n/***/ }),\n/* 22 */\n/***/ (function(module, exports, __webpack_require__) {\n\n\t\"use strict\";\n\t\n\tObject.defineProperty(exports, \"__esModule\", {\n\t  value: true\n\t});\n\texports.default = Observer;\n\t\n\tvar _d3Service = __webpack_require__(2);\n\t\n\tvar d3 = _interopRequireWildcard(_d3Service);\n\t\n\tfunction _interopRequireWildcard(obj) { if (obj && obj.__esModule) { return obj; } else { var newObj = {}; if (obj != null) { for (var key in obj) { if (Object.prototype.hasOwnProperty.call(obj, key)) newObj[key] = obj[key]; } } newObj.default = obj; return newObj; } }\n\t\n\tfunction Observer(_dataManager) {\n\t  var dispatcher = d3.dispatch(\"brushChange\", \"dataFilter\");\n\t  var dataManager = _dataManager;\n\t\n\t  dispatcher.on(\"brushChange.observer\", function (_e, _brushConfig) {\n\t    var filtered = _brushConfig.keyType === \"time\" ? dataManager.filterByDate(_e) : dataManager.filterByKey(_e);\n\t    pub(\"dataFilter\", filtered);\n\t  });\n\t\n\t  function sub() {\n\t    dispatcher.on.apply(dispatcher, arguments);\n\t    return this;\n\t  }\n\t\n\t  function pub(_channelName) {\n\t    for (var _len = arguments.length, args = Array(_len > 1 ? _len - 1 : 0), _key = 1; _key < _len; _key++) {\n\t      args[_key - 1] = arguments[_key];\n\t    }\n\t\n\t    dispatcher.call.apply(dispatcher, [_channelName, this].concat(args));\n\t    return this;\n\t  }\n\t\n\t  return {\n\t    sub: sub,\n\t    pub: pub\n\t  };\n\t}\n\n/***/ })\n/******/ ])\n});\n;\n\n\n// WEBPACK FOOTER //\n// mapd3.min.js"," \t// The module cache\n \tvar installedModules = {};\n\n \t// The require function\n \tfunction __webpack_require__(moduleId) {\n\n \t\t// Check if module is in cache\n \t\tif(installedModules[moduleId])\n \t\t\treturn installedModules[moduleId].exports;\n\n \t\t// Create a new module (and put it into the cache)\n \t\tvar module = installedModules[moduleId] = {\n \t\t\texports: {},\n \t\t\tid: moduleId,\n \t\t\tloaded: false\n \t\t};\n\n \t\t// Execute the module function\n \t\tmodules[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n\n \t\t// Flag the module as loaded\n \t\tmodule.loaded = true;\n\n \t\t// Return the exports of the module\n \t\treturn module.exports;\n \t}\n\n\n \t// expose the modules object (__webpack_modules__)\n \t__webpack_require__.m = modules;\n\n \t// expose the module cache\n \t__webpack_require__.c = installedModules;\n\n \t// __webpack_public_path__\n \t__webpack_require__.p = \"\";\n\n \t// Load entry module and return exports\n \treturn __webpack_require__(0);\n\n\n\n// WEBPACK FOOTER //\n// webpack/bootstrap 43b7664c9911dda89288","import Chart from \"./charts/chart.js\"\nimport Tooltip from \"./charts/tooltip.js\"\nimport Legend from \"./charts/legend.js\"\nimport DataManager from \"./charts/data-manager.js\"\nimport Observer from \"./charts/observer.js\"\nimport Binning from \"./charts/binning.js\"\nimport DomainEditor from \"./charts/domain-editor.js\"\nimport BrushRangeEditor from \"./charts/brush-range-editor.js\"\nimport Label from \"./charts/label.js\"\nimport Brush from \"./charts/brush.js\"\nimport Hover from \"./charts/hover.js\"\nimport Interactors from \"./charts/interactors.js\"\nimport {colors} from \"./charts/helpers/colors.js\"\nimport Sunburst from \"./charts/sunburst.js\"\n\nexport {\n  Chart,\n  Tooltip,\n  Legend,\n  DataManager,\n  Observer,\n  Binning,\n  DomainEditor,\n  BrushRangeEditor,\n  Label,\n  Brush,\n  Hover,\n  Interactors,\n  colors,\n  Sunburst\n}\n\n\n\n// WEBPACK FOOTER //\n// ./src/bundle.js","import * as d3 from \"./helpers/d3-service\"\n\nimport {colors} from \"./helpers/colors\"\n\n\nimport {keys} from \"./helpers/constants\"\nimport {cloneData, override, throttle, rebind} from \"./helpers/common\"\n\nimport Scale from \"./scale\"\nimport Line from \"./line\"\nimport Bar from \"./bar\"\nimport Sunburst from \"./sunburst\"\nimport Axis from \"./axis\"\nimport Tooltip from \"./tooltip\"\nimport Legend from \"./legend\"\nimport Brush from \"./brush\"\nimport Hover from \"./hover\"\nimport Binning from \"./binning\"\nimport DomainEditor from \"./domain-editor\"\nimport BrushRangeEditor from \"./brush-range-editor\"\nimport Label from \"./label\"\nimport DataManager from \"./data-manager\"\n\nexport default function Chart (_container) {\n\n  let config = {\n    // common\n    margin: {\n      top: 48,\n      right: 32,\n      bottom: 48,\n      left: 32\n    },\n    width: 800,\n    height: 500,\n    keyType: \"time\",\n    chartType: null, // line, area, stackedLine, stackedArea\n    ease: d3.easeLinear,\n\n    // intro animation\n    isAnimated: false,\n    animationDuration: 1500,\n\n    // scale\n    colorSchema: colors.mapdColors.map((d) => ({value: d})),\n    defaultColor: \"skyblue\",\n    xDomain: \"auto\",\n    yDomain: \"auto\",\n    y2Domain: \"auto\",\n\n    // axis\n    tickPadding: 5,\n    xAxisFormat: \"auto\",\n    yAxisFormat: \".2f\",\n    y2AxisFormat: \".2f\",\n    tickSizes: 8,\n    yTicks: \"auto\",\n    y2Ticks: \"auto\",\n    xTickSkip: 0,\n    grid: null,\n    axisTransitionDuration: 0,\n\n    xTitle: \"\",\n    yTitle: \"\",\n\n    // hover\n    dotRadius: 4,\n\n    // tooltip\n    mouseChaseDuration: 0,\n    tooltipEase: d3.easeQuadInOut,\n    tooltipHeight: 48,\n    tooltipWidth: 160,\n    seriesOrder: [],\n\n    // format\n    dateFormat: \"%b %d, %Y\",\n    numberFormat: \".2f\",\n\n    // legend\n    legendXPosition: \"auto\",\n    legendYPosition: \"auto\",\n    legendTitle: \"\",\n    legendIsEnabled: true,\n\n    // binning\n    binningResolution: \"1mo\",\n    binningIsAuto: true,\n    binningToggles: [\"10y\", \"1y\", \"1q\", \"1mo\"],\n    binningIsEnabled: true,\n\n    // domain\n    domainEditorIsEnabled: true,\n\n    // brush range\n    brushRangeMin: null,\n    brushRangeMax: null,\n    brushRangeIsEnabled: true,\n\n    // brush\n    brushIsEnabled: true,\n\n    // label\n    xLabel: \"\",\n    yLabel: \"\",\n    y2Label: \"\",\n    fileData: null\n  }\n\n  let scales = {\n    xScale: null,\n    yScale: null,\n    y2Scale: null,\n    hasSecondAxis: null,\n    colorScale: null\n  }\n\n  const cache = {\n    container: _container,\n    svg: null,\n    panel: null,\n    margin: null,\n    maskingRectangle: null,\n    chartWidth: null, chartHeight: null,\n    xAxis: null, yAxis: null, yAxis2: null\n  }\n\n  const dataObject = {\n    dataBySeries: null,\n    dataByKey: null,\n    data: null,\n    groupKeys: {},\n    hasSecondAxis: false,\n    stackData: null,\n    stack: null,\n    flatDataSorted: null\n  }\n\n  const components = {}\n  const eventCollector = {}\n\n  // events\n  const dispatcher = d3.dispatch(\"mouseOverPanel\", \"mouseOutPanel\", \"mouseMovePanel\")\n  const dataManager = DataManager()\n\n  function render () {\n\n    buildSVG()\n\n    if (dataObject.dataBySeries) {\n      console.log(\"buildChart\")\n      buildChart()\n    }\n\n    return this\n  }\n\n  function buildSVG () {\n    console.log(`chart > buildSVG ${config.chartType}`);\n\n    const w = config.width === \"auto\" ? cache.container.clientWidth : config.width\n    const h = config.height === \"auto\" ? cache.container.clientHeight : config.height\n    cache.chartWidth = Math.max(w - config.margin.left - config.margin.right, 0)\n    cache.chartHeight = Math.max(h - config.margin.top - config.margin.bottom, 0)\n\n    let template;\n\n    if (!cache.svg) {\n\n      //if (config.chartType === \"line\" || config.chartType === \"area\" || config.chartType === \"stackedArea\") {\n\n        template = `<div class=\"mapd3 mapd3-container\">\n          <div class=\"header-group\" style=\"display: none;\"></div>\n            <svg class=\"chart\">\n              <g class=\"chart-group\"></g>\n              <g class=\"panel-group\">\n                <rect class=\"panel-background\"></rect>\n              </g>\n              <rect class=\"masking-rectangle\"></rect>\n            </svg>\n        </div>`\n      //} else {\n        /*template = `<div id=\"main\">\n          <div id=\"sequence\"></div>\n          <div id=\"chart\">\n            <div id=\"explanation\" style=\"visibility: hidden;\">\n              <span id=\"percentage\"></span><br/>\n              of visits begin with this sequence of pages\n            </div>\n          </div>\n        </div>\n        <div id=\"sidebar\">\n          <input type=\"checkbox\" id=\"togglelegend\"> Legend<br/>\n          <div id=\"legend\" style=\"visibility: hidden;\"></div>\n        </div>`*/\n      //}\n\n      const base = d3.select(cache.container)\n          .html(template)\n\n\n      cache.container = base.select(\".mapd3-container\")\n          .style(\"position\", \"relative\")\n\n      cache.svg = base.select(\"svg\")\n      cache.headerGroup = base.select(\".header-group\")\n          .style(\"position\", \"absolute\")\n      cache.panel = cache.svg.select(\".panel-group\")\n      cache.chart = cache.svg.select(\".chart-group\")\n\n      addEvents()\n\n      Object.assign(components, {\n        scale: Scale(),\n        axis: (config.chartType === \"line\" || config.chartType === \"area\" || config.chartType === \"stackedArea\") ? Axis(cache.chart) : null,\n        line: (config.chartType === \"line\" || config.chartType === \"area\" || config.chartType === \"stackedArea\") ? Line(cache.panel) : null,\n        bar: (config.chartType === \"bar\") ? Bar(cache.panel) : null,\n        sunburst: (config.chartType === \"sunburst\") ? Sunburst(cache.panel) : null,\n        tooltip: Tooltip(cache.container),\n        legend: Legend(cache.container),\n        brush: Brush(cache.panel),\n        hover: Hover(cache.panel),\n        binning: Binning(cache.headerGroup),\n        domainEditor: DomainEditor(cache.container),\n        brushRangeEditor: BrushRangeEditor(cache.headerGroup),\n        label: Label(cache.container)\n      })\n\n      Object.assign(eventCollector, {\n        onBrush: rebind(components.brush),\n        onHover: rebind(components.hover),\n        onBinning: rebind(components.binning),\n        onDomainEditor: rebind(components.domainEditor),\n        onBrushRangeEditor: rebind(components.brushRangeEditor),\n        onLabel: rebind(components.label),\n        onPanel: rebind(dispatcher)\n      });\n\n    }\n\n\n    cache.svg\n      .attr(\"width\", config.width)\n      .attr(\"height\", config.height)\n\n    cache.headerGroup\n      .style(\"width\", `${cache.chartWidth}px`)\n      .style(\"left\", `${config.margin.left}px`)\n\n    cache.panel\n      .attr(\"transform\", `translate(${config.margin.left},${config.margin.top})`)\n      .select(\".panel-background\")\n      .attr(\"width\", cache.chartWidth)\n      .attr(\"height\", cache.chartHeight)\n      .attr(\"fill\", \"transparent\")\n\n\n    return this\n  }\n\n  function buildChart () {\n\n    if (components.scale) {\n      components.scale\n        .setConfig(config)\n        .setData(dataObject)\n      scales = components.scale.getScales()\n    }\n\n    if (components.axis) {\n      components.axis\n        .setConfig(config)\n        .setScales(scales)\n        .drawAxis()\n        .drawGridLines()\n    }\n\n    /*\n    // TODO refactor 'config.chartType'\n    if (components[config.chartType]) {\n      components[config.chartType]\n        .setConfig(config)\n        .setScales(scales)\n        .loadData()\n        .setData(dataObject)\n        .drawMarks()\n    }\n    */\n\n\n\n    if(components.line) {\n      components.line\n        .setConfig(config)\n        .setScales(scales)\n        .loadData()\n        .setData(dataObject)\n        .drawMarks()\n    }\n\n    if(components.bar) {\n      components.bar\n        .setConfig(config)\n        .setScales(scales)\n        .loadData()\n        .setData(dataObject)\n        .drawMarks()\n    }\n\n    if(components.sunburst) {\n      console.log(\"ENTRA A SUNBURST!!!!\")\n      components.sunburst\n        .setConfig(config)\n        .setScales(scales)\n        .loadData()\n        .setData(dataObject)\n        //.drawMarks()\n    }\n\n\n    components.tooltip\n      .setConfig(config)\n      .setScales(scales)\n      .bindEvents(dispatcher)\n      .setVisibility(config.tooltipIsEnabled)\n\n    const legendContent = dataObject.dataBySeries\n        .map((d) => ({\n          id: d.id,\n          key: d.key,\n          label: d.label\n        }))\n\n    components.legend\n      .setConfig(config)\n      .setScales(scales)\n      .setTitle(config.legendTitle)\n      .setContent(legendContent)\n      .setXPosition(config.legendXPosition)\n      .setYPosition(config.legendYPosition)\n      .drawTooltip()\n      .setVisibility(config.legendIsEnabled)\n\n    components.brush\n      .setConfig(config)\n      .setScales(scales)\n      .setData(dataObject)\n      .setBrushExtent([config.brushRangeMin, config.brushRangeMax])\n      .setVisibility(config.brushIsEnabled)\n      .drawBrush()\n\n    components.hover\n      .setConfig(config)\n      .setScales(scales)\n      .setData(dataObject)\n      .bindEvents(dispatcher)\n\n    components.binning\n      .setConfig(config)\n      .setBinning(config.binningResolution)\n      .setAuto(config.binningIsAuto)\n      .drawBinning()\n      .setVisibility(config.binningIsEnabled)\n\n    components.domainEditor\n      .setConfig(config)\n      .setScales(scales)\n      .drawDomainEditor()\n      .setVisibility(config.domainEditorIsEnabled)\n\n    components.brushRangeEditor\n      .setConfig(config)\n      .setScales(scales)\n      .setRangeMin(config.brushRangeMin)\n      .setRangeMax(config.brushRangeMax)\n      .drawRangeEditor()\n      .setVisibility(config.brushRangeIsEnabled)\n\n    components.label\n      .setConfig(config)\n      .setXLabels(config.xLabel)\n      .setYLabels(config.yLabel)\n      .setY2Labels(config.y2Label)\n      .drawLabels()\n\n    triggerIntroAnimation()\n    return this\n  }\n\n  function setData (_data) {\n    console.log(_data);\n    dataObject.data = cloneData(_data[keys.SERIES])\n    const cleanedData = dataManager.cleanData(_data, config.keyType)\n    Object.assign(dataObject, cleanedData)\n\n    render()\n    return this\n  }\n\n  function loadData () {\n    if(config.fileData === null) throw new Error(\"There is no file to be loaded. `fileData` variable should be set.\");\n\n    d3.text(config.fileData, (text) => {\n        console.log(\"entra\")\n        let csv = d3.csvParseRows(text)\n        let json = buildHierarchy(csv)\n        console.log(csv)\n        //createVisualization(json);\n      })\n    return this\n  }\n\n  function triggerIntroAnimation () {\n    if (config.isAnimated) {\n      cache.maskingRectangle = cache.svg.select(\".masking-rectangle\")\n        .attr(\"width\", cache.chartWidth - 2)\n        .attr(\"height\", cache.chartHeight)\n        .attr(\"x\", config.margin.left + 1)\n        .attr(\"y\", config.margin.top)\n\n      cache.maskingRectangle.transition()\n        .duration(config.animationDuration)\n        .ease(config.ease)\n        .attr(\"width\", 0)\n        .attr(\"x\", config.width - config.margin.right)\n        .on(\"end\", () => cache.maskingRectangle.remove())\n    }\n  }\n\n  function addEvents () {\n    const THROTTLE_DELAY = 20\n    const throttledDispatch = throttle((...args) => {\n      dispatcher.call(...args)\n    }, THROTTLE_DELAY)\n\n    cache.panel\n      .on(\"mouseover.dispatch\", () => {\n        dispatcher.call(\"mouseOverPanel\", null, d3.mouse(cache.panel.node()))\n      })\n      .on(\"mouseout.dispatch\", () => {\n        dispatcher.call(\"mouseOutPanel\", null, d3.mouse(cache.panel.node()))\n      })\n      .on(\"mousemove.dispatch\", () => {\n        const [mouseX, mouseY] = d3.mouse(cache.panel.node())\n        if (!dataObject.data) { return }\n        const xPosition = mouseX\n        const dataPoint = dataManager.getNearestDataPoint(xPosition, dataObject, scales, config.keyType)\n\n        if (dataPoint) {\n          const dataPointXPosition = scales.xScale(dataPoint[keys.DATA])\n          throttledDispatch(\"mouseMovePanel\", null, dataPoint, dataPointXPosition, mouseY)\n        }\n      })\n  }\n\n  function getEvents () {\n    if (!cache.svg) {\n      render()\n    }\n    return eventCollector\n  }\n\n  function on (...args) {\n    dispatcher.on(...args)\n    return this\n  }\n\n  function setConfig (_config) {\n    config = override(config, _config)\n    return this\n  }\n\n  function destroy () {\n    cache.svg.on(\".\", null).remove()\n  }\n\n  function csvToJson (csv) {\n    let json = {\"series\": []};\n    let labels = [];\n\n\n    let addLabel;\n\n    csv.forEach((row, index) => {\n      if(index === 0) {\n        labels.push(getObjectToPush(row[0], index, 0, []));\n      } else {\n        addLabel = true;\n        labels.forEach(label => {\n          if(row[0] === label[\"label\"]) {\n            addLabel = false;\n          }\n        });\n\n        if(addLabel) {\n          labels.push(getObjectToPush(row[0], index, 0, []));\n        }\n      }\n    });\n\n    let __index__;\n    labels.forEach((label, index) => {\n      __index__ = 0;\n      csv.forEach((key, value) => {\n        if(label[\"label\"] === key[0]) {\n          label[\"values\"].push({\n            value: key[1],\n            key: __index__\n          });\n          __index__++;\n        }\n      })\n    });\n\n\n    json[\"series\"] = labels;\n    console.log(json);\n    return json;\n  }\n\n  function getObjectToPush(label, id, group, values) {\n    return {\n      label,\n      id,\n      group,\n      values\n    };\n  }\n\n    return {\n      render,\n      setConfig,\n      setData,\n      on,\n      destroy,\n      getEvents,\n      loadData,\n      csvToJson\n  }\n}\n\n\n\n// WEBPACK FOOTER //\n// ./src/charts/chart.js","export {\n\taxisBottom,\n\taxisLeft,\n\taxisRight,\n\ttimeFormat,\n\tutcFormat,\n\tformat,\n\tbisector,\n\textent,\n\tsum,\n\trange,\n\tmerge,\n\tnest,\n\tdispatch,\n\teaseLinear,\n\teaseQuadInOut,\n\tselect,\n\tmouse,\n\tevent,\n\ttransition,\n\trandomUniform,\n\trandomNormal,\n\ttimeDay,\n\ttimeMonth,\n\tarea,\n\tcurveCatmullRom,\n\tline,\n\tstack,\n\tstackOffsetNone,\n\tstackOrderNone,\n\tscaleTime,\n\tscalePoint,\n\tscaleBand,\n\tscaleLinear,\n\tscaleOrdinal,\n\tbrushX,\n  arc,\n  partition,\n  csvParseRows,\n  text,\n  hierarchy,\n  keys,\n  entries,\n  selectAll\n} from \"d3/build/d3\"\n\n\n\n// WEBPACK FOOTER //\n// ./src/charts/helpers/d3-service.js","// https://d3js.org Version 4.11.0. Copyright 2017 Mike Bostock.\n(function (global, factory) {\n\ttypeof exports === 'object' && typeof module !== 'undefined' ? factory(exports) :\n\ttypeof define === 'function' && define.amd ? define(['exports'], factory) :\n\t(factory((global.d3 = global.d3 || {})));\n}(this, (function (exports) { 'use strict';\n\nvar version = \"4.11.0\";\n\nvar ascending = function(a, b) {\n  return a < b ? -1 : a > b ? 1 : a >= b ? 0 : NaN;\n};\n\nvar bisector = function(compare) {\n  if (compare.length === 1) compare = ascendingComparator(compare);\n  return {\n    left: function(a, x, lo, hi) {\n      if (lo == null) lo = 0;\n      if (hi == null) hi = a.length;\n      while (lo < hi) {\n        var mid = lo + hi >>> 1;\n        if (compare(a[mid], x) < 0) lo = mid + 1;\n        else hi = mid;\n      }\n      return lo;\n    },\n    right: function(a, x, lo, hi) {\n      if (lo == null) lo = 0;\n      if (hi == null) hi = a.length;\n      while (lo < hi) {\n        var mid = lo + hi >>> 1;\n        if (compare(a[mid], x) > 0) hi = mid;\n        else lo = mid + 1;\n      }\n      return lo;\n    }\n  };\n};\n\nfunction ascendingComparator(f) {\n  return function(d, x) {\n    return ascending(f(d), x);\n  };\n}\n\nvar ascendingBisect = bisector(ascending);\nvar bisectRight = ascendingBisect.right;\nvar bisectLeft = ascendingBisect.left;\n\nvar pairs = function(array, f) {\n  if (f == null) f = pair;\n  var i = 0, n = array.length - 1, p = array[0], pairs = new Array(n < 0 ? 0 : n);\n  while (i < n) pairs[i] = f(p, p = array[++i]);\n  return pairs;\n};\n\nfunction pair(a, b) {\n  return [a, b];\n}\n\nvar cross = function(values0, values1, reduce) {\n  var n0 = values0.length,\n      n1 = values1.length,\n      values = new Array(n0 * n1),\n      i0,\n      i1,\n      i,\n      value0;\n\n  if (reduce == null) reduce = pair;\n\n  for (i0 = i = 0; i0 < n0; ++i0) {\n    for (value0 = values0[i0], i1 = 0; i1 < n1; ++i1, ++i) {\n      values[i] = reduce(value0, values1[i1]);\n    }\n  }\n\n  return values;\n};\n\nvar descending = function(a, b) {\n  return b < a ? -1 : b > a ? 1 : b >= a ? 0 : NaN;\n};\n\nvar number = function(x) {\n  return x === null ? NaN : +x;\n};\n\nvar variance = function(values, valueof) {\n  var n = values.length,\n      m = 0,\n      i = -1,\n      mean = 0,\n      value,\n      delta,\n      sum = 0;\n\n  if (valueof == null) {\n    while (++i < n) {\n      if (!isNaN(value = number(values[i]))) {\n        delta = value - mean;\n        mean += delta / ++m;\n        sum += delta * (value - mean);\n      }\n    }\n  }\n\n  else {\n    while (++i < n) {\n      if (!isNaN(value = number(valueof(values[i], i, values)))) {\n        delta = value - mean;\n        mean += delta / ++m;\n        sum += delta * (value - mean);\n      }\n    }\n  }\n\n  if (m > 1) return sum / (m - 1);\n};\n\nvar deviation = function(array, f) {\n  var v = variance(array, f);\n  return v ? Math.sqrt(v) : v;\n};\n\nvar extent = function(values, valueof) {\n  var n = values.length,\n      i = -1,\n      value,\n      min,\n      max;\n\n  if (valueof == null) {\n    while (++i < n) { // Find the first comparable value.\n      if ((value = values[i]) != null && value >= value) {\n        min = max = value;\n        while (++i < n) { // Compare the remaining values.\n          if ((value = values[i]) != null) {\n            if (min > value) min = value;\n            if (max < value) max = value;\n          }\n        }\n      }\n    }\n  }\n\n  else {\n    while (++i < n) { // Find the first comparable value.\n      if ((value = valueof(values[i], i, values)) != null && value >= value) {\n        min = max = value;\n        while (++i < n) { // Compare the remaining values.\n          if ((value = valueof(values[i], i, values)) != null) {\n            if (min > value) min = value;\n            if (max < value) max = value;\n          }\n        }\n      }\n    }\n  }\n\n  return [min, max];\n};\n\nvar array = Array.prototype;\n\nvar slice = array.slice;\nvar map = array.map;\n\nvar constant = function(x) {\n  return function() {\n    return x;\n  };\n};\n\nvar identity = function(x) {\n  return x;\n};\n\nvar sequence = function(start, stop, step) {\n  start = +start, stop = +stop, step = (n = arguments.length) < 2 ? (stop = start, start = 0, 1) : n < 3 ? 1 : +step;\n\n  var i = -1,\n      n = Math.max(0, Math.ceil((stop - start) / step)) | 0,\n      range = new Array(n);\n\n  while (++i < n) {\n    range[i] = start + i * step;\n  }\n\n  return range;\n};\n\nvar e10 = Math.sqrt(50);\nvar e5 = Math.sqrt(10);\nvar e2 = Math.sqrt(2);\n\nvar ticks = function(start, stop, count) {\n  var reverse,\n      i = -1,\n      n,\n      ticks,\n      step;\n\n  stop = +stop, start = +start, count = +count;\n  if (start === stop && count > 0) return [start];\n  if (reverse = stop < start) n = start, start = stop, stop = n;\n  if ((step = tickIncrement(start, stop, count)) === 0 || !isFinite(step)) return [];\n\n  if (step > 0) {\n    start = Math.ceil(start / step);\n    stop = Math.floor(stop / step);\n    ticks = new Array(n = Math.ceil(stop - start + 1));\n    while (++i < n) ticks[i] = (start + i) * step;\n  } else {\n    start = Math.floor(start * step);\n    stop = Math.ceil(stop * step);\n    ticks = new Array(n = Math.ceil(start - stop + 1));\n    while (++i < n) ticks[i] = (start - i) / step;\n  }\n\n  if (reverse) ticks.reverse();\n\n  return ticks;\n};\n\nfunction tickIncrement(start, stop, count) {\n  var step = (stop - start) / Math.max(0, count),\n      power = Math.floor(Math.log(step) / Math.LN10),\n      error = step / Math.pow(10, power);\n  return power >= 0\n      ? (error >= e10 ? 10 : error >= e5 ? 5 : error >= e2 ? 2 : 1) * Math.pow(10, power)\n      : -Math.pow(10, -power) / (error >= e10 ? 10 : error >= e5 ? 5 : error >= e2 ? 2 : 1);\n}\n\nfunction tickStep(start, stop, count) {\n  var step0 = Math.abs(stop - start) / Math.max(0, count),\n      step1 = Math.pow(10, Math.floor(Math.log(step0) / Math.LN10)),\n      error = step0 / step1;\n  if (error >= e10) step1 *= 10;\n  else if (error >= e5) step1 *= 5;\n  else if (error >= e2) step1 *= 2;\n  return stop < start ? -step1 : step1;\n}\n\nvar sturges = function(values) {\n  return Math.ceil(Math.log(values.length) / Math.LN2) + 1;\n};\n\nvar histogram = function() {\n  var value = identity,\n      domain = extent,\n      threshold = sturges;\n\n  function histogram(data) {\n    var i,\n        n = data.length,\n        x,\n        values = new Array(n);\n\n    for (i = 0; i < n; ++i) {\n      values[i] = value(data[i], i, data);\n    }\n\n    var xz = domain(values),\n        x0 = xz[0],\n        x1 = xz[1],\n        tz = threshold(values, x0, x1);\n\n    // Convert number of thresholds into uniform thresholds.\n    if (!Array.isArray(tz)) {\n      tz = tickStep(x0, x1, tz);\n      tz = sequence(Math.ceil(x0 / tz) * tz, Math.floor(x1 / tz) * tz, tz); // exclusive\n    }\n\n    // Remove any thresholds outside the domain.\n    var m = tz.length;\n    while (tz[0] <= x0) tz.shift(), --m;\n    while (tz[m - 1] > x1) tz.pop(), --m;\n\n    var bins = new Array(m + 1),\n        bin;\n\n    // Initialize bins.\n    for (i = 0; i <= m; ++i) {\n      bin = bins[i] = [];\n      bin.x0 = i > 0 ? tz[i - 1] : x0;\n      bin.x1 = i < m ? tz[i] : x1;\n    }\n\n    // Assign data to bins by value, ignoring any outside the domain.\n    for (i = 0; i < n; ++i) {\n      x = values[i];\n      if (x0 <= x && x <= x1) {\n        bins[bisectRight(tz, x, 0, m)].push(data[i]);\n      }\n    }\n\n    return bins;\n  }\n\n  histogram.value = function(_) {\n    return arguments.length ? (value = typeof _ === \"function\" ? _ : constant(_), histogram) : value;\n  };\n\n  histogram.domain = function(_) {\n    return arguments.length ? (domain = typeof _ === \"function\" ? _ : constant([_[0], _[1]]), histogram) : domain;\n  };\n\n  histogram.thresholds = function(_) {\n    return arguments.length ? (threshold = typeof _ === \"function\" ? _ : Array.isArray(_) ? constant(slice.call(_)) : constant(_), histogram) : threshold;\n  };\n\n  return histogram;\n};\n\nvar threshold = function(values, p, valueof) {\n  if (valueof == null) valueof = number;\n  if (!(n = values.length)) return;\n  if ((p = +p) <= 0 || n < 2) return +valueof(values[0], 0, values);\n  if (p >= 1) return +valueof(values[n - 1], n - 1, values);\n  var n,\n      i = (n - 1) * p,\n      i0 = Math.floor(i),\n      value0 = +valueof(values[i0], i0, values),\n      value1 = +valueof(values[i0 + 1], i0 + 1, values);\n  return value0 + (value1 - value0) * (i - i0);\n};\n\nvar freedmanDiaconis = function(values, min, max) {\n  values = map.call(values, number).sort(ascending);\n  return Math.ceil((max - min) / (2 * (threshold(values, 0.75) - threshold(values, 0.25)) * Math.pow(values.length, -1 / 3)));\n};\n\nvar scott = function(values, min, max) {\n  return Math.ceil((max - min) / (3.5 * deviation(values) * Math.pow(values.length, -1 / 3)));\n};\n\nvar max = function(values, valueof) {\n  var n = values.length,\n      i = -1,\n      value,\n      max;\n\n  if (valueof == null) {\n    while (++i < n) { // Find the first comparable value.\n      if ((value = values[i]) != null && value >= value) {\n        max = value;\n        while (++i < n) { // Compare the remaining values.\n          if ((value = values[i]) != null && value > max) {\n            max = value;\n          }\n        }\n      }\n    }\n  }\n\n  else {\n    while (++i < n) { // Find the first comparable value.\n      if ((value = valueof(values[i], i, values)) != null && value >= value) {\n        max = value;\n        while (++i < n) { // Compare the remaining values.\n          if ((value = valueof(values[i], i, values)) != null && value > max) {\n            max = value;\n          }\n        }\n      }\n    }\n  }\n\n  return max;\n};\n\nvar mean = function(values, valueof) {\n  var n = values.length,\n      m = n,\n      i = -1,\n      value,\n      sum = 0;\n\n  if (valueof == null) {\n    while (++i < n) {\n      if (!isNaN(value = number(values[i]))) sum += value;\n      else --m;\n    }\n  }\n\n  else {\n    while (++i < n) {\n      if (!isNaN(value = number(valueof(values[i], i, values)))) sum += value;\n      else --m;\n    }\n  }\n\n  if (m) return sum / m;\n};\n\nvar median = function(values, valueof) {\n  var n = values.length,\n      i = -1,\n      value,\n      numbers = [];\n\n  if (valueof == null) {\n    while (++i < n) {\n      if (!isNaN(value = number(values[i]))) {\n        numbers.push(value);\n      }\n    }\n  }\n\n  else {\n    while (++i < n) {\n      if (!isNaN(value = number(valueof(values[i], i, values)))) {\n        numbers.push(value);\n      }\n    }\n  }\n\n  return threshold(numbers.sort(ascending), 0.5);\n};\n\nvar merge = function(arrays) {\n  var n = arrays.length,\n      m,\n      i = -1,\n      j = 0,\n      merged,\n      array;\n\n  while (++i < n) j += arrays[i].length;\n  merged = new Array(j);\n\n  while (--n >= 0) {\n    array = arrays[n];\n    m = array.length;\n    while (--m >= 0) {\n      merged[--j] = array[m];\n    }\n  }\n\n  return merged;\n};\n\nvar min = function(values, valueof) {\n  var n = values.length,\n      i = -1,\n      value,\n      min;\n\n  if (valueof == null) {\n    while (++i < n) { // Find the first comparable value.\n      if ((value = values[i]) != null && value >= value) {\n        min = value;\n        while (++i < n) { // Compare the remaining values.\n          if ((value = values[i]) != null && min > value) {\n            min = value;\n          }\n        }\n      }\n    }\n  }\n\n  else {\n    while (++i < n) { // Find the first comparable value.\n      if ((value = valueof(values[i], i, values)) != null && value >= value) {\n        min = value;\n        while (++i < n) { // Compare the remaining values.\n          if ((value = valueof(values[i], i, values)) != null && min > value) {\n            min = value;\n          }\n        }\n      }\n    }\n  }\n\n  return min;\n};\n\nvar permute = function(array, indexes) {\n  var i = indexes.length, permutes = new Array(i);\n  while (i--) permutes[i] = array[indexes[i]];\n  return permutes;\n};\n\nvar scan = function(values, compare) {\n  if (!(n = values.length)) return;\n  var n,\n      i = 0,\n      j = 0,\n      xi,\n      xj = values[j];\n\n  if (compare == null) compare = ascending;\n\n  while (++i < n) {\n    if (compare(xi = values[i], xj) < 0 || compare(xj, xj) !== 0) {\n      xj = xi, j = i;\n    }\n  }\n\n  if (compare(xj, xj) === 0) return j;\n};\n\nvar shuffle = function(array, i0, i1) {\n  var m = (i1 == null ? array.length : i1) - (i0 = i0 == null ? 0 : +i0),\n      t,\n      i;\n\n  while (m) {\n    i = Math.random() * m-- | 0;\n    t = array[m + i0];\n    array[m + i0] = array[i + i0];\n    array[i + i0] = t;\n  }\n\n  return array;\n};\n\nvar sum = function(values, valueof) {\n  var n = values.length,\n      i = -1,\n      value,\n      sum = 0;\n\n  if (valueof == null) {\n    while (++i < n) {\n      if (value = +values[i]) sum += value; // Note: zero and null are equivalent.\n    }\n  }\n\n  else {\n    while (++i < n) {\n      if (value = +valueof(values[i], i, values)) sum += value;\n    }\n  }\n\n  return sum;\n};\n\nvar transpose = function(matrix) {\n  if (!(n = matrix.length)) return [];\n  for (var i = -1, m = min(matrix, length), transpose = new Array(m); ++i < m;) {\n    for (var j = -1, n, row = transpose[i] = new Array(n); ++j < n;) {\n      row[j] = matrix[j][i];\n    }\n  }\n  return transpose;\n};\n\nfunction length(d) {\n  return d.length;\n}\n\nvar zip = function() {\n  return transpose(arguments);\n};\n\nvar slice$1 = Array.prototype.slice;\n\nvar identity$1 = function(x) {\n  return x;\n};\n\nvar top = 1;\nvar right = 2;\nvar bottom = 3;\nvar left = 4;\nvar epsilon = 1e-6;\n\nfunction translateX(x) {\n  return \"translate(\" + (x + 0.5) + \",0)\";\n}\n\nfunction translateY(y) {\n  return \"translate(0,\" + (y + 0.5) + \")\";\n}\n\nfunction number$1(scale) {\n  return function(d) {\n    return +scale(d);\n  };\n}\n\nfunction center(scale) {\n  var offset = Math.max(0, scale.bandwidth() - 1) / 2; // Adjust for 0.5px offset.\n  if (scale.round()) offset = Math.round(offset);\n  return function(d) {\n    return +scale(d) + offset;\n  };\n}\n\nfunction entering() {\n  return !this.__axis;\n}\n\nfunction axis(orient, scale) {\n  var tickArguments = [],\n      tickValues = null,\n      tickFormat = null,\n      tickSizeInner = 6,\n      tickSizeOuter = 6,\n      tickPadding = 3,\n      k = orient === top || orient === left ? -1 : 1,\n      x = orient === left || orient === right ? \"x\" : \"y\",\n      transform = orient === top || orient === bottom ? translateX : translateY;\n\n  function axis(context) {\n    var values = tickValues == null ? (scale.ticks ? scale.ticks.apply(scale, tickArguments) : scale.domain()) : tickValues,\n        format = tickFormat == null ? (scale.tickFormat ? scale.tickFormat.apply(scale, tickArguments) : identity$1) : tickFormat,\n        spacing = Math.max(tickSizeInner, 0) + tickPadding,\n        range = scale.range(),\n        range0 = +range[0] + 0.5,\n        range1 = +range[range.length - 1] + 0.5,\n        position = (scale.bandwidth ? center : number$1)(scale.copy()),\n        selection = context.selection ? context.selection() : context,\n        path = selection.selectAll(\".domain\").data([null]),\n        tick = selection.selectAll(\".tick\").data(values, scale).order(),\n        tickExit = tick.exit(),\n        tickEnter = tick.enter().append(\"g\").attr(\"class\", \"tick\"),\n        line = tick.select(\"line\"),\n        text = tick.select(\"text\");\n\n    path = path.merge(path.enter().insert(\"path\", \".tick\")\n        .attr(\"class\", \"domain\")\n        .attr(\"stroke\", \"#000\"));\n\n    tick = tick.merge(tickEnter);\n\n    line = line.merge(tickEnter.append(\"line\")\n        .attr(\"stroke\", \"#000\")\n        .attr(x + \"2\", k * tickSizeInner));\n\n    text = text.merge(tickEnter.append(\"text\")\n        .attr(\"fill\", \"#000\")\n        .attr(x, k * spacing)\n        .attr(\"dy\", orient === top ? \"0em\" : orient === bottom ? \"0.71em\" : \"0.32em\"));\n\n    if (context !== selection) {\n      path = path.transition(context);\n      tick = tick.transition(context);\n      line = line.transition(context);\n      text = text.transition(context);\n\n      tickExit = tickExit.transition(context)\n          .attr(\"opacity\", epsilon)\n          .attr(\"transform\", function(d) { return isFinite(d = position(d)) ? transform(d) : this.getAttribute(\"transform\"); });\n\n      tickEnter\n          .attr(\"opacity\", epsilon)\n          .attr(\"transform\", function(d) { var p = this.parentNode.__axis; return transform(p && isFinite(p = p(d)) ? p : position(d)); });\n    }\n\n    tickExit.remove();\n\n    path\n        .attr(\"d\", orient === left || orient == right\n            ? \"M\" + k * tickSizeOuter + \",\" + range0 + \"H0.5V\" + range1 + \"H\" + k * tickSizeOuter\n            : \"M\" + range0 + \",\" + k * tickSizeOuter + \"V0.5H\" + range1 + \"V\" + k * tickSizeOuter);\n\n    tick\n        .attr(\"opacity\", 1)\n        .attr(\"transform\", function(d) { return transform(position(d)); });\n\n    line\n        .attr(x + \"2\", k * tickSizeInner);\n\n    text\n        .attr(x, k * spacing)\n        .text(format);\n\n    selection.filter(entering)\n        .attr(\"fill\", \"none\")\n        .attr(\"font-size\", 10)\n        .attr(\"font-family\", \"sans-serif\")\n        .attr(\"text-anchor\", orient === right ? \"start\" : orient === left ? \"end\" : \"middle\");\n\n    selection\n        .each(function() { this.__axis = position; });\n  }\n\n  axis.scale = function(_) {\n    return arguments.length ? (scale = _, axis) : scale;\n  };\n\n  axis.ticks = function() {\n    return tickArguments = slice$1.call(arguments), axis;\n  };\n\n  axis.tickArguments = function(_) {\n    return arguments.length ? (tickArguments = _ == null ? [] : slice$1.call(_), axis) : tickArguments.slice();\n  };\n\n  axis.tickValues = function(_) {\n    return arguments.length ? (tickValues = _ == null ? null : slice$1.call(_), axis) : tickValues && tickValues.slice();\n  };\n\n  axis.tickFormat = function(_) {\n    return arguments.length ? (tickFormat = _, axis) : tickFormat;\n  };\n\n  axis.tickSize = function(_) {\n    return arguments.length ? (tickSizeInner = tickSizeOuter = +_, axis) : tickSizeInner;\n  };\n\n  axis.tickSizeInner = function(_) {\n    return arguments.length ? (tickSizeInner = +_, axis) : tickSizeInner;\n  };\n\n  axis.tickSizeOuter = function(_) {\n    return arguments.length ? (tickSizeOuter = +_, axis) : tickSizeOuter;\n  };\n\n  axis.tickPadding = function(_) {\n    return arguments.length ? (tickPadding = +_, axis) : tickPadding;\n  };\n\n  return axis;\n}\n\nfunction axisTop(scale) {\n  return axis(top, scale);\n}\n\nfunction axisRight(scale) {\n  return axis(right, scale);\n}\n\nfunction axisBottom(scale) {\n  return axis(bottom, scale);\n}\n\nfunction axisLeft(scale) {\n  return axis(left, scale);\n}\n\nvar noop = {value: function() {}};\n\nfunction dispatch() {\n  for (var i = 0, n = arguments.length, _ = {}, t; i < n; ++i) {\n    if (!(t = arguments[i] + \"\") || (t in _)) throw new Error(\"illegal type: \" + t);\n    _[t] = [];\n  }\n  return new Dispatch(_);\n}\n\nfunction Dispatch(_) {\n  this._ = _;\n}\n\nfunction parseTypenames(typenames, types) {\n  return typenames.trim().split(/^|\\s+/).map(function(t) {\n    var name = \"\", i = t.indexOf(\".\");\n    if (i >= 0) name = t.slice(i + 1), t = t.slice(0, i);\n    if (t && !types.hasOwnProperty(t)) throw new Error(\"unknown type: \" + t);\n    return {type: t, name: name};\n  });\n}\n\nDispatch.prototype = dispatch.prototype = {\n  constructor: Dispatch,\n  on: function(typename, callback) {\n    var _ = this._,\n        T = parseTypenames(typename + \"\", _),\n        t,\n        i = -1,\n        n = T.length;\n\n    // If no callback was specified, return the callback of the given type and name.\n    if (arguments.length < 2) {\n      while (++i < n) if ((t = (typename = T[i]).type) && (t = get(_[t], typename.name))) return t;\n      return;\n    }\n\n    // If a type was specified, set the callback for the given type and name.\n    // Otherwise, if a null callback was specified, remove callbacks of the given name.\n    if (callback != null && typeof callback !== \"function\") throw new Error(\"invalid callback: \" + callback);\n    while (++i < n) {\n      if (t = (typename = T[i]).type) _[t] = set(_[t], typename.name, callback);\n      else if (callback == null) for (t in _) _[t] = set(_[t], typename.name, null);\n    }\n\n    return this;\n  },\n  copy: function() {\n    var copy = {}, _ = this._;\n    for (var t in _) copy[t] = _[t].slice();\n    return new Dispatch(copy);\n  },\n  call: function(type, that) {\n    if ((n = arguments.length - 2) > 0) for (var args = new Array(n), i = 0, n, t; i < n; ++i) args[i] = arguments[i + 2];\n    if (!this._.hasOwnProperty(type)) throw new Error(\"unknown type: \" + type);\n    for (t = this._[type], i = 0, n = t.length; i < n; ++i) t[i].value.apply(that, args);\n  },\n  apply: function(type, that, args) {\n    if (!this._.hasOwnProperty(type)) throw new Error(\"unknown type: \" + type);\n    for (var t = this._[type], i = 0, n = t.length; i < n; ++i) t[i].value.apply(that, args);\n  }\n};\n\nfunction get(type, name) {\n  for (var i = 0, n = type.length, c; i < n; ++i) {\n    if ((c = type[i]).name === name) {\n      return c.value;\n    }\n  }\n}\n\nfunction set(type, name, callback) {\n  for (var i = 0, n = type.length; i < n; ++i) {\n    if (type[i].name === name) {\n      type[i] = noop, type = type.slice(0, i).concat(type.slice(i + 1));\n      break;\n    }\n  }\n  if (callback != null) type.push({name: name, value: callback});\n  return type;\n}\n\nvar xhtml = \"http://www.w3.org/1999/xhtml\";\n\nvar namespaces = {\n  svg: \"http://www.w3.org/2000/svg\",\n  xhtml: xhtml,\n  xlink: \"http://www.w3.org/1999/xlink\",\n  xml: \"http://www.w3.org/XML/1998/namespace\",\n  xmlns: \"http://www.w3.org/2000/xmlns/\"\n};\n\nvar namespace = function(name) {\n  var prefix = name += \"\", i = prefix.indexOf(\":\");\n  if (i >= 0 && (prefix = name.slice(0, i)) !== \"xmlns\") name = name.slice(i + 1);\n  return namespaces.hasOwnProperty(prefix) ? {space: namespaces[prefix], local: name} : name;\n};\n\nfunction creatorInherit(name) {\n  return function() {\n    var document = this.ownerDocument,\n        uri = this.namespaceURI;\n    return uri === xhtml && document.documentElement.namespaceURI === xhtml\n        ? document.createElement(name)\n        : document.createElementNS(uri, name);\n  };\n}\n\nfunction creatorFixed(fullname) {\n  return function() {\n    return this.ownerDocument.createElementNS(fullname.space, fullname.local);\n  };\n}\n\nvar creator = function(name) {\n  var fullname = namespace(name);\n  return (fullname.local\n      ? creatorFixed\n      : creatorInherit)(fullname);\n};\n\nvar nextId = 0;\n\nfunction local$1() {\n  return new Local;\n}\n\nfunction Local() {\n  this._ = \"@\" + (++nextId).toString(36);\n}\n\nLocal.prototype = local$1.prototype = {\n  constructor: Local,\n  get: function(node) {\n    var id = this._;\n    while (!(id in node)) if (!(node = node.parentNode)) return;\n    return node[id];\n  },\n  set: function(node, value) {\n    return node[this._] = value;\n  },\n  remove: function(node) {\n    return this._ in node && delete node[this._];\n  },\n  toString: function() {\n    return this._;\n  }\n};\n\nvar matcher = function(selector) {\n  return function() {\n    return this.matches(selector);\n  };\n};\n\nif (typeof document !== \"undefined\") {\n  var element = document.documentElement;\n  if (!element.matches) {\n    var vendorMatches = element.webkitMatchesSelector\n        || element.msMatchesSelector\n        || element.mozMatchesSelector\n        || element.oMatchesSelector;\n    matcher = function(selector) {\n      return function() {\n        return vendorMatches.call(this, selector);\n      };\n    };\n  }\n}\n\nvar matcher$1 = matcher;\n\nvar filterEvents = {};\n\nexports.event = null;\n\nif (typeof document !== \"undefined\") {\n  var element$1 = document.documentElement;\n  if (!(\"onmouseenter\" in element$1)) {\n    filterEvents = {mouseenter: \"mouseover\", mouseleave: \"mouseout\"};\n  }\n}\n\nfunction filterContextListener(listener, index, group) {\n  listener = contextListener(listener, index, group);\n  return function(event) {\n    var related = event.relatedTarget;\n    if (!related || (related !== this && !(related.compareDocumentPosition(this) & 8))) {\n      listener.call(this, event);\n    }\n  };\n}\n\nfunction contextListener(listener, index, group) {\n  return function(event1) {\n    var event0 = exports.event; // Events can be reentrant (e.g., focus).\n    exports.event = event1;\n    try {\n      listener.call(this, this.__data__, index, group);\n    } finally {\n      exports.event = event0;\n    }\n  };\n}\n\nfunction parseTypenames$1(typenames) {\n  return typenames.trim().split(/^|\\s+/).map(function(t) {\n    var name = \"\", i = t.indexOf(\".\");\n    if (i >= 0) name = t.slice(i + 1), t = t.slice(0, i);\n    return {type: t, name: name};\n  });\n}\n\nfunction onRemove(typename) {\n  return function() {\n    var on = this.__on;\n    if (!on) return;\n    for (var j = 0, i = -1, m = on.length, o; j < m; ++j) {\n      if (o = on[j], (!typename.type || o.type === typename.type) && o.name === typename.name) {\n        this.removeEventListener(o.type, o.listener, o.capture);\n      } else {\n        on[++i] = o;\n      }\n    }\n    if (++i) on.length = i;\n    else delete this.__on;\n  };\n}\n\nfunction onAdd(typename, value, capture) {\n  var wrap = filterEvents.hasOwnProperty(typename.type) ? filterContextListener : contextListener;\n  return function(d, i, group) {\n    var on = this.__on, o, listener = wrap(value, i, group);\n    if (on) for (var j = 0, m = on.length; j < m; ++j) {\n      if ((o = on[j]).type === typename.type && o.name === typename.name) {\n        this.removeEventListener(o.type, o.listener, o.capture);\n        this.addEventListener(o.type, o.listener = listener, o.capture = capture);\n        o.value = value;\n        return;\n      }\n    }\n    this.addEventListener(typename.type, listener, capture);\n    o = {type: typename.type, name: typename.name, value: value, listener: listener, capture: capture};\n    if (!on) this.__on = [o];\n    else on.push(o);\n  };\n}\n\nvar selection_on = function(typename, value, capture) {\n  var typenames = parseTypenames$1(typename + \"\"), i, n = typenames.length, t;\n\n  if (arguments.length < 2) {\n    var on = this.node().__on;\n    if (on) for (var j = 0, m = on.length, o; j < m; ++j) {\n      for (i = 0, o = on[j]; i < n; ++i) {\n        if ((t = typenames[i]).type === o.type && t.name === o.name) {\n          return o.value;\n        }\n      }\n    }\n    return;\n  }\n\n  on = value ? onAdd : onRemove;\n  if (capture == null) capture = false;\n  for (i = 0; i < n; ++i) this.each(on(typenames[i], value, capture));\n  return this;\n};\n\nfunction customEvent(event1, listener, that, args) {\n  var event0 = exports.event;\n  event1.sourceEvent = exports.event;\n  exports.event = event1;\n  try {\n    return listener.apply(that, args);\n  } finally {\n    exports.event = event0;\n  }\n}\n\nvar sourceEvent = function() {\n  var current = exports.event, source;\n  while (source = current.sourceEvent) current = source;\n  return current;\n};\n\nvar point = function(node, event) {\n  var svg = node.ownerSVGElement || node;\n\n  if (svg.createSVGPoint) {\n    var point = svg.createSVGPoint();\n    point.x = event.clientX, point.y = event.clientY;\n    point = point.matrixTransform(node.getScreenCTM().inverse());\n    return [point.x, point.y];\n  }\n\n  var rect = node.getBoundingClientRect();\n  return [event.clientX - rect.left - node.clientLeft, event.clientY - rect.top - node.clientTop];\n};\n\nvar mouse = function(node) {\n  var event = sourceEvent();\n  if (event.changedTouches) event = event.changedTouches[0];\n  return point(node, event);\n};\n\nfunction none() {}\n\nvar selector = function(selector) {\n  return selector == null ? none : function() {\n    return this.querySelector(selector);\n  };\n};\n\nvar selection_select = function(select) {\n  if (typeof select !== \"function\") select = selector(select);\n\n  for (var groups = this._groups, m = groups.length, subgroups = new Array(m), j = 0; j < m; ++j) {\n    for (var group = groups[j], n = group.length, subgroup = subgroups[j] = new Array(n), node, subnode, i = 0; i < n; ++i) {\n      if ((node = group[i]) && (subnode = select.call(node, node.__data__, i, group))) {\n        if (\"__data__\" in node) subnode.__data__ = node.__data__;\n        subgroup[i] = subnode;\n      }\n    }\n  }\n\n  return new Selection(subgroups, this._parents);\n};\n\nfunction empty$1() {\n  return [];\n}\n\nvar selectorAll = function(selector) {\n  return selector == null ? empty$1 : function() {\n    return this.querySelectorAll(selector);\n  };\n};\n\nvar selection_selectAll = function(select) {\n  if (typeof select !== \"function\") select = selectorAll(select);\n\n  for (var groups = this._groups, m = groups.length, subgroups = [], parents = [], j = 0; j < m; ++j) {\n    for (var group = groups[j], n = group.length, node, i = 0; i < n; ++i) {\n      if (node = group[i]) {\n        subgroups.push(select.call(node, node.__data__, i, group));\n        parents.push(node);\n      }\n    }\n  }\n\n  return new Selection(subgroups, parents);\n};\n\nvar selection_filter = function(match) {\n  if (typeof match !== \"function\") match = matcher$1(match);\n\n  for (var groups = this._groups, m = groups.length, subgroups = new Array(m), j = 0; j < m; ++j) {\n    for (var group = groups[j], n = group.length, subgroup = subgroups[j] = [], node, i = 0; i < n; ++i) {\n      if ((node = group[i]) && match.call(node, node.__data__, i, group)) {\n        subgroup.push(node);\n      }\n    }\n  }\n\n  return new Selection(subgroups, this._parents);\n};\n\nvar sparse = function(update) {\n  return new Array(update.length);\n};\n\nvar selection_enter = function() {\n  return new Selection(this._enter || this._groups.map(sparse), this._parents);\n};\n\nfunction EnterNode(parent, datum) {\n  this.ownerDocument = parent.ownerDocument;\n  this.namespaceURI = parent.namespaceURI;\n  this._next = null;\n  this._parent = parent;\n  this.__data__ = datum;\n}\n\nEnterNode.prototype = {\n  constructor: EnterNode,\n  appendChild: function(child) { return this._parent.insertBefore(child, this._next); },\n  insertBefore: function(child, next) { return this._parent.insertBefore(child, next); },\n  querySelector: function(selector) { return this._parent.querySelector(selector); },\n  querySelectorAll: function(selector) { return this._parent.querySelectorAll(selector); }\n};\n\nvar constant$1 = function(x) {\n  return function() {\n    return x;\n  };\n};\n\nvar keyPrefix = \"$\"; // Protect against keys like “__proto__”.\n\nfunction bindIndex(parent, group, enter, update, exit, data) {\n  var i = 0,\n      node,\n      groupLength = group.length,\n      dataLength = data.length;\n\n  // Put any non-null nodes that fit into update.\n  // Put any null nodes into enter.\n  // Put any remaining data into enter.\n  for (; i < dataLength; ++i) {\n    if (node = group[i]) {\n      node.__data__ = data[i];\n      update[i] = node;\n    } else {\n      enter[i] = new EnterNode(parent, data[i]);\n    }\n  }\n\n  // Put any non-null nodes that don’t fit into exit.\n  for (; i < groupLength; ++i) {\n    if (node = group[i]) {\n      exit[i] = node;\n    }\n  }\n}\n\nfunction bindKey(parent, group, enter, update, exit, data, key) {\n  var i,\n      node,\n      nodeByKeyValue = {},\n      groupLength = group.length,\n      dataLength = data.length,\n      keyValues = new Array(groupLength),\n      keyValue;\n\n  // Compute the key for each node.\n  // If multiple nodes have the same key, the duplicates are added to exit.\n  for (i = 0; i < groupLength; ++i) {\n    if (node = group[i]) {\n      keyValues[i] = keyValue = keyPrefix + key.call(node, node.__data__, i, group);\n      if (keyValue in nodeByKeyValue) {\n        exit[i] = node;\n      } else {\n        nodeByKeyValue[keyValue] = node;\n      }\n    }\n  }\n\n  // Compute the key for each datum.\n  // If there a node associated with this key, join and add it to update.\n  // If there is not (or the key is a duplicate), add it to enter.\n  for (i = 0; i < dataLength; ++i) {\n    keyValue = keyPrefix + key.call(parent, data[i], i, data);\n    if (node = nodeByKeyValue[keyValue]) {\n      update[i] = node;\n      node.__data__ = data[i];\n      nodeByKeyValue[keyValue] = null;\n    } else {\n      enter[i] = new EnterNode(parent, data[i]);\n    }\n  }\n\n  // Add any remaining nodes that were not bound to data to exit.\n  for (i = 0; i < groupLength; ++i) {\n    if ((node = group[i]) && (nodeByKeyValue[keyValues[i]] === node)) {\n      exit[i] = node;\n    }\n  }\n}\n\nvar selection_data = function(value, key) {\n  if (!value) {\n    data = new Array(this.size()), j = -1;\n    this.each(function(d) { data[++j] = d; });\n    return data;\n  }\n\n  var bind = key ? bindKey : bindIndex,\n      parents = this._parents,\n      groups = this._groups;\n\n  if (typeof value !== \"function\") value = constant$1(value);\n\n  for (var m = groups.length, update = new Array(m), enter = new Array(m), exit = new Array(m), j = 0; j < m; ++j) {\n    var parent = parents[j],\n        group = groups[j],\n        groupLength = group.length,\n        data = value.call(parent, parent && parent.__data__, j, parents),\n        dataLength = data.length,\n        enterGroup = enter[j] = new Array(dataLength),\n        updateGroup = update[j] = new Array(dataLength),\n        exitGroup = exit[j] = new Array(groupLength);\n\n    bind(parent, group, enterGroup, updateGroup, exitGroup, data, key);\n\n    // Now connect the enter nodes to their following update node, such that\n    // appendChild can insert the materialized enter node before this node,\n    // rather than at the end of the parent node.\n    for (var i0 = 0, i1 = 0, previous, next; i0 < dataLength; ++i0) {\n      if (previous = enterGroup[i0]) {\n        if (i0 >= i1) i1 = i0 + 1;\n        while (!(next = updateGroup[i1]) && ++i1 < dataLength);\n        previous._next = next || null;\n      }\n    }\n  }\n\n  update = new Selection(update, parents);\n  update._enter = enter;\n  update._exit = exit;\n  return update;\n};\n\nvar selection_exit = function() {\n  return new Selection(this._exit || this._groups.map(sparse), this._parents);\n};\n\nvar selection_merge = function(selection$$1) {\n\n  for (var groups0 = this._groups, groups1 = selection$$1._groups, m0 = groups0.length, m1 = groups1.length, m = Math.min(m0, m1), merges = new Array(m0), j = 0; j < m; ++j) {\n    for (var group0 = groups0[j], group1 = groups1[j], n = group0.length, merge = merges[j] = new Array(n), node, i = 0; i < n; ++i) {\n      if (node = group0[i] || group1[i]) {\n        merge[i] = node;\n      }\n    }\n  }\n\n  for (; j < m0; ++j) {\n    merges[j] = groups0[j];\n  }\n\n  return new Selection(merges, this._parents);\n};\n\nvar selection_order = function() {\n\n  for (var groups = this._groups, j = -1, m = groups.length; ++j < m;) {\n    for (var group = groups[j], i = group.length - 1, next = group[i], node; --i >= 0;) {\n      if (node = group[i]) {\n        if (next && next !== node.nextSibling) next.parentNode.insertBefore(node, next);\n        next = node;\n      }\n    }\n  }\n\n  return this;\n};\n\nvar selection_sort = function(compare) {\n  if (!compare) compare = ascending$1;\n\n  function compareNode(a, b) {\n    return a && b ? compare(a.__data__, b.__data__) : !a - !b;\n  }\n\n  for (var groups = this._groups, m = groups.length, sortgroups = new Array(m), j = 0; j < m; ++j) {\n    for (var group = groups[j], n = group.length, sortgroup = sortgroups[j] = new Array(n), node, i = 0; i < n; ++i) {\n      if (node = group[i]) {\n        sortgroup[i] = node;\n      }\n    }\n    sortgroup.sort(compareNode);\n  }\n\n  return new Selection(sortgroups, this._parents).order();\n};\n\nfunction ascending$1(a, b) {\n  return a < b ? -1 : a > b ? 1 : a >= b ? 0 : NaN;\n}\n\nvar selection_call = function() {\n  var callback = arguments[0];\n  arguments[0] = this;\n  callback.apply(null, arguments);\n  return this;\n};\n\nvar selection_nodes = function() {\n  var nodes = new Array(this.size()), i = -1;\n  this.each(function() { nodes[++i] = this; });\n  return nodes;\n};\n\nvar selection_node = function() {\n\n  for (var groups = this._groups, j = 0, m = groups.length; j < m; ++j) {\n    for (var group = groups[j], i = 0, n = group.length; i < n; ++i) {\n      var node = group[i];\n      if (node) return node;\n    }\n  }\n\n  return null;\n};\n\nvar selection_size = function() {\n  var size = 0;\n  this.each(function() { ++size; });\n  return size;\n};\n\nvar selection_empty = function() {\n  return !this.node();\n};\n\nvar selection_each = function(callback) {\n\n  for (var groups = this._groups, j = 0, m = groups.length; j < m; ++j) {\n    for (var group = groups[j], i = 0, n = group.length, node; i < n; ++i) {\n      if (node = group[i]) callback.call(node, node.__data__, i, group);\n    }\n  }\n\n  return this;\n};\n\nfunction attrRemove(name) {\n  return function() {\n    this.removeAttribute(name);\n  };\n}\n\nfunction attrRemoveNS(fullname) {\n  return function() {\n    this.removeAttributeNS(fullname.space, fullname.local);\n  };\n}\n\nfunction attrConstant(name, value) {\n  return function() {\n    this.setAttribute(name, value);\n  };\n}\n\nfunction attrConstantNS(fullname, value) {\n  return function() {\n    this.setAttributeNS(fullname.space, fullname.local, value);\n  };\n}\n\nfunction attrFunction(name, value) {\n  return function() {\n    var v = value.apply(this, arguments);\n    if (v == null) this.removeAttribute(name);\n    else this.setAttribute(name, v);\n  };\n}\n\nfunction attrFunctionNS(fullname, value) {\n  return function() {\n    var v = value.apply(this, arguments);\n    if (v == null) this.removeAttributeNS(fullname.space, fullname.local);\n    else this.setAttributeNS(fullname.space, fullname.local, v);\n  };\n}\n\nvar selection_attr = function(name, value) {\n  var fullname = namespace(name);\n\n  if (arguments.length < 2) {\n    var node = this.node();\n    return fullname.local\n        ? node.getAttributeNS(fullname.space, fullname.local)\n        : node.getAttribute(fullname);\n  }\n\n  return this.each((value == null\n      ? (fullname.local ? attrRemoveNS : attrRemove) : (typeof value === \"function\"\n      ? (fullname.local ? attrFunctionNS : attrFunction)\n      : (fullname.local ? attrConstantNS : attrConstant)))(fullname, value));\n};\n\nvar defaultView = function(node) {\n  return (node.ownerDocument && node.ownerDocument.defaultView) // node is a Node\n      || (node.document && node) // node is a Window\n      || node.defaultView; // node is a Document\n};\n\nfunction styleRemove(name) {\n  return function() {\n    this.style.removeProperty(name);\n  };\n}\n\nfunction styleConstant(name, value, priority) {\n  return function() {\n    this.style.setProperty(name, value, priority);\n  };\n}\n\nfunction styleFunction(name, value, priority) {\n  return function() {\n    var v = value.apply(this, arguments);\n    if (v == null) this.style.removeProperty(name);\n    else this.style.setProperty(name, v, priority);\n  };\n}\n\nvar selection_style = function(name, value, priority) {\n  return arguments.length > 1\n      ? this.each((value == null\n            ? styleRemove : typeof value === \"function\"\n            ? styleFunction\n            : styleConstant)(name, value, priority == null ? \"\" : priority))\n      : styleValue(this.node(), name);\n};\n\nfunction styleValue(node, name) {\n  return node.style.getPropertyValue(name)\n      || defaultView(node).getComputedStyle(node, null).getPropertyValue(name);\n}\n\nfunction propertyRemove(name) {\n  return function() {\n    delete this[name];\n  };\n}\n\nfunction propertyConstant(name, value) {\n  return function() {\n    this[name] = value;\n  };\n}\n\nfunction propertyFunction(name, value) {\n  return function() {\n    var v = value.apply(this, arguments);\n    if (v == null) delete this[name];\n    else this[name] = v;\n  };\n}\n\nvar selection_property = function(name, value) {\n  return arguments.length > 1\n      ? this.each((value == null\n          ? propertyRemove : typeof value === \"function\"\n          ? propertyFunction\n          : propertyConstant)(name, value))\n      : this.node()[name];\n};\n\nfunction classArray(string) {\n  return string.trim().split(/^|\\s+/);\n}\n\nfunction classList(node) {\n  return node.classList || new ClassList(node);\n}\n\nfunction ClassList(node) {\n  this._node = node;\n  this._names = classArray(node.getAttribute(\"class\") || \"\");\n}\n\nClassList.prototype = {\n  add: function(name) {\n    var i = this._names.indexOf(name);\n    if (i < 0) {\n      this._names.push(name);\n      this._node.setAttribute(\"class\", this._names.join(\" \"));\n    }\n  },\n  remove: function(name) {\n    var i = this._names.indexOf(name);\n    if (i >= 0) {\n      this._names.splice(i, 1);\n      this._node.setAttribute(\"class\", this._names.join(\" \"));\n    }\n  },\n  contains: function(name) {\n    return this._names.indexOf(name) >= 0;\n  }\n};\n\nfunction classedAdd(node, names) {\n  var list = classList(node), i = -1, n = names.length;\n  while (++i < n) list.add(names[i]);\n}\n\nfunction classedRemove(node, names) {\n  var list = classList(node), i = -1, n = names.length;\n  while (++i < n) list.remove(names[i]);\n}\n\nfunction classedTrue(names) {\n  return function() {\n    classedAdd(this, names);\n  };\n}\n\nfunction classedFalse(names) {\n  return function() {\n    classedRemove(this, names);\n  };\n}\n\nfunction classedFunction(names, value) {\n  return function() {\n    (value.apply(this, arguments) ? classedAdd : classedRemove)(this, names);\n  };\n}\n\nvar selection_classed = function(name, value) {\n  var names = classArray(name + \"\");\n\n  if (arguments.length < 2) {\n    var list = classList(this.node()), i = -1, n = names.length;\n    while (++i < n) if (!list.contains(names[i])) return false;\n    return true;\n  }\n\n  return this.each((typeof value === \"function\"\n      ? classedFunction : value\n      ? classedTrue\n      : classedFalse)(names, value));\n};\n\nfunction textRemove() {\n  this.textContent = \"\";\n}\n\nfunction textConstant(value) {\n  return function() {\n    this.textContent = value;\n  };\n}\n\nfunction textFunction(value) {\n  return function() {\n    var v = value.apply(this, arguments);\n    this.textContent = v == null ? \"\" : v;\n  };\n}\n\nvar selection_text = function(value) {\n  return arguments.length\n      ? this.each(value == null\n          ? textRemove : (typeof value === \"function\"\n          ? textFunction\n          : textConstant)(value))\n      : this.node().textContent;\n};\n\nfunction htmlRemove() {\n  this.innerHTML = \"\";\n}\n\nfunction htmlConstant(value) {\n  return function() {\n    this.innerHTML = value;\n  };\n}\n\nfunction htmlFunction(value) {\n  return function() {\n    var v = value.apply(this, arguments);\n    this.innerHTML = v == null ? \"\" : v;\n  };\n}\n\nvar selection_html = function(value) {\n  return arguments.length\n      ? this.each(value == null\n          ? htmlRemove : (typeof value === \"function\"\n          ? htmlFunction\n          : htmlConstant)(value))\n      : this.node().innerHTML;\n};\n\nfunction raise() {\n  if (this.nextSibling) this.parentNode.appendChild(this);\n}\n\nvar selection_raise = function() {\n  return this.each(raise);\n};\n\nfunction lower() {\n  if (this.previousSibling) this.parentNode.insertBefore(this, this.parentNode.firstChild);\n}\n\nvar selection_lower = function() {\n  return this.each(lower);\n};\n\nvar selection_append = function(name) {\n  var create = typeof name === \"function\" ? name : creator(name);\n  return this.select(function() {\n    return this.appendChild(create.apply(this, arguments));\n  });\n};\n\nfunction constantNull() {\n  return null;\n}\n\nvar selection_insert = function(name, before) {\n  var create = typeof name === \"function\" ? name : creator(name),\n      select = before == null ? constantNull : typeof before === \"function\" ? before : selector(before);\n  return this.select(function() {\n    return this.insertBefore(create.apply(this, arguments), select.apply(this, arguments) || null);\n  });\n};\n\nfunction remove() {\n  var parent = this.parentNode;\n  if (parent) parent.removeChild(this);\n}\n\nvar selection_remove = function() {\n  return this.each(remove);\n};\n\nvar selection_datum = function(value) {\n  return arguments.length\n      ? this.property(\"__data__\", value)\n      : this.node().__data__;\n};\n\nfunction dispatchEvent(node, type, params) {\n  var window = defaultView(node),\n      event = window.CustomEvent;\n\n  if (typeof event === \"function\") {\n    event = new event(type, params);\n  } else {\n    event = window.document.createEvent(\"Event\");\n    if (params) event.initEvent(type, params.bubbles, params.cancelable), event.detail = params.detail;\n    else event.initEvent(type, false, false);\n  }\n\n  node.dispatchEvent(event);\n}\n\nfunction dispatchConstant(type, params) {\n  return function() {\n    return dispatchEvent(this, type, params);\n  };\n}\n\nfunction dispatchFunction(type, params) {\n  return function() {\n    return dispatchEvent(this, type, params.apply(this, arguments));\n  };\n}\n\nvar selection_dispatch = function(type, params) {\n  return this.each((typeof params === \"function\"\n      ? dispatchFunction\n      : dispatchConstant)(type, params));\n};\n\nvar root = [null];\n\nfunction Selection(groups, parents) {\n  this._groups = groups;\n  this._parents = parents;\n}\n\nfunction selection() {\n  return new Selection([[document.documentElement]], root);\n}\n\nSelection.prototype = selection.prototype = {\n  constructor: Selection,\n  select: selection_select,\n  selectAll: selection_selectAll,\n  filter: selection_filter,\n  data: selection_data,\n  enter: selection_enter,\n  exit: selection_exit,\n  merge: selection_merge,\n  order: selection_order,\n  sort: selection_sort,\n  call: selection_call,\n  nodes: selection_nodes,\n  node: selection_node,\n  size: selection_size,\n  empty: selection_empty,\n  each: selection_each,\n  attr: selection_attr,\n  style: selection_style,\n  property: selection_property,\n  classed: selection_classed,\n  text: selection_text,\n  html: selection_html,\n  raise: selection_raise,\n  lower: selection_lower,\n  append: selection_append,\n  insert: selection_insert,\n  remove: selection_remove,\n  datum: selection_datum,\n  on: selection_on,\n  dispatch: selection_dispatch\n};\n\nvar select = function(selector) {\n  return typeof selector === \"string\"\n      ? new Selection([[document.querySelector(selector)]], [document.documentElement])\n      : new Selection([[selector]], root);\n};\n\nvar selectAll = function(selector) {\n  return typeof selector === \"string\"\n      ? new Selection([document.querySelectorAll(selector)], [document.documentElement])\n      : new Selection([selector == null ? [] : selector], root);\n};\n\nvar touch = function(node, touches, identifier) {\n  if (arguments.length < 3) identifier = touches, touches = sourceEvent().changedTouches;\n\n  for (var i = 0, n = touches ? touches.length : 0, touch; i < n; ++i) {\n    if ((touch = touches[i]).identifier === identifier) {\n      return point(node, touch);\n    }\n  }\n\n  return null;\n};\n\nvar touches = function(node, touches) {\n  if (touches == null) touches = sourceEvent().touches;\n\n  for (var i = 0, n = touches ? touches.length : 0, points = new Array(n); i < n; ++i) {\n    points[i] = point(node, touches[i]);\n  }\n\n  return points;\n};\n\nfunction nopropagation() {\n  exports.event.stopImmediatePropagation();\n}\n\nvar noevent = function() {\n  exports.event.preventDefault();\n  exports.event.stopImmediatePropagation();\n};\n\nvar dragDisable = function(view) {\n  var root = view.document.documentElement,\n      selection = select(view).on(\"dragstart.drag\", noevent, true);\n  if (\"onselectstart\" in root) {\n    selection.on(\"selectstart.drag\", noevent, true);\n  } else {\n    root.__noselect = root.style.MozUserSelect;\n    root.style.MozUserSelect = \"none\";\n  }\n};\n\nfunction yesdrag(view, noclick) {\n  var root = view.document.documentElement,\n      selection = select(view).on(\"dragstart.drag\", null);\n  if (noclick) {\n    selection.on(\"click.drag\", noevent, true);\n    setTimeout(function() { selection.on(\"click.drag\", null); }, 0);\n  }\n  if (\"onselectstart\" in root) {\n    selection.on(\"selectstart.drag\", null);\n  } else {\n    root.style.MozUserSelect = root.__noselect;\n    delete root.__noselect;\n  }\n}\n\nvar constant$2 = function(x) {\n  return function() {\n    return x;\n  };\n};\n\nfunction DragEvent(target, type, subject, id, active, x, y, dx, dy, dispatch) {\n  this.target = target;\n  this.type = type;\n  this.subject = subject;\n  this.identifier = id;\n  this.active = active;\n  this.x = x;\n  this.y = y;\n  this.dx = dx;\n  this.dy = dy;\n  this._ = dispatch;\n}\n\nDragEvent.prototype.on = function() {\n  var value = this._.on.apply(this._, arguments);\n  return value === this._ ? this : value;\n};\n\n// Ignore right-click, since that should open the context menu.\nfunction defaultFilter$1() {\n  return !exports.event.button;\n}\n\nfunction defaultContainer() {\n  return this.parentNode;\n}\n\nfunction defaultSubject(d) {\n  return d == null ? {x: exports.event.x, y: exports.event.y} : d;\n}\n\nfunction defaultTouchable() {\n  return \"ontouchstart\" in this;\n}\n\nvar drag = function() {\n  var filter = defaultFilter$1,\n      container = defaultContainer,\n      subject = defaultSubject,\n      touchable = defaultTouchable,\n      gestures = {},\n      listeners = dispatch(\"start\", \"drag\", \"end\"),\n      active = 0,\n      mousedownx,\n      mousedowny,\n      mousemoving,\n      touchending,\n      clickDistance2 = 0;\n\n  function drag(selection) {\n    selection\n        .on(\"mousedown.drag\", mousedowned)\n      .filter(touchable)\n        .on(\"touchstart.drag\", touchstarted)\n        .on(\"touchmove.drag\", touchmoved)\n        .on(\"touchend.drag touchcancel.drag\", touchended)\n        .style(\"touch-action\", \"none\")\n        .style(\"-webkit-tap-highlight-color\", \"rgba(0,0,0,0)\");\n  }\n\n  function mousedowned() {\n    if (touchending || !filter.apply(this, arguments)) return;\n    var gesture = beforestart(\"mouse\", container.apply(this, arguments), mouse, this, arguments);\n    if (!gesture) return;\n    select(exports.event.view).on(\"mousemove.drag\", mousemoved, true).on(\"mouseup.drag\", mouseupped, true);\n    dragDisable(exports.event.view);\n    nopropagation();\n    mousemoving = false;\n    mousedownx = exports.event.clientX;\n    mousedowny = exports.event.clientY;\n    gesture(\"start\");\n  }\n\n  function mousemoved() {\n    noevent();\n    if (!mousemoving) {\n      var dx = exports.event.clientX - mousedownx, dy = exports.event.clientY - mousedowny;\n      mousemoving = dx * dx + dy * dy > clickDistance2;\n    }\n    gestures.mouse(\"drag\");\n  }\n\n  function mouseupped() {\n    select(exports.event.view).on(\"mousemove.drag mouseup.drag\", null);\n    yesdrag(exports.event.view, mousemoving);\n    noevent();\n    gestures.mouse(\"end\");\n  }\n\n  function touchstarted() {\n    if (!filter.apply(this, arguments)) return;\n    var touches = exports.event.changedTouches,\n        c = container.apply(this, arguments),\n        n = touches.length, i, gesture;\n\n    for (i = 0; i < n; ++i) {\n      if (gesture = beforestart(touches[i].identifier, c, touch, this, arguments)) {\n        nopropagation();\n        gesture(\"start\");\n      }\n    }\n  }\n\n  function touchmoved() {\n    var touches = exports.event.changedTouches,\n        n = touches.length, i, gesture;\n\n    for (i = 0; i < n; ++i) {\n      if (gesture = gestures[touches[i].identifier]) {\n        noevent();\n        gesture(\"drag\");\n      }\n    }\n  }\n\n  function touchended() {\n    var touches = exports.event.changedTouches,\n        n = touches.length, i, gesture;\n\n    if (touchending) clearTimeout(touchending);\n    touchending = setTimeout(function() { touchending = null; }, 500); // Ghost clicks are delayed!\n    for (i = 0; i < n; ++i) {\n      if (gesture = gestures[touches[i].identifier]) {\n        nopropagation();\n        gesture(\"end\");\n      }\n    }\n  }\n\n  function beforestart(id, container, point, that, args) {\n    var p = point(container, id), s, dx, dy,\n        sublisteners = listeners.copy();\n\n    if (!customEvent(new DragEvent(drag, \"beforestart\", s, id, active, p[0], p[1], 0, 0, sublisteners), function() {\n      if ((exports.event.subject = s = subject.apply(that, args)) == null) return false;\n      dx = s.x - p[0] || 0;\n      dy = s.y - p[1] || 0;\n      return true;\n    })) return;\n\n    return function gesture(type) {\n      var p0 = p, n;\n      switch (type) {\n        case \"start\": gestures[id] = gesture, n = active++; break;\n        case \"end\": delete gestures[id], --active; // nobreak\n        case \"drag\": p = point(container, id), n = active; break;\n      }\n      customEvent(new DragEvent(drag, type, s, id, n, p[0] + dx, p[1] + dy, p[0] - p0[0], p[1] - p0[1], sublisteners), sublisteners.apply, sublisteners, [type, that, args]);\n    };\n  }\n\n  drag.filter = function(_) {\n    return arguments.length ? (filter = typeof _ === \"function\" ? _ : constant$2(!!_), drag) : filter;\n  };\n\n  drag.container = function(_) {\n    return arguments.length ? (container = typeof _ === \"function\" ? _ : constant$2(_), drag) : container;\n  };\n\n  drag.subject = function(_) {\n    return arguments.length ? (subject = typeof _ === \"function\" ? _ : constant$2(_), drag) : subject;\n  };\n\n  drag.touchable = function(_) {\n    return arguments.length ? (touchable = typeof _ === \"function\" ? _ : constant$2(!!_), drag) : touchable;\n  };\n\n  drag.on = function() {\n    var value = listeners.on.apply(listeners, arguments);\n    return value === listeners ? drag : value;\n  };\n\n  drag.clickDistance = function(_) {\n    return arguments.length ? (clickDistance2 = (_ = +_) * _, drag) : Math.sqrt(clickDistance2);\n  };\n\n  return drag;\n};\n\nvar define = function(constructor, factory, prototype) {\n  constructor.prototype = factory.prototype = prototype;\n  prototype.constructor = constructor;\n};\n\nfunction extend(parent, definition) {\n  var prototype = Object.create(parent.prototype);\n  for (var key in definition) prototype[key] = definition[key];\n  return prototype;\n}\n\nfunction Color() {}\n\nvar darker = 0.7;\nvar brighter = 1 / darker;\n\nvar reI = \"\\\\s*([+-]?\\\\d+)\\\\s*\";\nvar reN = \"\\\\s*([+-]?\\\\d*\\\\.?\\\\d+(?:[eE][+-]?\\\\d+)?)\\\\s*\";\nvar reP = \"\\\\s*([+-]?\\\\d*\\\\.?\\\\d+(?:[eE][+-]?\\\\d+)?)%\\\\s*\";\nvar reHex3 = /^#([0-9a-f]{3})$/;\nvar reHex6 = /^#([0-9a-f]{6})$/;\nvar reRgbInteger = new RegExp(\"^rgb\\\\(\" + [reI, reI, reI] + \"\\\\)$\");\nvar reRgbPercent = new RegExp(\"^rgb\\\\(\" + [reP, reP, reP] + \"\\\\)$\");\nvar reRgbaInteger = new RegExp(\"^rgba\\\\(\" + [reI, reI, reI, reN] + \"\\\\)$\");\nvar reRgbaPercent = new RegExp(\"^rgba\\\\(\" + [reP, reP, reP, reN] + \"\\\\)$\");\nvar reHslPercent = new RegExp(\"^hsl\\\\(\" + [reN, reP, reP] + \"\\\\)$\");\nvar reHslaPercent = new RegExp(\"^hsla\\\\(\" + [reN, reP, reP, reN] + \"\\\\)$\");\n\nvar named = {\n  aliceblue: 0xf0f8ff,\n  antiquewhite: 0xfaebd7,\n  aqua: 0x00ffff,\n  aquamarine: 0x7fffd4,\n  azure: 0xf0ffff,\n  beige: 0xf5f5dc,\n  bisque: 0xffe4c4,\n  black: 0x000000,\n  blanchedalmond: 0xffebcd,\n  blue: 0x0000ff,\n  blueviolet: 0x8a2be2,\n  brown: 0xa52a2a,\n  burlywood: 0xdeb887,\n  cadetblue: 0x5f9ea0,\n  chartreuse: 0x7fff00,\n  chocolate: 0xd2691e,\n  coral: 0xff7f50,\n  cornflowerblue: 0x6495ed,\n  cornsilk: 0xfff8dc,\n  crimson: 0xdc143c,\n  cyan: 0x00ffff,\n  darkblue: 0x00008b,\n  darkcyan: 0x008b8b,\n  darkgoldenrod: 0xb8860b,\n  darkgray: 0xa9a9a9,\n  darkgreen: 0x006400,\n  darkgrey: 0xa9a9a9,\n  darkkhaki: 0xbdb76b,\n  darkmagenta: 0x8b008b,\n  darkolivegreen: 0x556b2f,\n  darkorange: 0xff8c00,\n  darkorchid: 0x9932cc,\n  darkred: 0x8b0000,\n  darksalmon: 0xe9967a,\n  darkseagreen: 0x8fbc8f,\n  darkslateblue: 0x483d8b,\n  darkslategray: 0x2f4f4f,\n  darkslategrey: 0x2f4f4f,\n  darkturquoise: 0x00ced1,\n  darkviolet: 0x9400d3,\n  deeppink: 0xff1493,\n  deepskyblue: 0x00bfff,\n  dimgray: 0x696969,\n  dimgrey: 0x696969,\n  dodgerblue: 0x1e90ff,\n  firebrick: 0xb22222,\n  floralwhite: 0xfffaf0,\n  forestgreen: 0x228b22,\n  fuchsia: 0xff00ff,\n  gainsboro: 0xdcdcdc,\n  ghostwhite: 0xf8f8ff,\n  gold: 0xffd700,\n  goldenrod: 0xdaa520,\n  gray: 0x808080,\n  green: 0x008000,\n  greenyellow: 0xadff2f,\n  grey: 0x808080,\n  honeydew: 0xf0fff0,\n  hotpink: 0xff69b4,\n  indianred: 0xcd5c5c,\n  indigo: 0x4b0082,\n  ivory: 0xfffff0,\n  khaki: 0xf0e68c,\n  lavender: 0xe6e6fa,\n  lavenderblush: 0xfff0f5,\n  lawngreen: 0x7cfc00,\n  lemonchiffon: 0xfffacd,\n  lightblue: 0xadd8e6,\n  lightcoral: 0xf08080,\n  lightcyan: 0xe0ffff,\n  lightgoldenrodyellow: 0xfafad2,\n  lightgray: 0xd3d3d3,\n  lightgreen: 0x90ee90,\n  lightgrey: 0xd3d3d3,\n  lightpink: 0xffb6c1,\n  lightsalmon: 0xffa07a,\n  lightseagreen: 0x20b2aa,\n  lightskyblue: 0x87cefa,\n  lightslategray: 0x778899,\n  lightslategrey: 0x778899,\n  lightsteelblue: 0xb0c4de,\n  lightyellow: 0xffffe0,\n  lime: 0x00ff00,\n  limegreen: 0x32cd32,\n  linen: 0xfaf0e6,\n  magenta: 0xff00ff,\n  maroon: 0x800000,\n  mediumaquamarine: 0x66cdaa,\n  mediumblue: 0x0000cd,\n  mediumorchid: 0xba55d3,\n  mediumpurple: 0x9370db,\n  mediumseagreen: 0x3cb371,\n  mediumslateblue: 0x7b68ee,\n  mediumspringgreen: 0x00fa9a,\n  mediumturquoise: 0x48d1cc,\n  mediumvioletred: 0xc71585,\n  midnightblue: 0x191970,\n  mintcream: 0xf5fffa,\n  mistyrose: 0xffe4e1,\n  moccasin: 0xffe4b5,\n  navajowhite: 0xffdead,\n  navy: 0x000080,\n  oldlace: 0xfdf5e6,\n  olive: 0x808000,\n  olivedrab: 0x6b8e23,\n  orange: 0xffa500,\n  orangered: 0xff4500,\n  orchid: 0xda70d6,\n  palegoldenrod: 0xeee8aa,\n  palegreen: 0x98fb98,\n  paleturquoise: 0xafeeee,\n  palevioletred: 0xdb7093,\n  papayawhip: 0xffefd5,\n  peachpuff: 0xffdab9,\n  peru: 0xcd853f,\n  pink: 0xffc0cb,\n  plum: 0xdda0dd,\n  powderblue: 0xb0e0e6,\n  purple: 0x800080,\n  rebeccapurple: 0x663399,\n  red: 0xff0000,\n  rosybrown: 0xbc8f8f,\n  royalblue: 0x4169e1,\n  saddlebrown: 0x8b4513,\n  salmon: 0xfa8072,\n  sandybrown: 0xf4a460,\n  seagreen: 0x2e8b57,\n  seashell: 0xfff5ee,\n  sienna: 0xa0522d,\n  silver: 0xc0c0c0,\n  skyblue: 0x87ceeb,\n  slateblue: 0x6a5acd,\n  slategray: 0x708090,\n  slategrey: 0x708090,\n  snow: 0xfffafa,\n  springgreen: 0x00ff7f,\n  steelblue: 0x4682b4,\n  tan: 0xd2b48c,\n  teal: 0x008080,\n  thistle: 0xd8bfd8,\n  tomato: 0xff6347,\n  turquoise: 0x40e0d0,\n  violet: 0xee82ee,\n  wheat: 0xf5deb3,\n  white: 0xffffff,\n  whitesmoke: 0xf5f5f5,\n  yellow: 0xffff00,\n  yellowgreen: 0x9acd32\n};\n\ndefine(Color, color, {\n  displayable: function() {\n    return this.rgb().displayable();\n  },\n  toString: function() {\n    return this.rgb() + \"\";\n  }\n});\n\nfunction color(format) {\n  var m;\n  format = (format + \"\").trim().toLowerCase();\n  return (m = reHex3.exec(format)) ? (m = parseInt(m[1], 16), new Rgb((m >> 8 & 0xf) | (m >> 4 & 0x0f0), (m >> 4 & 0xf) | (m & 0xf0), ((m & 0xf) << 4) | (m & 0xf), 1)) // #f00\n      : (m = reHex6.exec(format)) ? rgbn(parseInt(m[1], 16)) // #ff0000\n      : (m = reRgbInteger.exec(format)) ? new Rgb(m[1], m[2], m[3], 1) // rgb(255, 0, 0)\n      : (m = reRgbPercent.exec(format)) ? new Rgb(m[1] * 255 / 100, m[2] * 255 / 100, m[3] * 255 / 100, 1) // rgb(100%, 0%, 0%)\n      : (m = reRgbaInteger.exec(format)) ? rgba(m[1], m[2], m[3], m[4]) // rgba(255, 0, 0, 1)\n      : (m = reRgbaPercent.exec(format)) ? rgba(m[1] * 255 / 100, m[2] * 255 / 100, m[3] * 255 / 100, m[4]) // rgb(100%, 0%, 0%, 1)\n      : (m = reHslPercent.exec(format)) ? hsla(m[1], m[2] / 100, m[3] / 100, 1) // hsl(120, 50%, 50%)\n      : (m = reHslaPercent.exec(format)) ? hsla(m[1], m[2] / 100, m[3] / 100, m[4]) // hsla(120, 50%, 50%, 1)\n      : named.hasOwnProperty(format) ? rgbn(named[format])\n      : format === \"transparent\" ? new Rgb(NaN, NaN, NaN, 0)\n      : null;\n}\n\nfunction rgbn(n) {\n  return new Rgb(n >> 16 & 0xff, n >> 8 & 0xff, n & 0xff, 1);\n}\n\nfunction rgba(r, g, b, a) {\n  if (a <= 0) r = g = b = NaN;\n  return new Rgb(r, g, b, a);\n}\n\nfunction rgbConvert(o) {\n  if (!(o instanceof Color)) o = color(o);\n  if (!o) return new Rgb;\n  o = o.rgb();\n  return new Rgb(o.r, o.g, o.b, o.opacity);\n}\n\nfunction rgb(r, g, b, opacity) {\n  return arguments.length === 1 ? rgbConvert(r) : new Rgb(r, g, b, opacity == null ? 1 : opacity);\n}\n\nfunction Rgb(r, g, b, opacity) {\n  this.r = +r;\n  this.g = +g;\n  this.b = +b;\n  this.opacity = +opacity;\n}\n\ndefine(Rgb, rgb, extend(Color, {\n  brighter: function(k) {\n    k = k == null ? brighter : Math.pow(brighter, k);\n    return new Rgb(this.r * k, this.g * k, this.b * k, this.opacity);\n  },\n  darker: function(k) {\n    k = k == null ? darker : Math.pow(darker, k);\n    return new Rgb(this.r * k, this.g * k, this.b * k, this.opacity);\n  },\n  rgb: function() {\n    return this;\n  },\n  displayable: function() {\n    return (0 <= this.r && this.r <= 255)\n        && (0 <= this.g && this.g <= 255)\n        && (0 <= this.b && this.b <= 255)\n        && (0 <= this.opacity && this.opacity <= 1);\n  },\n  toString: function() {\n    var a = this.opacity; a = isNaN(a) ? 1 : Math.max(0, Math.min(1, a));\n    return (a === 1 ? \"rgb(\" : \"rgba(\")\n        + Math.max(0, Math.min(255, Math.round(this.r) || 0)) + \", \"\n        + Math.max(0, Math.min(255, Math.round(this.g) || 0)) + \", \"\n        + Math.max(0, Math.min(255, Math.round(this.b) || 0))\n        + (a === 1 ? \")\" : \", \" + a + \")\");\n  }\n}));\n\nfunction hsla(h, s, l, a) {\n  if (a <= 0) h = s = l = NaN;\n  else if (l <= 0 || l >= 1) h = s = NaN;\n  else if (s <= 0) h = NaN;\n  return new Hsl(h, s, l, a);\n}\n\nfunction hslConvert(o) {\n  if (o instanceof Hsl) return new Hsl(o.h, o.s, o.l, o.opacity);\n  if (!(o instanceof Color)) o = color(o);\n  if (!o) return new Hsl;\n  if (o instanceof Hsl) return o;\n  o = o.rgb();\n  var r = o.r / 255,\n      g = o.g / 255,\n      b = o.b / 255,\n      min = Math.min(r, g, b),\n      max = Math.max(r, g, b),\n      h = NaN,\n      s = max - min,\n      l = (max + min) / 2;\n  if (s) {\n    if (r === max) h = (g - b) / s + (g < b) * 6;\n    else if (g === max) h = (b - r) / s + 2;\n    else h = (r - g) / s + 4;\n    s /= l < 0.5 ? max + min : 2 - max - min;\n    h *= 60;\n  } else {\n    s = l > 0 && l < 1 ? 0 : h;\n  }\n  return new Hsl(h, s, l, o.opacity);\n}\n\nfunction hsl(h, s, l, opacity) {\n  return arguments.length === 1 ? hslConvert(h) : new Hsl(h, s, l, opacity == null ? 1 : opacity);\n}\n\nfunction Hsl(h, s, l, opacity) {\n  this.h = +h;\n  this.s = +s;\n  this.l = +l;\n  this.opacity = +opacity;\n}\n\ndefine(Hsl, hsl, extend(Color, {\n  brighter: function(k) {\n    k = k == null ? brighter : Math.pow(brighter, k);\n    return new Hsl(this.h, this.s, this.l * k, this.opacity);\n  },\n  darker: function(k) {\n    k = k == null ? darker : Math.pow(darker, k);\n    return new Hsl(this.h, this.s, this.l * k, this.opacity);\n  },\n  rgb: function() {\n    var h = this.h % 360 + (this.h < 0) * 360,\n        s = isNaN(h) || isNaN(this.s) ? 0 : this.s,\n        l = this.l,\n        m2 = l + (l < 0.5 ? l : 1 - l) * s,\n        m1 = 2 * l - m2;\n    return new Rgb(\n      hsl2rgb(h >= 240 ? h - 240 : h + 120, m1, m2),\n      hsl2rgb(h, m1, m2),\n      hsl2rgb(h < 120 ? h + 240 : h - 120, m1, m2),\n      this.opacity\n    );\n  },\n  displayable: function() {\n    return (0 <= this.s && this.s <= 1 || isNaN(this.s))\n        && (0 <= this.l && this.l <= 1)\n        && (0 <= this.opacity && this.opacity <= 1);\n  }\n}));\n\n/* From FvD 13.37, CSS Color Module Level 3 */\nfunction hsl2rgb(h, m1, m2) {\n  return (h < 60 ? m1 + (m2 - m1) * h / 60\n      : h < 180 ? m2\n      : h < 240 ? m1 + (m2 - m1) * (240 - h) / 60\n      : m1) * 255;\n}\n\nvar deg2rad = Math.PI / 180;\nvar rad2deg = 180 / Math.PI;\n\nvar Kn = 18;\nvar Xn = 0.950470;\nvar Yn = 1;\nvar Zn = 1.088830;\nvar t0 = 4 / 29;\nvar t1 = 6 / 29;\nvar t2 = 3 * t1 * t1;\nvar t3 = t1 * t1 * t1;\n\nfunction labConvert(o) {\n  if (o instanceof Lab) return new Lab(o.l, o.a, o.b, o.opacity);\n  if (o instanceof Hcl) {\n    var h = o.h * deg2rad;\n    return new Lab(o.l, Math.cos(h) * o.c, Math.sin(h) * o.c, o.opacity);\n  }\n  if (!(o instanceof Rgb)) o = rgbConvert(o);\n  var b = rgb2xyz(o.r),\n      a = rgb2xyz(o.g),\n      l = rgb2xyz(o.b),\n      x = xyz2lab((0.4124564 * b + 0.3575761 * a + 0.1804375 * l) / Xn),\n      y = xyz2lab((0.2126729 * b + 0.7151522 * a + 0.0721750 * l) / Yn),\n      z = xyz2lab((0.0193339 * b + 0.1191920 * a + 0.9503041 * l) / Zn);\n  return new Lab(116 * y - 16, 500 * (x - y), 200 * (y - z), o.opacity);\n}\n\nfunction lab(l, a, b, opacity) {\n  return arguments.length === 1 ? labConvert(l) : new Lab(l, a, b, opacity == null ? 1 : opacity);\n}\n\nfunction Lab(l, a, b, opacity) {\n  this.l = +l;\n  this.a = +a;\n  this.b = +b;\n  this.opacity = +opacity;\n}\n\ndefine(Lab, lab, extend(Color, {\n  brighter: function(k) {\n    return new Lab(this.l + Kn * (k == null ? 1 : k), this.a, this.b, this.opacity);\n  },\n  darker: function(k) {\n    return new Lab(this.l - Kn * (k == null ? 1 : k), this.a, this.b, this.opacity);\n  },\n  rgb: function() {\n    var y = (this.l + 16) / 116,\n        x = isNaN(this.a) ? y : y + this.a / 500,\n        z = isNaN(this.b) ? y : y - this.b / 200;\n    y = Yn * lab2xyz(y);\n    x = Xn * lab2xyz(x);\n    z = Zn * lab2xyz(z);\n    return new Rgb(\n      xyz2rgb( 3.2404542 * x - 1.5371385 * y - 0.4985314 * z), // D65 -> sRGB\n      xyz2rgb(-0.9692660 * x + 1.8760108 * y + 0.0415560 * z),\n      xyz2rgb( 0.0556434 * x - 0.2040259 * y + 1.0572252 * z),\n      this.opacity\n    );\n  }\n}));\n\nfunction xyz2lab(t) {\n  return t > t3 ? Math.pow(t, 1 / 3) : t / t2 + t0;\n}\n\nfunction lab2xyz(t) {\n  return t > t1 ? t * t * t : t2 * (t - t0);\n}\n\nfunction xyz2rgb(x) {\n  return 255 * (x <= 0.0031308 ? 12.92 * x : 1.055 * Math.pow(x, 1 / 2.4) - 0.055);\n}\n\nfunction rgb2xyz(x) {\n  return (x /= 255) <= 0.04045 ? x / 12.92 : Math.pow((x + 0.055) / 1.055, 2.4);\n}\n\nfunction hclConvert(o) {\n  if (o instanceof Hcl) return new Hcl(o.h, o.c, o.l, o.opacity);\n  if (!(o instanceof Lab)) o = labConvert(o);\n  var h = Math.atan2(o.b, o.a) * rad2deg;\n  return new Hcl(h < 0 ? h + 360 : h, Math.sqrt(o.a * o.a + o.b * o.b), o.l, o.opacity);\n}\n\nfunction hcl(h, c, l, opacity) {\n  return arguments.length === 1 ? hclConvert(h) : new Hcl(h, c, l, opacity == null ? 1 : opacity);\n}\n\nfunction Hcl(h, c, l, opacity) {\n  this.h = +h;\n  this.c = +c;\n  this.l = +l;\n  this.opacity = +opacity;\n}\n\ndefine(Hcl, hcl, extend(Color, {\n  brighter: function(k) {\n    return new Hcl(this.h, this.c, this.l + Kn * (k == null ? 1 : k), this.opacity);\n  },\n  darker: function(k) {\n    return new Hcl(this.h, this.c, this.l - Kn * (k == null ? 1 : k), this.opacity);\n  },\n  rgb: function() {\n    return labConvert(this).rgb();\n  }\n}));\n\nvar A = -0.14861;\nvar B = +1.78277;\nvar C = -0.29227;\nvar D = -0.90649;\nvar E = +1.97294;\nvar ED = E * D;\nvar EB = E * B;\nvar BC_DA = B * C - D * A;\n\nfunction cubehelixConvert(o) {\n  if (o instanceof Cubehelix) return new Cubehelix(o.h, o.s, o.l, o.opacity);\n  if (!(o instanceof Rgb)) o = rgbConvert(o);\n  var r = o.r / 255,\n      g = o.g / 255,\n      b = o.b / 255,\n      l = (BC_DA * b + ED * r - EB * g) / (BC_DA + ED - EB),\n      bl = b - l,\n      k = (E * (g - l) - C * bl) / D,\n      s = Math.sqrt(k * k + bl * bl) / (E * l * (1 - l)), // NaN if l=0 or l=1\n      h = s ? Math.atan2(k, bl) * rad2deg - 120 : NaN;\n  return new Cubehelix(h < 0 ? h + 360 : h, s, l, o.opacity);\n}\n\nfunction cubehelix(h, s, l, opacity) {\n  return arguments.length === 1 ? cubehelixConvert(h) : new Cubehelix(h, s, l, opacity == null ? 1 : opacity);\n}\n\nfunction Cubehelix(h, s, l, opacity) {\n  this.h = +h;\n  this.s = +s;\n  this.l = +l;\n  this.opacity = +opacity;\n}\n\ndefine(Cubehelix, cubehelix, extend(Color, {\n  brighter: function(k) {\n    k = k == null ? brighter : Math.pow(brighter, k);\n    return new Cubehelix(this.h, this.s, this.l * k, this.opacity);\n  },\n  darker: function(k) {\n    k = k == null ? darker : Math.pow(darker, k);\n    return new Cubehelix(this.h, this.s, this.l * k, this.opacity);\n  },\n  rgb: function() {\n    var h = isNaN(this.h) ? 0 : (this.h + 120) * deg2rad,\n        l = +this.l,\n        a = isNaN(this.s) ? 0 : this.s * l * (1 - l),\n        cosh = Math.cos(h),\n        sinh = Math.sin(h);\n    return new Rgb(\n      255 * (l + a * (A * cosh + B * sinh)),\n      255 * (l + a * (C * cosh + D * sinh)),\n      255 * (l + a * (E * cosh)),\n      this.opacity\n    );\n  }\n}));\n\nfunction basis(t1, v0, v1, v2, v3) {\n  var t2 = t1 * t1, t3 = t2 * t1;\n  return ((1 - 3 * t1 + 3 * t2 - t3) * v0\n      + (4 - 6 * t2 + 3 * t3) * v1\n      + (1 + 3 * t1 + 3 * t2 - 3 * t3) * v2\n      + t3 * v3) / 6;\n}\n\nvar basis$1 = function(values) {\n  var n = values.length - 1;\n  return function(t) {\n    var i = t <= 0 ? (t = 0) : t >= 1 ? (t = 1, n - 1) : Math.floor(t * n),\n        v1 = values[i],\n        v2 = values[i + 1],\n        v0 = i > 0 ? values[i - 1] : 2 * v1 - v2,\n        v3 = i < n - 1 ? values[i + 2] : 2 * v2 - v1;\n    return basis((t - i / n) * n, v0, v1, v2, v3);\n  };\n};\n\nvar basisClosed = function(values) {\n  var n = values.length;\n  return function(t) {\n    var i = Math.floor(((t %= 1) < 0 ? ++t : t) * n),\n        v0 = values[(i + n - 1) % n],\n        v1 = values[i % n],\n        v2 = values[(i + 1) % n],\n        v3 = values[(i + 2) % n];\n    return basis((t - i / n) * n, v0, v1, v2, v3);\n  };\n};\n\nvar constant$3 = function(x) {\n  return function() {\n    return x;\n  };\n};\n\nfunction linear(a, d) {\n  return function(t) {\n    return a + t * d;\n  };\n}\n\nfunction exponential(a, b, y) {\n  return a = Math.pow(a, y), b = Math.pow(b, y) - a, y = 1 / y, function(t) {\n    return Math.pow(a + t * b, y);\n  };\n}\n\nfunction hue(a, b) {\n  var d = b - a;\n  return d ? linear(a, d > 180 || d < -180 ? d - 360 * Math.round(d / 360) : d) : constant$3(isNaN(a) ? b : a);\n}\n\nfunction gamma(y) {\n  return (y = +y) === 1 ? nogamma : function(a, b) {\n    return b - a ? exponential(a, b, y) : constant$3(isNaN(a) ? b : a);\n  };\n}\n\nfunction nogamma(a, b) {\n  var d = b - a;\n  return d ? linear(a, d) : constant$3(isNaN(a) ? b : a);\n}\n\nvar interpolateRgb = (function rgbGamma(y) {\n  var color$$1 = gamma(y);\n\n  function rgb$$1(start, end) {\n    var r = color$$1((start = rgb(start)).r, (end = rgb(end)).r),\n        g = color$$1(start.g, end.g),\n        b = color$$1(start.b, end.b),\n        opacity = nogamma(start.opacity, end.opacity);\n    return function(t) {\n      start.r = r(t);\n      start.g = g(t);\n      start.b = b(t);\n      start.opacity = opacity(t);\n      return start + \"\";\n    };\n  }\n\n  rgb$$1.gamma = rgbGamma;\n\n  return rgb$$1;\n})(1);\n\nfunction rgbSpline(spline) {\n  return function(colors) {\n    var n = colors.length,\n        r = new Array(n),\n        g = new Array(n),\n        b = new Array(n),\n        i, color$$1;\n    for (i = 0; i < n; ++i) {\n      color$$1 = rgb(colors[i]);\n      r[i] = color$$1.r || 0;\n      g[i] = color$$1.g || 0;\n      b[i] = color$$1.b || 0;\n    }\n    r = spline(r);\n    g = spline(g);\n    b = spline(b);\n    color$$1.opacity = 1;\n    return function(t) {\n      color$$1.r = r(t);\n      color$$1.g = g(t);\n      color$$1.b = b(t);\n      return color$$1 + \"\";\n    };\n  };\n}\n\nvar rgbBasis = rgbSpline(basis$1);\nvar rgbBasisClosed = rgbSpline(basisClosed);\n\nvar array$1 = function(a, b) {\n  var nb = b ? b.length : 0,\n      na = a ? Math.min(nb, a.length) : 0,\n      x = new Array(nb),\n      c = new Array(nb),\n      i;\n\n  for (i = 0; i < na; ++i) x[i] = interpolateValue(a[i], b[i]);\n  for (; i < nb; ++i) c[i] = b[i];\n\n  return function(t) {\n    for (i = 0; i < na; ++i) c[i] = x[i](t);\n    return c;\n  };\n};\n\nvar date = function(a, b) {\n  var d = new Date;\n  return a = +a, b -= a, function(t) {\n    return d.setTime(a + b * t), d;\n  };\n};\n\nvar reinterpolate = function(a, b) {\n  return a = +a, b -= a, function(t) {\n    return a + b * t;\n  };\n};\n\nvar object = function(a, b) {\n  var i = {},\n      c = {},\n      k;\n\n  if (a === null || typeof a !== \"object\") a = {};\n  if (b === null || typeof b !== \"object\") b = {};\n\n  for (k in b) {\n    if (k in a) {\n      i[k] = interpolateValue(a[k], b[k]);\n    } else {\n      c[k] = b[k];\n    }\n  }\n\n  return function(t) {\n    for (k in i) c[k] = i[k](t);\n    return c;\n  };\n};\n\nvar reA = /[-+]?(?:\\d+\\.?\\d*|\\.?\\d+)(?:[eE][-+]?\\d+)?/g;\nvar reB = new RegExp(reA.source, \"g\");\n\nfunction zero(b) {\n  return function() {\n    return b;\n  };\n}\n\nfunction one(b) {\n  return function(t) {\n    return b(t) + \"\";\n  };\n}\n\nvar interpolateString = function(a, b) {\n  var bi = reA.lastIndex = reB.lastIndex = 0, // scan index for next number in b\n      am, // current match in a\n      bm, // current match in b\n      bs, // string preceding current number in b, if any\n      i = -1, // index in s\n      s = [], // string constants and placeholders\n      q = []; // number interpolators\n\n  // Coerce inputs to strings.\n  a = a + \"\", b = b + \"\";\n\n  // Interpolate pairs of numbers in a & b.\n  while ((am = reA.exec(a))\n      && (bm = reB.exec(b))) {\n    if ((bs = bm.index) > bi) { // a string precedes the next number in b\n      bs = b.slice(bi, bs);\n      if (s[i]) s[i] += bs; // coalesce with previous string\n      else s[++i] = bs;\n    }\n    if ((am = am[0]) === (bm = bm[0])) { // numbers in a & b match\n      if (s[i]) s[i] += bm; // coalesce with previous string\n      else s[++i] = bm;\n    } else { // interpolate non-matching numbers\n      s[++i] = null;\n      q.push({i: i, x: reinterpolate(am, bm)});\n    }\n    bi = reB.lastIndex;\n  }\n\n  // Add remains of b.\n  if (bi < b.length) {\n    bs = b.slice(bi);\n    if (s[i]) s[i] += bs; // coalesce with previous string\n    else s[++i] = bs;\n  }\n\n  // Special optimization for only a single match.\n  // Otherwise, interpolate each of the numbers and rejoin the string.\n  return s.length < 2 ? (q[0]\n      ? one(q[0].x)\n      : zero(b))\n      : (b = q.length, function(t) {\n          for (var i = 0, o; i < b; ++i) s[(o = q[i]).i] = o.x(t);\n          return s.join(\"\");\n        });\n};\n\nvar interpolateValue = function(a, b) {\n  var t = typeof b, c;\n  return b == null || t === \"boolean\" ? constant$3(b)\n      : (t === \"number\" ? reinterpolate\n      : t === \"string\" ? ((c = color(b)) ? (b = c, interpolateRgb) : interpolateString)\n      : b instanceof color ? interpolateRgb\n      : b instanceof Date ? date\n      : Array.isArray(b) ? array$1\n      : typeof b.valueOf !== \"function\" && typeof b.toString !== \"function\" || isNaN(b) ? object\n      : reinterpolate)(a, b);\n};\n\nvar interpolateRound = function(a, b) {\n  return a = +a, b -= a, function(t) {\n    return Math.round(a + b * t);\n  };\n};\n\nvar degrees = 180 / Math.PI;\n\nvar identity$2 = {\n  translateX: 0,\n  translateY: 0,\n  rotate: 0,\n  skewX: 0,\n  scaleX: 1,\n  scaleY: 1\n};\n\nvar decompose = function(a, b, c, d, e, f) {\n  var scaleX, scaleY, skewX;\n  if (scaleX = Math.sqrt(a * a + b * b)) a /= scaleX, b /= scaleX;\n  if (skewX = a * c + b * d) c -= a * skewX, d -= b * skewX;\n  if (scaleY = Math.sqrt(c * c + d * d)) c /= scaleY, d /= scaleY, skewX /= scaleY;\n  if (a * d < b * c) a = -a, b = -b, skewX = -skewX, scaleX = -scaleX;\n  return {\n    translateX: e,\n    translateY: f,\n    rotate: Math.atan2(b, a) * degrees,\n    skewX: Math.atan(skewX) * degrees,\n    scaleX: scaleX,\n    scaleY: scaleY\n  };\n};\n\nvar cssNode;\nvar cssRoot;\nvar cssView;\nvar svgNode;\n\nfunction parseCss(value) {\n  if (value === \"none\") return identity$2;\n  if (!cssNode) cssNode = document.createElement(\"DIV\"), cssRoot = document.documentElement, cssView = document.defaultView;\n  cssNode.style.transform = value;\n  value = cssView.getComputedStyle(cssRoot.appendChild(cssNode), null).getPropertyValue(\"transform\");\n  cssRoot.removeChild(cssNode);\n  value = value.slice(7, -1).split(\",\");\n  return decompose(+value[0], +value[1], +value[2], +value[3], +value[4], +value[5]);\n}\n\nfunction parseSvg(value) {\n  if (value == null) return identity$2;\n  if (!svgNode) svgNode = document.createElementNS(\"http://www.w3.org/2000/svg\", \"g\");\n  svgNode.setAttribute(\"transform\", value);\n  if (!(value = svgNode.transform.baseVal.consolidate())) return identity$2;\n  value = value.matrix;\n  return decompose(value.a, value.b, value.c, value.d, value.e, value.f);\n}\n\nfunction interpolateTransform(parse, pxComma, pxParen, degParen) {\n\n  function pop(s) {\n    return s.length ? s.pop() + \" \" : \"\";\n  }\n\n  function translate(xa, ya, xb, yb, s, q) {\n    if (xa !== xb || ya !== yb) {\n      var i = s.push(\"translate(\", null, pxComma, null, pxParen);\n      q.push({i: i - 4, x: reinterpolate(xa, xb)}, {i: i - 2, x: reinterpolate(ya, yb)});\n    } else if (xb || yb) {\n      s.push(\"translate(\" + xb + pxComma + yb + pxParen);\n    }\n  }\n\n  function rotate(a, b, s, q) {\n    if (a !== b) {\n      if (a - b > 180) b += 360; else if (b - a > 180) a += 360; // shortest path\n      q.push({i: s.push(pop(s) + \"rotate(\", null, degParen) - 2, x: reinterpolate(a, b)});\n    } else if (b) {\n      s.push(pop(s) + \"rotate(\" + b + degParen);\n    }\n  }\n\n  function skewX(a, b, s, q) {\n    if (a !== b) {\n      q.push({i: s.push(pop(s) + \"skewX(\", null, degParen) - 2, x: reinterpolate(a, b)});\n    } else if (b) {\n      s.push(pop(s) + \"skewX(\" + b + degParen);\n    }\n  }\n\n  function scale(xa, ya, xb, yb, s, q) {\n    if (xa !== xb || ya !== yb) {\n      var i = s.push(pop(s) + \"scale(\", null, \",\", null, \")\");\n      q.push({i: i - 4, x: reinterpolate(xa, xb)}, {i: i - 2, x: reinterpolate(ya, yb)});\n    } else if (xb !== 1 || yb !== 1) {\n      s.push(pop(s) + \"scale(\" + xb + \",\" + yb + \")\");\n    }\n  }\n\n  return function(a, b) {\n    var s = [], // string constants and placeholders\n        q = []; // number interpolators\n    a = parse(a), b = parse(b);\n    translate(a.translateX, a.translateY, b.translateX, b.translateY, s, q);\n    rotate(a.rotate, b.rotate, s, q);\n    skewX(a.skewX, b.skewX, s, q);\n    scale(a.scaleX, a.scaleY, b.scaleX, b.scaleY, s, q);\n    a = b = null; // gc\n    return function(t) {\n      var i = -1, n = q.length, o;\n      while (++i < n) s[(o = q[i]).i] = o.x(t);\n      return s.join(\"\");\n    };\n  };\n}\n\nvar interpolateTransformCss = interpolateTransform(parseCss, \"px, \", \"px)\", \"deg)\");\nvar interpolateTransformSvg = interpolateTransform(parseSvg, \", \", \")\", \")\");\n\nvar rho = Math.SQRT2;\nvar rho2 = 2;\nvar rho4 = 4;\nvar epsilon2 = 1e-12;\n\nfunction cosh(x) {\n  return ((x = Math.exp(x)) + 1 / x) / 2;\n}\n\nfunction sinh(x) {\n  return ((x = Math.exp(x)) - 1 / x) / 2;\n}\n\nfunction tanh(x) {\n  return ((x = Math.exp(2 * x)) - 1) / (x + 1);\n}\n\n// p0 = [ux0, uy0, w0]\n// p1 = [ux1, uy1, w1]\nvar interpolateZoom = function(p0, p1) {\n  var ux0 = p0[0], uy0 = p0[1], w0 = p0[2],\n      ux1 = p1[0], uy1 = p1[1], w1 = p1[2],\n      dx = ux1 - ux0,\n      dy = uy1 - uy0,\n      d2 = dx * dx + dy * dy,\n      i,\n      S;\n\n  // Special case for u0 ≅ u1.\n  if (d2 < epsilon2) {\n    S = Math.log(w1 / w0) / rho;\n    i = function(t) {\n      return [\n        ux0 + t * dx,\n        uy0 + t * dy,\n        w0 * Math.exp(rho * t * S)\n      ];\n    };\n  }\n\n  // General case.\n  else {\n    var d1 = Math.sqrt(d2),\n        b0 = (w1 * w1 - w0 * w0 + rho4 * d2) / (2 * w0 * rho2 * d1),\n        b1 = (w1 * w1 - w0 * w0 - rho4 * d2) / (2 * w1 * rho2 * d1),\n        r0 = Math.log(Math.sqrt(b0 * b0 + 1) - b0),\n        r1 = Math.log(Math.sqrt(b1 * b1 + 1) - b1);\n    S = (r1 - r0) / rho;\n    i = function(t) {\n      var s = t * S,\n          coshr0 = cosh(r0),\n          u = w0 / (rho2 * d1) * (coshr0 * tanh(rho * s + r0) - sinh(r0));\n      return [\n        ux0 + u * dx,\n        uy0 + u * dy,\n        w0 * coshr0 / cosh(rho * s + r0)\n      ];\n    };\n  }\n\n  i.duration = S * 1000;\n\n  return i;\n};\n\nfunction hsl$1(hue$$1) {\n  return function(start, end) {\n    var h = hue$$1((start = hsl(start)).h, (end = hsl(end)).h),\n        s = nogamma(start.s, end.s),\n        l = nogamma(start.l, end.l),\n        opacity = nogamma(start.opacity, end.opacity);\n    return function(t) {\n      start.h = h(t);\n      start.s = s(t);\n      start.l = l(t);\n      start.opacity = opacity(t);\n      return start + \"\";\n    };\n  }\n}\n\nvar hsl$2 = hsl$1(hue);\nvar hslLong = hsl$1(nogamma);\n\nfunction lab$1(start, end) {\n  var l = nogamma((start = lab(start)).l, (end = lab(end)).l),\n      a = nogamma(start.a, end.a),\n      b = nogamma(start.b, end.b),\n      opacity = nogamma(start.opacity, end.opacity);\n  return function(t) {\n    start.l = l(t);\n    start.a = a(t);\n    start.b = b(t);\n    start.opacity = opacity(t);\n    return start + \"\";\n  };\n}\n\nfunction hcl$1(hue$$1) {\n  return function(start, end) {\n    var h = hue$$1((start = hcl(start)).h, (end = hcl(end)).h),\n        c = nogamma(start.c, end.c),\n        l = nogamma(start.l, end.l),\n        opacity = nogamma(start.opacity, end.opacity);\n    return function(t) {\n      start.h = h(t);\n      start.c = c(t);\n      start.l = l(t);\n      start.opacity = opacity(t);\n      return start + \"\";\n    };\n  }\n}\n\nvar hcl$2 = hcl$1(hue);\nvar hclLong = hcl$1(nogamma);\n\nfunction cubehelix$1(hue$$1) {\n  return (function cubehelixGamma(y) {\n    y = +y;\n\n    function cubehelix$$1(start, end) {\n      var h = hue$$1((start = cubehelix(start)).h, (end = cubehelix(end)).h),\n          s = nogamma(start.s, end.s),\n          l = nogamma(start.l, end.l),\n          opacity = nogamma(start.opacity, end.opacity);\n      return function(t) {\n        start.h = h(t);\n        start.s = s(t);\n        start.l = l(Math.pow(t, y));\n        start.opacity = opacity(t);\n        return start + \"\";\n      };\n    }\n\n    cubehelix$$1.gamma = cubehelixGamma;\n\n    return cubehelix$$1;\n  })(1);\n}\n\nvar cubehelix$2 = cubehelix$1(hue);\nvar cubehelixLong = cubehelix$1(nogamma);\n\nvar quantize = function(interpolator, n) {\n  var samples = new Array(n);\n  for (var i = 0; i < n; ++i) samples[i] = interpolator(i / (n - 1));\n  return samples;\n};\n\nvar frame = 0;\nvar timeout = 0;\nvar interval = 0;\nvar pokeDelay = 1000;\nvar taskHead;\nvar taskTail;\nvar clockLast = 0;\nvar clockNow = 0;\nvar clockSkew = 0;\nvar clock = typeof performance === \"object\" && performance.now ? performance : Date;\nvar setFrame = typeof window === \"object\" && window.requestAnimationFrame ? window.requestAnimationFrame.bind(window) : function(f) { setTimeout(f, 17); };\n\nfunction now() {\n  return clockNow || (setFrame(clearNow), clockNow = clock.now() + clockSkew);\n}\n\nfunction clearNow() {\n  clockNow = 0;\n}\n\nfunction Timer() {\n  this._call =\n  this._time =\n  this._next = null;\n}\n\nTimer.prototype = timer.prototype = {\n  constructor: Timer,\n  restart: function(callback, delay, time) {\n    if (typeof callback !== \"function\") throw new TypeError(\"callback is not a function\");\n    time = (time == null ? now() : +time) + (delay == null ? 0 : +delay);\n    if (!this._next && taskTail !== this) {\n      if (taskTail) taskTail._next = this;\n      else taskHead = this;\n      taskTail = this;\n    }\n    this._call = callback;\n    this._time = time;\n    sleep();\n  },\n  stop: function() {\n    if (this._call) {\n      this._call = null;\n      this._time = Infinity;\n      sleep();\n    }\n  }\n};\n\nfunction timer(callback, delay, time) {\n  var t = new Timer;\n  t.restart(callback, delay, time);\n  return t;\n}\n\nfunction timerFlush() {\n  now(); // Get the current time, if not already set.\n  ++frame; // Pretend we’ve set an alarm, if we haven’t already.\n  var t = taskHead, e;\n  while (t) {\n    if ((e = clockNow - t._time) >= 0) t._call.call(null, e);\n    t = t._next;\n  }\n  --frame;\n}\n\nfunction wake() {\n  clockNow = (clockLast = clock.now()) + clockSkew;\n  frame = timeout = 0;\n  try {\n    timerFlush();\n  } finally {\n    frame = 0;\n    nap();\n    clockNow = 0;\n  }\n}\n\nfunction poke() {\n  var now = clock.now(), delay = now - clockLast;\n  if (delay > pokeDelay) clockSkew -= delay, clockLast = now;\n}\n\nfunction nap() {\n  var t0, t1 = taskHead, t2, time = Infinity;\n  while (t1) {\n    if (t1._call) {\n      if (time > t1._time) time = t1._time;\n      t0 = t1, t1 = t1._next;\n    } else {\n      t2 = t1._next, t1._next = null;\n      t1 = t0 ? t0._next = t2 : taskHead = t2;\n    }\n  }\n  taskTail = t0;\n  sleep(time);\n}\n\nfunction sleep(time) {\n  if (frame) return; // Soonest alarm already set, or will be.\n  if (timeout) timeout = clearTimeout(timeout);\n  var delay = time - clockNow; // Strictly less than if we recomputed clockNow.\n  if (delay > 24) {\n    if (time < Infinity) timeout = setTimeout(wake, time - clock.now() - clockSkew);\n    if (interval) interval = clearInterval(interval);\n  } else {\n    if (!interval) clockLast = clock.now(), interval = setInterval(poke, pokeDelay);\n    frame = 1, setFrame(wake);\n  }\n}\n\nvar timeout$1 = function(callback, delay, time) {\n  var t = new Timer;\n  delay = delay == null ? 0 : +delay;\n  t.restart(function(elapsed) {\n    t.stop();\n    callback(elapsed + delay);\n  }, delay, time);\n  return t;\n};\n\nvar interval$1 = function(callback, delay, time) {\n  var t = new Timer, total = delay;\n  if (delay == null) return t.restart(callback, delay, time), t;\n  delay = +delay, time = time == null ? now() : +time;\n  t.restart(function tick(elapsed) {\n    elapsed += total;\n    t.restart(tick, total += delay, time);\n    callback(elapsed);\n  }, delay, time);\n  return t;\n};\n\nvar emptyOn = dispatch(\"start\", \"end\", \"interrupt\");\nvar emptyTween = [];\n\nvar CREATED = 0;\nvar SCHEDULED = 1;\nvar STARTING = 2;\nvar STARTED = 3;\nvar RUNNING = 4;\nvar ENDING = 5;\nvar ENDED = 6;\n\nvar schedule = function(node, name, id, index, group, timing) {\n  var schedules = node.__transition;\n  if (!schedules) node.__transition = {};\n  else if (id in schedules) return;\n  create(node, id, {\n    name: name,\n    index: index, // For context during callback.\n    group: group, // For context during callback.\n    on: emptyOn,\n    tween: emptyTween,\n    time: timing.time,\n    delay: timing.delay,\n    duration: timing.duration,\n    ease: timing.ease,\n    timer: null,\n    state: CREATED\n  });\n};\n\nfunction init(node, id) {\n  var schedule = node.__transition;\n  if (!schedule || !(schedule = schedule[id]) || schedule.state > CREATED) throw new Error(\"too late\");\n  return schedule;\n}\n\nfunction set$1(node, id) {\n  var schedule = node.__transition;\n  if (!schedule || !(schedule = schedule[id]) || schedule.state > STARTING) throw new Error(\"too late\");\n  return schedule;\n}\n\nfunction get$1(node, id) {\n  var schedule = node.__transition;\n  if (!schedule || !(schedule = schedule[id])) throw new Error(\"too late\");\n  return schedule;\n}\n\nfunction create(node, id, self) {\n  var schedules = node.__transition,\n      tween;\n\n  // Initialize the self timer when the transition is created.\n  // Note the actual delay is not known until the first callback!\n  schedules[id] = self;\n  self.timer = timer(schedule, 0, self.time);\n\n  function schedule(elapsed) {\n    self.state = SCHEDULED;\n    self.timer.restart(start, self.delay, self.time);\n\n    // If the elapsed delay is less than our first sleep, start immediately.\n    if (self.delay <= elapsed) start(elapsed - self.delay);\n  }\n\n  function start(elapsed) {\n    var i, j, n, o;\n\n    // If the state is not SCHEDULED, then we previously errored on start.\n    if (self.state !== SCHEDULED) return stop();\n\n    for (i in schedules) {\n      o = schedules[i];\n      if (o.name !== self.name) continue;\n\n      // While this element already has a starting transition during this frame,\n      // defer starting an interrupting transition until that transition has a\n      // chance to tick (and possibly end); see d3/d3-transition#54!\n      if (o.state === STARTED) return timeout$1(start);\n\n      // Interrupt the active transition, if any.\n      // Dispatch the interrupt event.\n      if (o.state === RUNNING) {\n        o.state = ENDED;\n        o.timer.stop();\n        o.on.call(\"interrupt\", node, node.__data__, o.index, o.group);\n        delete schedules[i];\n      }\n\n      // Cancel any pre-empted transitions. No interrupt event is dispatched\n      // because the cancelled transitions never started. Note that this also\n      // removes this transition from the pending list!\n      else if (+i < id) {\n        o.state = ENDED;\n        o.timer.stop();\n        delete schedules[i];\n      }\n    }\n\n    // Defer the first tick to end of the current frame; see d3/d3#1576.\n    // Note the transition may be canceled after start and before the first tick!\n    // Note this must be scheduled before the start event; see d3/d3-transition#16!\n    // Assuming this is successful, subsequent callbacks go straight to tick.\n    timeout$1(function() {\n      if (self.state === STARTED) {\n        self.state = RUNNING;\n        self.timer.restart(tick, self.delay, self.time);\n        tick(elapsed);\n      }\n    });\n\n    // Dispatch the start event.\n    // Note this must be done before the tween are initialized.\n    self.state = STARTING;\n    self.on.call(\"start\", node, node.__data__, self.index, self.group);\n    if (self.state !== STARTING) return; // interrupted\n    self.state = STARTED;\n\n    // Initialize the tween, deleting null tween.\n    tween = new Array(n = self.tween.length);\n    for (i = 0, j = -1; i < n; ++i) {\n      if (o = self.tween[i].value.call(node, node.__data__, self.index, self.group)) {\n        tween[++j] = o;\n      }\n    }\n    tween.length = j + 1;\n  }\n\n  function tick(elapsed) {\n    var t = elapsed < self.duration ? self.ease.call(null, elapsed / self.duration) : (self.timer.restart(stop), self.state = ENDING, 1),\n        i = -1,\n        n = tween.length;\n\n    while (++i < n) {\n      tween[i].call(null, t);\n    }\n\n    // Dispatch the end event.\n    if (self.state === ENDING) {\n      self.on.call(\"end\", node, node.__data__, self.index, self.group);\n      stop();\n    }\n  }\n\n  function stop() {\n    self.state = ENDED;\n    self.timer.stop();\n    delete schedules[id];\n    for (var i in schedules) return; // eslint-disable-line no-unused-vars\n    delete node.__transition;\n  }\n}\n\nvar interrupt = function(node, name) {\n  var schedules = node.__transition,\n      schedule$$1,\n      active,\n      empty = true,\n      i;\n\n  if (!schedules) return;\n\n  name = name == null ? null : name + \"\";\n\n  for (i in schedules) {\n    if ((schedule$$1 = schedules[i]).name !== name) { empty = false; continue; }\n    active = schedule$$1.state > STARTING && schedule$$1.state < ENDING;\n    schedule$$1.state = ENDED;\n    schedule$$1.timer.stop();\n    if (active) schedule$$1.on.call(\"interrupt\", node, node.__data__, schedule$$1.index, schedule$$1.group);\n    delete schedules[i];\n  }\n\n  if (empty) delete node.__transition;\n};\n\nvar selection_interrupt = function(name) {\n  return this.each(function() {\n    interrupt(this, name);\n  });\n};\n\nfunction tweenRemove(id, name) {\n  var tween0, tween1;\n  return function() {\n    var schedule$$1 = set$1(this, id),\n        tween = schedule$$1.tween;\n\n    // If this node shared tween with the previous node,\n    // just assign the updated shared tween and we’re done!\n    // Otherwise, copy-on-write.\n    if (tween !== tween0) {\n      tween1 = tween0 = tween;\n      for (var i = 0, n = tween1.length; i < n; ++i) {\n        if (tween1[i].name === name) {\n          tween1 = tween1.slice();\n          tween1.splice(i, 1);\n          break;\n        }\n      }\n    }\n\n    schedule$$1.tween = tween1;\n  };\n}\n\nfunction tweenFunction(id, name, value) {\n  var tween0, tween1;\n  if (typeof value !== \"function\") throw new Error;\n  return function() {\n    var schedule$$1 = set$1(this, id),\n        tween = schedule$$1.tween;\n\n    // If this node shared tween with the previous node,\n    // just assign the updated shared tween and we’re done!\n    // Otherwise, copy-on-write.\n    if (tween !== tween0) {\n      tween1 = (tween0 = tween).slice();\n      for (var t = {name: name, value: value}, i = 0, n = tween1.length; i < n; ++i) {\n        if (tween1[i].name === name) {\n          tween1[i] = t;\n          break;\n        }\n      }\n      if (i === n) tween1.push(t);\n    }\n\n    schedule$$1.tween = tween1;\n  };\n}\n\nvar transition_tween = function(name, value) {\n  var id = this._id;\n\n  name += \"\";\n\n  if (arguments.length < 2) {\n    var tween = get$1(this.node(), id).tween;\n    for (var i = 0, n = tween.length, t; i < n; ++i) {\n      if ((t = tween[i]).name === name) {\n        return t.value;\n      }\n    }\n    return null;\n  }\n\n  return this.each((value == null ? tweenRemove : tweenFunction)(id, name, value));\n};\n\nfunction tweenValue(transition, name, value) {\n  var id = transition._id;\n\n  transition.each(function() {\n    var schedule$$1 = set$1(this, id);\n    (schedule$$1.value || (schedule$$1.value = {}))[name] = value.apply(this, arguments);\n  });\n\n  return function(node) {\n    return get$1(node, id).value[name];\n  };\n}\n\nvar interpolate = function(a, b) {\n  var c;\n  return (typeof b === \"number\" ? reinterpolate\n      : b instanceof color ? interpolateRgb\n      : (c = color(b)) ? (b = c, interpolateRgb)\n      : interpolateString)(a, b);\n};\n\nfunction attrRemove$1(name) {\n  return function() {\n    this.removeAttribute(name);\n  };\n}\n\nfunction attrRemoveNS$1(fullname) {\n  return function() {\n    this.removeAttributeNS(fullname.space, fullname.local);\n  };\n}\n\nfunction attrConstant$1(name, interpolate$$1, value1) {\n  var value00,\n      interpolate0;\n  return function() {\n    var value0 = this.getAttribute(name);\n    return value0 === value1 ? null\n        : value0 === value00 ? interpolate0\n        : interpolate0 = interpolate$$1(value00 = value0, value1);\n  };\n}\n\nfunction attrConstantNS$1(fullname, interpolate$$1, value1) {\n  var value00,\n      interpolate0;\n  return function() {\n    var value0 = this.getAttributeNS(fullname.space, fullname.local);\n    return value0 === value1 ? null\n        : value0 === value00 ? interpolate0\n        : interpolate0 = interpolate$$1(value00 = value0, value1);\n  };\n}\n\nfunction attrFunction$1(name, interpolate$$1, value) {\n  var value00,\n      value10,\n      interpolate0;\n  return function() {\n    var value0, value1 = value(this);\n    if (value1 == null) return void this.removeAttribute(name);\n    value0 = this.getAttribute(name);\n    return value0 === value1 ? null\n        : value0 === value00 && value1 === value10 ? interpolate0\n        : interpolate0 = interpolate$$1(value00 = value0, value10 = value1);\n  };\n}\n\nfunction attrFunctionNS$1(fullname, interpolate$$1, value) {\n  var value00,\n      value10,\n      interpolate0;\n  return function() {\n    var value0, value1 = value(this);\n    if (value1 == null) return void this.removeAttributeNS(fullname.space, fullname.local);\n    value0 = this.getAttributeNS(fullname.space, fullname.local);\n    return value0 === value1 ? null\n        : value0 === value00 && value1 === value10 ? interpolate0\n        : interpolate0 = interpolate$$1(value00 = value0, value10 = value1);\n  };\n}\n\nvar transition_attr = function(name, value) {\n  var fullname = namespace(name), i = fullname === \"transform\" ? interpolateTransformSvg : interpolate;\n  return this.attrTween(name, typeof value === \"function\"\n      ? (fullname.local ? attrFunctionNS$1 : attrFunction$1)(fullname, i, tweenValue(this, \"attr.\" + name, value))\n      : value == null ? (fullname.local ? attrRemoveNS$1 : attrRemove$1)(fullname)\n      : (fullname.local ? attrConstantNS$1 : attrConstant$1)(fullname, i, value + \"\"));\n};\n\nfunction attrTweenNS(fullname, value) {\n  function tween() {\n    var node = this, i = value.apply(node, arguments);\n    return i && function(t) {\n      node.setAttributeNS(fullname.space, fullname.local, i(t));\n    };\n  }\n  tween._value = value;\n  return tween;\n}\n\nfunction attrTween(name, value) {\n  function tween() {\n    var node = this, i = value.apply(node, arguments);\n    return i && function(t) {\n      node.setAttribute(name, i(t));\n    };\n  }\n  tween._value = value;\n  return tween;\n}\n\nvar transition_attrTween = function(name, value) {\n  var key = \"attr.\" + name;\n  if (arguments.length < 2) return (key = this.tween(key)) && key._value;\n  if (value == null) return this.tween(key, null);\n  if (typeof value !== \"function\") throw new Error;\n  var fullname = namespace(name);\n  return this.tween(key, (fullname.local ? attrTweenNS : attrTween)(fullname, value));\n};\n\nfunction delayFunction(id, value) {\n  return function() {\n    init(this, id).delay = +value.apply(this, arguments);\n  };\n}\n\nfunction delayConstant(id, value) {\n  return value = +value, function() {\n    init(this, id).delay = value;\n  };\n}\n\nvar transition_delay = function(value) {\n  var id = this._id;\n\n  return arguments.length\n      ? this.each((typeof value === \"function\"\n          ? delayFunction\n          : delayConstant)(id, value))\n      : get$1(this.node(), id).delay;\n};\n\nfunction durationFunction(id, value) {\n  return function() {\n    set$1(this, id).duration = +value.apply(this, arguments);\n  };\n}\n\nfunction durationConstant(id, value) {\n  return value = +value, function() {\n    set$1(this, id).duration = value;\n  };\n}\n\nvar transition_duration = function(value) {\n  var id = this._id;\n\n  return arguments.length\n      ? this.each((typeof value === \"function\"\n          ? durationFunction\n          : durationConstant)(id, value))\n      : get$1(this.node(), id).duration;\n};\n\nfunction easeConstant(id, value) {\n  if (typeof value !== \"function\") throw new Error;\n  return function() {\n    set$1(this, id).ease = value;\n  };\n}\n\nvar transition_ease = function(value) {\n  var id = this._id;\n\n  return arguments.length\n      ? this.each(easeConstant(id, value))\n      : get$1(this.node(), id).ease;\n};\n\nvar transition_filter = function(match) {\n  if (typeof match !== \"function\") match = matcher$1(match);\n\n  for (var groups = this._groups, m = groups.length, subgroups = new Array(m), j = 0; j < m; ++j) {\n    for (var group = groups[j], n = group.length, subgroup = subgroups[j] = [], node, i = 0; i < n; ++i) {\n      if ((node = group[i]) && match.call(node, node.__data__, i, group)) {\n        subgroup.push(node);\n      }\n    }\n  }\n\n  return new Transition(subgroups, this._parents, this._name, this._id);\n};\n\nvar transition_merge = function(transition$$1) {\n  if (transition$$1._id !== this._id) throw new Error;\n\n  for (var groups0 = this._groups, groups1 = transition$$1._groups, m0 = groups0.length, m1 = groups1.length, m = Math.min(m0, m1), merges = new Array(m0), j = 0; j < m; ++j) {\n    for (var group0 = groups0[j], group1 = groups1[j], n = group0.length, merge = merges[j] = new Array(n), node, i = 0; i < n; ++i) {\n      if (node = group0[i] || group1[i]) {\n        merge[i] = node;\n      }\n    }\n  }\n\n  for (; j < m0; ++j) {\n    merges[j] = groups0[j];\n  }\n\n  return new Transition(merges, this._parents, this._name, this._id);\n};\n\nfunction start(name) {\n  return (name + \"\").trim().split(/^|\\s+/).every(function(t) {\n    var i = t.indexOf(\".\");\n    if (i >= 0) t = t.slice(0, i);\n    return !t || t === \"start\";\n  });\n}\n\nfunction onFunction(id, name, listener) {\n  var on0, on1, sit = start(name) ? init : set$1;\n  return function() {\n    var schedule$$1 = sit(this, id),\n        on = schedule$$1.on;\n\n    // If this node shared a dispatch with the previous node,\n    // just assign the updated shared dispatch and we’re done!\n    // Otherwise, copy-on-write.\n    if (on !== on0) (on1 = (on0 = on).copy()).on(name, listener);\n\n    schedule$$1.on = on1;\n  };\n}\n\nvar transition_on = function(name, listener) {\n  var id = this._id;\n\n  return arguments.length < 2\n      ? get$1(this.node(), id).on.on(name)\n      : this.each(onFunction(id, name, listener));\n};\n\nfunction removeFunction(id) {\n  return function() {\n    var parent = this.parentNode;\n    for (var i in this.__transition) if (+i !== id) return;\n    if (parent) parent.removeChild(this);\n  };\n}\n\nvar transition_remove = function() {\n  return this.on(\"end.remove\", removeFunction(this._id));\n};\n\nvar transition_select = function(select) {\n  var name = this._name,\n      id = this._id;\n\n  if (typeof select !== \"function\") select = selector(select);\n\n  for (var groups = this._groups, m = groups.length, subgroups = new Array(m), j = 0; j < m; ++j) {\n    for (var group = groups[j], n = group.length, subgroup = subgroups[j] = new Array(n), node, subnode, i = 0; i < n; ++i) {\n      if ((node = group[i]) && (subnode = select.call(node, node.__data__, i, group))) {\n        if (\"__data__\" in node) subnode.__data__ = node.__data__;\n        subgroup[i] = subnode;\n        schedule(subgroup[i], name, id, i, subgroup, get$1(node, id));\n      }\n    }\n  }\n\n  return new Transition(subgroups, this._parents, name, id);\n};\n\nvar transition_selectAll = function(select) {\n  var name = this._name,\n      id = this._id;\n\n  if (typeof select !== \"function\") select = selectorAll(select);\n\n  for (var groups = this._groups, m = groups.length, subgroups = [], parents = [], j = 0; j < m; ++j) {\n    for (var group = groups[j], n = group.length, node, i = 0; i < n; ++i) {\n      if (node = group[i]) {\n        for (var children = select.call(node, node.__data__, i, group), child, inherit = get$1(node, id), k = 0, l = children.length; k < l; ++k) {\n          if (child = children[k]) {\n            schedule(child, name, id, k, children, inherit);\n          }\n        }\n        subgroups.push(children);\n        parents.push(node);\n      }\n    }\n  }\n\n  return new Transition(subgroups, parents, name, id);\n};\n\nvar Selection$1 = selection.prototype.constructor;\n\nvar transition_selection = function() {\n  return new Selection$1(this._groups, this._parents);\n};\n\nfunction styleRemove$1(name, interpolate$$1) {\n  var value00,\n      value10,\n      interpolate0;\n  return function() {\n    var value0 = styleValue(this, name),\n        value1 = (this.style.removeProperty(name), styleValue(this, name));\n    return value0 === value1 ? null\n        : value0 === value00 && value1 === value10 ? interpolate0\n        : interpolate0 = interpolate$$1(value00 = value0, value10 = value1);\n  };\n}\n\nfunction styleRemoveEnd(name) {\n  return function() {\n    this.style.removeProperty(name);\n  };\n}\n\nfunction styleConstant$1(name, interpolate$$1, value1) {\n  var value00,\n      interpolate0;\n  return function() {\n    var value0 = styleValue(this, name);\n    return value0 === value1 ? null\n        : value0 === value00 ? interpolate0\n        : interpolate0 = interpolate$$1(value00 = value0, value1);\n  };\n}\n\nfunction styleFunction$1(name, interpolate$$1, value) {\n  var value00,\n      value10,\n      interpolate0;\n  return function() {\n    var value0 = styleValue(this, name),\n        value1 = value(this);\n    if (value1 == null) value1 = (this.style.removeProperty(name), styleValue(this, name));\n    return value0 === value1 ? null\n        : value0 === value00 && value1 === value10 ? interpolate0\n        : interpolate0 = interpolate$$1(value00 = value0, value10 = value1);\n  };\n}\n\nvar transition_style = function(name, value, priority) {\n  var i = (name += \"\") === \"transform\" ? interpolateTransformCss : interpolate;\n  return value == null ? this\n          .styleTween(name, styleRemove$1(name, i))\n          .on(\"end.style.\" + name, styleRemoveEnd(name))\n      : this.styleTween(name, typeof value === \"function\"\n          ? styleFunction$1(name, i, tweenValue(this, \"style.\" + name, value))\n          : styleConstant$1(name, i, value + \"\"), priority);\n};\n\nfunction styleTween(name, value, priority) {\n  function tween() {\n    var node = this, i = value.apply(node, arguments);\n    return i && function(t) {\n      node.style.setProperty(name, i(t), priority);\n    };\n  }\n  tween._value = value;\n  return tween;\n}\n\nvar transition_styleTween = function(name, value, priority) {\n  var key = \"style.\" + (name += \"\");\n  if (arguments.length < 2) return (key = this.tween(key)) && key._value;\n  if (value == null) return this.tween(key, null);\n  if (typeof value !== \"function\") throw new Error;\n  return this.tween(key, styleTween(name, value, priority == null ? \"\" : priority));\n};\n\nfunction textConstant$1(value) {\n  return function() {\n    this.textContent = value;\n  };\n}\n\nfunction textFunction$1(value) {\n  return function() {\n    var value1 = value(this);\n    this.textContent = value1 == null ? \"\" : value1;\n  };\n}\n\nvar transition_text = function(value) {\n  return this.tween(\"text\", typeof value === \"function\"\n      ? textFunction$1(tweenValue(this, \"text\", value))\n      : textConstant$1(value == null ? \"\" : value + \"\"));\n};\n\nvar transition_transition = function() {\n  var name = this._name,\n      id0 = this._id,\n      id1 = newId();\n\n  for (var groups = this._groups, m = groups.length, j = 0; j < m; ++j) {\n    for (var group = groups[j], n = group.length, node, i = 0; i < n; ++i) {\n      if (node = group[i]) {\n        var inherit = get$1(node, id0);\n        schedule(node, name, id1, i, group, {\n          time: inherit.time + inherit.delay + inherit.duration,\n          delay: 0,\n          duration: inherit.duration,\n          ease: inherit.ease\n        });\n      }\n    }\n  }\n\n  return new Transition(groups, this._parents, name, id1);\n};\n\nvar id = 0;\n\nfunction Transition(groups, parents, name, id) {\n  this._groups = groups;\n  this._parents = parents;\n  this._name = name;\n  this._id = id;\n}\n\nfunction transition(name) {\n  return selection().transition(name);\n}\n\nfunction newId() {\n  return ++id;\n}\n\nvar selection_prototype = selection.prototype;\n\nTransition.prototype = transition.prototype = {\n  constructor: Transition,\n  select: transition_select,\n  selectAll: transition_selectAll,\n  filter: transition_filter,\n  merge: transition_merge,\n  selection: transition_selection,\n  transition: transition_transition,\n  call: selection_prototype.call,\n  nodes: selection_prototype.nodes,\n  node: selection_prototype.node,\n  size: selection_prototype.size,\n  empty: selection_prototype.empty,\n  each: selection_prototype.each,\n  on: transition_on,\n  attr: transition_attr,\n  attrTween: transition_attrTween,\n  style: transition_style,\n  styleTween: transition_styleTween,\n  text: transition_text,\n  remove: transition_remove,\n  tween: transition_tween,\n  delay: transition_delay,\n  duration: transition_duration,\n  ease: transition_ease\n};\n\nfunction linear$1(t) {\n  return +t;\n}\n\nfunction quadIn(t) {\n  return t * t;\n}\n\nfunction quadOut(t) {\n  return t * (2 - t);\n}\n\nfunction quadInOut(t) {\n  return ((t *= 2) <= 1 ? t * t : --t * (2 - t) + 1) / 2;\n}\n\nfunction cubicIn(t) {\n  return t * t * t;\n}\n\nfunction cubicOut(t) {\n  return --t * t * t + 1;\n}\n\nfunction cubicInOut(t) {\n  return ((t *= 2) <= 1 ? t * t * t : (t -= 2) * t * t + 2) / 2;\n}\n\nvar exponent = 3;\n\nvar polyIn = (function custom(e) {\n  e = +e;\n\n  function polyIn(t) {\n    return Math.pow(t, e);\n  }\n\n  polyIn.exponent = custom;\n\n  return polyIn;\n})(exponent);\n\nvar polyOut = (function custom(e) {\n  e = +e;\n\n  function polyOut(t) {\n    return 1 - Math.pow(1 - t, e);\n  }\n\n  polyOut.exponent = custom;\n\n  return polyOut;\n})(exponent);\n\nvar polyInOut = (function custom(e) {\n  e = +e;\n\n  function polyInOut(t) {\n    return ((t *= 2) <= 1 ? Math.pow(t, e) : 2 - Math.pow(2 - t, e)) / 2;\n  }\n\n  polyInOut.exponent = custom;\n\n  return polyInOut;\n})(exponent);\n\nvar pi = Math.PI;\nvar halfPi = pi / 2;\n\nfunction sinIn(t) {\n  return 1 - Math.cos(t * halfPi);\n}\n\nfunction sinOut(t) {\n  return Math.sin(t * halfPi);\n}\n\nfunction sinInOut(t) {\n  return (1 - Math.cos(pi * t)) / 2;\n}\n\nfunction expIn(t) {\n  return Math.pow(2, 10 * t - 10);\n}\n\nfunction expOut(t) {\n  return 1 - Math.pow(2, -10 * t);\n}\n\nfunction expInOut(t) {\n  return ((t *= 2) <= 1 ? Math.pow(2, 10 * t - 10) : 2 - Math.pow(2, 10 - 10 * t)) / 2;\n}\n\nfunction circleIn(t) {\n  return 1 - Math.sqrt(1 - t * t);\n}\n\nfunction circleOut(t) {\n  return Math.sqrt(1 - --t * t);\n}\n\nfunction circleInOut(t) {\n  return ((t *= 2) <= 1 ? 1 - Math.sqrt(1 - t * t) : Math.sqrt(1 - (t -= 2) * t) + 1) / 2;\n}\n\nvar b1 = 4 / 11;\nvar b2 = 6 / 11;\nvar b3 = 8 / 11;\nvar b4 = 3 / 4;\nvar b5 = 9 / 11;\nvar b6 = 10 / 11;\nvar b7 = 15 / 16;\nvar b8 = 21 / 22;\nvar b9 = 63 / 64;\nvar b0 = 1 / b1 / b1;\n\nfunction bounceIn(t) {\n  return 1 - bounceOut(1 - t);\n}\n\nfunction bounceOut(t) {\n  return (t = +t) < b1 ? b0 * t * t : t < b3 ? b0 * (t -= b2) * t + b4 : t < b6 ? b0 * (t -= b5) * t + b7 : b0 * (t -= b8) * t + b9;\n}\n\nfunction bounceInOut(t) {\n  return ((t *= 2) <= 1 ? 1 - bounceOut(1 - t) : bounceOut(t - 1) + 1) / 2;\n}\n\nvar overshoot = 1.70158;\n\nvar backIn = (function custom(s) {\n  s = +s;\n\n  function backIn(t) {\n    return t * t * ((s + 1) * t - s);\n  }\n\n  backIn.overshoot = custom;\n\n  return backIn;\n})(overshoot);\n\nvar backOut = (function custom(s) {\n  s = +s;\n\n  function backOut(t) {\n    return --t * t * ((s + 1) * t + s) + 1;\n  }\n\n  backOut.overshoot = custom;\n\n  return backOut;\n})(overshoot);\n\nvar backInOut = (function custom(s) {\n  s = +s;\n\n  function backInOut(t) {\n    return ((t *= 2) < 1 ? t * t * ((s + 1) * t - s) : (t -= 2) * t * ((s + 1) * t + s) + 2) / 2;\n  }\n\n  backInOut.overshoot = custom;\n\n  return backInOut;\n})(overshoot);\n\nvar tau = 2 * Math.PI;\nvar amplitude = 1;\nvar period = 0.3;\n\nvar elasticIn = (function custom(a, p) {\n  var s = Math.asin(1 / (a = Math.max(1, a))) * (p /= tau);\n\n  function elasticIn(t) {\n    return a * Math.pow(2, 10 * --t) * Math.sin((s - t) / p);\n  }\n\n  elasticIn.amplitude = function(a) { return custom(a, p * tau); };\n  elasticIn.period = function(p) { return custom(a, p); };\n\n  return elasticIn;\n})(amplitude, period);\n\nvar elasticOut = (function custom(a, p) {\n  var s = Math.asin(1 / (a = Math.max(1, a))) * (p /= tau);\n\n  function elasticOut(t) {\n    return 1 - a * Math.pow(2, -10 * (t = +t)) * Math.sin((t + s) / p);\n  }\n\n  elasticOut.amplitude = function(a) { return custom(a, p * tau); };\n  elasticOut.period = function(p) { return custom(a, p); };\n\n  return elasticOut;\n})(amplitude, period);\n\nvar elasticInOut = (function custom(a, p) {\n  var s = Math.asin(1 / (a = Math.max(1, a))) * (p /= tau);\n\n  function elasticInOut(t) {\n    return ((t = t * 2 - 1) < 0\n        ? a * Math.pow(2, 10 * t) * Math.sin((s - t) / p)\n        : 2 - a * Math.pow(2, -10 * t) * Math.sin((s + t) / p)) / 2;\n  }\n\n  elasticInOut.amplitude = function(a) { return custom(a, p * tau); };\n  elasticInOut.period = function(p) { return custom(a, p); };\n\n  return elasticInOut;\n})(amplitude, period);\n\nvar defaultTiming = {\n  time: null, // Set on use.\n  delay: 0,\n  duration: 250,\n  ease: cubicInOut\n};\n\nfunction inherit(node, id) {\n  var timing;\n  while (!(timing = node.__transition) || !(timing = timing[id])) {\n    if (!(node = node.parentNode)) {\n      return defaultTiming.time = now(), defaultTiming;\n    }\n  }\n  return timing;\n}\n\nvar selection_transition = function(name) {\n  var id,\n      timing;\n\n  if (name instanceof Transition) {\n    id = name._id, name = name._name;\n  } else {\n    id = newId(), (timing = defaultTiming).time = now(), name = name == null ? null : name + \"\";\n  }\n\n  for (var groups = this._groups, m = groups.length, j = 0; j < m; ++j) {\n    for (var group = groups[j], n = group.length, node, i = 0; i < n; ++i) {\n      if (node = group[i]) {\n        schedule(node, name, id, i, group, timing || inherit(node, id));\n      }\n    }\n  }\n\n  return new Transition(groups, this._parents, name, id);\n};\n\nselection.prototype.interrupt = selection_interrupt;\nselection.prototype.transition = selection_transition;\n\nvar root$1 = [null];\n\nvar active = function(node, name) {\n  var schedules = node.__transition,\n      schedule$$1,\n      i;\n\n  if (schedules) {\n    name = name == null ? null : name + \"\";\n    for (i in schedules) {\n      if ((schedule$$1 = schedules[i]).state > SCHEDULED && schedule$$1.name === name) {\n        return new Transition([[node]], root$1, name, +i);\n      }\n    }\n  }\n\n  return null;\n};\n\nvar constant$4 = function(x) {\n  return function() {\n    return x;\n  };\n};\n\nvar BrushEvent = function(target, type, selection) {\n  this.target = target;\n  this.type = type;\n  this.selection = selection;\n};\n\nfunction nopropagation$1() {\n  exports.event.stopImmediatePropagation();\n}\n\nvar noevent$1 = function() {\n  exports.event.preventDefault();\n  exports.event.stopImmediatePropagation();\n};\n\nvar MODE_DRAG = {name: \"drag\"};\nvar MODE_SPACE = {name: \"space\"};\nvar MODE_HANDLE = {name: \"handle\"};\nvar MODE_CENTER = {name: \"center\"};\n\nvar X = {\n  name: \"x\",\n  handles: [\"e\", \"w\"].map(type),\n  input: function(x, e) { return x && [[x[0], e[0][1]], [x[1], e[1][1]]]; },\n  output: function(xy) { return xy && [xy[0][0], xy[1][0]]; }\n};\n\nvar Y = {\n  name: \"y\",\n  handles: [\"n\", \"s\"].map(type),\n  input: function(y, e) { return y && [[e[0][0], y[0]], [e[1][0], y[1]]]; },\n  output: function(xy) { return xy && [xy[0][1], xy[1][1]]; }\n};\n\nvar XY = {\n  name: \"xy\",\n  handles: [\"n\", \"e\", \"s\", \"w\", \"nw\", \"ne\", \"se\", \"sw\"].map(type),\n  input: function(xy) { return xy; },\n  output: function(xy) { return xy; }\n};\n\nvar cursors = {\n  overlay: \"crosshair\",\n  selection: \"move\",\n  n: \"ns-resize\",\n  e: \"ew-resize\",\n  s: \"ns-resize\",\n  w: \"ew-resize\",\n  nw: \"nwse-resize\",\n  ne: \"nesw-resize\",\n  se: \"nwse-resize\",\n  sw: \"nesw-resize\"\n};\n\nvar flipX = {\n  e: \"w\",\n  w: \"e\",\n  nw: \"ne\",\n  ne: \"nw\",\n  se: \"sw\",\n  sw: \"se\"\n};\n\nvar flipY = {\n  n: \"s\",\n  s: \"n\",\n  nw: \"sw\",\n  ne: \"se\",\n  se: \"ne\",\n  sw: \"nw\"\n};\n\nvar signsX = {\n  overlay: +1,\n  selection: +1,\n  n: null,\n  e: +1,\n  s: null,\n  w: -1,\n  nw: -1,\n  ne: +1,\n  se: +1,\n  sw: -1\n};\n\nvar signsY = {\n  overlay: +1,\n  selection: +1,\n  n: -1,\n  e: null,\n  s: +1,\n  w: null,\n  nw: -1,\n  ne: -1,\n  se: +1,\n  sw: +1\n};\n\nfunction type(t) {\n  return {type: t};\n}\n\n// Ignore right-click, since that should open the context menu.\nfunction defaultFilter() {\n  return !exports.event.button;\n}\n\nfunction defaultExtent() {\n  var svg = this.ownerSVGElement || this;\n  return [[0, 0], [svg.width.baseVal.value, svg.height.baseVal.value]];\n}\n\n// Like d3.local, but with the name “__brush” rather than auto-generated.\nfunction local(node) {\n  while (!node.__brush) if (!(node = node.parentNode)) return;\n  return node.__brush;\n}\n\nfunction empty(extent) {\n  return extent[0][0] === extent[1][0]\n      || extent[0][1] === extent[1][1];\n}\n\nfunction brushSelection(node) {\n  var state = node.__brush;\n  return state ? state.dim.output(state.selection) : null;\n}\n\nfunction brushX() {\n  return brush$1(X);\n}\n\nfunction brushY() {\n  return brush$1(Y);\n}\n\nvar brush = function() {\n  return brush$1(XY);\n};\n\nfunction brush$1(dim) {\n  var extent = defaultExtent,\n      filter = defaultFilter,\n      listeners = dispatch(brush, \"start\", \"brush\", \"end\"),\n      handleSize = 6,\n      touchending;\n\n  function brush(group) {\n    var overlay = group\n        .property(\"__brush\", initialize)\n      .selectAll(\".overlay\")\n      .data([type(\"overlay\")]);\n\n    overlay.enter().append(\"rect\")\n        .attr(\"class\", \"overlay\")\n        .attr(\"pointer-events\", \"all\")\n        .attr(\"cursor\", cursors.overlay)\n      .merge(overlay)\n        .each(function() {\n          var extent = local(this).extent;\n          select(this)\n              .attr(\"x\", extent[0][0])\n              .attr(\"y\", extent[0][1])\n              .attr(\"width\", extent[1][0] - extent[0][0])\n              .attr(\"height\", extent[1][1] - extent[0][1]);\n        });\n\n    group.selectAll(\".selection\")\n      .data([type(\"selection\")])\n      .enter().append(\"rect\")\n        .attr(\"class\", \"selection\")\n        .attr(\"cursor\", cursors.selection)\n        .attr(\"fill\", \"#777\")\n        .attr(\"fill-opacity\", 0.3)\n        .attr(\"stroke\", \"#fff\")\n        .attr(\"shape-rendering\", \"crispEdges\");\n\n    var handle = group.selectAll(\".handle\")\n      .data(dim.handles, function(d) { return d.type; });\n\n    handle.exit().remove();\n\n    handle.enter().append(\"rect\")\n        .attr(\"class\", function(d) { return \"handle handle--\" + d.type; })\n        .attr(\"cursor\", function(d) { return cursors[d.type]; });\n\n    group\n        .each(redraw)\n        .attr(\"fill\", \"none\")\n        .attr(\"pointer-events\", \"all\")\n        .style(\"-webkit-tap-highlight-color\", \"rgba(0,0,0,0)\")\n        .on(\"mousedown.brush touchstart.brush\", started);\n  }\n\n  brush.move = function(group, selection) {\n    if (group.selection) {\n      group\n          .on(\"start.brush\", function() { emitter(this, arguments).beforestart().start(); })\n          .on(\"interrupt.brush end.brush\", function() { emitter(this, arguments).end(); })\n          .tween(\"brush\", function() {\n            var that = this,\n                state = that.__brush,\n                emit = emitter(that, arguments),\n                selection0 = state.selection,\n                selection1 = dim.input(typeof selection === \"function\" ? selection.apply(this, arguments) : selection, state.extent),\n                i = interpolateValue(selection0, selection1);\n\n            function tween(t) {\n              state.selection = t === 1 && empty(selection1) ? null : i(t);\n              redraw.call(that);\n              emit.brush();\n            }\n\n            return selection0 && selection1 ? tween : tween(1);\n          });\n    } else {\n      group\n          .each(function() {\n            var that = this,\n                args = arguments,\n                state = that.__brush,\n                selection1 = dim.input(typeof selection === \"function\" ? selection.apply(that, args) : selection, state.extent),\n                emit = emitter(that, args).beforestart();\n\n            interrupt(that);\n            state.selection = selection1 == null || empty(selection1) ? null : selection1;\n            redraw.call(that);\n            emit.start().brush().end();\n          });\n    }\n  };\n\n  function redraw() {\n    var group = select(this),\n        selection = local(this).selection;\n\n    if (selection) {\n      group.selectAll(\".selection\")\n          .style(\"display\", null)\n          .attr(\"x\", selection[0][0])\n          .attr(\"y\", selection[0][1])\n          .attr(\"width\", selection[1][0] - selection[0][0])\n          .attr(\"height\", selection[1][1] - selection[0][1]);\n\n      group.selectAll(\".handle\")\n          .style(\"display\", null)\n          .attr(\"x\", function(d) { return d.type[d.type.length - 1] === \"e\" ? selection[1][0] - handleSize / 2 : selection[0][0] - handleSize / 2; })\n          .attr(\"y\", function(d) { return d.type[0] === \"s\" ? selection[1][1] - handleSize / 2 : selection[0][1] - handleSize / 2; })\n          .attr(\"width\", function(d) { return d.type === \"n\" || d.type === \"s\" ? selection[1][0] - selection[0][0] + handleSize : handleSize; })\n          .attr(\"height\", function(d) { return d.type === \"e\" || d.type === \"w\" ? selection[1][1] - selection[0][1] + handleSize : handleSize; });\n    }\n\n    else {\n      group.selectAll(\".selection,.handle\")\n          .style(\"display\", \"none\")\n          .attr(\"x\", null)\n          .attr(\"y\", null)\n          .attr(\"width\", null)\n          .attr(\"height\", null);\n    }\n  }\n\n  function emitter(that, args) {\n    return that.__brush.emitter || new Emitter(that, args);\n  }\n\n  function Emitter(that, args) {\n    this.that = that;\n    this.args = args;\n    this.state = that.__brush;\n    this.active = 0;\n  }\n\n  Emitter.prototype = {\n    beforestart: function() {\n      if (++this.active === 1) this.state.emitter = this, this.starting = true;\n      return this;\n    },\n    start: function() {\n      if (this.starting) this.starting = false, this.emit(\"start\");\n      return this;\n    },\n    brush: function() {\n      this.emit(\"brush\");\n      return this;\n    },\n    end: function() {\n      if (--this.active === 0) delete this.state.emitter, this.emit(\"end\");\n      return this;\n    },\n    emit: function(type) {\n      customEvent(new BrushEvent(brush, type, dim.output(this.state.selection)), listeners.apply, listeners, [type, this.that, this.args]);\n    }\n  };\n\n  function started() {\n    if (exports.event.touches) { if (exports.event.changedTouches.length < exports.event.touches.length) return noevent$1(); }\n    else if (touchending) return;\n    if (!filter.apply(this, arguments)) return;\n\n    var that = this,\n        type = exports.event.target.__data__.type,\n        mode = (exports.event.metaKey ? type = \"overlay\" : type) === \"selection\" ? MODE_DRAG : (exports.event.altKey ? MODE_CENTER : MODE_HANDLE),\n        signX = dim === Y ? null : signsX[type],\n        signY = dim === X ? null : signsY[type],\n        state = local(that),\n        extent = state.extent,\n        selection = state.selection,\n        W = extent[0][0], w0, w1,\n        N = extent[0][1], n0, n1,\n        E = extent[1][0], e0, e1,\n        S = extent[1][1], s0, s1,\n        dx,\n        dy,\n        moving,\n        shifting = signX && signY && exports.event.shiftKey,\n        lockX,\n        lockY,\n        point0 = mouse(that),\n        point = point0,\n        emit = emitter(that, arguments).beforestart();\n\n    if (type === \"overlay\") {\n      state.selection = selection = [\n        [w0 = dim === Y ? W : point0[0], n0 = dim === X ? N : point0[1]],\n        [e0 = dim === Y ? E : w0, s0 = dim === X ? S : n0]\n      ];\n    } else {\n      w0 = selection[0][0];\n      n0 = selection[0][1];\n      e0 = selection[1][0];\n      s0 = selection[1][1];\n    }\n\n    w1 = w0;\n    n1 = n0;\n    e1 = e0;\n    s1 = s0;\n\n    var group = select(that)\n        .attr(\"pointer-events\", \"none\");\n\n    var overlay = group.selectAll(\".overlay\")\n        .attr(\"cursor\", cursors[type]);\n\n    if (exports.event.touches) {\n      group\n          .on(\"touchmove.brush\", moved, true)\n          .on(\"touchend.brush touchcancel.brush\", ended, true);\n    } else {\n      var view = select(exports.event.view)\n          .on(\"keydown.brush\", keydowned, true)\n          .on(\"keyup.brush\", keyupped, true)\n          .on(\"mousemove.brush\", moved, true)\n          .on(\"mouseup.brush\", ended, true);\n\n      dragDisable(exports.event.view);\n    }\n\n    nopropagation$1();\n    interrupt(that);\n    redraw.call(that);\n    emit.start();\n\n    function moved() {\n      var point1 = mouse(that);\n      if (shifting && !lockX && !lockY) {\n        if (Math.abs(point1[0] - point[0]) > Math.abs(point1[1] - point[1])) lockY = true;\n        else lockX = true;\n      }\n      point = point1;\n      moving = true;\n      noevent$1();\n      move();\n    }\n\n    function move() {\n      var t;\n\n      dx = point[0] - point0[0];\n      dy = point[1] - point0[1];\n\n      switch (mode) {\n        case MODE_SPACE:\n        case MODE_DRAG: {\n          if (signX) dx = Math.max(W - w0, Math.min(E - e0, dx)), w1 = w0 + dx, e1 = e0 + dx;\n          if (signY) dy = Math.max(N - n0, Math.min(S - s0, dy)), n1 = n0 + dy, s1 = s0 + dy;\n          break;\n        }\n        case MODE_HANDLE: {\n          if (signX < 0) dx = Math.max(W - w0, Math.min(E - w0, dx)), w1 = w0 + dx, e1 = e0;\n          else if (signX > 0) dx = Math.max(W - e0, Math.min(E - e0, dx)), w1 = w0, e1 = e0 + dx;\n          if (signY < 0) dy = Math.max(N - n0, Math.min(S - n0, dy)), n1 = n0 + dy, s1 = s0;\n          else if (signY > 0) dy = Math.max(N - s0, Math.min(S - s0, dy)), n1 = n0, s1 = s0 + dy;\n          break;\n        }\n        case MODE_CENTER: {\n          if (signX) w1 = Math.max(W, Math.min(E, w0 - dx * signX)), e1 = Math.max(W, Math.min(E, e0 + dx * signX));\n          if (signY) n1 = Math.max(N, Math.min(S, n0 - dy * signY)), s1 = Math.max(N, Math.min(S, s0 + dy * signY));\n          break;\n        }\n      }\n\n      if (e1 < w1) {\n        signX *= -1;\n        t = w0, w0 = e0, e0 = t;\n        t = w1, w1 = e1, e1 = t;\n        if (type in flipX) overlay.attr(\"cursor\", cursors[type = flipX[type]]);\n      }\n\n      if (s1 < n1) {\n        signY *= -1;\n        t = n0, n0 = s0, s0 = t;\n        t = n1, n1 = s1, s1 = t;\n        if (type in flipY) overlay.attr(\"cursor\", cursors[type = flipY[type]]);\n      }\n\n      if (state.selection) selection = state.selection; // May be set by brush.move!\n      if (lockX) w1 = selection[0][0], e1 = selection[1][0];\n      if (lockY) n1 = selection[0][1], s1 = selection[1][1];\n\n      if (selection[0][0] !== w1\n          || selection[0][1] !== n1\n          || selection[1][0] !== e1\n          || selection[1][1] !== s1) {\n        state.selection = [[w1, n1], [e1, s1]];\n        redraw.call(that);\n        emit.brush();\n      }\n    }\n\n    function ended() {\n      nopropagation$1();\n      if (exports.event.touches) {\n        if (exports.event.touches.length) return;\n        if (touchending) clearTimeout(touchending);\n        touchending = setTimeout(function() { touchending = null; }, 500); // Ghost clicks are delayed!\n        group.on(\"touchmove.brush touchend.brush touchcancel.brush\", null);\n      } else {\n        yesdrag(exports.event.view, moving);\n        view.on(\"keydown.brush keyup.brush mousemove.brush mouseup.brush\", null);\n      }\n      group.attr(\"pointer-events\", \"all\");\n      overlay.attr(\"cursor\", cursors.overlay);\n      if (state.selection) selection = state.selection; // May be set by brush.move (on start)!\n      if (empty(selection)) state.selection = null, redraw.call(that);\n      emit.end();\n    }\n\n    function keydowned() {\n      switch (exports.event.keyCode) {\n        case 16: { // SHIFT\n          shifting = signX && signY;\n          break;\n        }\n        case 18: { // ALT\n          if (mode === MODE_HANDLE) {\n            if (signX) e0 = e1 - dx * signX, w0 = w1 + dx * signX;\n            if (signY) s0 = s1 - dy * signY, n0 = n1 + dy * signY;\n            mode = MODE_CENTER;\n            move();\n          }\n          break;\n        }\n        case 32: { // SPACE; takes priority over ALT\n          if (mode === MODE_HANDLE || mode === MODE_CENTER) {\n            if (signX < 0) e0 = e1 - dx; else if (signX > 0) w0 = w1 - dx;\n            if (signY < 0) s0 = s1 - dy; else if (signY > 0) n0 = n1 - dy;\n            mode = MODE_SPACE;\n            overlay.attr(\"cursor\", cursors.selection);\n            move();\n          }\n          break;\n        }\n        default: return;\n      }\n      noevent$1();\n    }\n\n    function keyupped() {\n      switch (exports.event.keyCode) {\n        case 16: { // SHIFT\n          if (shifting) {\n            lockX = lockY = shifting = false;\n            move();\n          }\n          break;\n        }\n        case 18: { // ALT\n          if (mode === MODE_CENTER) {\n            if (signX < 0) e0 = e1; else if (signX > 0) w0 = w1;\n            if (signY < 0) s0 = s1; else if (signY > 0) n0 = n1;\n            mode = MODE_HANDLE;\n            move();\n          }\n          break;\n        }\n        case 32: { // SPACE\n          if (mode === MODE_SPACE) {\n            if (exports.event.altKey) {\n              if (signX) e0 = e1 - dx * signX, w0 = w1 + dx * signX;\n              if (signY) s0 = s1 - dy * signY, n0 = n1 + dy * signY;\n              mode = MODE_CENTER;\n            } else {\n              if (signX < 0) e0 = e1; else if (signX > 0) w0 = w1;\n              if (signY < 0) s0 = s1; else if (signY > 0) n0 = n1;\n              mode = MODE_HANDLE;\n            }\n            overlay.attr(\"cursor\", cursors[type]);\n            move();\n          }\n          break;\n        }\n        default: return;\n      }\n      noevent$1();\n    }\n  }\n\n  function initialize() {\n    var state = this.__brush || {selection: null};\n    state.extent = extent.apply(this, arguments);\n    state.dim = dim;\n    return state;\n  }\n\n  brush.extent = function(_) {\n    return arguments.length ? (extent = typeof _ === \"function\" ? _ : constant$4([[+_[0][0], +_[0][1]], [+_[1][0], +_[1][1]]]), brush) : extent;\n  };\n\n  brush.filter = function(_) {\n    return arguments.length ? (filter = typeof _ === \"function\" ? _ : constant$4(!!_), brush) : filter;\n  };\n\n  brush.handleSize = function(_) {\n    return arguments.length ? (handleSize = +_, brush) : handleSize;\n  };\n\n  brush.on = function() {\n    var value = listeners.on.apply(listeners, arguments);\n    return value === listeners ? brush : value;\n  };\n\n  return brush;\n}\n\nvar cos = Math.cos;\nvar sin = Math.sin;\nvar pi$1 = Math.PI;\nvar halfPi$1 = pi$1 / 2;\nvar tau$1 = pi$1 * 2;\nvar max$1 = Math.max;\n\nfunction compareValue(compare) {\n  return function(a, b) {\n    return compare(\n      a.source.value + a.target.value,\n      b.source.value + b.target.value\n    );\n  };\n}\n\nvar chord = function() {\n  var padAngle = 0,\n      sortGroups = null,\n      sortSubgroups = null,\n      sortChords = null;\n\n  function chord(matrix) {\n    var n = matrix.length,\n        groupSums = [],\n        groupIndex = sequence(n),\n        subgroupIndex = [],\n        chords = [],\n        groups = chords.groups = new Array(n),\n        subgroups = new Array(n * n),\n        k,\n        x,\n        x0,\n        dx,\n        i,\n        j;\n\n    // Compute the sum.\n    k = 0, i = -1; while (++i < n) {\n      x = 0, j = -1; while (++j < n) {\n        x += matrix[i][j];\n      }\n      groupSums.push(x);\n      subgroupIndex.push(sequence(n));\n      k += x;\n    }\n\n    // Sort groups…\n    if (sortGroups) groupIndex.sort(function(a, b) {\n      return sortGroups(groupSums[a], groupSums[b]);\n    });\n\n    // Sort subgroups…\n    if (sortSubgroups) subgroupIndex.forEach(function(d, i) {\n      d.sort(function(a, b) {\n        return sortSubgroups(matrix[i][a], matrix[i][b]);\n      });\n    });\n\n    // Convert the sum to scaling factor for [0, 2pi].\n    // TODO Allow start and end angle to be specified?\n    // TODO Allow padding to be specified as percentage?\n    k = max$1(0, tau$1 - padAngle * n) / k;\n    dx = k ? padAngle : tau$1 / n;\n\n    // Compute the start and end angle for each group and subgroup.\n    // Note: Opera has a bug reordering object literal properties!\n    x = 0, i = -1; while (++i < n) {\n      x0 = x, j = -1; while (++j < n) {\n        var di = groupIndex[i],\n            dj = subgroupIndex[di][j],\n            v = matrix[di][dj],\n            a0 = x,\n            a1 = x += v * k;\n        subgroups[dj * n + di] = {\n          index: di,\n          subindex: dj,\n          startAngle: a0,\n          endAngle: a1,\n          value: v\n        };\n      }\n      groups[di] = {\n        index: di,\n        startAngle: x0,\n        endAngle: x,\n        value: groupSums[di]\n      };\n      x += dx;\n    }\n\n    // Generate chords for each (non-empty) subgroup-subgroup link.\n    i = -1; while (++i < n) {\n      j = i - 1; while (++j < n) {\n        var source = subgroups[j * n + i],\n            target = subgroups[i * n + j];\n        if (source.value || target.value) {\n          chords.push(source.value < target.value\n              ? {source: target, target: source}\n              : {source: source, target: target});\n        }\n      }\n    }\n\n    return sortChords ? chords.sort(sortChords) : chords;\n  }\n\n  chord.padAngle = function(_) {\n    return arguments.length ? (padAngle = max$1(0, _), chord) : padAngle;\n  };\n\n  chord.sortGroups = function(_) {\n    return arguments.length ? (sortGroups = _, chord) : sortGroups;\n  };\n\n  chord.sortSubgroups = function(_) {\n    return arguments.length ? (sortSubgroups = _, chord) : sortSubgroups;\n  };\n\n  chord.sortChords = function(_) {\n    return arguments.length ? (_ == null ? sortChords = null : (sortChords = compareValue(_))._ = _, chord) : sortChords && sortChords._;\n  };\n\n  return chord;\n};\n\nvar slice$2 = Array.prototype.slice;\n\nvar constant$5 = function(x) {\n  return function() {\n    return x;\n  };\n};\n\nvar pi$2 = Math.PI;\nvar tau$2 = 2 * pi$2;\nvar epsilon$1 = 1e-6;\nvar tauEpsilon = tau$2 - epsilon$1;\n\nfunction Path() {\n  this._x0 = this._y0 = // start of current subpath\n  this._x1 = this._y1 = null; // end of current subpath\n  this._ = \"\";\n}\n\nfunction path() {\n  return new Path;\n}\n\nPath.prototype = path.prototype = {\n  constructor: Path,\n  moveTo: function(x, y) {\n    this._ += \"M\" + (this._x0 = this._x1 = +x) + \",\" + (this._y0 = this._y1 = +y);\n  },\n  closePath: function() {\n    if (this._x1 !== null) {\n      this._x1 = this._x0, this._y1 = this._y0;\n      this._ += \"Z\";\n    }\n  },\n  lineTo: function(x, y) {\n    this._ += \"L\" + (this._x1 = +x) + \",\" + (this._y1 = +y);\n  },\n  quadraticCurveTo: function(x1, y1, x, y) {\n    this._ += \"Q\" + (+x1) + \",\" + (+y1) + \",\" + (this._x1 = +x) + \",\" + (this._y1 = +y);\n  },\n  bezierCurveTo: function(x1, y1, x2, y2, x, y) {\n    this._ += \"C\" + (+x1) + \",\" + (+y1) + \",\" + (+x2) + \",\" + (+y2) + \",\" + (this._x1 = +x) + \",\" + (this._y1 = +y);\n  },\n  arcTo: function(x1, y1, x2, y2, r) {\n    x1 = +x1, y1 = +y1, x2 = +x2, y2 = +y2, r = +r;\n    var x0 = this._x1,\n        y0 = this._y1,\n        x21 = x2 - x1,\n        y21 = y2 - y1,\n        x01 = x0 - x1,\n        y01 = y0 - y1,\n        l01_2 = x01 * x01 + y01 * y01;\n\n    // Is the radius negative? Error.\n    if (r < 0) throw new Error(\"negative radius: \" + r);\n\n    // Is this path empty? Move to (x1,y1).\n    if (this._x1 === null) {\n      this._ += \"M\" + (this._x1 = x1) + \",\" + (this._y1 = y1);\n    }\n\n    // Or, is (x1,y1) coincident with (x0,y0)? Do nothing.\n    else if (!(l01_2 > epsilon$1)) {}\n\n    // Or, are (x0,y0), (x1,y1) and (x2,y2) collinear?\n    // Equivalently, is (x1,y1) coincident with (x2,y2)?\n    // Or, is the radius zero? Line to (x1,y1).\n    else if (!(Math.abs(y01 * x21 - y21 * x01) > epsilon$1) || !r) {\n      this._ += \"L\" + (this._x1 = x1) + \",\" + (this._y1 = y1);\n    }\n\n    // Otherwise, draw an arc!\n    else {\n      var x20 = x2 - x0,\n          y20 = y2 - y0,\n          l21_2 = x21 * x21 + y21 * y21,\n          l20_2 = x20 * x20 + y20 * y20,\n          l21 = Math.sqrt(l21_2),\n          l01 = Math.sqrt(l01_2),\n          l = r * Math.tan((pi$2 - Math.acos((l21_2 + l01_2 - l20_2) / (2 * l21 * l01))) / 2),\n          t01 = l / l01,\n          t21 = l / l21;\n\n      // If the start tangent is not coincident with (x0,y0), line to.\n      if (Math.abs(t01 - 1) > epsilon$1) {\n        this._ += \"L\" + (x1 + t01 * x01) + \",\" + (y1 + t01 * y01);\n      }\n\n      this._ += \"A\" + r + \",\" + r + \",0,0,\" + (+(y01 * x20 > x01 * y20)) + \",\" + (this._x1 = x1 + t21 * x21) + \",\" + (this._y1 = y1 + t21 * y21);\n    }\n  },\n  arc: function(x, y, r, a0, a1, ccw) {\n    x = +x, y = +y, r = +r;\n    var dx = r * Math.cos(a0),\n        dy = r * Math.sin(a0),\n        x0 = x + dx,\n        y0 = y + dy,\n        cw = 1 ^ ccw,\n        da = ccw ? a0 - a1 : a1 - a0;\n\n    // Is the radius negative? Error.\n    if (r < 0) throw new Error(\"negative radius: \" + r);\n\n    // Is this path empty? Move to (x0,y0).\n    if (this._x1 === null) {\n      this._ += \"M\" + x0 + \",\" + y0;\n    }\n\n    // Or, is (x0,y0) not coincident with the previous point? Line to (x0,y0).\n    else if (Math.abs(this._x1 - x0) > epsilon$1 || Math.abs(this._y1 - y0) > epsilon$1) {\n      this._ += \"L\" + x0 + \",\" + y0;\n    }\n\n    // Is this arc empty? We’re done.\n    if (!r) return;\n\n    // Does the angle go the wrong way? Flip the direction.\n    if (da < 0) da = da % tau$2 + tau$2;\n\n    // Is this a complete circle? Draw two arcs to complete the circle.\n    if (da > tauEpsilon) {\n      this._ += \"A\" + r + \",\" + r + \",0,1,\" + cw + \",\" + (x - dx) + \",\" + (y - dy) + \"A\" + r + \",\" + r + \",0,1,\" + cw + \",\" + (this._x1 = x0) + \",\" + (this._y1 = y0);\n    }\n\n    // Is this arc non-empty? Draw an arc!\n    else if (da > epsilon$1) {\n      this._ += \"A\" + r + \",\" + r + \",0,\" + (+(da >= pi$2)) + \",\" + cw + \",\" + (this._x1 = x + r * Math.cos(a1)) + \",\" + (this._y1 = y + r * Math.sin(a1));\n    }\n  },\n  rect: function(x, y, w, h) {\n    this._ += \"M\" + (this._x0 = this._x1 = +x) + \",\" + (this._y0 = this._y1 = +y) + \"h\" + (+w) + \"v\" + (+h) + \"h\" + (-w) + \"Z\";\n  },\n  toString: function() {\n    return this._;\n  }\n};\n\nfunction defaultSource(d) {\n  return d.source;\n}\n\nfunction defaultTarget(d) {\n  return d.target;\n}\n\nfunction defaultRadius(d) {\n  return d.radius;\n}\n\nfunction defaultStartAngle(d) {\n  return d.startAngle;\n}\n\nfunction defaultEndAngle(d) {\n  return d.endAngle;\n}\n\nvar ribbon = function() {\n  var source = defaultSource,\n      target = defaultTarget,\n      radius = defaultRadius,\n      startAngle = defaultStartAngle,\n      endAngle = defaultEndAngle,\n      context = null;\n\n  function ribbon() {\n    var buffer,\n        argv = slice$2.call(arguments),\n        s = source.apply(this, argv),\n        t = target.apply(this, argv),\n        sr = +radius.apply(this, (argv[0] = s, argv)),\n        sa0 = startAngle.apply(this, argv) - halfPi$1,\n        sa1 = endAngle.apply(this, argv) - halfPi$1,\n        sx0 = sr * cos(sa0),\n        sy0 = sr * sin(sa0),\n        tr = +radius.apply(this, (argv[0] = t, argv)),\n        ta0 = startAngle.apply(this, argv) - halfPi$1,\n        ta1 = endAngle.apply(this, argv) - halfPi$1;\n\n    if (!context) context = buffer = path();\n\n    context.moveTo(sx0, sy0);\n    context.arc(0, 0, sr, sa0, sa1);\n    if (sa0 !== ta0 || sa1 !== ta1) { // TODO sr !== tr?\n      context.quadraticCurveTo(0, 0, tr * cos(ta0), tr * sin(ta0));\n      context.arc(0, 0, tr, ta0, ta1);\n    }\n    context.quadraticCurveTo(0, 0, sx0, sy0);\n    context.closePath();\n\n    if (buffer) return context = null, buffer + \"\" || null;\n  }\n\n  ribbon.radius = function(_) {\n    return arguments.length ? (radius = typeof _ === \"function\" ? _ : constant$5(+_), ribbon) : radius;\n  };\n\n  ribbon.startAngle = function(_) {\n    return arguments.length ? (startAngle = typeof _ === \"function\" ? _ : constant$5(+_), ribbon) : startAngle;\n  };\n\n  ribbon.endAngle = function(_) {\n    return arguments.length ? (endAngle = typeof _ === \"function\" ? _ : constant$5(+_), ribbon) : endAngle;\n  };\n\n  ribbon.source = function(_) {\n    return arguments.length ? (source = _, ribbon) : source;\n  };\n\n  ribbon.target = function(_) {\n    return arguments.length ? (target = _, ribbon) : target;\n  };\n\n  ribbon.context = function(_) {\n    return arguments.length ? ((context = _ == null ? null : _), ribbon) : context;\n  };\n\n  return ribbon;\n};\n\nvar prefix = \"$\";\n\nfunction Map() {}\n\nMap.prototype = map$1.prototype = {\n  constructor: Map,\n  has: function(key) {\n    return (prefix + key) in this;\n  },\n  get: function(key) {\n    return this[prefix + key];\n  },\n  set: function(key, value) {\n    this[prefix + key] = value;\n    return this;\n  },\n  remove: function(key) {\n    var property = prefix + key;\n    return property in this && delete this[property];\n  },\n  clear: function() {\n    for (var property in this) if (property[0] === prefix) delete this[property];\n  },\n  keys: function() {\n    var keys = [];\n    for (var property in this) if (property[0] === prefix) keys.push(property.slice(1));\n    return keys;\n  },\n  values: function() {\n    var values = [];\n    for (var property in this) if (property[0] === prefix) values.push(this[property]);\n    return values;\n  },\n  entries: function() {\n    var entries = [];\n    for (var property in this) if (property[0] === prefix) entries.push({key: property.slice(1), value: this[property]});\n    return entries;\n  },\n  size: function() {\n    var size = 0;\n    for (var property in this) if (property[0] === prefix) ++size;\n    return size;\n  },\n  empty: function() {\n    for (var property in this) if (property[0] === prefix) return false;\n    return true;\n  },\n  each: function(f) {\n    for (var property in this) if (property[0] === prefix) f(this[property], property.slice(1), this);\n  }\n};\n\nfunction map$1(object, f) {\n  var map = new Map;\n\n  // Copy constructor.\n  if (object instanceof Map) object.each(function(value, key) { map.set(key, value); });\n\n  // Index array by numeric index or specified key function.\n  else if (Array.isArray(object)) {\n    var i = -1,\n        n = object.length,\n        o;\n\n    if (f == null) while (++i < n) map.set(i, object[i]);\n    else while (++i < n) map.set(f(o = object[i], i, object), o);\n  }\n\n  // Convert object to map.\n  else if (object) for (var key in object) map.set(key, object[key]);\n\n  return map;\n}\n\nvar nest = function() {\n  var keys = [],\n      sortKeys = [],\n      sortValues,\n      rollup,\n      nest;\n\n  function apply(array, depth, createResult, setResult) {\n    if (depth >= keys.length) {\n      if (sortValues != null) array.sort(sortValues);\n      return rollup != null ? rollup(array) : array;\n    }\n\n    var i = -1,\n        n = array.length,\n        key = keys[depth++],\n        keyValue,\n        value,\n        valuesByKey = map$1(),\n        values,\n        result = createResult();\n\n    while (++i < n) {\n      if (values = valuesByKey.get(keyValue = key(value = array[i]) + \"\")) {\n        values.push(value);\n      } else {\n        valuesByKey.set(keyValue, [value]);\n      }\n    }\n\n    valuesByKey.each(function(values, key) {\n      setResult(result, key, apply(values, depth, createResult, setResult));\n    });\n\n    return result;\n  }\n\n  function entries(map, depth) {\n    if (++depth > keys.length) return map;\n    var array, sortKey = sortKeys[depth - 1];\n    if (rollup != null && depth >= keys.length) array = map.entries();\n    else array = [], map.each(function(v, k) { array.push({key: k, values: entries(v, depth)}); });\n    return sortKey != null ? array.sort(function(a, b) { return sortKey(a.key, b.key); }) : array;\n  }\n\n  return nest = {\n    object: function(array) { return apply(array, 0, createObject, setObject); },\n    map: function(array) { return apply(array, 0, createMap, setMap); },\n    entries: function(array) { return entries(apply(array, 0, createMap, setMap), 0); },\n    key: function(d) { keys.push(d); return nest; },\n    sortKeys: function(order) { sortKeys[keys.length - 1] = order; return nest; },\n    sortValues: function(order) { sortValues = order; return nest; },\n    rollup: function(f) { rollup = f; return nest; }\n  };\n};\n\nfunction createObject() {\n  return {};\n}\n\nfunction setObject(object, key, value) {\n  object[key] = value;\n}\n\nfunction createMap() {\n  return map$1();\n}\n\nfunction setMap(map, key, value) {\n  map.set(key, value);\n}\n\nfunction Set() {}\n\nvar proto = map$1.prototype;\n\nSet.prototype = set$2.prototype = {\n  constructor: Set,\n  has: proto.has,\n  add: function(value) {\n    value += \"\";\n    this[prefix + value] = value;\n    return this;\n  },\n  remove: proto.remove,\n  clear: proto.clear,\n  values: proto.keys,\n  size: proto.size,\n  empty: proto.empty,\n  each: proto.each\n};\n\nfunction set$2(object, f) {\n  var set = new Set;\n\n  // Copy constructor.\n  if (object instanceof Set) object.each(function(value) { set.add(value); });\n\n  // Otherwise, assume it’s an array.\n  else if (object) {\n    var i = -1, n = object.length;\n    if (f == null) while (++i < n) set.add(object[i]);\n    else while (++i < n) set.add(f(object[i], i, object));\n  }\n\n  return set;\n}\n\nvar keys = function(map) {\n  var keys = [];\n  for (var key in map) keys.push(key);\n  return keys;\n};\n\nvar values = function(map) {\n  var values = [];\n  for (var key in map) values.push(map[key]);\n  return values;\n};\n\nvar entries = function(map) {\n  var entries = [];\n  for (var key in map) entries.push({key: key, value: map[key]});\n  return entries;\n};\n\nvar EOL = {};\nvar EOF = {};\nvar QUOTE = 34;\nvar NEWLINE = 10;\nvar RETURN = 13;\n\nfunction objectConverter(columns) {\n  return new Function(\"d\", \"return {\" + columns.map(function(name, i) {\n    return JSON.stringify(name) + \": d[\" + i + \"]\";\n  }).join(\",\") + \"}\");\n}\n\nfunction customConverter(columns, f) {\n  var object = objectConverter(columns);\n  return function(row, i) {\n    return f(object(row), i, columns);\n  };\n}\n\n// Compute unique columns in order of discovery.\nfunction inferColumns(rows) {\n  var columnSet = Object.create(null),\n      columns = [];\n\n  rows.forEach(function(row) {\n    for (var column in row) {\n      if (!(column in columnSet)) {\n        columns.push(columnSet[column] = column);\n      }\n    }\n  });\n\n  return columns;\n}\n\nvar dsv = function(delimiter) {\n  var reFormat = new RegExp(\"[\\\"\" + delimiter + \"\\n\\r]\"),\n      DELIMITER = delimiter.charCodeAt(0);\n\n  function parse(text, f) {\n    var convert, columns, rows = parseRows(text, function(row, i) {\n      if (convert) return convert(row, i - 1);\n      columns = row, convert = f ? customConverter(row, f) : objectConverter(row);\n    });\n    rows.columns = columns;\n    return rows;\n  }\n\n  function parseRows(text, f) {\n    var rows = [], // output rows\n        N = text.length,\n        I = 0, // current character index\n        n = 0, // current line number\n        t, // current token\n        eof = N <= 0, // current token followed by EOF?\n        eol = false; // current token followed by EOL?\n\n    // Strip the trailing newline.\n    if (text.charCodeAt(N - 1) === NEWLINE) --N;\n    if (text.charCodeAt(N - 1) === RETURN) --N;\n\n    function token() {\n      if (eof) return EOF;\n      if (eol) return eol = false, EOL;\n\n      // Unescape quotes.\n      var i, j = I, c;\n      if (text.charCodeAt(j) === QUOTE) {\n        while (I++ < N && text.charCodeAt(I) !== QUOTE || text.charCodeAt(++I) === QUOTE);\n        if ((i = I) >= N) eof = true;\n        else if ((c = text.charCodeAt(I++)) === NEWLINE) eol = true;\n        else if (c === RETURN) { eol = true; if (text.charCodeAt(I) === NEWLINE) ++I; }\n        return text.slice(j + 1, i - 1).replace(/\"\"/g, \"\\\"\");\n      }\n\n      // Find next delimiter or newline.\n      while (I < N) {\n        if ((c = text.charCodeAt(i = I++)) === NEWLINE) eol = true;\n        else if (c === RETURN) { eol = true; if (text.charCodeAt(I) === NEWLINE) ++I; }\n        else if (c !== DELIMITER) continue;\n        return text.slice(j, i);\n      }\n\n      // Return last token before EOF.\n      return eof = true, text.slice(j, N);\n    }\n\n    while ((t = token()) !== EOF) {\n      var row = [];\n      while (t !== EOL && t !== EOF) row.push(t), t = token();\n      if (f && (row = f(row, n++)) == null) continue;\n      rows.push(row);\n    }\n\n    return rows;\n  }\n\n  function format(rows, columns) {\n    if (columns == null) columns = inferColumns(rows);\n    return [columns.map(formatValue).join(delimiter)].concat(rows.map(function(row) {\n      return columns.map(function(column) {\n        return formatValue(row[column]);\n      }).join(delimiter);\n    })).join(\"\\n\");\n  }\n\n  function formatRows(rows) {\n    return rows.map(formatRow).join(\"\\n\");\n  }\n\n  function formatRow(row) {\n    return row.map(formatValue).join(delimiter);\n  }\n\n  function formatValue(text) {\n    return text == null ? \"\"\n        : reFormat.test(text += \"\") ? \"\\\"\" + text.replace(/\"/g, \"\\\"\\\"\") + \"\\\"\"\n        : text;\n  }\n\n  return {\n    parse: parse,\n    parseRows: parseRows,\n    format: format,\n    formatRows: formatRows\n  };\n};\n\nvar csv = dsv(\",\");\n\nvar csvParse = csv.parse;\nvar csvParseRows = csv.parseRows;\nvar csvFormat = csv.format;\nvar csvFormatRows = csv.formatRows;\n\nvar tsv = dsv(\"\\t\");\n\nvar tsvParse = tsv.parse;\nvar tsvParseRows = tsv.parseRows;\nvar tsvFormat = tsv.format;\nvar tsvFormatRows = tsv.formatRows;\n\nvar center$1 = function(x, y) {\n  var nodes;\n\n  if (x == null) x = 0;\n  if (y == null) y = 0;\n\n  function force() {\n    var i,\n        n = nodes.length,\n        node,\n        sx = 0,\n        sy = 0;\n\n    for (i = 0; i < n; ++i) {\n      node = nodes[i], sx += node.x, sy += node.y;\n    }\n\n    for (sx = sx / n - x, sy = sy / n - y, i = 0; i < n; ++i) {\n      node = nodes[i], node.x -= sx, node.y -= sy;\n    }\n  }\n\n  force.initialize = function(_) {\n    nodes = _;\n  };\n\n  force.x = function(_) {\n    return arguments.length ? (x = +_, force) : x;\n  };\n\n  force.y = function(_) {\n    return arguments.length ? (y = +_, force) : y;\n  };\n\n  return force;\n};\n\nvar constant$6 = function(x) {\n  return function() {\n    return x;\n  };\n};\n\nvar jiggle = function() {\n  return (Math.random() - 0.5) * 1e-6;\n};\n\nvar tree_add = function(d) {\n  var x = +this._x.call(null, d),\n      y = +this._y.call(null, d);\n  return add(this.cover(x, y), x, y, d);\n};\n\nfunction add(tree, x, y, d) {\n  if (isNaN(x) || isNaN(y)) return tree; // ignore invalid points\n\n  var parent,\n      node = tree._root,\n      leaf = {data: d},\n      x0 = tree._x0,\n      y0 = tree._y0,\n      x1 = tree._x1,\n      y1 = tree._y1,\n      xm,\n      ym,\n      xp,\n      yp,\n      right,\n      bottom,\n      i,\n      j;\n\n  // If the tree is empty, initialize the root as a leaf.\n  if (!node) return tree._root = leaf, tree;\n\n  // Find the existing leaf for the new point, or add it.\n  while (node.length) {\n    if (right = x >= (xm = (x0 + x1) / 2)) x0 = xm; else x1 = xm;\n    if (bottom = y >= (ym = (y0 + y1) / 2)) y0 = ym; else y1 = ym;\n    if (parent = node, !(node = node[i = bottom << 1 | right])) return parent[i] = leaf, tree;\n  }\n\n  // Is the new point is exactly coincident with the existing point?\n  xp = +tree._x.call(null, node.data);\n  yp = +tree._y.call(null, node.data);\n  if (x === xp && y === yp) return leaf.next = node, parent ? parent[i] = leaf : tree._root = leaf, tree;\n\n  // Otherwise, split the leaf node until the old and new point are separated.\n  do {\n    parent = parent ? parent[i] = new Array(4) : tree._root = new Array(4);\n    if (right = x >= (xm = (x0 + x1) / 2)) x0 = xm; else x1 = xm;\n    if (bottom = y >= (ym = (y0 + y1) / 2)) y0 = ym; else y1 = ym;\n  } while ((i = bottom << 1 | right) === (j = (yp >= ym) << 1 | (xp >= xm)));\n  return parent[j] = node, parent[i] = leaf, tree;\n}\n\nfunction addAll(data) {\n  var d, i, n = data.length,\n      x,\n      y,\n      xz = new Array(n),\n      yz = new Array(n),\n      x0 = Infinity,\n      y0 = Infinity,\n      x1 = -Infinity,\n      y1 = -Infinity;\n\n  // Compute the points and their extent.\n  for (i = 0; i < n; ++i) {\n    if (isNaN(x = +this._x.call(null, d = data[i])) || isNaN(y = +this._y.call(null, d))) continue;\n    xz[i] = x;\n    yz[i] = y;\n    if (x < x0) x0 = x;\n    if (x > x1) x1 = x;\n    if (y < y0) y0 = y;\n    if (y > y1) y1 = y;\n  }\n\n  // If there were no (valid) points, inherit the existing extent.\n  if (x1 < x0) x0 = this._x0, x1 = this._x1;\n  if (y1 < y0) y0 = this._y0, y1 = this._y1;\n\n  // Expand the tree to cover the new points.\n  this.cover(x0, y0).cover(x1, y1);\n\n  // Add the new points.\n  for (i = 0; i < n; ++i) {\n    add(this, xz[i], yz[i], data[i]);\n  }\n\n  return this;\n}\n\nvar tree_cover = function(x, y) {\n  if (isNaN(x = +x) || isNaN(y = +y)) return this; // ignore invalid points\n\n  var x0 = this._x0,\n      y0 = this._y0,\n      x1 = this._x1,\n      y1 = this._y1;\n\n  // If the quadtree has no extent, initialize them.\n  // Integer extent are necessary so that if we later double the extent,\n  // the existing quadrant boundaries don’t change due to floating point error!\n  if (isNaN(x0)) {\n    x1 = (x0 = Math.floor(x)) + 1;\n    y1 = (y0 = Math.floor(y)) + 1;\n  }\n\n  // Otherwise, double repeatedly to cover.\n  else if (x0 > x || x > x1 || y0 > y || y > y1) {\n    var z = x1 - x0,\n        node = this._root,\n        parent,\n        i;\n\n    switch (i = (y < (y0 + y1) / 2) << 1 | (x < (x0 + x1) / 2)) {\n      case 0: {\n        do parent = new Array(4), parent[i] = node, node = parent;\n        while (z *= 2, x1 = x0 + z, y1 = y0 + z, x > x1 || y > y1);\n        break;\n      }\n      case 1: {\n        do parent = new Array(4), parent[i] = node, node = parent;\n        while (z *= 2, x0 = x1 - z, y1 = y0 + z, x0 > x || y > y1);\n        break;\n      }\n      case 2: {\n        do parent = new Array(4), parent[i] = node, node = parent;\n        while (z *= 2, x1 = x0 + z, y0 = y1 - z, x > x1 || y0 > y);\n        break;\n      }\n      case 3: {\n        do parent = new Array(4), parent[i] = node, node = parent;\n        while (z *= 2, x0 = x1 - z, y0 = y1 - z, x0 > x || y0 > y);\n        break;\n      }\n    }\n\n    if (this._root && this._root.length) this._root = node;\n  }\n\n  // If the quadtree covers the point already, just return.\n  else return this;\n\n  this._x0 = x0;\n  this._y0 = y0;\n  this._x1 = x1;\n  this._y1 = y1;\n  return this;\n};\n\nvar tree_data = function() {\n  var data = [];\n  this.visit(function(node) {\n    if (!node.length) do data.push(node.data); while (node = node.next)\n  });\n  return data;\n};\n\nvar tree_extent = function(_) {\n  return arguments.length\n      ? this.cover(+_[0][0], +_[0][1]).cover(+_[1][0], +_[1][1])\n      : isNaN(this._x0) ? undefined : [[this._x0, this._y0], [this._x1, this._y1]];\n};\n\nvar Quad = function(node, x0, y0, x1, y1) {\n  this.node = node;\n  this.x0 = x0;\n  this.y0 = y0;\n  this.x1 = x1;\n  this.y1 = y1;\n};\n\nvar tree_find = function(x, y, radius) {\n  var data,\n      x0 = this._x0,\n      y0 = this._y0,\n      x1,\n      y1,\n      x2,\n      y2,\n      x3 = this._x1,\n      y3 = this._y1,\n      quads = [],\n      node = this._root,\n      q,\n      i;\n\n  if (node) quads.push(new Quad(node, x0, y0, x3, y3));\n  if (radius == null) radius = Infinity;\n  else {\n    x0 = x - radius, y0 = y - radius;\n    x3 = x + radius, y3 = y + radius;\n    radius *= radius;\n  }\n\n  while (q = quads.pop()) {\n\n    // Stop searching if this quadrant can’t contain a closer node.\n    if (!(node = q.node)\n        || (x1 = q.x0) > x3\n        || (y1 = q.y0) > y3\n        || (x2 = q.x1) < x0\n        || (y2 = q.y1) < y0) continue;\n\n    // Bisect the current quadrant.\n    if (node.length) {\n      var xm = (x1 + x2) / 2,\n          ym = (y1 + y2) / 2;\n\n      quads.push(\n        new Quad(node[3], xm, ym, x2, y2),\n        new Quad(node[2], x1, ym, xm, y2),\n        new Quad(node[1], xm, y1, x2, ym),\n        new Quad(node[0], x1, y1, xm, ym)\n      );\n\n      // Visit the closest quadrant first.\n      if (i = (y >= ym) << 1 | (x >= xm)) {\n        q = quads[quads.length - 1];\n        quads[quads.length - 1] = quads[quads.length - 1 - i];\n        quads[quads.length - 1 - i] = q;\n      }\n    }\n\n    // Visit this point. (Visiting coincident points isn’t necessary!)\n    else {\n      var dx = x - +this._x.call(null, node.data),\n          dy = y - +this._y.call(null, node.data),\n          d2 = dx * dx + dy * dy;\n      if (d2 < radius) {\n        var d = Math.sqrt(radius = d2);\n        x0 = x - d, y0 = y - d;\n        x3 = x + d, y3 = y + d;\n        data = node.data;\n      }\n    }\n  }\n\n  return data;\n};\n\nvar tree_remove = function(d) {\n  if (isNaN(x = +this._x.call(null, d)) || isNaN(y = +this._y.call(null, d))) return this; // ignore invalid points\n\n  var parent,\n      node = this._root,\n      retainer,\n      previous,\n      next,\n      x0 = this._x0,\n      y0 = this._y0,\n      x1 = this._x1,\n      y1 = this._y1,\n      x,\n      y,\n      xm,\n      ym,\n      right,\n      bottom,\n      i,\n      j;\n\n  // If the tree is empty, initialize the root as a leaf.\n  if (!node) return this;\n\n  // Find the leaf node for the point.\n  // While descending, also retain the deepest parent with a non-removed sibling.\n  if (node.length) while (true) {\n    if (right = x >= (xm = (x0 + x1) / 2)) x0 = xm; else x1 = xm;\n    if (bottom = y >= (ym = (y0 + y1) / 2)) y0 = ym; else y1 = ym;\n    if (!(parent = node, node = node[i = bottom << 1 | right])) return this;\n    if (!node.length) break;\n    if (parent[(i + 1) & 3] || parent[(i + 2) & 3] || parent[(i + 3) & 3]) retainer = parent, j = i;\n  }\n\n  // Find the point to remove.\n  while (node.data !== d) if (!(previous = node, node = node.next)) return this;\n  if (next = node.next) delete node.next;\n\n  // If there are multiple coincident points, remove just the point.\n  if (previous) return (next ? previous.next = next : delete previous.next), this;\n\n  // If this is the root point, remove it.\n  if (!parent) return this._root = next, this;\n\n  // Remove this leaf.\n  next ? parent[i] = next : delete parent[i];\n\n  // If the parent now contains exactly one leaf, collapse superfluous parents.\n  if ((node = parent[0] || parent[1] || parent[2] || parent[3])\n      && node === (parent[3] || parent[2] || parent[1] || parent[0])\n      && !node.length) {\n    if (retainer) retainer[j] = node;\n    else this._root = node;\n  }\n\n  return this;\n};\n\nfunction removeAll(data) {\n  for (var i = 0, n = data.length; i < n; ++i) this.remove(data[i]);\n  return this;\n}\n\nvar tree_root = function() {\n  return this._root;\n};\n\nvar tree_size = function() {\n  var size = 0;\n  this.visit(function(node) {\n    if (!node.length) do ++size; while (node = node.next)\n  });\n  return size;\n};\n\nvar tree_visit = function(callback) {\n  var quads = [], q, node = this._root, child, x0, y0, x1, y1;\n  if (node) quads.push(new Quad(node, this._x0, this._y0, this._x1, this._y1));\n  while (q = quads.pop()) {\n    if (!callback(node = q.node, x0 = q.x0, y0 = q.y0, x1 = q.x1, y1 = q.y1) && node.length) {\n      var xm = (x0 + x1) / 2, ym = (y0 + y1) / 2;\n      if (child = node[3]) quads.push(new Quad(child, xm, ym, x1, y1));\n      if (child = node[2]) quads.push(new Quad(child, x0, ym, xm, y1));\n      if (child = node[1]) quads.push(new Quad(child, xm, y0, x1, ym));\n      if (child = node[0]) quads.push(new Quad(child, x0, y0, xm, ym));\n    }\n  }\n  return this;\n};\n\nvar tree_visitAfter = function(callback) {\n  var quads = [], next = [], q;\n  if (this._root) quads.push(new Quad(this._root, this._x0, this._y0, this._x1, this._y1));\n  while (q = quads.pop()) {\n    var node = q.node;\n    if (node.length) {\n      var child, x0 = q.x0, y0 = q.y0, x1 = q.x1, y1 = q.y1, xm = (x0 + x1) / 2, ym = (y0 + y1) / 2;\n      if (child = node[0]) quads.push(new Quad(child, x0, y0, xm, ym));\n      if (child = node[1]) quads.push(new Quad(child, xm, y0, x1, ym));\n      if (child = node[2]) quads.push(new Quad(child, x0, ym, xm, y1));\n      if (child = node[3]) quads.push(new Quad(child, xm, ym, x1, y1));\n    }\n    next.push(q);\n  }\n  while (q = next.pop()) {\n    callback(q.node, q.x0, q.y0, q.x1, q.y1);\n  }\n  return this;\n};\n\nfunction defaultX(d) {\n  return d[0];\n}\n\nvar tree_x = function(_) {\n  return arguments.length ? (this._x = _, this) : this._x;\n};\n\nfunction defaultY(d) {\n  return d[1];\n}\n\nvar tree_y = function(_) {\n  return arguments.length ? (this._y = _, this) : this._y;\n};\n\nfunction quadtree(nodes, x, y) {\n  var tree = new Quadtree(x == null ? defaultX : x, y == null ? defaultY : y, NaN, NaN, NaN, NaN);\n  return nodes == null ? tree : tree.addAll(nodes);\n}\n\nfunction Quadtree(x, y, x0, y0, x1, y1) {\n  this._x = x;\n  this._y = y;\n  this._x0 = x0;\n  this._y0 = y0;\n  this._x1 = x1;\n  this._y1 = y1;\n  this._root = undefined;\n}\n\nfunction leaf_copy(leaf) {\n  var copy = {data: leaf.data}, next = copy;\n  while (leaf = leaf.next) next = next.next = {data: leaf.data};\n  return copy;\n}\n\nvar treeProto = quadtree.prototype = Quadtree.prototype;\n\ntreeProto.copy = function() {\n  var copy = new Quadtree(this._x, this._y, this._x0, this._y0, this._x1, this._y1),\n      node = this._root,\n      nodes,\n      child;\n\n  if (!node) return copy;\n\n  if (!node.length) return copy._root = leaf_copy(node), copy;\n\n  nodes = [{source: node, target: copy._root = new Array(4)}];\n  while (node = nodes.pop()) {\n    for (var i = 0; i < 4; ++i) {\n      if (child = node.source[i]) {\n        if (child.length) nodes.push({source: child, target: node.target[i] = new Array(4)});\n        else node.target[i] = leaf_copy(child);\n      }\n    }\n  }\n\n  return copy;\n};\n\ntreeProto.add = tree_add;\ntreeProto.addAll = addAll;\ntreeProto.cover = tree_cover;\ntreeProto.data = tree_data;\ntreeProto.extent = tree_extent;\ntreeProto.find = tree_find;\ntreeProto.remove = tree_remove;\ntreeProto.removeAll = removeAll;\ntreeProto.root = tree_root;\ntreeProto.size = tree_size;\ntreeProto.visit = tree_visit;\ntreeProto.visitAfter = tree_visitAfter;\ntreeProto.x = tree_x;\ntreeProto.y = tree_y;\n\nfunction x(d) {\n  return d.x + d.vx;\n}\n\nfunction y(d) {\n  return d.y + d.vy;\n}\n\nvar collide = function(radius) {\n  var nodes,\n      radii,\n      strength = 1,\n      iterations = 1;\n\n  if (typeof radius !== \"function\") radius = constant$6(radius == null ? 1 : +radius);\n\n  function force() {\n    var i, n = nodes.length,\n        tree,\n        node,\n        xi,\n        yi,\n        ri,\n        ri2;\n\n    for (var k = 0; k < iterations; ++k) {\n      tree = quadtree(nodes, x, y).visitAfter(prepare);\n      for (i = 0; i < n; ++i) {\n        node = nodes[i];\n        ri = radii[node.index], ri2 = ri * ri;\n        xi = node.x + node.vx;\n        yi = node.y + node.vy;\n        tree.visit(apply);\n      }\n    }\n\n    function apply(quad, x0, y0, x1, y1) {\n      var data = quad.data, rj = quad.r, r = ri + rj;\n      if (data) {\n        if (data.index > node.index) {\n          var x = xi - data.x - data.vx,\n              y = yi - data.y - data.vy,\n              l = x * x + y * y;\n          if (l < r * r) {\n            if (x === 0) x = jiggle(), l += x * x;\n            if (y === 0) y = jiggle(), l += y * y;\n            l = (r - (l = Math.sqrt(l))) / l * strength;\n            node.vx += (x *= l) * (r = (rj *= rj) / (ri2 + rj));\n            node.vy += (y *= l) * r;\n            data.vx -= x * (r = 1 - r);\n            data.vy -= y * r;\n          }\n        }\n        return;\n      }\n      return x0 > xi + r || x1 < xi - r || y0 > yi + r || y1 < yi - r;\n    }\n  }\n\n  function prepare(quad) {\n    if (quad.data) return quad.r = radii[quad.data.index];\n    for (var i = quad.r = 0; i < 4; ++i) {\n      if (quad[i] && quad[i].r > quad.r) {\n        quad.r = quad[i].r;\n      }\n    }\n  }\n\n  function initialize() {\n    if (!nodes) return;\n    var i, n = nodes.length, node;\n    radii = new Array(n);\n    for (i = 0; i < n; ++i) node = nodes[i], radii[node.index] = +radius(node, i, nodes);\n  }\n\n  force.initialize = function(_) {\n    nodes = _;\n    initialize();\n  };\n\n  force.iterations = function(_) {\n    return arguments.length ? (iterations = +_, force) : iterations;\n  };\n\n  force.strength = function(_) {\n    return arguments.length ? (strength = +_, force) : strength;\n  };\n\n  force.radius = function(_) {\n    return arguments.length ? (radius = typeof _ === \"function\" ? _ : constant$6(+_), initialize(), force) : radius;\n  };\n\n  return force;\n};\n\nfunction index(d) {\n  return d.index;\n}\n\nfunction find(nodeById, nodeId) {\n  var node = nodeById.get(nodeId);\n  if (!node) throw new Error(\"missing: \" + nodeId);\n  return node;\n}\n\nvar link = function(links) {\n  var id = index,\n      strength = defaultStrength,\n      strengths,\n      distance = constant$6(30),\n      distances,\n      nodes,\n      count,\n      bias,\n      iterations = 1;\n\n  if (links == null) links = [];\n\n  function defaultStrength(link) {\n    return 1 / Math.min(count[link.source.index], count[link.target.index]);\n  }\n\n  function force(alpha) {\n    for (var k = 0, n = links.length; k < iterations; ++k) {\n      for (var i = 0, link, source, target, x, y, l, b; i < n; ++i) {\n        link = links[i], source = link.source, target = link.target;\n        x = target.x + target.vx - source.x - source.vx || jiggle();\n        y = target.y + target.vy - source.y - source.vy || jiggle();\n        l = Math.sqrt(x * x + y * y);\n        l = (l - distances[i]) / l * alpha * strengths[i];\n        x *= l, y *= l;\n        target.vx -= x * (b = bias[i]);\n        target.vy -= y * b;\n        source.vx += x * (b = 1 - b);\n        source.vy += y * b;\n      }\n    }\n  }\n\n  function initialize() {\n    if (!nodes) return;\n\n    var i,\n        n = nodes.length,\n        m = links.length,\n        nodeById = map$1(nodes, id),\n        link;\n\n    for (i = 0, count = new Array(n); i < m; ++i) {\n      link = links[i], link.index = i;\n      if (typeof link.source !== \"object\") link.source = find(nodeById, link.source);\n      if (typeof link.target !== \"object\") link.target = find(nodeById, link.target);\n      count[link.source.index] = (count[link.source.index] || 0) + 1;\n      count[link.target.index] = (count[link.target.index] || 0) + 1;\n    }\n\n    for (i = 0, bias = new Array(m); i < m; ++i) {\n      link = links[i], bias[i] = count[link.source.index] / (count[link.source.index] + count[link.target.index]);\n    }\n\n    strengths = new Array(m), initializeStrength();\n    distances = new Array(m), initializeDistance();\n  }\n\n  function initializeStrength() {\n    if (!nodes) return;\n\n    for (var i = 0, n = links.length; i < n; ++i) {\n      strengths[i] = +strength(links[i], i, links);\n    }\n  }\n\n  function initializeDistance() {\n    if (!nodes) return;\n\n    for (var i = 0, n = links.length; i < n; ++i) {\n      distances[i] = +distance(links[i], i, links);\n    }\n  }\n\n  force.initialize = function(_) {\n    nodes = _;\n    initialize();\n  };\n\n  force.links = function(_) {\n    return arguments.length ? (links = _, initialize(), force) : links;\n  };\n\n  force.id = function(_) {\n    return arguments.length ? (id = _, force) : id;\n  };\n\n  force.iterations = function(_) {\n    return arguments.length ? (iterations = +_, force) : iterations;\n  };\n\n  force.strength = function(_) {\n    return arguments.length ? (strength = typeof _ === \"function\" ? _ : constant$6(+_), initializeStrength(), force) : strength;\n  };\n\n  force.distance = function(_) {\n    return arguments.length ? (distance = typeof _ === \"function\" ? _ : constant$6(+_), initializeDistance(), force) : distance;\n  };\n\n  return force;\n};\n\nfunction x$1(d) {\n  return d.x;\n}\n\nfunction y$1(d) {\n  return d.y;\n}\n\nvar initialRadius = 10;\nvar initialAngle = Math.PI * (3 - Math.sqrt(5));\n\nvar simulation = function(nodes) {\n  var simulation,\n      alpha = 1,\n      alphaMin = 0.001,\n      alphaDecay = 1 - Math.pow(alphaMin, 1 / 300),\n      alphaTarget = 0,\n      velocityDecay = 0.6,\n      forces = map$1(),\n      stepper = timer(step),\n      event = dispatch(\"tick\", \"end\");\n\n  if (nodes == null) nodes = [];\n\n  function step() {\n    tick();\n    event.call(\"tick\", simulation);\n    if (alpha < alphaMin) {\n      stepper.stop();\n      event.call(\"end\", simulation);\n    }\n  }\n\n  function tick() {\n    var i, n = nodes.length, node;\n\n    alpha += (alphaTarget - alpha) * alphaDecay;\n\n    forces.each(function(force) {\n      force(alpha);\n    });\n\n    for (i = 0; i < n; ++i) {\n      node = nodes[i];\n      if (node.fx == null) node.x += node.vx *= velocityDecay;\n      else node.x = node.fx, node.vx = 0;\n      if (node.fy == null) node.y += node.vy *= velocityDecay;\n      else node.y = node.fy, node.vy = 0;\n    }\n  }\n\n  function initializeNodes() {\n    for (var i = 0, n = nodes.length, node; i < n; ++i) {\n      node = nodes[i], node.index = i;\n      if (isNaN(node.x) || isNaN(node.y)) {\n        var radius = initialRadius * Math.sqrt(i), angle = i * initialAngle;\n        node.x = radius * Math.cos(angle);\n        node.y = radius * Math.sin(angle);\n      }\n      if (isNaN(node.vx) || isNaN(node.vy)) {\n        node.vx = node.vy = 0;\n      }\n    }\n  }\n\n  function initializeForce(force) {\n    if (force.initialize) force.initialize(nodes);\n    return force;\n  }\n\n  initializeNodes();\n\n  return simulation = {\n    tick: tick,\n\n    restart: function() {\n      return stepper.restart(step), simulation;\n    },\n\n    stop: function() {\n      return stepper.stop(), simulation;\n    },\n\n    nodes: function(_) {\n      return arguments.length ? (nodes = _, initializeNodes(), forces.each(initializeForce), simulation) : nodes;\n    },\n\n    alpha: function(_) {\n      return arguments.length ? (alpha = +_, simulation) : alpha;\n    },\n\n    alphaMin: function(_) {\n      return arguments.length ? (alphaMin = +_, simulation) : alphaMin;\n    },\n\n    alphaDecay: function(_) {\n      return arguments.length ? (alphaDecay = +_, simulation) : +alphaDecay;\n    },\n\n    alphaTarget: function(_) {\n      return arguments.length ? (alphaTarget = +_, simulation) : alphaTarget;\n    },\n\n    velocityDecay: function(_) {\n      return arguments.length ? (velocityDecay = 1 - _, simulation) : 1 - velocityDecay;\n    },\n\n    force: function(name, _) {\n      return arguments.length > 1 ? ((_ == null ? forces.remove(name) : forces.set(name, initializeForce(_))), simulation) : forces.get(name);\n    },\n\n    find: function(x, y, radius) {\n      var i = 0,\n          n = nodes.length,\n          dx,\n          dy,\n          d2,\n          node,\n          closest;\n\n      if (radius == null) radius = Infinity;\n      else radius *= radius;\n\n      for (i = 0; i < n; ++i) {\n        node = nodes[i];\n        dx = x - node.x;\n        dy = y - node.y;\n        d2 = dx * dx + dy * dy;\n        if (d2 < radius) closest = node, radius = d2;\n      }\n\n      return closest;\n    },\n\n    on: function(name, _) {\n      return arguments.length > 1 ? (event.on(name, _), simulation) : event.on(name);\n    }\n  };\n};\n\nvar manyBody = function() {\n  var nodes,\n      node,\n      alpha,\n      strength = constant$6(-30),\n      strengths,\n      distanceMin2 = 1,\n      distanceMax2 = Infinity,\n      theta2 = 0.81;\n\n  function force(_) {\n    var i, n = nodes.length, tree = quadtree(nodes, x$1, y$1).visitAfter(accumulate);\n    for (alpha = _, i = 0; i < n; ++i) node = nodes[i], tree.visit(apply);\n  }\n\n  function initialize() {\n    if (!nodes) return;\n    var i, n = nodes.length, node;\n    strengths = new Array(n);\n    for (i = 0; i < n; ++i) node = nodes[i], strengths[node.index] = +strength(node, i, nodes);\n  }\n\n  function accumulate(quad) {\n    var strength = 0, q, c, weight = 0, x, y, i;\n\n    // For internal nodes, accumulate forces from child quadrants.\n    if (quad.length) {\n      for (x = y = i = 0; i < 4; ++i) {\n        if ((q = quad[i]) && (c = Math.abs(q.value))) {\n          strength += q.value, weight += c, x += c * q.x, y += c * q.y;\n        }\n      }\n      quad.x = x / weight;\n      quad.y = y / weight;\n    }\n\n    // For leaf nodes, accumulate forces from coincident quadrants.\n    else {\n      q = quad;\n      q.x = q.data.x;\n      q.y = q.data.y;\n      do strength += strengths[q.data.index];\n      while (q = q.next);\n    }\n\n    quad.value = strength;\n  }\n\n  function apply(quad, x1, _, x2) {\n    if (!quad.value) return true;\n\n    var x = quad.x - node.x,\n        y = quad.y - node.y,\n        w = x2 - x1,\n        l = x * x + y * y;\n\n    // Apply the Barnes-Hut approximation if possible.\n    // Limit forces for very close nodes; randomize direction if coincident.\n    if (w * w / theta2 < l) {\n      if (l < distanceMax2) {\n        if (x === 0) x = jiggle(), l += x * x;\n        if (y === 0) y = jiggle(), l += y * y;\n        if (l < distanceMin2) l = Math.sqrt(distanceMin2 * l);\n        node.vx += x * quad.value * alpha / l;\n        node.vy += y * quad.value * alpha / l;\n      }\n      return true;\n    }\n\n    // Otherwise, process points directly.\n    else if (quad.length || l >= distanceMax2) return;\n\n    // Limit forces for very close nodes; randomize direction if coincident.\n    if (quad.data !== node || quad.next) {\n      if (x === 0) x = jiggle(), l += x * x;\n      if (y === 0) y = jiggle(), l += y * y;\n      if (l < distanceMin2) l = Math.sqrt(distanceMin2 * l);\n    }\n\n    do if (quad.data !== node) {\n      w = strengths[quad.data.index] * alpha / l;\n      node.vx += x * w;\n      node.vy += y * w;\n    } while (quad = quad.next);\n  }\n\n  force.initialize = function(_) {\n    nodes = _;\n    initialize();\n  };\n\n  force.strength = function(_) {\n    return arguments.length ? (strength = typeof _ === \"function\" ? _ : constant$6(+_), initialize(), force) : strength;\n  };\n\n  force.distanceMin = function(_) {\n    return arguments.length ? (distanceMin2 = _ * _, force) : Math.sqrt(distanceMin2);\n  };\n\n  force.distanceMax = function(_) {\n    return arguments.length ? (distanceMax2 = _ * _, force) : Math.sqrt(distanceMax2);\n  };\n\n  force.theta = function(_) {\n    return arguments.length ? (theta2 = _ * _, force) : Math.sqrt(theta2);\n  };\n\n  return force;\n};\n\nvar radial = function(radius, x, y) {\n  var nodes,\n      strength = constant$6(0.1),\n      strengths,\n      radiuses;\n\n  if (typeof radius !== \"function\") radius = constant$6(+radius);\n  if (x == null) x = 0;\n  if (y == null) y = 0;\n\n  function force(alpha) {\n    for (var i = 0, n = nodes.length; i < n; ++i) {\n      var node = nodes[i],\n          dx = node.x - x || 1e-6,\n          dy = node.y - y || 1e-6,\n          r = Math.sqrt(dx * dx + dy * dy),\n          k = (radiuses[i] - r) * strengths[i] * alpha / r;\n      node.vx += dx * k;\n      node.vy += dy * k;\n    }\n  }\n\n  function initialize() {\n    if (!nodes) return;\n    var i, n = nodes.length;\n    strengths = new Array(n);\n    radiuses = new Array(n);\n    for (i = 0; i < n; ++i) {\n      radiuses[i] = +radius(nodes[i], i, nodes);\n      strengths[i] = isNaN(radiuses[i]) ? 0 : +strength(nodes[i], i, nodes);\n    }\n  }\n\n  force.initialize = function(_) {\n    nodes = _, initialize();\n  };\n\n  force.strength = function(_) {\n    return arguments.length ? (strength = typeof _ === \"function\" ? _ : constant$6(+_), initialize(), force) : strength;\n  };\n\n  force.radius = function(_) {\n    return arguments.length ? (radius = typeof _ === \"function\" ? _ : constant$6(+_), initialize(), force) : radius;\n  };\n\n  force.x = function(_) {\n    return arguments.length ? (x = +_, force) : x;\n  };\n\n  force.y = function(_) {\n    return arguments.length ? (y = +_, force) : y;\n  };\n\n  return force;\n};\n\nvar x$2 = function(x) {\n  var strength = constant$6(0.1),\n      nodes,\n      strengths,\n      xz;\n\n  if (typeof x !== \"function\") x = constant$6(x == null ? 0 : +x);\n\n  function force(alpha) {\n    for (var i = 0, n = nodes.length, node; i < n; ++i) {\n      node = nodes[i], node.vx += (xz[i] - node.x) * strengths[i] * alpha;\n    }\n  }\n\n  function initialize() {\n    if (!nodes) return;\n    var i, n = nodes.length;\n    strengths = new Array(n);\n    xz = new Array(n);\n    for (i = 0; i < n; ++i) {\n      strengths[i] = isNaN(xz[i] = +x(nodes[i], i, nodes)) ? 0 : +strength(nodes[i], i, nodes);\n    }\n  }\n\n  force.initialize = function(_) {\n    nodes = _;\n    initialize();\n  };\n\n  force.strength = function(_) {\n    return arguments.length ? (strength = typeof _ === \"function\" ? _ : constant$6(+_), initialize(), force) : strength;\n  };\n\n  force.x = function(_) {\n    return arguments.length ? (x = typeof _ === \"function\" ? _ : constant$6(+_), initialize(), force) : x;\n  };\n\n  return force;\n};\n\nvar y$2 = function(y) {\n  var strength = constant$6(0.1),\n      nodes,\n      strengths,\n      yz;\n\n  if (typeof y !== \"function\") y = constant$6(y == null ? 0 : +y);\n\n  function force(alpha) {\n    for (var i = 0, n = nodes.length, node; i < n; ++i) {\n      node = nodes[i], node.vy += (yz[i] - node.y) * strengths[i] * alpha;\n    }\n  }\n\n  function initialize() {\n    if (!nodes) return;\n    var i, n = nodes.length;\n    strengths = new Array(n);\n    yz = new Array(n);\n    for (i = 0; i < n; ++i) {\n      strengths[i] = isNaN(yz[i] = +y(nodes[i], i, nodes)) ? 0 : +strength(nodes[i], i, nodes);\n    }\n  }\n\n  force.initialize = function(_) {\n    nodes = _;\n    initialize();\n  };\n\n  force.strength = function(_) {\n    return arguments.length ? (strength = typeof _ === \"function\" ? _ : constant$6(+_), initialize(), force) : strength;\n  };\n\n  force.y = function(_) {\n    return arguments.length ? (y = typeof _ === \"function\" ? _ : constant$6(+_), initialize(), force) : y;\n  };\n\n  return force;\n};\n\n// Computes the decimal coefficient and exponent of the specified number x with\n// significant digits p, where x is positive and p is in [1, 21] or undefined.\n// For example, formatDecimal(1.23) returns [\"123\", 0].\nvar formatDecimal = function(x, p) {\n  if ((i = (x = p ? x.toExponential(p - 1) : x.toExponential()).indexOf(\"e\")) < 0) return null; // NaN, ±Infinity\n  var i, coefficient = x.slice(0, i);\n\n  // The string returned by toExponential either has the form \\d\\.\\d+e[-+]\\d+\n  // (e.g., 1.2e+3) or the form \\de[-+]\\d+ (e.g., 1e+3).\n  return [\n    coefficient.length > 1 ? coefficient[0] + coefficient.slice(2) : coefficient,\n    +x.slice(i + 1)\n  ];\n};\n\nvar exponent$1 = function(x) {\n  return x = formatDecimal(Math.abs(x)), x ? x[1] : NaN;\n};\n\nvar formatGroup = function(grouping, thousands) {\n  return function(value, width) {\n    var i = value.length,\n        t = [],\n        j = 0,\n        g = grouping[0],\n        length = 0;\n\n    while (i > 0 && g > 0) {\n      if (length + g + 1 > width) g = Math.max(1, width - length);\n      t.push(value.substring(i -= g, i + g));\n      if ((length += g + 1) > width) break;\n      g = grouping[j = (j + 1) % grouping.length];\n    }\n\n    return t.reverse().join(thousands);\n  };\n};\n\nvar formatNumerals = function(numerals) {\n  return function(value) {\n    return value.replace(/[0-9]/g, function(i) {\n      return numerals[+i];\n    });\n  };\n};\n\nvar formatDefault = function(x, p) {\n  x = x.toPrecision(p);\n\n  out: for (var n = x.length, i = 1, i0 = -1, i1; i < n; ++i) {\n    switch (x[i]) {\n      case \".\": i0 = i1 = i; break;\n      case \"0\": if (i0 === 0) i0 = i; i1 = i; break;\n      case \"e\": break out;\n      default: if (i0 > 0) i0 = 0; break;\n    }\n  }\n\n  return i0 > 0 ? x.slice(0, i0) + x.slice(i1 + 1) : x;\n};\n\nvar prefixExponent;\n\nvar formatPrefixAuto = function(x, p) {\n  var d = formatDecimal(x, p);\n  if (!d) return x + \"\";\n  var coefficient = d[0],\n      exponent = d[1],\n      i = exponent - (prefixExponent = Math.max(-8, Math.min(8, Math.floor(exponent / 3))) * 3) + 1,\n      n = coefficient.length;\n  return i === n ? coefficient\n      : i > n ? coefficient + new Array(i - n + 1).join(\"0\")\n      : i > 0 ? coefficient.slice(0, i) + \".\" + coefficient.slice(i)\n      : \"0.\" + new Array(1 - i).join(\"0\") + formatDecimal(x, Math.max(0, p + i - 1))[0]; // less than 1y!\n};\n\nvar formatRounded = function(x, p) {\n  var d = formatDecimal(x, p);\n  if (!d) return x + \"\";\n  var coefficient = d[0],\n      exponent = d[1];\n  return exponent < 0 ? \"0.\" + new Array(-exponent).join(\"0\") + coefficient\n      : coefficient.length > exponent + 1 ? coefficient.slice(0, exponent + 1) + \".\" + coefficient.slice(exponent + 1)\n      : coefficient + new Array(exponent - coefficient.length + 2).join(\"0\");\n};\n\nvar formatTypes = {\n  \"\": formatDefault,\n  \"%\": function(x, p) { return (x * 100).toFixed(p); },\n  \"b\": function(x) { return Math.round(x).toString(2); },\n  \"c\": function(x) { return x + \"\"; },\n  \"d\": function(x) { return Math.round(x).toString(10); },\n  \"e\": function(x, p) { return x.toExponential(p); },\n  \"f\": function(x, p) { return x.toFixed(p); },\n  \"g\": function(x, p) { return x.toPrecision(p); },\n  \"o\": function(x) { return Math.round(x).toString(8); },\n  \"p\": function(x, p) { return formatRounded(x * 100, p); },\n  \"r\": formatRounded,\n  \"s\": formatPrefixAuto,\n  \"X\": function(x) { return Math.round(x).toString(16).toUpperCase(); },\n  \"x\": function(x) { return Math.round(x).toString(16); }\n};\n\n// [[fill]align][sign][symbol][0][width][,][.precision][type]\nvar re = /^(?:(.)?([<>=^]))?([+\\-\\( ])?([$#])?(0)?(\\d+)?(,)?(\\.\\d+)?([a-z%])?$/i;\n\nfunction formatSpecifier(specifier) {\n  return new FormatSpecifier(specifier);\n}\n\nformatSpecifier.prototype = FormatSpecifier.prototype; // instanceof\n\nfunction FormatSpecifier(specifier) {\n  if (!(match = re.exec(specifier))) throw new Error(\"invalid format: \" + specifier);\n\n  var match,\n      fill = match[1] || \" \",\n      align = match[2] || \">\",\n      sign = match[3] || \"-\",\n      symbol = match[4] || \"\",\n      zero = !!match[5],\n      width = match[6] && +match[6],\n      comma = !!match[7],\n      precision = match[8] && +match[8].slice(1),\n      type = match[9] || \"\";\n\n  // The \"n\" type is an alias for \",g\".\n  if (type === \"n\") comma = true, type = \"g\";\n\n  // Map invalid types to the default format.\n  else if (!formatTypes[type]) type = \"\";\n\n  // If zero fill is specified, padding goes after sign and before digits.\n  if (zero || (fill === \"0\" && align === \"=\")) zero = true, fill = \"0\", align = \"=\";\n\n  this.fill = fill;\n  this.align = align;\n  this.sign = sign;\n  this.symbol = symbol;\n  this.zero = zero;\n  this.width = width;\n  this.comma = comma;\n  this.precision = precision;\n  this.type = type;\n}\n\nFormatSpecifier.prototype.toString = function() {\n  return this.fill\n      + this.align\n      + this.sign\n      + this.symbol\n      + (this.zero ? \"0\" : \"\")\n      + (this.width == null ? \"\" : Math.max(1, this.width | 0))\n      + (this.comma ? \",\" : \"\")\n      + (this.precision == null ? \"\" : \".\" + Math.max(0, this.precision | 0))\n      + this.type;\n};\n\nvar identity$3 = function(x) {\n  return x;\n};\n\nvar prefixes = [\"y\",\"z\",\"a\",\"f\",\"p\",\"n\",\"\\xB5\",\"m\",\"\",\"k\",\"M\",\"G\",\"T\",\"P\",\"E\",\"Z\",\"Y\"];\n\nvar formatLocale = function(locale) {\n  var group = locale.grouping && locale.thousands ? formatGroup(locale.grouping, locale.thousands) : identity$3,\n      currency = locale.currency,\n      decimal = locale.decimal,\n      numerals = locale.numerals ? formatNumerals(locale.numerals) : identity$3,\n      percent = locale.percent || \"%\";\n\n  function newFormat(specifier) {\n    specifier = formatSpecifier(specifier);\n\n    var fill = specifier.fill,\n        align = specifier.align,\n        sign = specifier.sign,\n        symbol = specifier.symbol,\n        zero = specifier.zero,\n        width = specifier.width,\n        comma = specifier.comma,\n        precision = specifier.precision,\n        type = specifier.type;\n\n    // Compute the prefix and suffix.\n    // For SI-prefix, the suffix is lazily computed.\n    var prefix = symbol === \"$\" ? currency[0] : symbol === \"#\" && /[boxX]/.test(type) ? \"0\" + type.toLowerCase() : \"\",\n        suffix = symbol === \"$\" ? currency[1] : /[%p]/.test(type) ? percent : \"\";\n\n    // What format function should we use?\n    // Is this an integer type?\n    // Can this type generate exponential notation?\n    var formatType = formatTypes[type],\n        maybeSuffix = !type || /[defgprs%]/.test(type);\n\n    // Set the default precision if not specified,\n    // or clamp the specified precision to the supported range.\n    // For significant precision, it must be in [1, 21].\n    // For fixed precision, it must be in [0, 20].\n    precision = precision == null ? (type ? 6 : 12)\n        : /[gprs]/.test(type) ? Math.max(1, Math.min(21, precision))\n        : Math.max(0, Math.min(20, precision));\n\n    function format(value) {\n      var valuePrefix = prefix,\n          valueSuffix = suffix,\n          i, n, c;\n\n      if (type === \"c\") {\n        valueSuffix = formatType(value) + valueSuffix;\n        value = \"\";\n      } else {\n        value = +value;\n\n        // Perform the initial formatting.\n        var valueNegative = value < 0;\n        value = formatType(Math.abs(value), precision);\n\n        // If a negative value rounds to zero during formatting, treat as positive.\n        if (valueNegative && +value === 0) valueNegative = false;\n\n        // Compute the prefix and suffix.\n        valuePrefix = (valueNegative ? (sign === \"(\" ? sign : \"-\") : sign === \"-\" || sign === \"(\" ? \"\" : sign) + valuePrefix;\n        valueSuffix = valueSuffix + (type === \"s\" ? prefixes[8 + prefixExponent / 3] : \"\") + (valueNegative && sign === \"(\" ? \")\" : \"\");\n\n        // Break the formatted value into the integer “value” part that can be\n        // grouped, and fractional or exponential “suffix” part that is not.\n        if (maybeSuffix) {\n          i = -1, n = value.length;\n          while (++i < n) {\n            if (c = value.charCodeAt(i), 48 > c || c > 57) {\n              valueSuffix = (c === 46 ? decimal + value.slice(i + 1) : value.slice(i)) + valueSuffix;\n              value = value.slice(0, i);\n              break;\n            }\n          }\n        }\n      }\n\n      // If the fill character is not \"0\", grouping is applied before padding.\n      if (comma && !zero) value = group(value, Infinity);\n\n      // Compute the padding.\n      var length = valuePrefix.length + value.length + valueSuffix.length,\n          padding = length < width ? new Array(width - length + 1).join(fill) : \"\";\n\n      // If the fill character is \"0\", grouping is applied after padding.\n      if (comma && zero) value = group(padding + value, padding.length ? width - valueSuffix.length : Infinity), padding = \"\";\n\n      // Reconstruct the final output based on the desired alignment.\n      switch (align) {\n        case \"<\": value = valuePrefix + value + valueSuffix + padding; break;\n        case \"=\": value = valuePrefix + padding + value + valueSuffix; break;\n        case \"^\": value = padding.slice(0, length = padding.length >> 1) + valuePrefix + value + valueSuffix + padding.slice(length); break;\n        default: value = padding + valuePrefix + value + valueSuffix; break;\n      }\n\n      return numerals(value);\n    }\n\n    format.toString = function() {\n      return specifier + \"\";\n    };\n\n    return format;\n  }\n\n  function formatPrefix(specifier, value) {\n    var f = newFormat((specifier = formatSpecifier(specifier), specifier.type = \"f\", specifier)),\n        e = Math.max(-8, Math.min(8, Math.floor(exponent$1(value) / 3))) * 3,\n        k = Math.pow(10, -e),\n        prefix = prefixes[8 + e / 3];\n    return function(value) {\n      return f(k * value) + prefix;\n    };\n  }\n\n  return {\n    format: newFormat,\n    formatPrefix: formatPrefix\n  };\n};\n\nvar locale;\n\n\n\ndefaultLocale({\n  decimal: \".\",\n  thousands: \",\",\n  grouping: [3],\n  currency: [\"$\", \"\"]\n});\n\nfunction defaultLocale(definition) {\n  locale = formatLocale(definition);\n  exports.format = locale.format;\n  exports.formatPrefix = locale.formatPrefix;\n  return locale;\n}\n\nvar precisionFixed = function(step) {\n  return Math.max(0, -exponent$1(Math.abs(step)));\n};\n\nvar precisionPrefix = function(step, value) {\n  return Math.max(0, Math.max(-8, Math.min(8, Math.floor(exponent$1(value) / 3))) * 3 - exponent$1(Math.abs(step)));\n};\n\nvar precisionRound = function(step, max) {\n  step = Math.abs(step), max = Math.abs(max) - step;\n  return Math.max(0, exponent$1(max) - exponent$1(step)) + 1;\n};\n\n// Adds floating point numbers with twice the normal precision.\n// Reference: J. R. Shewchuk, Adaptive Precision Floating-Point Arithmetic and\n// Fast Robust Geometric Predicates, Discrete & Computational Geometry 18(3)\n// 305–363 (1997).\n// Code adapted from GeographicLib by Charles F. F. Karney,\n// http://geographiclib.sourceforge.net/\n\nvar adder = function() {\n  return new Adder;\n};\n\nfunction Adder() {\n  this.reset();\n}\n\nAdder.prototype = {\n  constructor: Adder,\n  reset: function() {\n    this.s = // rounded value\n    this.t = 0; // exact error\n  },\n  add: function(y) {\n    add$1(temp, y, this.t);\n    add$1(this, temp.s, this.s);\n    if (this.s) this.t += temp.t;\n    else this.s = temp.t;\n  },\n  valueOf: function() {\n    return this.s;\n  }\n};\n\nvar temp = new Adder;\n\nfunction add$1(adder, a, b) {\n  var x = adder.s = a + b,\n      bv = x - a,\n      av = x - bv;\n  adder.t = (a - av) + (b - bv);\n}\n\nvar epsilon$2 = 1e-6;\nvar epsilon2$1 = 1e-12;\nvar pi$3 = Math.PI;\nvar halfPi$2 = pi$3 / 2;\nvar quarterPi = pi$3 / 4;\nvar tau$3 = pi$3 * 2;\n\nvar degrees$1 = 180 / pi$3;\nvar radians = pi$3 / 180;\n\nvar abs = Math.abs;\nvar atan = Math.atan;\nvar atan2 = Math.atan2;\nvar cos$1 = Math.cos;\nvar ceil = Math.ceil;\nvar exp = Math.exp;\n\nvar log = Math.log;\nvar pow = Math.pow;\nvar sin$1 = Math.sin;\nvar sign = Math.sign || function(x) { return x > 0 ? 1 : x < 0 ? -1 : 0; };\nvar sqrt = Math.sqrt;\nvar tan = Math.tan;\n\nfunction acos(x) {\n  return x > 1 ? 0 : x < -1 ? pi$3 : Math.acos(x);\n}\n\nfunction asin(x) {\n  return x > 1 ? halfPi$2 : x < -1 ? -halfPi$2 : Math.asin(x);\n}\n\nfunction haversin(x) {\n  return (x = sin$1(x / 2)) * x;\n}\n\nfunction noop$1() {}\n\nfunction streamGeometry(geometry, stream) {\n  if (geometry && streamGeometryType.hasOwnProperty(geometry.type)) {\n    streamGeometryType[geometry.type](geometry, stream);\n  }\n}\n\nvar streamObjectType = {\n  Feature: function(object, stream) {\n    streamGeometry(object.geometry, stream);\n  },\n  FeatureCollection: function(object, stream) {\n    var features = object.features, i = -1, n = features.length;\n    while (++i < n) streamGeometry(features[i].geometry, stream);\n  }\n};\n\nvar streamGeometryType = {\n  Sphere: function(object, stream) {\n    stream.sphere();\n  },\n  Point: function(object, stream) {\n    object = object.coordinates;\n    stream.point(object[0], object[1], object[2]);\n  },\n  MultiPoint: function(object, stream) {\n    var coordinates = object.coordinates, i = -1, n = coordinates.length;\n    while (++i < n) object = coordinates[i], stream.point(object[0], object[1], object[2]);\n  },\n  LineString: function(object, stream) {\n    streamLine(object.coordinates, stream, 0);\n  },\n  MultiLineString: function(object, stream) {\n    var coordinates = object.coordinates, i = -1, n = coordinates.length;\n    while (++i < n) streamLine(coordinates[i], stream, 0);\n  },\n  Polygon: function(object, stream) {\n    streamPolygon(object.coordinates, stream);\n  },\n  MultiPolygon: function(object, stream) {\n    var coordinates = object.coordinates, i = -1, n = coordinates.length;\n    while (++i < n) streamPolygon(coordinates[i], stream);\n  },\n  GeometryCollection: function(object, stream) {\n    var geometries = object.geometries, i = -1, n = geometries.length;\n    while (++i < n) streamGeometry(geometries[i], stream);\n  }\n};\n\nfunction streamLine(coordinates, stream, closed) {\n  var i = -1, n = coordinates.length - closed, coordinate;\n  stream.lineStart();\n  while (++i < n) coordinate = coordinates[i], stream.point(coordinate[0], coordinate[1], coordinate[2]);\n  stream.lineEnd();\n}\n\nfunction streamPolygon(coordinates, stream) {\n  var i = -1, n = coordinates.length;\n  stream.polygonStart();\n  while (++i < n) streamLine(coordinates[i], stream, 1);\n  stream.polygonEnd();\n}\n\nvar geoStream = function(object, stream) {\n  if (object && streamObjectType.hasOwnProperty(object.type)) {\n    streamObjectType[object.type](object, stream);\n  } else {\n    streamGeometry(object, stream);\n  }\n};\n\nvar areaRingSum = adder();\n\nvar areaSum = adder();\nvar lambda00;\nvar phi00;\nvar lambda0;\nvar cosPhi0;\nvar sinPhi0;\n\nvar areaStream = {\n  point: noop$1,\n  lineStart: noop$1,\n  lineEnd: noop$1,\n  polygonStart: function() {\n    areaRingSum.reset();\n    areaStream.lineStart = areaRingStart;\n    areaStream.lineEnd = areaRingEnd;\n  },\n  polygonEnd: function() {\n    var areaRing = +areaRingSum;\n    areaSum.add(areaRing < 0 ? tau$3 + areaRing : areaRing);\n    this.lineStart = this.lineEnd = this.point = noop$1;\n  },\n  sphere: function() {\n    areaSum.add(tau$3);\n  }\n};\n\nfunction areaRingStart() {\n  areaStream.point = areaPointFirst;\n}\n\nfunction areaRingEnd() {\n  areaPoint(lambda00, phi00);\n}\n\nfunction areaPointFirst(lambda, phi) {\n  areaStream.point = areaPoint;\n  lambda00 = lambda, phi00 = phi;\n  lambda *= radians, phi *= radians;\n  lambda0 = lambda, cosPhi0 = cos$1(phi = phi / 2 + quarterPi), sinPhi0 = sin$1(phi);\n}\n\nfunction areaPoint(lambda, phi) {\n  lambda *= radians, phi *= radians;\n  phi = phi / 2 + quarterPi; // half the angular distance from south pole\n\n  // Spherical excess E for a spherical triangle with vertices: south pole,\n  // previous point, current point.  Uses a formula derived from Cagnoli’s\n  // theorem.  See Todhunter, Spherical Trig. (1871), Sec. 103, Eq. (2).\n  var dLambda = lambda - lambda0,\n      sdLambda = dLambda >= 0 ? 1 : -1,\n      adLambda = sdLambda * dLambda,\n      cosPhi = cos$1(phi),\n      sinPhi = sin$1(phi),\n      k = sinPhi0 * sinPhi,\n      u = cosPhi0 * cosPhi + k * cos$1(adLambda),\n      v = k * sdLambda * sin$1(adLambda);\n  areaRingSum.add(atan2(v, u));\n\n  // Advance the previous points.\n  lambda0 = lambda, cosPhi0 = cosPhi, sinPhi0 = sinPhi;\n}\n\nvar area = function(object) {\n  areaSum.reset();\n  geoStream(object, areaStream);\n  return areaSum * 2;\n};\n\nfunction spherical(cartesian) {\n  return [atan2(cartesian[1], cartesian[0]), asin(cartesian[2])];\n}\n\nfunction cartesian(spherical) {\n  var lambda = spherical[0], phi = spherical[1], cosPhi = cos$1(phi);\n  return [cosPhi * cos$1(lambda), cosPhi * sin$1(lambda), sin$1(phi)];\n}\n\nfunction cartesianDot(a, b) {\n  return a[0] * b[0] + a[1] * b[1] + a[2] * b[2];\n}\n\nfunction cartesianCross(a, b) {\n  return [a[1] * b[2] - a[2] * b[1], a[2] * b[0] - a[0] * b[2], a[0] * b[1] - a[1] * b[0]];\n}\n\n// TODO return a\nfunction cartesianAddInPlace(a, b) {\n  a[0] += b[0], a[1] += b[1], a[2] += b[2];\n}\n\nfunction cartesianScale(vector, k) {\n  return [vector[0] * k, vector[1] * k, vector[2] * k];\n}\n\n// TODO return d\nfunction cartesianNormalizeInPlace(d) {\n  var l = sqrt(d[0] * d[0] + d[1] * d[1] + d[2] * d[2]);\n  d[0] /= l, d[1] /= l, d[2] /= l;\n}\n\nvar lambda0$1;\nvar phi0;\nvar lambda1;\nvar phi1;\nvar lambda2;\nvar lambda00$1;\nvar phi00$1;\nvar p0;\nvar deltaSum = adder();\nvar ranges;\nvar range;\n\nvar boundsStream = {\n  point: boundsPoint,\n  lineStart: boundsLineStart,\n  lineEnd: boundsLineEnd,\n  polygonStart: function() {\n    boundsStream.point = boundsRingPoint;\n    boundsStream.lineStart = boundsRingStart;\n    boundsStream.lineEnd = boundsRingEnd;\n    deltaSum.reset();\n    areaStream.polygonStart();\n  },\n  polygonEnd: function() {\n    areaStream.polygonEnd();\n    boundsStream.point = boundsPoint;\n    boundsStream.lineStart = boundsLineStart;\n    boundsStream.lineEnd = boundsLineEnd;\n    if (areaRingSum < 0) lambda0$1 = -(lambda1 = 180), phi0 = -(phi1 = 90);\n    else if (deltaSum > epsilon$2) phi1 = 90;\n    else if (deltaSum < -epsilon$2) phi0 = -90;\n    range[0] = lambda0$1, range[1] = lambda1;\n  }\n};\n\nfunction boundsPoint(lambda, phi) {\n  ranges.push(range = [lambda0$1 = lambda, lambda1 = lambda]);\n  if (phi < phi0) phi0 = phi;\n  if (phi > phi1) phi1 = phi;\n}\n\nfunction linePoint(lambda, phi) {\n  var p = cartesian([lambda * radians, phi * radians]);\n  if (p0) {\n    var normal = cartesianCross(p0, p),\n        equatorial = [normal[1], -normal[0], 0],\n        inflection = cartesianCross(equatorial, normal);\n    cartesianNormalizeInPlace(inflection);\n    inflection = spherical(inflection);\n    var delta = lambda - lambda2,\n        sign$$1 = delta > 0 ? 1 : -1,\n        lambdai = inflection[0] * degrees$1 * sign$$1,\n        phii,\n        antimeridian = abs(delta) > 180;\n    if (antimeridian ^ (sign$$1 * lambda2 < lambdai && lambdai < sign$$1 * lambda)) {\n      phii = inflection[1] * degrees$1;\n      if (phii > phi1) phi1 = phii;\n    } else if (lambdai = (lambdai + 360) % 360 - 180, antimeridian ^ (sign$$1 * lambda2 < lambdai && lambdai < sign$$1 * lambda)) {\n      phii = -inflection[1] * degrees$1;\n      if (phii < phi0) phi0 = phii;\n    } else {\n      if (phi < phi0) phi0 = phi;\n      if (phi > phi1) phi1 = phi;\n    }\n    if (antimeridian) {\n      if (lambda < lambda2) {\n        if (angle(lambda0$1, lambda) > angle(lambda0$1, lambda1)) lambda1 = lambda;\n      } else {\n        if (angle(lambda, lambda1) > angle(lambda0$1, lambda1)) lambda0$1 = lambda;\n      }\n    } else {\n      if (lambda1 >= lambda0$1) {\n        if (lambda < lambda0$1) lambda0$1 = lambda;\n        if (lambda > lambda1) lambda1 = lambda;\n      } else {\n        if (lambda > lambda2) {\n          if (angle(lambda0$1, lambda) > angle(lambda0$1, lambda1)) lambda1 = lambda;\n        } else {\n          if (angle(lambda, lambda1) > angle(lambda0$1, lambda1)) lambda0$1 = lambda;\n        }\n      }\n    }\n  } else {\n    ranges.push(range = [lambda0$1 = lambda, lambda1 = lambda]);\n  }\n  if (phi < phi0) phi0 = phi;\n  if (phi > phi1) phi1 = phi;\n  p0 = p, lambda2 = lambda;\n}\n\nfunction boundsLineStart() {\n  boundsStream.point = linePoint;\n}\n\nfunction boundsLineEnd() {\n  range[0] = lambda0$1, range[1] = lambda1;\n  boundsStream.point = boundsPoint;\n  p0 = null;\n}\n\nfunction boundsRingPoint(lambda, phi) {\n  if (p0) {\n    var delta = lambda - lambda2;\n    deltaSum.add(abs(delta) > 180 ? delta + (delta > 0 ? 360 : -360) : delta);\n  } else {\n    lambda00$1 = lambda, phi00$1 = phi;\n  }\n  areaStream.point(lambda, phi);\n  linePoint(lambda, phi);\n}\n\nfunction boundsRingStart() {\n  areaStream.lineStart();\n}\n\nfunction boundsRingEnd() {\n  boundsRingPoint(lambda00$1, phi00$1);\n  areaStream.lineEnd();\n  if (abs(deltaSum) > epsilon$2) lambda0$1 = -(lambda1 = 180);\n  range[0] = lambda0$1, range[1] = lambda1;\n  p0 = null;\n}\n\n// Finds the left-right distance between two longitudes.\n// This is almost the same as (lambda1 - lambda0 + 360°) % 360°, except that we want\n// the distance between ±180° to be 360°.\nfunction angle(lambda0, lambda1) {\n  return (lambda1 -= lambda0) < 0 ? lambda1 + 360 : lambda1;\n}\n\nfunction rangeCompare(a, b) {\n  return a[0] - b[0];\n}\n\nfunction rangeContains(range, x) {\n  return range[0] <= range[1] ? range[0] <= x && x <= range[1] : x < range[0] || range[1] < x;\n}\n\nvar bounds = function(feature) {\n  var i, n, a, b, merged, deltaMax, delta;\n\n  phi1 = lambda1 = -(lambda0$1 = phi0 = Infinity);\n  ranges = [];\n  geoStream(feature, boundsStream);\n\n  // First, sort ranges by their minimum longitudes.\n  if (n = ranges.length) {\n    ranges.sort(rangeCompare);\n\n    // Then, merge any ranges that overlap.\n    for (i = 1, a = ranges[0], merged = [a]; i < n; ++i) {\n      b = ranges[i];\n      if (rangeContains(a, b[0]) || rangeContains(a, b[1])) {\n        if (angle(a[0], b[1]) > angle(a[0], a[1])) a[1] = b[1];\n        if (angle(b[0], a[1]) > angle(a[0], a[1])) a[0] = b[0];\n      } else {\n        merged.push(a = b);\n      }\n    }\n\n    // Finally, find the largest gap between the merged ranges.\n    // The final bounding box will be the inverse of this gap.\n    for (deltaMax = -Infinity, n = merged.length - 1, i = 0, a = merged[n]; i <= n; a = b, ++i) {\n      b = merged[i];\n      if ((delta = angle(a[1], b[0])) > deltaMax) deltaMax = delta, lambda0$1 = b[0], lambda1 = a[1];\n    }\n  }\n\n  ranges = range = null;\n\n  return lambda0$1 === Infinity || phi0 === Infinity\n      ? [[NaN, NaN], [NaN, NaN]]\n      : [[lambda0$1, phi0], [lambda1, phi1]];\n};\n\nvar W0;\nvar W1;\nvar X0;\nvar Y0;\nvar Z0;\nvar X1;\nvar Y1;\nvar Z1;\nvar X2;\nvar Y2;\nvar Z2;\nvar lambda00$2;\nvar phi00$2;\nvar x0;\nvar y0;\nvar z0; // previous point\n\nvar centroidStream = {\n  sphere: noop$1,\n  point: centroidPoint,\n  lineStart: centroidLineStart,\n  lineEnd: centroidLineEnd,\n  polygonStart: function() {\n    centroidStream.lineStart = centroidRingStart;\n    centroidStream.lineEnd = centroidRingEnd;\n  },\n  polygonEnd: function() {\n    centroidStream.lineStart = centroidLineStart;\n    centroidStream.lineEnd = centroidLineEnd;\n  }\n};\n\n// Arithmetic mean of Cartesian vectors.\nfunction centroidPoint(lambda, phi) {\n  lambda *= radians, phi *= radians;\n  var cosPhi = cos$1(phi);\n  centroidPointCartesian(cosPhi * cos$1(lambda), cosPhi * sin$1(lambda), sin$1(phi));\n}\n\nfunction centroidPointCartesian(x, y, z) {\n  ++W0;\n  X0 += (x - X0) / W0;\n  Y0 += (y - Y0) / W0;\n  Z0 += (z - Z0) / W0;\n}\n\nfunction centroidLineStart() {\n  centroidStream.point = centroidLinePointFirst;\n}\n\nfunction centroidLinePointFirst(lambda, phi) {\n  lambda *= radians, phi *= radians;\n  var cosPhi = cos$1(phi);\n  x0 = cosPhi * cos$1(lambda);\n  y0 = cosPhi * sin$1(lambda);\n  z0 = sin$1(phi);\n  centroidStream.point = centroidLinePoint;\n  centroidPointCartesian(x0, y0, z0);\n}\n\nfunction centroidLinePoint(lambda, phi) {\n  lambda *= radians, phi *= radians;\n  var cosPhi = cos$1(phi),\n      x = cosPhi * cos$1(lambda),\n      y = cosPhi * sin$1(lambda),\n      z = sin$1(phi),\n      w = atan2(sqrt((w = y0 * z - z0 * y) * w + (w = z0 * x - x0 * z) * w + (w = x0 * y - y0 * x) * w), x0 * x + y0 * y + z0 * z);\n  W1 += w;\n  X1 += w * (x0 + (x0 = x));\n  Y1 += w * (y0 + (y0 = y));\n  Z1 += w * (z0 + (z0 = z));\n  centroidPointCartesian(x0, y0, z0);\n}\n\nfunction centroidLineEnd() {\n  centroidStream.point = centroidPoint;\n}\n\n// See J. E. Brock, The Inertia Tensor for a Spherical Triangle,\n// J. Applied Mechanics 42, 239 (1975).\nfunction centroidRingStart() {\n  centroidStream.point = centroidRingPointFirst;\n}\n\nfunction centroidRingEnd() {\n  centroidRingPoint(lambda00$2, phi00$2);\n  centroidStream.point = centroidPoint;\n}\n\nfunction centroidRingPointFirst(lambda, phi) {\n  lambda00$2 = lambda, phi00$2 = phi;\n  lambda *= radians, phi *= radians;\n  centroidStream.point = centroidRingPoint;\n  var cosPhi = cos$1(phi);\n  x0 = cosPhi * cos$1(lambda);\n  y0 = cosPhi * sin$1(lambda);\n  z0 = sin$1(phi);\n  centroidPointCartesian(x0, y0, z0);\n}\n\nfunction centroidRingPoint(lambda, phi) {\n  lambda *= radians, phi *= radians;\n  var cosPhi = cos$1(phi),\n      x = cosPhi * cos$1(lambda),\n      y = cosPhi * sin$1(lambda),\n      z = sin$1(phi),\n      cx = y0 * z - z0 * y,\n      cy = z0 * x - x0 * z,\n      cz = x0 * y - y0 * x,\n      m = sqrt(cx * cx + cy * cy + cz * cz),\n      w = asin(m), // line weight = angle\n      v = m && -w / m; // area weight multiplier\n  X2 += v * cx;\n  Y2 += v * cy;\n  Z2 += v * cz;\n  W1 += w;\n  X1 += w * (x0 + (x0 = x));\n  Y1 += w * (y0 + (y0 = y));\n  Z1 += w * (z0 + (z0 = z));\n  centroidPointCartesian(x0, y0, z0);\n}\n\nvar centroid = function(object) {\n  W0 = W1 =\n  X0 = Y0 = Z0 =\n  X1 = Y1 = Z1 =\n  X2 = Y2 = Z2 = 0;\n  geoStream(object, centroidStream);\n\n  var x = X2,\n      y = Y2,\n      z = Z2,\n      m = x * x + y * y + z * z;\n\n  // If the area-weighted ccentroid is undefined, fall back to length-weighted ccentroid.\n  if (m < epsilon2$1) {\n    x = X1, y = Y1, z = Z1;\n    // If the feature has zero length, fall back to arithmetic mean of point vectors.\n    if (W1 < epsilon$2) x = X0, y = Y0, z = Z0;\n    m = x * x + y * y + z * z;\n    // If the feature still has an undefined ccentroid, then return.\n    if (m < epsilon2$1) return [NaN, NaN];\n  }\n\n  return [atan2(y, x) * degrees$1, asin(z / sqrt(m)) * degrees$1];\n};\n\nvar constant$7 = function(x) {\n  return function() {\n    return x;\n  };\n};\n\nvar compose = function(a, b) {\n\n  function compose(x, y) {\n    return x = a(x, y), b(x[0], x[1]);\n  }\n\n  if (a.invert && b.invert) compose.invert = function(x, y) {\n    return x = b.invert(x, y), x && a.invert(x[0], x[1]);\n  };\n\n  return compose;\n};\n\nfunction rotationIdentity(lambda, phi) {\n  return [lambda > pi$3 ? lambda - tau$3 : lambda < -pi$3 ? lambda + tau$3 : lambda, phi];\n}\n\nrotationIdentity.invert = rotationIdentity;\n\nfunction rotateRadians(deltaLambda, deltaPhi, deltaGamma) {\n  return (deltaLambda %= tau$3) ? (deltaPhi || deltaGamma ? compose(rotationLambda(deltaLambda), rotationPhiGamma(deltaPhi, deltaGamma))\n    : rotationLambda(deltaLambda))\n    : (deltaPhi || deltaGamma ? rotationPhiGamma(deltaPhi, deltaGamma)\n    : rotationIdentity);\n}\n\nfunction forwardRotationLambda(deltaLambda) {\n  return function(lambda, phi) {\n    return lambda += deltaLambda, [lambda > pi$3 ? lambda - tau$3 : lambda < -pi$3 ? lambda + tau$3 : lambda, phi];\n  };\n}\n\nfunction rotationLambda(deltaLambda) {\n  var rotation = forwardRotationLambda(deltaLambda);\n  rotation.invert = forwardRotationLambda(-deltaLambda);\n  return rotation;\n}\n\nfunction rotationPhiGamma(deltaPhi, deltaGamma) {\n  var cosDeltaPhi = cos$1(deltaPhi),\n      sinDeltaPhi = sin$1(deltaPhi),\n      cosDeltaGamma = cos$1(deltaGamma),\n      sinDeltaGamma = sin$1(deltaGamma);\n\n  function rotation(lambda, phi) {\n    var cosPhi = cos$1(phi),\n        x = cos$1(lambda) * cosPhi,\n        y = sin$1(lambda) * cosPhi,\n        z = sin$1(phi),\n        k = z * cosDeltaPhi + x * sinDeltaPhi;\n    return [\n      atan2(y * cosDeltaGamma - k * sinDeltaGamma, x * cosDeltaPhi - z * sinDeltaPhi),\n      asin(k * cosDeltaGamma + y * sinDeltaGamma)\n    ];\n  }\n\n  rotation.invert = function(lambda, phi) {\n    var cosPhi = cos$1(phi),\n        x = cos$1(lambda) * cosPhi,\n        y = sin$1(lambda) * cosPhi,\n        z = sin$1(phi),\n        k = z * cosDeltaGamma - y * sinDeltaGamma;\n    return [\n      atan2(y * cosDeltaGamma + z * sinDeltaGamma, x * cosDeltaPhi + k * sinDeltaPhi),\n      asin(k * cosDeltaPhi - x * sinDeltaPhi)\n    ];\n  };\n\n  return rotation;\n}\n\nvar rotation = function(rotate) {\n  rotate = rotateRadians(rotate[0] * radians, rotate[1] * radians, rotate.length > 2 ? rotate[2] * radians : 0);\n\n  function forward(coordinates) {\n    coordinates = rotate(coordinates[0] * radians, coordinates[1] * radians);\n    return coordinates[0] *= degrees$1, coordinates[1] *= degrees$1, coordinates;\n  }\n\n  forward.invert = function(coordinates) {\n    coordinates = rotate.invert(coordinates[0] * radians, coordinates[1] * radians);\n    return coordinates[0] *= degrees$1, coordinates[1] *= degrees$1, coordinates;\n  };\n\n  return forward;\n};\n\n// Generates a circle centered at [0°, 0°], with a given radius and precision.\nfunction circleStream(stream, radius, delta, direction, t0, t1) {\n  if (!delta) return;\n  var cosRadius = cos$1(radius),\n      sinRadius = sin$1(radius),\n      step = direction * delta;\n  if (t0 == null) {\n    t0 = radius + direction * tau$3;\n    t1 = radius - step / 2;\n  } else {\n    t0 = circleRadius(cosRadius, t0);\n    t1 = circleRadius(cosRadius, t1);\n    if (direction > 0 ? t0 < t1 : t0 > t1) t0 += direction * tau$3;\n  }\n  for (var point, t = t0; direction > 0 ? t > t1 : t < t1; t -= step) {\n    point = spherical([cosRadius, -sinRadius * cos$1(t), -sinRadius * sin$1(t)]);\n    stream.point(point[0], point[1]);\n  }\n}\n\n// Returns the signed angle of a cartesian point relative to [cosRadius, 0, 0].\nfunction circleRadius(cosRadius, point) {\n  point = cartesian(point), point[0] -= cosRadius;\n  cartesianNormalizeInPlace(point);\n  var radius = acos(-point[1]);\n  return ((-point[2] < 0 ? -radius : radius) + tau$3 - epsilon$2) % tau$3;\n}\n\nvar circle = function() {\n  var center = constant$7([0, 0]),\n      radius = constant$7(90),\n      precision = constant$7(6),\n      ring,\n      rotate,\n      stream = {point: point};\n\n  function point(x, y) {\n    ring.push(x = rotate(x, y));\n    x[0] *= degrees$1, x[1] *= degrees$1;\n  }\n\n  function circle() {\n    var c = center.apply(this, arguments),\n        r = radius.apply(this, arguments) * radians,\n        p = precision.apply(this, arguments) * radians;\n    ring = [];\n    rotate = rotateRadians(-c[0] * radians, -c[1] * radians, 0).invert;\n    circleStream(stream, r, p, 1);\n    c = {type: \"Polygon\", coordinates: [ring]};\n    ring = rotate = null;\n    return c;\n  }\n\n  circle.center = function(_) {\n    return arguments.length ? (center = typeof _ === \"function\" ? _ : constant$7([+_[0], +_[1]]), circle) : center;\n  };\n\n  circle.radius = function(_) {\n    return arguments.length ? (radius = typeof _ === \"function\" ? _ : constant$7(+_), circle) : radius;\n  };\n\n  circle.precision = function(_) {\n    return arguments.length ? (precision = typeof _ === \"function\" ? _ : constant$7(+_), circle) : precision;\n  };\n\n  return circle;\n};\n\nvar clipBuffer = function() {\n  var lines = [],\n      line;\n  return {\n    point: function(x, y) {\n      line.push([x, y]);\n    },\n    lineStart: function() {\n      lines.push(line = []);\n    },\n    lineEnd: noop$1,\n    rejoin: function() {\n      if (lines.length > 1) lines.push(lines.pop().concat(lines.shift()));\n    },\n    result: function() {\n      var result = lines;\n      lines = [];\n      line = null;\n      return result;\n    }\n  };\n};\n\nvar pointEqual = function(a, b) {\n  return abs(a[0] - b[0]) < epsilon$2 && abs(a[1] - b[1]) < epsilon$2;\n};\n\nfunction Intersection(point, points, other, entry) {\n  this.x = point;\n  this.z = points;\n  this.o = other; // another intersection\n  this.e = entry; // is an entry?\n  this.v = false; // visited\n  this.n = this.p = null; // next & previous\n}\n\n// A generalized polygon clipping algorithm: given a polygon that has been cut\n// into its visible line segments, and rejoins the segments by interpolating\n// along the clip edge.\nvar clipRejoin = function(segments, compareIntersection, startInside, interpolate, stream) {\n  var subject = [],\n      clip = [],\n      i,\n      n;\n\n  segments.forEach(function(segment) {\n    if ((n = segment.length - 1) <= 0) return;\n    var n, p0 = segment[0], p1 = segment[n], x;\n\n    // If the first and last points of a segment are coincident, then treat as a\n    // closed ring. TODO if all rings are closed, then the winding order of the\n    // exterior ring should be checked.\n    if (pointEqual(p0, p1)) {\n      stream.lineStart();\n      for (i = 0; i < n; ++i) stream.point((p0 = segment[i])[0], p0[1]);\n      stream.lineEnd();\n      return;\n    }\n\n    subject.push(x = new Intersection(p0, segment, null, true));\n    clip.push(x.o = new Intersection(p0, null, x, false));\n    subject.push(x = new Intersection(p1, segment, null, false));\n    clip.push(x.o = new Intersection(p1, null, x, true));\n  });\n\n  if (!subject.length) return;\n\n  clip.sort(compareIntersection);\n  link$1(subject);\n  link$1(clip);\n\n  for (i = 0, n = clip.length; i < n; ++i) {\n    clip[i].e = startInside = !startInside;\n  }\n\n  var start = subject[0],\n      points,\n      point;\n\n  while (1) {\n    // Find first unvisited intersection.\n    var current = start,\n        isSubject = true;\n    while (current.v) if ((current = current.n) === start) return;\n    points = current.z;\n    stream.lineStart();\n    do {\n      current.v = current.o.v = true;\n      if (current.e) {\n        if (isSubject) {\n          for (i = 0, n = points.length; i < n; ++i) stream.point((point = points[i])[0], point[1]);\n        } else {\n          interpolate(current.x, current.n.x, 1, stream);\n        }\n        current = current.n;\n      } else {\n        if (isSubject) {\n          points = current.p.z;\n          for (i = points.length - 1; i >= 0; --i) stream.point((point = points[i])[0], point[1]);\n        } else {\n          interpolate(current.x, current.p.x, -1, stream);\n        }\n        current = current.p;\n      }\n      current = current.o;\n      points = current.z;\n      isSubject = !isSubject;\n    } while (!current.v);\n    stream.lineEnd();\n  }\n};\n\nfunction link$1(array) {\n  if (!(n = array.length)) return;\n  var n,\n      i = 0,\n      a = array[0],\n      b;\n  while (++i < n) {\n    a.n = b = array[i];\n    b.p = a;\n    a = b;\n  }\n  a.n = b = array[0];\n  b.p = a;\n}\n\nvar sum$1 = adder();\n\nvar polygonContains = function(polygon, point) {\n  var lambda = point[0],\n      phi = point[1],\n      normal = [sin$1(lambda), -cos$1(lambda), 0],\n      angle = 0,\n      winding = 0;\n\n  sum$1.reset();\n\n  for (var i = 0, n = polygon.length; i < n; ++i) {\n    if (!(m = (ring = polygon[i]).length)) continue;\n    var ring,\n        m,\n        point0 = ring[m - 1],\n        lambda0 = point0[0],\n        phi0 = point0[1] / 2 + quarterPi,\n        sinPhi0 = sin$1(phi0),\n        cosPhi0 = cos$1(phi0);\n\n    for (var j = 0; j < m; ++j, lambda0 = lambda1, sinPhi0 = sinPhi1, cosPhi0 = cosPhi1, point0 = point1) {\n      var point1 = ring[j],\n          lambda1 = point1[0],\n          phi1 = point1[1] / 2 + quarterPi,\n          sinPhi1 = sin$1(phi1),\n          cosPhi1 = cos$1(phi1),\n          delta = lambda1 - lambda0,\n          sign$$1 = delta >= 0 ? 1 : -1,\n          absDelta = sign$$1 * delta,\n          antimeridian = absDelta > pi$3,\n          k = sinPhi0 * sinPhi1;\n\n      sum$1.add(atan2(k * sign$$1 * sin$1(absDelta), cosPhi0 * cosPhi1 + k * cos$1(absDelta)));\n      angle += antimeridian ? delta + sign$$1 * tau$3 : delta;\n\n      // Are the longitudes either side of the point’s meridian (lambda),\n      // and are the latitudes smaller than the parallel (phi)?\n      if (antimeridian ^ lambda0 >= lambda ^ lambda1 >= lambda) {\n        var arc = cartesianCross(cartesian(point0), cartesian(point1));\n        cartesianNormalizeInPlace(arc);\n        var intersection = cartesianCross(normal, arc);\n        cartesianNormalizeInPlace(intersection);\n        var phiArc = (antimeridian ^ delta >= 0 ? -1 : 1) * asin(intersection[2]);\n        if (phi > phiArc || phi === phiArc && (arc[0] || arc[1])) {\n          winding += antimeridian ^ delta >= 0 ? 1 : -1;\n        }\n      }\n    }\n  }\n\n  // First, determine whether the South pole is inside or outside:\n  //\n  // It is inside if:\n  // * the polygon winds around it in a clockwise direction.\n  // * the polygon does not (cumulatively) wind around it, but has a negative\n  //   (counter-clockwise) area.\n  //\n  // Second, count the (signed) number of times a segment crosses a lambda\n  // from the point to the South pole.  If it is zero, then the point is the\n  // same side as the South pole.\n\n  return (angle < -epsilon$2 || angle < epsilon$2 && sum$1 < -epsilon$2) ^ (winding & 1);\n};\n\nvar clip = function(pointVisible, clipLine, interpolate, start) {\n  return function(sink) {\n    var line = clipLine(sink),\n        ringBuffer = clipBuffer(),\n        ringSink = clipLine(ringBuffer),\n        polygonStarted = false,\n        polygon,\n        segments,\n        ring;\n\n    var clip = {\n      point: point,\n      lineStart: lineStart,\n      lineEnd: lineEnd,\n      polygonStart: function() {\n        clip.point = pointRing;\n        clip.lineStart = ringStart;\n        clip.lineEnd = ringEnd;\n        segments = [];\n        polygon = [];\n      },\n      polygonEnd: function() {\n        clip.point = point;\n        clip.lineStart = lineStart;\n        clip.lineEnd = lineEnd;\n        segments = merge(segments);\n        var startInside = polygonContains(polygon, start);\n        if (segments.length) {\n          if (!polygonStarted) sink.polygonStart(), polygonStarted = true;\n          clipRejoin(segments, compareIntersection, startInside, interpolate, sink);\n        } else if (startInside) {\n          if (!polygonStarted) sink.polygonStart(), polygonStarted = true;\n          sink.lineStart();\n          interpolate(null, null, 1, sink);\n          sink.lineEnd();\n        }\n        if (polygonStarted) sink.polygonEnd(), polygonStarted = false;\n        segments = polygon = null;\n      },\n      sphere: function() {\n        sink.polygonStart();\n        sink.lineStart();\n        interpolate(null, null, 1, sink);\n        sink.lineEnd();\n        sink.polygonEnd();\n      }\n    };\n\n    function point(lambda, phi) {\n      if (pointVisible(lambda, phi)) sink.point(lambda, phi);\n    }\n\n    function pointLine(lambda, phi) {\n      line.point(lambda, phi);\n    }\n\n    function lineStart() {\n      clip.point = pointLine;\n      line.lineStart();\n    }\n\n    function lineEnd() {\n      clip.point = point;\n      line.lineEnd();\n    }\n\n    function pointRing(lambda, phi) {\n      ring.push([lambda, phi]);\n      ringSink.point(lambda, phi);\n    }\n\n    function ringStart() {\n      ringSink.lineStart();\n      ring = [];\n    }\n\n    function ringEnd() {\n      pointRing(ring[0][0], ring[0][1]);\n      ringSink.lineEnd();\n\n      var clean = ringSink.clean(),\n          ringSegments = ringBuffer.result(),\n          i, n = ringSegments.length, m,\n          segment,\n          point;\n\n      ring.pop();\n      polygon.push(ring);\n      ring = null;\n\n      if (!n) return;\n\n      // No intersections.\n      if (clean & 1) {\n        segment = ringSegments[0];\n        if ((m = segment.length - 1) > 0) {\n          if (!polygonStarted) sink.polygonStart(), polygonStarted = true;\n          sink.lineStart();\n          for (i = 0; i < m; ++i) sink.point((point = segment[i])[0], point[1]);\n          sink.lineEnd();\n        }\n        return;\n      }\n\n      // Rejoin connected segments.\n      // TODO reuse ringBuffer.rejoin()?\n      if (n > 1 && clean & 2) ringSegments.push(ringSegments.pop().concat(ringSegments.shift()));\n\n      segments.push(ringSegments.filter(validSegment));\n    }\n\n    return clip;\n  };\n};\n\nfunction validSegment(segment) {\n  return segment.length > 1;\n}\n\n// Intersections are sorted along the clip edge. For both antimeridian cutting\n// and circle clipping, the same comparison is used.\nfunction compareIntersection(a, b) {\n  return ((a = a.x)[0] < 0 ? a[1] - halfPi$2 - epsilon$2 : halfPi$2 - a[1])\n       - ((b = b.x)[0] < 0 ? b[1] - halfPi$2 - epsilon$2 : halfPi$2 - b[1]);\n}\n\nvar clipAntimeridian = clip(\n  function() { return true; },\n  clipAntimeridianLine,\n  clipAntimeridianInterpolate,\n  [-pi$3, -halfPi$2]\n);\n\n// Takes a line and cuts into visible segments. Return values: 0 - there were\n// intersections or the line was empty; 1 - no intersections; 2 - there were\n// intersections, and the first and last segments should be rejoined.\nfunction clipAntimeridianLine(stream) {\n  var lambda0 = NaN,\n      phi0 = NaN,\n      sign0 = NaN,\n      clean; // no intersections\n\n  return {\n    lineStart: function() {\n      stream.lineStart();\n      clean = 1;\n    },\n    point: function(lambda1, phi1) {\n      var sign1 = lambda1 > 0 ? pi$3 : -pi$3,\n          delta = abs(lambda1 - lambda0);\n      if (abs(delta - pi$3) < epsilon$2) { // line crosses a pole\n        stream.point(lambda0, phi0 = (phi0 + phi1) / 2 > 0 ? halfPi$2 : -halfPi$2);\n        stream.point(sign0, phi0);\n        stream.lineEnd();\n        stream.lineStart();\n        stream.point(sign1, phi0);\n        stream.point(lambda1, phi0);\n        clean = 0;\n      } else if (sign0 !== sign1 && delta >= pi$3) { // line crosses antimeridian\n        if (abs(lambda0 - sign0) < epsilon$2) lambda0 -= sign0 * epsilon$2; // handle degeneracies\n        if (abs(lambda1 - sign1) < epsilon$2) lambda1 -= sign1 * epsilon$2;\n        phi0 = clipAntimeridianIntersect(lambda0, phi0, lambda1, phi1);\n        stream.point(sign0, phi0);\n        stream.lineEnd();\n        stream.lineStart();\n        stream.point(sign1, phi0);\n        clean = 0;\n      }\n      stream.point(lambda0 = lambda1, phi0 = phi1);\n      sign0 = sign1;\n    },\n    lineEnd: function() {\n      stream.lineEnd();\n      lambda0 = phi0 = NaN;\n    },\n    clean: function() {\n      return 2 - clean; // if intersections, rejoin first and last segments\n    }\n  };\n}\n\nfunction clipAntimeridianIntersect(lambda0, phi0, lambda1, phi1) {\n  var cosPhi0,\n      cosPhi1,\n      sinLambda0Lambda1 = sin$1(lambda0 - lambda1);\n  return abs(sinLambda0Lambda1) > epsilon$2\n      ? atan((sin$1(phi0) * (cosPhi1 = cos$1(phi1)) * sin$1(lambda1)\n          - sin$1(phi1) * (cosPhi0 = cos$1(phi0)) * sin$1(lambda0))\n          / (cosPhi0 * cosPhi1 * sinLambda0Lambda1))\n      : (phi0 + phi1) / 2;\n}\n\nfunction clipAntimeridianInterpolate(from, to, direction, stream) {\n  var phi;\n  if (from == null) {\n    phi = direction * halfPi$2;\n    stream.point(-pi$3, phi);\n    stream.point(0, phi);\n    stream.point(pi$3, phi);\n    stream.point(pi$3, 0);\n    stream.point(pi$3, -phi);\n    stream.point(0, -phi);\n    stream.point(-pi$3, -phi);\n    stream.point(-pi$3, 0);\n    stream.point(-pi$3, phi);\n  } else if (abs(from[0] - to[0]) > epsilon$2) {\n    var lambda = from[0] < to[0] ? pi$3 : -pi$3;\n    phi = direction * lambda / 2;\n    stream.point(-lambda, phi);\n    stream.point(0, phi);\n    stream.point(lambda, phi);\n  } else {\n    stream.point(to[0], to[1]);\n  }\n}\n\nvar clipCircle = function(radius) {\n  var cr = cos$1(radius),\n      delta = 6 * radians,\n      smallRadius = cr > 0,\n      notHemisphere = abs(cr) > epsilon$2; // TODO optimise for this common case\n\n  function interpolate(from, to, direction, stream) {\n    circleStream(stream, radius, delta, direction, from, to);\n  }\n\n  function visible(lambda, phi) {\n    return cos$1(lambda) * cos$1(phi) > cr;\n  }\n\n  // Takes a line and cuts into visible segments. Return values used for polygon\n  // clipping: 0 - there were intersections or the line was empty; 1 - no\n  // intersections 2 - there were intersections, and the first and last segments\n  // should be rejoined.\n  function clipLine(stream) {\n    var point0, // previous point\n        c0, // code for previous point\n        v0, // visibility of previous point\n        v00, // visibility of first point\n        clean; // no intersections\n    return {\n      lineStart: function() {\n        v00 = v0 = false;\n        clean = 1;\n      },\n      point: function(lambda, phi) {\n        var point1 = [lambda, phi],\n            point2,\n            v = visible(lambda, phi),\n            c = smallRadius\n              ? v ? 0 : code(lambda, phi)\n              : v ? code(lambda + (lambda < 0 ? pi$3 : -pi$3), phi) : 0;\n        if (!point0 && (v00 = v0 = v)) stream.lineStart();\n        // Handle degeneracies.\n        // TODO ignore if not clipping polygons.\n        if (v !== v0) {\n          point2 = intersect(point0, point1);\n          if (!point2 || pointEqual(point0, point2) || pointEqual(point1, point2)) {\n            point1[0] += epsilon$2;\n            point1[1] += epsilon$2;\n            v = visible(point1[0], point1[1]);\n          }\n        }\n        if (v !== v0) {\n          clean = 0;\n          if (v) {\n            // outside going in\n            stream.lineStart();\n            point2 = intersect(point1, point0);\n            stream.point(point2[0], point2[1]);\n          } else {\n            // inside going out\n            point2 = intersect(point0, point1);\n            stream.point(point2[0], point2[1]);\n            stream.lineEnd();\n          }\n          point0 = point2;\n        } else if (notHemisphere && point0 && smallRadius ^ v) {\n          var t;\n          // If the codes for two points are different, or are both zero,\n          // and there this segment intersects with the small circle.\n          if (!(c & c0) && (t = intersect(point1, point0, true))) {\n            clean = 0;\n            if (smallRadius) {\n              stream.lineStart();\n              stream.point(t[0][0], t[0][1]);\n              stream.point(t[1][0], t[1][1]);\n              stream.lineEnd();\n            } else {\n              stream.point(t[1][0], t[1][1]);\n              stream.lineEnd();\n              stream.lineStart();\n              stream.point(t[0][0], t[0][1]);\n            }\n          }\n        }\n        if (v && (!point0 || !pointEqual(point0, point1))) {\n          stream.point(point1[0], point1[1]);\n        }\n        point0 = point1, v0 = v, c0 = c;\n      },\n      lineEnd: function() {\n        if (v0) stream.lineEnd();\n        point0 = null;\n      },\n      // Rejoin first and last segments if there were intersections and the first\n      // and last points were visible.\n      clean: function() {\n        return clean | ((v00 && v0) << 1);\n      }\n    };\n  }\n\n  // Intersects the great circle between a and b with the clip circle.\n  function intersect(a, b, two) {\n    var pa = cartesian(a),\n        pb = cartesian(b);\n\n    // We have two planes, n1.p = d1 and n2.p = d2.\n    // Find intersection line p(t) = c1 n1 + c2 n2 + t (n1 ⨯ n2).\n    var n1 = [1, 0, 0], // normal\n        n2 = cartesianCross(pa, pb),\n        n2n2 = cartesianDot(n2, n2),\n        n1n2 = n2[0], // cartesianDot(n1, n2),\n        determinant = n2n2 - n1n2 * n1n2;\n\n    // Two polar points.\n    if (!determinant) return !two && a;\n\n    var c1 =  cr * n2n2 / determinant,\n        c2 = -cr * n1n2 / determinant,\n        n1xn2 = cartesianCross(n1, n2),\n        A = cartesianScale(n1, c1),\n        B = cartesianScale(n2, c2);\n    cartesianAddInPlace(A, B);\n\n    // Solve |p(t)|^2 = 1.\n    var u = n1xn2,\n        w = cartesianDot(A, u),\n        uu = cartesianDot(u, u),\n        t2 = w * w - uu * (cartesianDot(A, A) - 1);\n\n    if (t2 < 0) return;\n\n    var t = sqrt(t2),\n        q = cartesianScale(u, (-w - t) / uu);\n    cartesianAddInPlace(q, A);\n    q = spherical(q);\n\n    if (!two) return q;\n\n    // Two intersection points.\n    var lambda0 = a[0],\n        lambda1 = b[0],\n        phi0 = a[1],\n        phi1 = b[1],\n        z;\n\n    if (lambda1 < lambda0) z = lambda0, lambda0 = lambda1, lambda1 = z;\n\n    var delta = lambda1 - lambda0,\n        polar = abs(delta - pi$3) < epsilon$2,\n        meridian = polar || delta < epsilon$2;\n\n    if (!polar && phi1 < phi0) z = phi0, phi0 = phi1, phi1 = z;\n\n    // Check that the first point is between a and b.\n    if (meridian\n        ? polar\n          ? phi0 + phi1 > 0 ^ q[1] < (abs(q[0] - lambda0) < epsilon$2 ? phi0 : phi1)\n          : phi0 <= q[1] && q[1] <= phi1\n        : delta > pi$3 ^ (lambda0 <= q[0] && q[0] <= lambda1)) {\n      var q1 = cartesianScale(u, (-w + t) / uu);\n      cartesianAddInPlace(q1, A);\n      return [q, spherical(q1)];\n    }\n  }\n\n  // Generates a 4-bit vector representing the location of a point relative to\n  // the small circle's bounding box.\n  function code(lambda, phi) {\n    var r = smallRadius ? radius : pi$3 - radius,\n        code = 0;\n    if (lambda < -r) code |= 1; // left\n    else if (lambda > r) code |= 2; // right\n    if (phi < -r) code |= 4; // below\n    else if (phi > r) code |= 8; // above\n    return code;\n  }\n\n  return clip(visible, clipLine, interpolate, smallRadius ? [0, -radius] : [-pi$3, radius - pi$3]);\n};\n\nvar clipLine = function(a, b, x0, y0, x1, y1) {\n  var ax = a[0],\n      ay = a[1],\n      bx = b[0],\n      by = b[1],\n      t0 = 0,\n      t1 = 1,\n      dx = bx - ax,\n      dy = by - ay,\n      r;\n\n  r = x0 - ax;\n  if (!dx && r > 0) return;\n  r /= dx;\n  if (dx < 0) {\n    if (r < t0) return;\n    if (r < t1) t1 = r;\n  } else if (dx > 0) {\n    if (r > t1) return;\n    if (r > t0) t0 = r;\n  }\n\n  r = x1 - ax;\n  if (!dx && r < 0) return;\n  r /= dx;\n  if (dx < 0) {\n    if (r > t1) return;\n    if (r > t0) t0 = r;\n  } else if (dx > 0) {\n    if (r < t0) return;\n    if (r < t1) t1 = r;\n  }\n\n  r = y0 - ay;\n  if (!dy && r > 0) return;\n  r /= dy;\n  if (dy < 0) {\n    if (r < t0) return;\n    if (r < t1) t1 = r;\n  } else if (dy > 0) {\n    if (r > t1) return;\n    if (r > t0) t0 = r;\n  }\n\n  r = y1 - ay;\n  if (!dy && r < 0) return;\n  r /= dy;\n  if (dy < 0) {\n    if (r > t1) return;\n    if (r > t0) t0 = r;\n  } else if (dy > 0) {\n    if (r < t0) return;\n    if (r < t1) t1 = r;\n  }\n\n  if (t0 > 0) a[0] = ax + t0 * dx, a[1] = ay + t0 * dy;\n  if (t1 < 1) b[0] = ax + t1 * dx, b[1] = ay + t1 * dy;\n  return true;\n};\n\nvar clipMax = 1e9;\nvar clipMin = -clipMax;\n\n// TODO Use d3-polygon’s polygonContains here for the ring check?\n// TODO Eliminate duplicate buffering in clipBuffer and polygon.push?\n\nfunction clipRectangle(x0, y0, x1, y1) {\n\n  function visible(x, y) {\n    return x0 <= x && x <= x1 && y0 <= y && y <= y1;\n  }\n\n  function interpolate(from, to, direction, stream) {\n    var a = 0, a1 = 0;\n    if (from == null\n        || (a = corner(from, direction)) !== (a1 = corner(to, direction))\n        || comparePoint(from, to) < 0 ^ direction > 0) {\n      do stream.point(a === 0 || a === 3 ? x0 : x1, a > 1 ? y1 : y0);\n      while ((a = (a + direction + 4) % 4) !== a1);\n    } else {\n      stream.point(to[0], to[1]);\n    }\n  }\n\n  function corner(p, direction) {\n    return abs(p[0] - x0) < epsilon$2 ? direction > 0 ? 0 : 3\n        : abs(p[0] - x1) < epsilon$2 ? direction > 0 ? 2 : 1\n        : abs(p[1] - y0) < epsilon$2 ? direction > 0 ? 1 : 0\n        : direction > 0 ? 3 : 2; // abs(p[1] - y1) < epsilon\n  }\n\n  function compareIntersection(a, b) {\n    return comparePoint(a.x, b.x);\n  }\n\n  function comparePoint(a, b) {\n    var ca = corner(a, 1),\n        cb = corner(b, 1);\n    return ca !== cb ? ca - cb\n        : ca === 0 ? b[1] - a[1]\n        : ca === 1 ? a[0] - b[0]\n        : ca === 2 ? a[1] - b[1]\n        : b[0] - a[0];\n  }\n\n  return function(stream) {\n    var activeStream = stream,\n        bufferStream = clipBuffer(),\n        segments,\n        polygon,\n        ring,\n        x__, y__, v__, // first point\n        x_, y_, v_, // previous point\n        first,\n        clean;\n\n    var clipStream = {\n      point: point,\n      lineStart: lineStart,\n      lineEnd: lineEnd,\n      polygonStart: polygonStart,\n      polygonEnd: polygonEnd\n    };\n\n    function point(x, y) {\n      if (visible(x, y)) activeStream.point(x, y);\n    }\n\n    function polygonInside() {\n      var winding = 0;\n\n      for (var i = 0, n = polygon.length; i < n; ++i) {\n        for (var ring = polygon[i], j = 1, m = ring.length, point = ring[0], a0, a1, b0 = point[0], b1 = point[1]; j < m; ++j) {\n          a0 = b0, a1 = b1, point = ring[j], b0 = point[0], b1 = point[1];\n          if (a1 <= y1) { if (b1 > y1 && (b0 - a0) * (y1 - a1) > (b1 - a1) * (x0 - a0)) ++winding; }\n          else { if (b1 <= y1 && (b0 - a0) * (y1 - a1) < (b1 - a1) * (x0 - a0)) --winding; }\n        }\n      }\n\n      return winding;\n    }\n\n    // Buffer geometry within a polygon and then clip it en masse.\n    function polygonStart() {\n      activeStream = bufferStream, segments = [], polygon = [], clean = true;\n    }\n\n    function polygonEnd() {\n      var startInside = polygonInside(),\n          cleanInside = clean && startInside,\n          visible = (segments = merge(segments)).length;\n      if (cleanInside || visible) {\n        stream.polygonStart();\n        if (cleanInside) {\n          stream.lineStart();\n          interpolate(null, null, 1, stream);\n          stream.lineEnd();\n        }\n        if (visible) {\n          clipRejoin(segments, compareIntersection, startInside, interpolate, stream);\n        }\n        stream.polygonEnd();\n      }\n      activeStream = stream, segments = polygon = ring = null;\n    }\n\n    function lineStart() {\n      clipStream.point = linePoint;\n      if (polygon) polygon.push(ring = []);\n      first = true;\n      v_ = false;\n      x_ = y_ = NaN;\n    }\n\n    // TODO rather than special-case polygons, simply handle them separately.\n    // Ideally, coincident intersection points should be jittered to avoid\n    // clipping issues.\n    function lineEnd() {\n      if (segments) {\n        linePoint(x__, y__);\n        if (v__ && v_) bufferStream.rejoin();\n        segments.push(bufferStream.result());\n      }\n      clipStream.point = point;\n      if (v_) activeStream.lineEnd();\n    }\n\n    function linePoint(x, y) {\n      var v = visible(x, y);\n      if (polygon) ring.push([x, y]);\n      if (first) {\n        x__ = x, y__ = y, v__ = v;\n        first = false;\n        if (v) {\n          activeStream.lineStart();\n          activeStream.point(x, y);\n        }\n      } else {\n        if (v && v_) activeStream.point(x, y);\n        else {\n          var a = [x_ = Math.max(clipMin, Math.min(clipMax, x_)), y_ = Math.max(clipMin, Math.min(clipMax, y_))],\n              b = [x = Math.max(clipMin, Math.min(clipMax, x)), y = Math.max(clipMin, Math.min(clipMax, y))];\n          if (clipLine(a, b, x0, y0, x1, y1)) {\n            if (!v_) {\n              activeStream.lineStart();\n              activeStream.point(a[0], a[1]);\n            }\n            activeStream.point(b[0], b[1]);\n            if (!v) activeStream.lineEnd();\n            clean = false;\n          } else if (v) {\n            activeStream.lineStart();\n            activeStream.point(x, y);\n            clean = false;\n          }\n        }\n      }\n      x_ = x, y_ = y, v_ = v;\n    }\n\n    return clipStream;\n  };\n}\n\nvar extent$1 = function() {\n  var x0 = 0,\n      y0 = 0,\n      x1 = 960,\n      y1 = 500,\n      cache,\n      cacheStream,\n      clip;\n\n  return clip = {\n    stream: function(stream) {\n      return cache && cacheStream === stream ? cache : cache = clipRectangle(x0, y0, x1, y1)(cacheStream = stream);\n    },\n    extent: function(_) {\n      return arguments.length ? (x0 = +_[0][0], y0 = +_[0][1], x1 = +_[1][0], y1 = +_[1][1], cache = cacheStream = null, clip) : [[x0, y0], [x1, y1]];\n    }\n  };\n};\n\nvar lengthSum = adder();\nvar lambda0$2;\nvar sinPhi0$1;\nvar cosPhi0$1;\n\nvar lengthStream = {\n  sphere: noop$1,\n  point: noop$1,\n  lineStart: lengthLineStart,\n  lineEnd: noop$1,\n  polygonStart: noop$1,\n  polygonEnd: noop$1\n};\n\nfunction lengthLineStart() {\n  lengthStream.point = lengthPointFirst;\n  lengthStream.lineEnd = lengthLineEnd;\n}\n\nfunction lengthLineEnd() {\n  lengthStream.point = lengthStream.lineEnd = noop$1;\n}\n\nfunction lengthPointFirst(lambda, phi) {\n  lambda *= radians, phi *= radians;\n  lambda0$2 = lambda, sinPhi0$1 = sin$1(phi), cosPhi0$1 = cos$1(phi);\n  lengthStream.point = lengthPoint;\n}\n\nfunction lengthPoint(lambda, phi) {\n  lambda *= radians, phi *= radians;\n  var sinPhi = sin$1(phi),\n      cosPhi = cos$1(phi),\n      delta = abs(lambda - lambda0$2),\n      cosDelta = cos$1(delta),\n      sinDelta = sin$1(delta),\n      x = cosPhi * sinDelta,\n      y = cosPhi0$1 * sinPhi - sinPhi0$1 * cosPhi * cosDelta,\n      z = sinPhi0$1 * sinPhi + cosPhi0$1 * cosPhi * cosDelta;\n  lengthSum.add(atan2(sqrt(x * x + y * y), z));\n  lambda0$2 = lambda, sinPhi0$1 = sinPhi, cosPhi0$1 = cosPhi;\n}\n\nvar length$1 = function(object) {\n  lengthSum.reset();\n  geoStream(object, lengthStream);\n  return +lengthSum;\n};\n\nvar coordinates = [null, null];\nvar object$1 = {type: \"LineString\", coordinates: coordinates};\n\nvar distance = function(a, b) {\n  coordinates[0] = a;\n  coordinates[1] = b;\n  return length$1(object$1);\n};\n\nvar containsObjectType = {\n  Feature: function(object, point) {\n    return containsGeometry(object.geometry, point);\n  },\n  FeatureCollection: function(object, point) {\n    var features = object.features, i = -1, n = features.length;\n    while (++i < n) if (containsGeometry(features[i].geometry, point)) return true;\n    return false;\n  }\n};\n\nvar containsGeometryType = {\n  Sphere: function() {\n    return true;\n  },\n  Point: function(object, point) {\n    return containsPoint(object.coordinates, point);\n  },\n  MultiPoint: function(object, point) {\n    var coordinates = object.coordinates, i = -1, n = coordinates.length;\n    while (++i < n) if (containsPoint(coordinates[i], point)) return true;\n    return false;\n  },\n  LineString: function(object, point) {\n    return containsLine(object.coordinates, point);\n  },\n  MultiLineString: function(object, point) {\n    var coordinates = object.coordinates, i = -1, n = coordinates.length;\n    while (++i < n) if (containsLine(coordinates[i], point)) return true;\n    return false;\n  },\n  Polygon: function(object, point) {\n    return containsPolygon(object.coordinates, point);\n  },\n  MultiPolygon: function(object, point) {\n    var coordinates = object.coordinates, i = -1, n = coordinates.length;\n    while (++i < n) if (containsPolygon(coordinates[i], point)) return true;\n    return false;\n  },\n  GeometryCollection: function(object, point) {\n    var geometries = object.geometries, i = -1, n = geometries.length;\n    while (++i < n) if (containsGeometry(geometries[i], point)) return true;\n    return false;\n  }\n};\n\nfunction containsGeometry(geometry, point) {\n  return geometry && containsGeometryType.hasOwnProperty(geometry.type)\n      ? containsGeometryType[geometry.type](geometry, point)\n      : false;\n}\n\nfunction containsPoint(coordinates, point) {\n  return distance(coordinates, point) === 0;\n}\n\nfunction containsLine(coordinates, point) {\n  var ab = distance(coordinates[0], coordinates[1]),\n      ao = distance(coordinates[0], point),\n      ob = distance(point, coordinates[1]);\n  return ao + ob <= ab + epsilon$2;\n}\n\nfunction containsPolygon(coordinates, point) {\n  return !!polygonContains(coordinates.map(ringRadians), pointRadians(point));\n}\n\nfunction ringRadians(ring) {\n  return ring = ring.map(pointRadians), ring.pop(), ring;\n}\n\nfunction pointRadians(point) {\n  return [point[0] * radians, point[1] * radians];\n}\n\nvar contains = function(object, point) {\n  return (object && containsObjectType.hasOwnProperty(object.type)\n      ? containsObjectType[object.type]\n      : containsGeometry)(object, point);\n};\n\nfunction graticuleX(y0, y1, dy) {\n  var y = sequence(y0, y1 - epsilon$2, dy).concat(y1);\n  return function(x) { return y.map(function(y) { return [x, y]; }); };\n}\n\nfunction graticuleY(x0, x1, dx) {\n  var x = sequence(x0, x1 - epsilon$2, dx).concat(x1);\n  return function(y) { return x.map(function(x) { return [x, y]; }); };\n}\n\nfunction graticule() {\n  var x1, x0, X1, X0,\n      y1, y0, Y1, Y0,\n      dx = 10, dy = dx, DX = 90, DY = 360,\n      x, y, X, Y,\n      precision = 2.5;\n\n  function graticule() {\n    return {type: \"MultiLineString\", coordinates: lines()};\n  }\n\n  function lines() {\n    return sequence(ceil(X0 / DX) * DX, X1, DX).map(X)\n        .concat(sequence(ceil(Y0 / DY) * DY, Y1, DY).map(Y))\n        .concat(sequence(ceil(x0 / dx) * dx, x1, dx).filter(function(x) { return abs(x % DX) > epsilon$2; }).map(x))\n        .concat(sequence(ceil(y0 / dy) * dy, y1, dy).filter(function(y) { return abs(y % DY) > epsilon$2; }).map(y));\n  }\n\n  graticule.lines = function() {\n    return lines().map(function(coordinates) { return {type: \"LineString\", coordinates: coordinates}; });\n  };\n\n  graticule.outline = function() {\n    return {\n      type: \"Polygon\",\n      coordinates: [\n        X(X0).concat(\n        Y(Y1).slice(1),\n        X(X1).reverse().slice(1),\n        Y(Y0).reverse().slice(1))\n      ]\n    };\n  };\n\n  graticule.extent = function(_) {\n    if (!arguments.length) return graticule.extentMinor();\n    return graticule.extentMajor(_).extentMinor(_);\n  };\n\n  graticule.extentMajor = function(_) {\n    if (!arguments.length) return [[X0, Y0], [X1, Y1]];\n    X0 = +_[0][0], X1 = +_[1][0];\n    Y0 = +_[0][1], Y1 = +_[1][1];\n    if (X0 > X1) _ = X0, X0 = X1, X1 = _;\n    if (Y0 > Y1) _ = Y0, Y0 = Y1, Y1 = _;\n    return graticule.precision(precision);\n  };\n\n  graticule.extentMinor = function(_) {\n    if (!arguments.length) return [[x0, y0], [x1, y1]];\n    x0 = +_[0][0], x1 = +_[1][0];\n    y0 = +_[0][1], y1 = +_[1][1];\n    if (x0 > x1) _ = x0, x0 = x1, x1 = _;\n    if (y0 > y1) _ = y0, y0 = y1, y1 = _;\n    return graticule.precision(precision);\n  };\n\n  graticule.step = function(_) {\n    if (!arguments.length) return graticule.stepMinor();\n    return graticule.stepMajor(_).stepMinor(_);\n  };\n\n  graticule.stepMajor = function(_) {\n    if (!arguments.length) return [DX, DY];\n    DX = +_[0], DY = +_[1];\n    return graticule;\n  };\n\n  graticule.stepMinor = function(_) {\n    if (!arguments.length) return [dx, dy];\n    dx = +_[0], dy = +_[1];\n    return graticule;\n  };\n\n  graticule.precision = function(_) {\n    if (!arguments.length) return precision;\n    precision = +_;\n    x = graticuleX(y0, y1, 90);\n    y = graticuleY(x0, x1, precision);\n    X = graticuleX(Y0, Y1, 90);\n    Y = graticuleY(X0, X1, precision);\n    return graticule;\n  };\n\n  return graticule\n      .extentMajor([[-180, -90 + epsilon$2], [180, 90 - epsilon$2]])\n      .extentMinor([[-180, -80 - epsilon$2], [180, 80 + epsilon$2]]);\n}\n\nfunction graticule10() {\n  return graticule()();\n}\n\nvar interpolate$1 = function(a, b) {\n  var x0 = a[0] * radians,\n      y0 = a[1] * radians,\n      x1 = b[0] * radians,\n      y1 = b[1] * radians,\n      cy0 = cos$1(y0),\n      sy0 = sin$1(y0),\n      cy1 = cos$1(y1),\n      sy1 = sin$1(y1),\n      kx0 = cy0 * cos$1(x0),\n      ky0 = cy0 * sin$1(x0),\n      kx1 = cy1 * cos$1(x1),\n      ky1 = cy1 * sin$1(x1),\n      d = 2 * asin(sqrt(haversin(y1 - y0) + cy0 * cy1 * haversin(x1 - x0))),\n      k = sin$1(d);\n\n  var interpolate = d ? function(t) {\n    var B = sin$1(t *= d) / k,\n        A = sin$1(d - t) / k,\n        x = A * kx0 + B * kx1,\n        y = A * ky0 + B * ky1,\n        z = A * sy0 + B * sy1;\n    return [\n      atan2(y, x) * degrees$1,\n      atan2(z, sqrt(x * x + y * y)) * degrees$1\n    ];\n  } : function() {\n    return [x0 * degrees$1, y0 * degrees$1];\n  };\n\n  interpolate.distance = d;\n\n  return interpolate;\n};\n\nvar identity$4 = function(x) {\n  return x;\n};\n\nvar areaSum$1 = adder();\nvar areaRingSum$1 = adder();\nvar x00;\nvar y00;\nvar x0$1;\nvar y0$1;\n\nvar areaStream$1 = {\n  point: noop$1,\n  lineStart: noop$1,\n  lineEnd: noop$1,\n  polygonStart: function() {\n    areaStream$1.lineStart = areaRingStart$1;\n    areaStream$1.lineEnd = areaRingEnd$1;\n  },\n  polygonEnd: function() {\n    areaStream$1.lineStart = areaStream$1.lineEnd = areaStream$1.point = noop$1;\n    areaSum$1.add(abs(areaRingSum$1));\n    areaRingSum$1.reset();\n  },\n  result: function() {\n    var area = areaSum$1 / 2;\n    areaSum$1.reset();\n    return area;\n  }\n};\n\nfunction areaRingStart$1() {\n  areaStream$1.point = areaPointFirst$1;\n}\n\nfunction areaPointFirst$1(x, y) {\n  areaStream$1.point = areaPoint$1;\n  x00 = x0$1 = x, y00 = y0$1 = y;\n}\n\nfunction areaPoint$1(x, y) {\n  areaRingSum$1.add(y0$1 * x - x0$1 * y);\n  x0$1 = x, y0$1 = y;\n}\n\nfunction areaRingEnd$1() {\n  areaPoint$1(x00, y00);\n}\n\nvar x0$2 = Infinity;\nvar y0$2 = x0$2;\nvar x1 = -x0$2;\nvar y1 = x1;\n\nvar boundsStream$1 = {\n  point: boundsPoint$1,\n  lineStart: noop$1,\n  lineEnd: noop$1,\n  polygonStart: noop$1,\n  polygonEnd: noop$1,\n  result: function() {\n    var bounds = [[x0$2, y0$2], [x1, y1]];\n    x1 = y1 = -(y0$2 = x0$2 = Infinity);\n    return bounds;\n  }\n};\n\nfunction boundsPoint$1(x, y) {\n  if (x < x0$2) x0$2 = x;\n  if (x > x1) x1 = x;\n  if (y < y0$2) y0$2 = y;\n  if (y > y1) y1 = y;\n}\n\n// TODO Enforce positive area for exterior, negative area for interior?\n\nvar X0$1 = 0;\nvar Y0$1 = 0;\nvar Z0$1 = 0;\nvar X1$1 = 0;\nvar Y1$1 = 0;\nvar Z1$1 = 0;\nvar X2$1 = 0;\nvar Y2$1 = 0;\nvar Z2$1 = 0;\nvar x00$1;\nvar y00$1;\nvar x0$3;\nvar y0$3;\n\nvar centroidStream$1 = {\n  point: centroidPoint$1,\n  lineStart: centroidLineStart$1,\n  lineEnd: centroidLineEnd$1,\n  polygonStart: function() {\n    centroidStream$1.lineStart = centroidRingStart$1;\n    centroidStream$1.lineEnd = centroidRingEnd$1;\n  },\n  polygonEnd: function() {\n    centroidStream$1.point = centroidPoint$1;\n    centroidStream$1.lineStart = centroidLineStart$1;\n    centroidStream$1.lineEnd = centroidLineEnd$1;\n  },\n  result: function() {\n    var centroid = Z2$1 ? [X2$1 / Z2$1, Y2$1 / Z2$1]\n        : Z1$1 ? [X1$1 / Z1$1, Y1$1 / Z1$1]\n        : Z0$1 ? [X0$1 / Z0$1, Y0$1 / Z0$1]\n        : [NaN, NaN];\n    X0$1 = Y0$1 = Z0$1 =\n    X1$1 = Y1$1 = Z1$1 =\n    X2$1 = Y2$1 = Z2$1 = 0;\n    return centroid;\n  }\n};\n\nfunction centroidPoint$1(x, y) {\n  X0$1 += x;\n  Y0$1 += y;\n  ++Z0$1;\n}\n\nfunction centroidLineStart$1() {\n  centroidStream$1.point = centroidPointFirstLine;\n}\n\nfunction centroidPointFirstLine(x, y) {\n  centroidStream$1.point = centroidPointLine;\n  centroidPoint$1(x0$3 = x, y0$3 = y);\n}\n\nfunction centroidPointLine(x, y) {\n  var dx = x - x0$3, dy = y - y0$3, z = sqrt(dx * dx + dy * dy);\n  X1$1 += z * (x0$3 + x) / 2;\n  Y1$1 += z * (y0$3 + y) / 2;\n  Z1$1 += z;\n  centroidPoint$1(x0$3 = x, y0$3 = y);\n}\n\nfunction centroidLineEnd$1() {\n  centroidStream$1.point = centroidPoint$1;\n}\n\nfunction centroidRingStart$1() {\n  centroidStream$1.point = centroidPointFirstRing;\n}\n\nfunction centroidRingEnd$1() {\n  centroidPointRing(x00$1, y00$1);\n}\n\nfunction centroidPointFirstRing(x, y) {\n  centroidStream$1.point = centroidPointRing;\n  centroidPoint$1(x00$1 = x0$3 = x, y00$1 = y0$3 = y);\n}\n\nfunction centroidPointRing(x, y) {\n  var dx = x - x0$3,\n      dy = y - y0$3,\n      z = sqrt(dx * dx + dy * dy);\n\n  X1$1 += z * (x0$3 + x) / 2;\n  Y1$1 += z * (y0$3 + y) / 2;\n  Z1$1 += z;\n\n  z = y0$3 * x - x0$3 * y;\n  X2$1 += z * (x0$3 + x);\n  Y2$1 += z * (y0$3 + y);\n  Z2$1 += z * 3;\n  centroidPoint$1(x0$3 = x, y0$3 = y);\n}\n\nfunction PathContext(context) {\n  this._context = context;\n}\n\nPathContext.prototype = {\n  _radius: 4.5,\n  pointRadius: function(_) {\n    return this._radius = _, this;\n  },\n  polygonStart: function() {\n    this._line = 0;\n  },\n  polygonEnd: function() {\n    this._line = NaN;\n  },\n  lineStart: function() {\n    this._point = 0;\n  },\n  lineEnd: function() {\n    if (this._line === 0) this._context.closePath();\n    this._point = NaN;\n  },\n  point: function(x, y) {\n    switch (this._point) {\n      case 0: {\n        this._context.moveTo(x, y);\n        this._point = 1;\n        break;\n      }\n      case 1: {\n        this._context.lineTo(x, y);\n        break;\n      }\n      default: {\n        this._context.moveTo(x + this._radius, y);\n        this._context.arc(x, y, this._radius, 0, tau$3);\n        break;\n      }\n    }\n  },\n  result: noop$1\n};\n\nvar lengthSum$1 = adder();\nvar lengthRing;\nvar x00$2;\nvar y00$2;\nvar x0$4;\nvar y0$4;\n\nvar lengthStream$1 = {\n  point: noop$1,\n  lineStart: function() {\n    lengthStream$1.point = lengthPointFirst$1;\n  },\n  lineEnd: function() {\n    if (lengthRing) lengthPoint$1(x00$2, y00$2);\n    lengthStream$1.point = noop$1;\n  },\n  polygonStart: function() {\n    lengthRing = true;\n  },\n  polygonEnd: function() {\n    lengthRing = null;\n  },\n  result: function() {\n    var length = +lengthSum$1;\n    lengthSum$1.reset();\n    return length;\n  }\n};\n\nfunction lengthPointFirst$1(x, y) {\n  lengthStream$1.point = lengthPoint$1;\n  x00$2 = x0$4 = x, y00$2 = y0$4 = y;\n}\n\nfunction lengthPoint$1(x, y) {\n  x0$4 -= x, y0$4 -= y;\n  lengthSum$1.add(sqrt(x0$4 * x0$4 + y0$4 * y0$4));\n  x0$4 = x, y0$4 = y;\n}\n\nfunction PathString() {\n  this._string = [];\n}\n\nPathString.prototype = {\n  _radius: 4.5,\n  _circle: circle$1(4.5),\n  pointRadius: function(_) {\n    if ((_ = +_) !== this._radius) this._radius = _, this._circle = null;\n    return this;\n  },\n  polygonStart: function() {\n    this._line = 0;\n  },\n  polygonEnd: function() {\n    this._line = NaN;\n  },\n  lineStart: function() {\n    this._point = 0;\n  },\n  lineEnd: function() {\n    if (this._line === 0) this._string.push(\"Z\");\n    this._point = NaN;\n  },\n  point: function(x, y) {\n    switch (this._point) {\n      case 0: {\n        this._string.push(\"M\", x, \",\", y);\n        this._point = 1;\n        break;\n      }\n      case 1: {\n        this._string.push(\"L\", x, \",\", y);\n        break;\n      }\n      default: {\n        if (this._circle == null) this._circle = circle$1(this._radius);\n        this._string.push(\"M\", x, \",\", y, this._circle);\n        break;\n      }\n    }\n  },\n  result: function() {\n    if (this._string.length) {\n      var result = this._string.join(\"\");\n      this._string = [];\n      return result;\n    } else {\n      return null;\n    }\n  }\n};\n\nfunction circle$1(radius) {\n  return \"m0,\" + radius\n      + \"a\" + radius + \",\" + radius + \" 0 1,1 0,\" + -2 * radius\n      + \"a\" + radius + \",\" + radius + \" 0 1,1 0,\" + 2 * radius\n      + \"z\";\n}\n\nvar index$1 = function(projection, context) {\n  var pointRadius = 4.5,\n      projectionStream,\n      contextStream;\n\n  function path(object) {\n    if (object) {\n      if (typeof pointRadius === \"function\") contextStream.pointRadius(+pointRadius.apply(this, arguments));\n      geoStream(object, projectionStream(contextStream));\n    }\n    return contextStream.result();\n  }\n\n  path.area = function(object) {\n    geoStream(object, projectionStream(areaStream$1));\n    return areaStream$1.result();\n  };\n\n  path.measure = function(object) {\n    geoStream(object, projectionStream(lengthStream$1));\n    return lengthStream$1.result();\n  };\n\n  path.bounds = function(object) {\n    geoStream(object, projectionStream(boundsStream$1));\n    return boundsStream$1.result();\n  };\n\n  path.centroid = function(object) {\n    geoStream(object, projectionStream(centroidStream$1));\n    return centroidStream$1.result();\n  };\n\n  path.projection = function(_) {\n    return arguments.length ? (projectionStream = _ == null ? (projection = null, identity$4) : (projection = _).stream, path) : projection;\n  };\n\n  path.context = function(_) {\n    if (!arguments.length) return context;\n    contextStream = _ == null ? (context = null, new PathString) : new PathContext(context = _);\n    if (typeof pointRadius !== \"function\") contextStream.pointRadius(pointRadius);\n    return path;\n  };\n\n  path.pointRadius = function(_) {\n    if (!arguments.length) return pointRadius;\n    pointRadius = typeof _ === \"function\" ? _ : (contextStream.pointRadius(+_), +_);\n    return path;\n  };\n\n  return path.projection(projection).context(context);\n};\n\nvar transform = function(methods) {\n  return {\n    stream: transformer(methods)\n  };\n};\n\nfunction transformer(methods) {\n  return function(stream) {\n    var s = new TransformStream;\n    for (var key in methods) s[key] = methods[key];\n    s.stream = stream;\n    return s;\n  };\n}\n\nfunction TransformStream() {}\n\nTransformStream.prototype = {\n  constructor: TransformStream,\n  point: function(x, y) { this.stream.point(x, y); },\n  sphere: function() { this.stream.sphere(); },\n  lineStart: function() { this.stream.lineStart(); },\n  lineEnd: function() { this.stream.lineEnd(); },\n  polygonStart: function() { this.stream.polygonStart(); },\n  polygonEnd: function() { this.stream.polygonEnd(); }\n};\n\nfunction fitExtent(projection, extent, object) {\n  var w = extent[1][0] - extent[0][0],\n      h = extent[1][1] - extent[0][1],\n      clip = projection.clipExtent && projection.clipExtent();\n\n  projection\n      .scale(150)\n      .translate([0, 0]);\n\n  if (clip != null) projection.clipExtent(null);\n\n  geoStream(object, projection.stream(boundsStream$1));\n\n  var b = boundsStream$1.result(),\n      k = Math.min(w / (b[1][0] - b[0][0]), h / (b[1][1] - b[0][1])),\n      x = +extent[0][0] + (w - k * (b[1][0] + b[0][0])) / 2,\n      y = +extent[0][1] + (h - k * (b[1][1] + b[0][1])) / 2;\n\n  if (clip != null) projection.clipExtent(clip);\n\n  return projection\n      .scale(k * 150)\n      .translate([x, y]);\n}\n\nfunction fitSize(projection, size, object) {\n  return fitExtent(projection, [[0, 0], size], object);\n}\n\nvar maxDepth = 16;\nvar cosMinDistance = cos$1(30 * radians); // cos(minimum angular distance)\n\nvar resample = function(project, delta2) {\n  return +delta2 ? resample$1(project, delta2) : resampleNone(project);\n};\n\nfunction resampleNone(project) {\n  return transformer({\n    point: function(x, y) {\n      x = project(x, y);\n      this.stream.point(x[0], x[1]);\n    }\n  });\n}\n\nfunction resample$1(project, delta2) {\n\n  function resampleLineTo(x0, y0, lambda0, a0, b0, c0, x1, y1, lambda1, a1, b1, c1, depth, stream) {\n    var dx = x1 - x0,\n        dy = y1 - y0,\n        d2 = dx * dx + dy * dy;\n    if (d2 > 4 * delta2 && depth--) {\n      var a = a0 + a1,\n          b = b0 + b1,\n          c = c0 + c1,\n          m = sqrt(a * a + b * b + c * c),\n          phi2 = asin(c /= m),\n          lambda2 = abs(abs(c) - 1) < epsilon$2 || abs(lambda0 - lambda1) < epsilon$2 ? (lambda0 + lambda1) / 2 : atan2(b, a),\n          p = project(lambda2, phi2),\n          x2 = p[0],\n          y2 = p[1],\n          dx2 = x2 - x0,\n          dy2 = y2 - y0,\n          dz = dy * dx2 - dx * dy2;\n      if (dz * dz / d2 > delta2 // perpendicular projected distance\n          || abs((dx * dx2 + dy * dy2) / d2 - 0.5) > 0.3 // midpoint close to an end\n          || a0 * a1 + b0 * b1 + c0 * c1 < cosMinDistance) { // angular distance\n        resampleLineTo(x0, y0, lambda0, a0, b0, c0, x2, y2, lambda2, a /= m, b /= m, c, depth, stream);\n        stream.point(x2, y2);\n        resampleLineTo(x2, y2, lambda2, a, b, c, x1, y1, lambda1, a1, b1, c1, depth, stream);\n      }\n    }\n  }\n  return function(stream) {\n    var lambda00, x00, y00, a00, b00, c00, // first point\n        lambda0, x0, y0, a0, b0, c0; // previous point\n\n    var resampleStream = {\n      point: point,\n      lineStart: lineStart,\n      lineEnd: lineEnd,\n      polygonStart: function() { stream.polygonStart(); resampleStream.lineStart = ringStart; },\n      polygonEnd: function() { stream.polygonEnd(); resampleStream.lineStart = lineStart; }\n    };\n\n    function point(x, y) {\n      x = project(x, y);\n      stream.point(x[0], x[1]);\n    }\n\n    function lineStart() {\n      x0 = NaN;\n      resampleStream.point = linePoint;\n      stream.lineStart();\n    }\n\n    function linePoint(lambda, phi) {\n      var c = cartesian([lambda, phi]), p = project(lambda, phi);\n      resampleLineTo(x0, y0, lambda0, a0, b0, c0, x0 = p[0], y0 = p[1], lambda0 = lambda, a0 = c[0], b0 = c[1], c0 = c[2], maxDepth, stream);\n      stream.point(x0, y0);\n    }\n\n    function lineEnd() {\n      resampleStream.point = point;\n      stream.lineEnd();\n    }\n\n    function ringStart() {\n      lineStart();\n      resampleStream.point = ringPoint;\n      resampleStream.lineEnd = ringEnd;\n    }\n\n    function ringPoint(lambda, phi) {\n      linePoint(lambda00 = lambda, phi), x00 = x0, y00 = y0, a00 = a0, b00 = b0, c00 = c0;\n      resampleStream.point = linePoint;\n    }\n\n    function ringEnd() {\n      resampleLineTo(x0, y0, lambda0, a0, b0, c0, x00, y00, lambda00, a00, b00, c00, maxDepth, stream);\n      resampleStream.lineEnd = lineEnd;\n      lineEnd();\n    }\n\n    return resampleStream;\n  };\n}\n\nvar transformRadians = transformer({\n  point: function(x, y) {\n    this.stream.point(x * radians, y * radians);\n  }\n});\n\nfunction transformRotate(rotate) {\n  return transformer({\n    point: function(x, y) {\n      var r = rotate(x, y);\n      return this.stream.point(r[0], r[1]);\n    }\n  });\n}\n\nfunction projection(project) {\n  return projectionMutator(function() { return project; })();\n}\n\nfunction projectionMutator(projectAt) {\n  var project,\n      k = 150, // scale\n      x = 480, y = 250, // translate\n      dx, dy, lambda = 0, phi = 0, // center\n      deltaLambda = 0, deltaPhi = 0, deltaGamma = 0, rotate, projectRotate, // rotate\n      theta = null, preclip = clipAntimeridian, // clip angle\n      x0 = null, y0, x1, y1, postclip = identity$4, // clip extent\n      delta2 = 0.5, projectResample = resample(projectTransform, delta2), // precision\n      cache,\n      cacheStream;\n\n  function projection(point) {\n    point = projectRotate(point[0] * radians, point[1] * radians);\n    return [point[0] * k + dx, dy - point[1] * k];\n  }\n\n  function invert(point) {\n    point = projectRotate.invert((point[0] - dx) / k, (dy - point[1]) / k);\n    return point && [point[0] * degrees$1, point[1] * degrees$1];\n  }\n\n  function projectTransform(x, y) {\n    return x = project(x, y), [x[0] * k + dx, dy - x[1] * k];\n  }\n\n  projection.stream = function(stream) {\n    return cache && cacheStream === stream ? cache : cache = transformRadians(transformRotate(rotate)(preclip(projectResample(postclip(cacheStream = stream)))));\n  };\n\n  projection.preclip = function(_) {\n    return arguments.length ? (preclip = _, theta = undefined, reset()) : preclip;\n  };\n\n  projection.postclip = function(_) {\n    return arguments.length ? (postclip = _, x0 = y0 = x1 = y1 = null, reset()) : postclip;\n  };\n\n  projection.clipAngle = function(_) {\n    return arguments.length ? (preclip = +_ ? clipCircle(theta = _ * radians) : (theta = null, clipAntimeridian), reset()) : theta * degrees$1;\n  };\n\n  projection.clipExtent = function(_) {\n    return arguments.length ? (postclip = _ == null ? (x0 = y0 = x1 = y1 = null, identity$4) : clipRectangle(x0 = +_[0][0], y0 = +_[0][1], x1 = +_[1][0], y1 = +_[1][1]), reset()) : x0 == null ? null : [[x0, y0], [x1, y1]];\n  };\n\n  projection.scale = function(_) {\n    return arguments.length ? (k = +_, recenter()) : k;\n  };\n\n  projection.translate = function(_) {\n    return arguments.length ? (x = +_[0], y = +_[1], recenter()) : [x, y];\n  };\n\n  projection.center = function(_) {\n    return arguments.length ? (lambda = _[0] % 360 * radians, phi = _[1] % 360 * radians, recenter()) : [lambda * degrees$1, phi * degrees$1];\n  };\n\n  projection.rotate = function(_) {\n    return arguments.length ? (deltaLambda = _[0] % 360 * radians, deltaPhi = _[1] % 360 * radians, deltaGamma = _.length > 2 ? _[2] % 360 * radians : 0, recenter()) : [deltaLambda * degrees$1, deltaPhi * degrees$1, deltaGamma * degrees$1];\n  };\n\n  projection.precision = function(_) {\n    return arguments.length ? (projectResample = resample(projectTransform, delta2 = _ * _), reset()) : sqrt(delta2);\n  };\n\n  projection.fitExtent = function(extent, object) {\n    return fitExtent(projection, extent, object);\n  };\n\n  projection.fitSize = function(size, object) {\n    return fitSize(projection, size, object);\n  };\n\n  function recenter() {\n    projectRotate = compose(rotate = rotateRadians(deltaLambda, deltaPhi, deltaGamma), project);\n    var center = project(lambda, phi);\n    dx = x - center[0] * k;\n    dy = y + center[1] * k;\n    return reset();\n  }\n\n  function reset() {\n    cache = cacheStream = null;\n    return projection;\n  }\n\n  return function() {\n    project = projectAt.apply(this, arguments);\n    projection.invert = project.invert && invert;\n    return recenter();\n  };\n}\n\nfunction conicProjection(projectAt) {\n  var phi0 = 0,\n      phi1 = pi$3 / 3,\n      m = projectionMutator(projectAt),\n      p = m(phi0, phi1);\n\n  p.parallels = function(_) {\n    return arguments.length ? m(phi0 = _[0] * radians, phi1 = _[1] * radians) : [phi0 * degrees$1, phi1 * degrees$1];\n  };\n\n  return p;\n}\n\nfunction cylindricalEqualAreaRaw(phi0) {\n  var cosPhi0 = cos$1(phi0);\n\n  function forward(lambda, phi) {\n    return [lambda * cosPhi0, sin$1(phi) / cosPhi0];\n  }\n\n  forward.invert = function(x, y) {\n    return [x / cosPhi0, asin(y * cosPhi0)];\n  };\n\n  return forward;\n}\n\nfunction conicEqualAreaRaw(y0, y1) {\n  var sy0 = sin$1(y0), n = (sy0 + sin$1(y1)) / 2;\n\n  // Are the parallels symmetrical around the Equator?\n  if (abs(n) < epsilon$2) return cylindricalEqualAreaRaw(y0);\n\n  var c = 1 + sy0 * (2 * n - sy0), r0 = sqrt(c) / n;\n\n  function project(x, y) {\n    var r = sqrt(c - 2 * n * sin$1(y)) / n;\n    return [r * sin$1(x *= n), r0 - r * cos$1(x)];\n  }\n\n  project.invert = function(x, y) {\n    var r0y = r0 - y;\n    return [atan2(x, abs(r0y)) / n * sign(r0y), asin((c - (x * x + r0y * r0y) * n * n) / (2 * n))];\n  };\n\n  return project;\n}\n\nvar conicEqualArea = function() {\n  return conicProjection(conicEqualAreaRaw)\n      .scale(155.424)\n      .center([0, 33.6442]);\n};\n\nvar albers = function() {\n  return conicEqualArea()\n      .parallels([29.5, 45.5])\n      .scale(1070)\n      .translate([480, 250])\n      .rotate([96, 0])\n      .center([-0.6, 38.7]);\n};\n\n// The projections must have mutually exclusive clip regions on the sphere,\n// as this will avoid emitting interleaving lines and polygons.\nfunction multiplex(streams) {\n  var n = streams.length;\n  return {\n    point: function(x, y) { var i = -1; while (++i < n) streams[i].point(x, y); },\n    sphere: function() { var i = -1; while (++i < n) streams[i].sphere(); },\n    lineStart: function() { var i = -1; while (++i < n) streams[i].lineStart(); },\n    lineEnd: function() { var i = -1; while (++i < n) streams[i].lineEnd(); },\n    polygonStart: function() { var i = -1; while (++i < n) streams[i].polygonStart(); },\n    polygonEnd: function() { var i = -1; while (++i < n) streams[i].polygonEnd(); }\n  };\n}\n\n// A composite projection for the United States, configured by default for\n// 960×500. The projection also works quite well at 960×600 if you change the\n// scale to 1285 and adjust the translate accordingly. The set of standard\n// parallels for each region comes from USGS, which is published here:\n// http://egsc.usgs.gov/isb/pubs/MapProjections/projections.html#albers\nvar albersUsa = function() {\n  var cache,\n      cacheStream,\n      lower48 = albers(), lower48Point,\n      alaska = conicEqualArea().rotate([154, 0]).center([-2, 58.5]).parallels([55, 65]), alaskaPoint, // EPSG:3338\n      hawaii = conicEqualArea().rotate([157, 0]).center([-3, 19.9]).parallels([8, 18]), hawaiiPoint, // ESRI:102007\n      point, pointStream = {point: function(x, y) { point = [x, y]; }};\n\n  function albersUsa(coordinates) {\n    var x = coordinates[0], y = coordinates[1];\n    return point = null,\n        (lower48Point.point(x, y), point)\n        || (alaskaPoint.point(x, y), point)\n        || (hawaiiPoint.point(x, y), point);\n  }\n\n  albersUsa.invert = function(coordinates) {\n    var k = lower48.scale(),\n        t = lower48.translate(),\n        x = (coordinates[0] - t[0]) / k,\n        y = (coordinates[1] - t[1]) / k;\n    return (y >= 0.120 && y < 0.234 && x >= -0.425 && x < -0.214 ? alaska\n        : y >= 0.166 && y < 0.234 && x >= -0.214 && x < -0.115 ? hawaii\n        : lower48).invert(coordinates);\n  };\n\n  albersUsa.stream = function(stream) {\n    return cache && cacheStream === stream ? cache : cache = multiplex([lower48.stream(cacheStream = stream), alaska.stream(stream), hawaii.stream(stream)]);\n  };\n\n  albersUsa.precision = function(_) {\n    if (!arguments.length) return lower48.precision();\n    lower48.precision(_), alaska.precision(_), hawaii.precision(_);\n    return reset();\n  };\n\n  albersUsa.scale = function(_) {\n    if (!arguments.length) return lower48.scale();\n    lower48.scale(_), alaska.scale(_ * 0.35), hawaii.scale(_);\n    return albersUsa.translate(lower48.translate());\n  };\n\n  albersUsa.translate = function(_) {\n    if (!arguments.length) return lower48.translate();\n    var k = lower48.scale(), x = +_[0], y = +_[1];\n\n    lower48Point = lower48\n        .translate(_)\n        .clipExtent([[x - 0.455 * k, y - 0.238 * k], [x + 0.455 * k, y + 0.238 * k]])\n        .stream(pointStream);\n\n    alaskaPoint = alaska\n        .translate([x - 0.307 * k, y + 0.201 * k])\n        .clipExtent([[x - 0.425 * k + epsilon$2, y + 0.120 * k + epsilon$2], [x - 0.214 * k - epsilon$2, y + 0.234 * k - epsilon$2]])\n        .stream(pointStream);\n\n    hawaiiPoint = hawaii\n        .translate([x - 0.205 * k, y + 0.212 * k])\n        .clipExtent([[x - 0.214 * k + epsilon$2, y + 0.166 * k + epsilon$2], [x - 0.115 * k - epsilon$2, y + 0.234 * k - epsilon$2]])\n        .stream(pointStream);\n\n    return reset();\n  };\n\n  albersUsa.fitExtent = function(extent, object) {\n    return fitExtent(albersUsa, extent, object);\n  };\n\n  albersUsa.fitSize = function(size, object) {\n    return fitSize(albersUsa, size, object);\n  };\n\n  function reset() {\n    cache = cacheStream = null;\n    return albersUsa;\n  }\n\n  return albersUsa.scale(1070);\n};\n\nfunction azimuthalRaw(scale) {\n  return function(x, y) {\n    var cx = cos$1(x),\n        cy = cos$1(y),\n        k = scale(cx * cy);\n    return [\n      k * cy * sin$1(x),\n      k * sin$1(y)\n    ];\n  }\n}\n\nfunction azimuthalInvert(angle) {\n  return function(x, y) {\n    var z = sqrt(x * x + y * y),\n        c = angle(z),\n        sc = sin$1(c),\n        cc = cos$1(c);\n    return [\n      atan2(x * sc, z * cc),\n      asin(z && y * sc / z)\n    ];\n  }\n}\n\nvar azimuthalEqualAreaRaw = azimuthalRaw(function(cxcy) {\n  return sqrt(2 / (1 + cxcy));\n});\n\nazimuthalEqualAreaRaw.invert = azimuthalInvert(function(z) {\n  return 2 * asin(z / 2);\n});\n\nvar azimuthalEqualArea = function() {\n  return projection(azimuthalEqualAreaRaw)\n      .scale(124.75)\n      .clipAngle(180 - 1e-3);\n};\n\nvar azimuthalEquidistantRaw = azimuthalRaw(function(c) {\n  return (c = acos(c)) && c / sin$1(c);\n});\n\nazimuthalEquidistantRaw.invert = azimuthalInvert(function(z) {\n  return z;\n});\n\nvar azimuthalEquidistant = function() {\n  return projection(azimuthalEquidistantRaw)\n      .scale(79.4188)\n      .clipAngle(180 - 1e-3);\n};\n\nfunction mercatorRaw(lambda, phi) {\n  return [lambda, log(tan((halfPi$2 + phi) / 2))];\n}\n\nmercatorRaw.invert = function(x, y) {\n  return [x, 2 * atan(exp(y)) - halfPi$2];\n};\n\nvar mercator = function() {\n  return mercatorProjection(mercatorRaw)\n      .scale(961 / tau$3);\n};\n\nfunction mercatorProjection(project) {\n  var m = projection(project),\n      center = m.center,\n      scale = m.scale,\n      translate = m.translate,\n      clipExtent = m.clipExtent,\n      x0 = null, y0, x1, y1; // clip extent\n\n  m.scale = function(_) {\n    return arguments.length ? (scale(_), reclip()) : scale();\n  };\n\n  m.translate = function(_) {\n    return arguments.length ? (translate(_), reclip()) : translate();\n  };\n\n  m.center = function(_) {\n    return arguments.length ? (center(_), reclip()) : center();\n  };\n\n  m.clipExtent = function(_) {\n    return arguments.length ? ((_ == null ? x0 = y0 = x1 = y1 = null : (x0 = +_[0][0], y0 = +_[0][1], x1 = +_[1][0], y1 = +_[1][1])), reclip()) : x0 == null ? null : [[x0, y0], [x1, y1]];\n  };\n\n  function reclip() {\n    var k = pi$3 * scale(),\n        t = m(rotation(m.rotate()).invert([0, 0]));\n    return clipExtent(x0 == null\n        ? [[t[0] - k, t[1] - k], [t[0] + k, t[1] + k]] : project === mercatorRaw\n        ? [[Math.max(t[0] - k, x0), y0], [Math.min(t[0] + k, x1), y1]]\n        : [[x0, Math.max(t[1] - k, y0)], [x1, Math.min(t[1] + k, y1)]]);\n  }\n\n  return reclip();\n}\n\nfunction tany(y) {\n  return tan((halfPi$2 + y) / 2);\n}\n\nfunction conicConformalRaw(y0, y1) {\n  var cy0 = cos$1(y0),\n      n = y0 === y1 ? sin$1(y0) : log(cy0 / cos$1(y1)) / log(tany(y1) / tany(y0)),\n      f = cy0 * pow(tany(y0), n) / n;\n\n  if (!n) return mercatorRaw;\n\n  function project(x, y) {\n    if (f > 0) { if (y < -halfPi$2 + epsilon$2) y = -halfPi$2 + epsilon$2; }\n    else { if (y > halfPi$2 - epsilon$2) y = halfPi$2 - epsilon$2; }\n    var r = f / pow(tany(y), n);\n    return [r * sin$1(n * x), f - r * cos$1(n * x)];\n  }\n\n  project.invert = function(x, y) {\n    var fy = f - y, r = sign(n) * sqrt(x * x + fy * fy);\n    return [atan2(x, abs(fy)) / n * sign(fy), 2 * atan(pow(f / r, 1 / n)) - halfPi$2];\n  };\n\n  return project;\n}\n\nvar conicConformal = function() {\n  return conicProjection(conicConformalRaw)\n      .scale(109.5)\n      .parallels([30, 30]);\n};\n\nfunction equirectangularRaw(lambda, phi) {\n  return [lambda, phi];\n}\n\nequirectangularRaw.invert = equirectangularRaw;\n\nvar equirectangular = function() {\n  return projection(equirectangularRaw)\n      .scale(152.63);\n};\n\nfunction conicEquidistantRaw(y0, y1) {\n  var cy0 = cos$1(y0),\n      n = y0 === y1 ? sin$1(y0) : (cy0 - cos$1(y1)) / (y1 - y0),\n      g = cy0 / n + y0;\n\n  if (abs(n) < epsilon$2) return equirectangularRaw;\n\n  function project(x, y) {\n    var gy = g - y, nx = n * x;\n    return [gy * sin$1(nx), g - gy * cos$1(nx)];\n  }\n\n  project.invert = function(x, y) {\n    var gy = g - y;\n    return [atan2(x, abs(gy)) / n * sign(gy), g - sign(n) * sqrt(x * x + gy * gy)];\n  };\n\n  return project;\n}\n\nvar conicEquidistant = function() {\n  return conicProjection(conicEquidistantRaw)\n      .scale(131.154)\n      .center([0, 13.9389]);\n};\n\nfunction gnomonicRaw(x, y) {\n  var cy = cos$1(y), k = cos$1(x) * cy;\n  return [cy * sin$1(x) / k, sin$1(y) / k];\n}\n\ngnomonicRaw.invert = azimuthalInvert(atan);\n\nvar gnomonic = function() {\n  return projection(gnomonicRaw)\n      .scale(144.049)\n      .clipAngle(60);\n};\n\nfunction scaleTranslate(kx, ky, tx, ty) {\n  return kx === 1 && ky === 1 && tx === 0 && ty === 0 ? identity$4 : transformer({\n    point: function(x, y) {\n      this.stream.point(x * kx + tx, y * ky + ty);\n    }\n  });\n}\n\nvar identity$5 = function() {\n  var k = 1, tx = 0, ty = 0, sx = 1, sy = 1, transform$$1 = identity$4, // scale, translate and reflect\n      x0 = null, y0, x1, y1, // clip extent\n      postclip = identity$4,\n      cache,\n      cacheStream,\n      projection;\n\n  function reset() {\n    cache = cacheStream = null;\n    return projection;\n  }\n\n  return projection = {\n    stream: function(stream) {\n      return cache && cacheStream === stream ? cache : cache = transform$$1(postclip(cacheStream = stream));\n    },\n    postclip: function(_) {\n      return arguments.length ? (postclip = _, x0 = y0 = x1 = y1 = null, reset()) : postclip;\n    },\n    clipExtent: function(_) {\n      return arguments.length ? (postclip = _ == null ? (x0 = y0 = x1 = y1 = null, identity$4) : clipRectangle(x0 = +_[0][0], y0 = +_[0][1], x1 = +_[1][0], y1 = +_[1][1]), reset()) : x0 == null ? null : [[x0, y0], [x1, y1]];\n    },\n    scale: function(_) {\n      return arguments.length ? (transform$$1 = scaleTranslate((k = +_) * sx, k * sy, tx, ty), reset()) : k;\n    },\n    translate: function(_) {\n      return arguments.length ? (transform$$1 = scaleTranslate(k * sx, k * sy, tx = +_[0], ty = +_[1]), reset()) : [tx, ty];\n    },\n    reflectX: function(_) {\n      return arguments.length ? (transform$$1 = scaleTranslate(k * (sx = _ ? -1 : 1), k * sy, tx, ty), reset()) : sx < 0;\n    },\n    reflectY: function(_) {\n      return arguments.length ? (transform$$1 = scaleTranslate(k * sx, k * (sy = _ ? -1 : 1), tx, ty), reset()) : sy < 0;\n    },\n    fitExtent: function(extent, object) {\n      return fitExtent(projection, extent, object);\n    },\n    fitSize: function(size, object) {\n      return fitSize(projection, size, object);\n    }\n  };\n};\n\nfunction naturalEarth1Raw(lambda, phi) {\n  var phi2 = phi * phi, phi4 = phi2 * phi2;\n  return [\n    lambda * (0.8707 - 0.131979 * phi2 + phi4 * (-0.013791 + phi4 * (0.003971 * phi2 - 0.001529 * phi4))),\n    phi * (1.007226 + phi2 * (0.015085 + phi4 * (-0.044475 + 0.028874 * phi2 - 0.005916 * phi4)))\n  ];\n}\n\nnaturalEarth1Raw.invert = function(x, y) {\n  var phi = y, i = 25, delta;\n  do {\n    var phi2 = phi * phi, phi4 = phi2 * phi2;\n    phi -= delta = (phi * (1.007226 + phi2 * (0.015085 + phi4 * (-0.044475 + 0.028874 * phi2 - 0.005916 * phi4))) - y) /\n        (1.007226 + phi2 * (0.015085 * 3 + phi4 * (-0.044475 * 7 + 0.028874 * 9 * phi2 - 0.005916 * 11 * phi4)));\n  } while (abs(delta) > epsilon$2 && --i > 0);\n  return [\n    x / (0.8707 + (phi2 = phi * phi) * (-0.131979 + phi2 * (-0.013791 + phi2 * phi2 * phi2 * (0.003971 - 0.001529 * phi2)))),\n    phi\n  ];\n};\n\nvar naturalEarth1 = function() {\n  return projection(naturalEarth1Raw)\n      .scale(175.295);\n};\n\nfunction orthographicRaw(x, y) {\n  return [cos$1(y) * sin$1(x), sin$1(y)];\n}\n\northographicRaw.invert = azimuthalInvert(asin);\n\nvar orthographic = function() {\n  return projection(orthographicRaw)\n      .scale(249.5)\n      .clipAngle(90 + epsilon$2);\n};\n\nfunction stereographicRaw(x, y) {\n  var cy = cos$1(y), k = 1 + cos$1(x) * cy;\n  return [cy * sin$1(x) / k, sin$1(y) / k];\n}\n\nstereographicRaw.invert = azimuthalInvert(function(z) {\n  return 2 * atan(z);\n});\n\nvar stereographic = function() {\n  return projection(stereographicRaw)\n      .scale(250)\n      .clipAngle(142);\n};\n\nfunction transverseMercatorRaw(lambda, phi) {\n  return [log(tan((halfPi$2 + phi) / 2)), -lambda];\n}\n\ntransverseMercatorRaw.invert = function(x, y) {\n  return [-y, 2 * atan(exp(x)) - halfPi$2];\n};\n\nvar transverseMercator = function() {\n  var m = mercatorProjection(transverseMercatorRaw),\n      center = m.center,\n      rotate = m.rotate;\n\n  m.center = function(_) {\n    return arguments.length ? center([-_[1], _[0]]) : (_ = center(), [_[1], -_[0]]);\n  };\n\n  m.rotate = function(_) {\n    return arguments.length ? rotate([_[0], _[1], _.length > 2 ? _[2] + 90 : 90]) : (_ = rotate(), [_[0], _[1], _[2] - 90]);\n  };\n\n  return rotate([0, 0, 90])\n      .scale(159.155);\n};\n\nfunction defaultSeparation(a, b) {\n  return a.parent === b.parent ? 1 : 2;\n}\n\nfunction meanX(children) {\n  return children.reduce(meanXReduce, 0) / children.length;\n}\n\nfunction meanXReduce(x, c) {\n  return x + c.x;\n}\n\nfunction maxY(children) {\n  return 1 + children.reduce(maxYReduce, 0);\n}\n\nfunction maxYReduce(y, c) {\n  return Math.max(y, c.y);\n}\n\nfunction leafLeft(node) {\n  var children;\n  while (children = node.children) node = children[0];\n  return node;\n}\n\nfunction leafRight(node) {\n  var children;\n  while (children = node.children) node = children[children.length - 1];\n  return node;\n}\n\nvar cluster = function() {\n  var separation = defaultSeparation,\n      dx = 1,\n      dy = 1,\n      nodeSize = false;\n\n  function cluster(root) {\n    var previousNode,\n        x = 0;\n\n    // First walk, computing the initial x & y values.\n    root.eachAfter(function(node) {\n      var children = node.children;\n      if (children) {\n        node.x = meanX(children);\n        node.y = maxY(children);\n      } else {\n        node.x = previousNode ? x += separation(node, previousNode) : 0;\n        node.y = 0;\n        previousNode = node;\n      }\n    });\n\n    var left = leafLeft(root),\n        right = leafRight(root),\n        x0 = left.x - separation(left, right) / 2,\n        x1 = right.x + separation(right, left) / 2;\n\n    // Second walk, normalizing x & y to the desired size.\n    return root.eachAfter(nodeSize ? function(node) {\n      node.x = (node.x - root.x) * dx;\n      node.y = (root.y - node.y) * dy;\n    } : function(node) {\n      node.x = (node.x - x0) / (x1 - x0) * dx;\n      node.y = (1 - (root.y ? node.y / root.y : 1)) * dy;\n    });\n  }\n\n  cluster.separation = function(x) {\n    return arguments.length ? (separation = x, cluster) : separation;\n  };\n\n  cluster.size = function(x) {\n    return arguments.length ? (nodeSize = false, dx = +x[0], dy = +x[1], cluster) : (nodeSize ? null : [dx, dy]);\n  };\n\n  cluster.nodeSize = function(x) {\n    return arguments.length ? (nodeSize = true, dx = +x[0], dy = +x[1], cluster) : (nodeSize ? [dx, dy] : null);\n  };\n\n  return cluster;\n};\n\nfunction count(node) {\n  var sum = 0,\n      children = node.children,\n      i = children && children.length;\n  if (!i) sum = 1;\n  else while (--i >= 0) sum += children[i].value;\n  node.value = sum;\n}\n\nvar node_count = function() {\n  return this.eachAfter(count);\n};\n\nvar node_each = function(callback) {\n  var node = this, current, next = [node], children, i, n;\n  do {\n    current = next.reverse(), next = [];\n    while (node = current.pop()) {\n      callback(node), children = node.children;\n      if (children) for (i = 0, n = children.length; i < n; ++i) {\n        next.push(children[i]);\n      }\n    }\n  } while (next.length);\n  return this;\n};\n\nvar node_eachBefore = function(callback) {\n  var node = this, nodes = [node], children, i;\n  while (node = nodes.pop()) {\n    callback(node), children = node.children;\n    if (children) for (i = children.length - 1; i >= 0; --i) {\n      nodes.push(children[i]);\n    }\n  }\n  return this;\n};\n\nvar node_eachAfter = function(callback) {\n  var node = this, nodes = [node], next = [], children, i, n;\n  while (node = nodes.pop()) {\n    next.push(node), children = node.children;\n    if (children) for (i = 0, n = children.length; i < n; ++i) {\n      nodes.push(children[i]);\n    }\n  }\n  while (node = next.pop()) {\n    callback(node);\n  }\n  return this;\n};\n\nvar node_sum = function(value) {\n  return this.eachAfter(function(node) {\n    var sum = +value(node.data) || 0,\n        children = node.children,\n        i = children && children.length;\n    while (--i >= 0) sum += children[i].value;\n    node.value = sum;\n  });\n};\n\nvar node_sort = function(compare) {\n  return this.eachBefore(function(node) {\n    if (node.children) {\n      node.children.sort(compare);\n    }\n  });\n};\n\nvar node_path = function(end) {\n  var start = this,\n      ancestor = leastCommonAncestor(start, end),\n      nodes = [start];\n  while (start !== ancestor) {\n    start = start.parent;\n    nodes.push(start);\n  }\n  var k = nodes.length;\n  while (end !== ancestor) {\n    nodes.splice(k, 0, end);\n    end = end.parent;\n  }\n  return nodes;\n};\n\nfunction leastCommonAncestor(a, b) {\n  if (a === b) return a;\n  var aNodes = a.ancestors(),\n      bNodes = b.ancestors(),\n      c = null;\n  a = aNodes.pop();\n  b = bNodes.pop();\n  while (a === b) {\n    c = a;\n    a = aNodes.pop();\n    b = bNodes.pop();\n  }\n  return c;\n}\n\nvar node_ancestors = function() {\n  var node = this, nodes = [node];\n  while (node = node.parent) {\n    nodes.push(node);\n  }\n  return nodes;\n};\n\nvar node_descendants = function() {\n  var nodes = [];\n  this.each(function(node) {\n    nodes.push(node);\n  });\n  return nodes;\n};\n\nvar node_leaves = function() {\n  var leaves = [];\n  this.eachBefore(function(node) {\n    if (!node.children) {\n      leaves.push(node);\n    }\n  });\n  return leaves;\n};\n\nvar node_links = function() {\n  var root = this, links = [];\n  root.each(function(node) {\n    if (node !== root) { // Don’t include the root’s parent, if any.\n      links.push({source: node.parent, target: node});\n    }\n  });\n  return links;\n};\n\nfunction hierarchy(data, children) {\n  var root = new Node(data),\n      valued = +data.value && (root.value = data.value),\n      node,\n      nodes = [root],\n      child,\n      childs,\n      i,\n      n;\n\n  if (children == null) children = defaultChildren;\n\n  while (node = nodes.pop()) {\n    if (valued) node.value = +node.data.value;\n    if ((childs = children(node.data)) && (n = childs.length)) {\n      node.children = new Array(n);\n      for (i = n - 1; i >= 0; --i) {\n        nodes.push(child = node.children[i] = new Node(childs[i]));\n        child.parent = node;\n        child.depth = node.depth + 1;\n      }\n    }\n  }\n\n  return root.eachBefore(computeHeight);\n}\n\nfunction node_copy() {\n  return hierarchy(this).eachBefore(copyData);\n}\n\nfunction defaultChildren(d) {\n  return d.children;\n}\n\nfunction copyData(node) {\n  node.data = node.data.data;\n}\n\nfunction computeHeight(node) {\n  var height = 0;\n  do node.height = height;\n  while ((node = node.parent) && (node.height < ++height));\n}\n\nfunction Node(data) {\n  this.data = data;\n  this.depth =\n  this.height = 0;\n  this.parent = null;\n}\n\nNode.prototype = hierarchy.prototype = {\n  constructor: Node,\n  count: node_count,\n  each: node_each,\n  eachAfter: node_eachAfter,\n  eachBefore: node_eachBefore,\n  sum: node_sum,\n  sort: node_sort,\n  path: node_path,\n  ancestors: node_ancestors,\n  descendants: node_descendants,\n  leaves: node_leaves,\n  links: node_links,\n  copy: node_copy\n};\n\nvar slice$3 = Array.prototype.slice;\n\nfunction shuffle$1(array) {\n  var m = array.length,\n      t,\n      i;\n\n  while (m) {\n    i = Math.random() * m-- | 0;\n    t = array[m];\n    array[m] = array[i];\n    array[i] = t;\n  }\n\n  return array;\n}\n\nvar enclose = function(circles) {\n  var i = 0, n = (circles = shuffle$1(slice$3.call(circles))).length, B = [], p, e;\n\n  while (i < n) {\n    p = circles[i];\n    if (e && enclosesWeak(e, p)) ++i;\n    else e = encloseBasis(B = extendBasis(B, p)), i = 0;\n  }\n\n  return e;\n};\n\nfunction extendBasis(B, p) {\n  var i, j;\n\n  if (enclosesWeakAll(p, B)) return [p];\n\n  // If we get here then B must have at least one element.\n  for (i = 0; i < B.length; ++i) {\n    if (enclosesNot(p, B[i])\n        && enclosesWeakAll(encloseBasis2(B[i], p), B)) {\n      return [B[i], p];\n    }\n  }\n\n  // If we get here then B must have at least two elements.\n  for (i = 0; i < B.length - 1; ++i) {\n    for (j = i + 1; j < B.length; ++j) {\n      if (enclosesNot(encloseBasis2(B[i], B[j]), p)\n          && enclosesNot(encloseBasis2(B[i], p), B[j])\n          && enclosesNot(encloseBasis2(B[j], p), B[i])\n          && enclosesWeakAll(encloseBasis3(B[i], B[j], p), B)) {\n        return [B[i], B[j], p];\n      }\n    }\n  }\n\n  // If we get here then something is very wrong.\n  throw new Error;\n}\n\nfunction enclosesNot(a, b) {\n  var dr = a.r - b.r, dx = b.x - a.x, dy = b.y - a.y;\n  return dr < 0 || dr * dr < dx * dx + dy * dy;\n}\n\nfunction enclosesWeak(a, b) {\n  var dr = a.r - b.r + 1e-6, dx = b.x - a.x, dy = b.y - a.y;\n  return dr > 0 && dr * dr > dx * dx + dy * dy;\n}\n\nfunction enclosesWeakAll(a, B) {\n  for (var i = 0; i < B.length; ++i) {\n    if (!enclosesWeak(a, B[i])) {\n      return false;\n    }\n  }\n  return true;\n}\n\nfunction encloseBasis(B) {\n  switch (B.length) {\n    case 1: return encloseBasis1(B[0]);\n    case 2: return encloseBasis2(B[0], B[1]);\n    case 3: return encloseBasis3(B[0], B[1], B[2]);\n  }\n}\n\nfunction encloseBasis1(a) {\n  return {\n    x: a.x,\n    y: a.y,\n    r: a.r\n  };\n}\n\nfunction encloseBasis2(a, b) {\n  var x1 = a.x, y1 = a.y, r1 = a.r,\n      x2 = b.x, y2 = b.y, r2 = b.r,\n      x21 = x2 - x1, y21 = y2 - y1, r21 = r2 - r1,\n      l = Math.sqrt(x21 * x21 + y21 * y21);\n  return {\n    x: (x1 + x2 + x21 / l * r21) / 2,\n    y: (y1 + y2 + y21 / l * r21) / 2,\n    r: (l + r1 + r2) / 2\n  };\n}\n\nfunction encloseBasis3(a, b, c) {\n  var x1 = a.x, y1 = a.y, r1 = a.r,\n      x2 = b.x, y2 = b.y, r2 = b.r,\n      x3 = c.x, y3 = c.y, r3 = c.r,\n      a2 = x1 - x2,\n      a3 = x1 - x3,\n      b2 = y1 - y2,\n      b3 = y1 - y3,\n      c2 = r2 - r1,\n      c3 = r3 - r1,\n      d1 = x1 * x1 + y1 * y1 - r1 * r1,\n      d2 = d1 - x2 * x2 - y2 * y2 + r2 * r2,\n      d3 = d1 - x3 * x3 - y3 * y3 + r3 * r3,\n      ab = a3 * b2 - a2 * b3,\n      xa = (b2 * d3 - b3 * d2) / (ab * 2) - x1,\n      xb = (b3 * c2 - b2 * c3) / ab,\n      ya = (a3 * d2 - a2 * d3) / (ab * 2) - y1,\n      yb = (a2 * c3 - a3 * c2) / ab,\n      A = xb * xb + yb * yb - 1,\n      B = 2 * (r1 + xa * xb + ya * yb),\n      C = xa * xa + ya * ya - r1 * r1,\n      r = -(A ? (B + Math.sqrt(B * B - 4 * A * C)) / (2 * A) : C / B);\n  return {\n    x: x1 + xa + xb * r,\n    y: y1 + ya + yb * r,\n    r: r\n  };\n}\n\nfunction place(a, b, c) {\n  var ax = a.x,\n      ay = a.y,\n      da = b.r + c.r,\n      db = a.r + c.r,\n      dx = b.x - ax,\n      dy = b.y - ay,\n      dc = dx * dx + dy * dy;\n  if (dc) {\n    var x = 0.5 + ((db *= db) - (da *= da)) / (2 * dc),\n        y = Math.sqrt(Math.max(0, 2 * da * (db + dc) - (db -= dc) * db - da * da)) / (2 * dc);\n    c.x = ax + x * dx + y * dy;\n    c.y = ay + x * dy - y * dx;\n  } else {\n    c.x = ax + db;\n    c.y = ay;\n  }\n}\n\nfunction intersects(a, b) {\n  var dx = b.x - a.x,\n      dy = b.y - a.y,\n      dr = a.r + b.r;\n  return dr * dr - 1e-6 > dx * dx + dy * dy;\n}\n\nfunction score(node) {\n  var a = node._,\n      b = node.next._,\n      ab = a.r + b.r,\n      dx = (a.x * b.r + b.x * a.r) / ab,\n      dy = (a.y * b.r + b.y * a.r) / ab;\n  return dx * dx + dy * dy;\n}\n\nfunction Node$1(circle) {\n  this._ = circle;\n  this.next = null;\n  this.previous = null;\n}\n\nfunction packEnclose(circles) {\n  if (!(n = circles.length)) return 0;\n\n  var a, b, c, n, aa, ca, i, j, k, sj, sk;\n\n  // Place the first circle.\n  a = circles[0], a.x = 0, a.y = 0;\n  if (!(n > 1)) return a.r;\n\n  // Place the second circle.\n  b = circles[1], a.x = -b.r, b.x = a.r, b.y = 0;\n  if (!(n > 2)) return a.r + b.r;\n\n  // Place the third circle.\n  place(b, a, c = circles[2]);\n\n  // Initialize the front-chain using the first three circles a, b and c.\n  a = new Node$1(a), b = new Node$1(b), c = new Node$1(c);\n  a.next = c.previous = b;\n  b.next = a.previous = c;\n  c.next = b.previous = a;\n\n  // Attempt to place each remaining circle…\n  pack: for (i = 3; i < n; ++i) {\n    place(a._, b._, c = circles[i]), c = new Node$1(c);\n\n    // Find the closest intersecting circle on the front-chain, if any.\n    // “Closeness” is determined by linear distance along the front-chain.\n    // “Ahead” or “behind” is likewise determined by linear distance.\n    j = b.next, k = a.previous, sj = b._.r, sk = a._.r;\n    do {\n      if (sj <= sk) {\n        if (intersects(j._, c._)) {\n          b = j, a.next = b, b.previous = a, --i;\n          continue pack;\n        }\n        sj += j._.r, j = j.next;\n      } else {\n        if (intersects(k._, c._)) {\n          a = k, a.next = b, b.previous = a, --i;\n          continue pack;\n        }\n        sk += k._.r, k = k.previous;\n      }\n    } while (j !== k.next);\n\n    // Success! Insert the new circle c between a and b.\n    c.previous = a, c.next = b, a.next = b.previous = b = c;\n\n    // Compute the new closest circle pair to the centroid.\n    aa = score(a);\n    while ((c = c.next) !== b) {\n      if ((ca = score(c)) < aa) {\n        a = c, aa = ca;\n      }\n    }\n    b = a.next;\n  }\n\n  // Compute the enclosing circle of the front chain.\n  a = [b._], c = b; while ((c = c.next) !== b) a.push(c._); c = enclose(a);\n\n  // Translate the circles to put the enclosing circle around the origin.\n  for (i = 0; i < n; ++i) a = circles[i], a.x -= c.x, a.y -= c.y;\n\n  return c.r;\n}\n\nvar siblings = function(circles) {\n  packEnclose(circles);\n  return circles;\n};\n\nfunction optional(f) {\n  return f == null ? null : required(f);\n}\n\nfunction required(f) {\n  if (typeof f !== \"function\") throw new Error;\n  return f;\n}\n\nfunction constantZero() {\n  return 0;\n}\n\nvar constant$8 = function(x) {\n  return function() {\n    return x;\n  };\n};\n\nfunction defaultRadius$1(d) {\n  return Math.sqrt(d.value);\n}\n\nvar index$2 = function() {\n  var radius = null,\n      dx = 1,\n      dy = 1,\n      padding = constantZero;\n\n  function pack(root) {\n    root.x = dx / 2, root.y = dy / 2;\n    if (radius) {\n      root.eachBefore(radiusLeaf(radius))\n          .eachAfter(packChildren(padding, 0.5))\n          .eachBefore(translateChild(1));\n    } else {\n      root.eachBefore(radiusLeaf(defaultRadius$1))\n          .eachAfter(packChildren(constantZero, 1))\n          .eachAfter(packChildren(padding, root.r / Math.min(dx, dy)))\n          .eachBefore(translateChild(Math.min(dx, dy) / (2 * root.r)));\n    }\n    return root;\n  }\n\n  pack.radius = function(x) {\n    return arguments.length ? (radius = optional(x), pack) : radius;\n  };\n\n  pack.size = function(x) {\n    return arguments.length ? (dx = +x[0], dy = +x[1], pack) : [dx, dy];\n  };\n\n  pack.padding = function(x) {\n    return arguments.length ? (padding = typeof x === \"function\" ? x : constant$8(+x), pack) : padding;\n  };\n\n  return pack;\n};\n\nfunction radiusLeaf(radius) {\n  return function(node) {\n    if (!node.children) {\n      node.r = Math.max(0, +radius(node) || 0);\n    }\n  };\n}\n\nfunction packChildren(padding, k) {\n  return function(node) {\n    if (children = node.children) {\n      var children,\n          i,\n          n = children.length,\n          r = padding(node) * k || 0,\n          e;\n\n      if (r) for (i = 0; i < n; ++i) children[i].r += r;\n      e = packEnclose(children);\n      if (r) for (i = 0; i < n; ++i) children[i].r -= r;\n      node.r = e + r;\n    }\n  };\n}\n\nfunction translateChild(k) {\n  return function(node) {\n    var parent = node.parent;\n    node.r *= k;\n    if (parent) {\n      node.x = parent.x + k * node.x;\n      node.y = parent.y + k * node.y;\n    }\n  };\n}\n\nvar roundNode = function(node) {\n  node.x0 = Math.round(node.x0);\n  node.y0 = Math.round(node.y0);\n  node.x1 = Math.round(node.x1);\n  node.y1 = Math.round(node.y1);\n};\n\nvar treemapDice = function(parent, x0, y0, x1, y1) {\n  var nodes = parent.children,\n      node,\n      i = -1,\n      n = nodes.length,\n      k = parent.value && (x1 - x0) / parent.value;\n\n  while (++i < n) {\n    node = nodes[i], node.y0 = y0, node.y1 = y1;\n    node.x0 = x0, node.x1 = x0 += node.value * k;\n  }\n};\n\nvar partition = function() {\n  var dx = 1,\n      dy = 1,\n      padding = 0,\n      round = false;\n\n  function partition(root) {\n    var n = root.height + 1;\n    root.x0 =\n    root.y0 = padding;\n    root.x1 = dx;\n    root.y1 = dy / n;\n    root.eachBefore(positionNode(dy, n));\n    if (round) root.eachBefore(roundNode);\n    return root;\n  }\n\n  function positionNode(dy, n) {\n    return function(node) {\n      if (node.children) {\n        treemapDice(node, node.x0, dy * (node.depth + 1) / n, node.x1, dy * (node.depth + 2) / n);\n      }\n      var x0 = node.x0,\n          y0 = node.y0,\n          x1 = node.x1 - padding,\n          y1 = node.y1 - padding;\n      if (x1 < x0) x0 = x1 = (x0 + x1) / 2;\n      if (y1 < y0) y0 = y1 = (y0 + y1) / 2;\n      node.x0 = x0;\n      node.y0 = y0;\n      node.x1 = x1;\n      node.y1 = y1;\n    };\n  }\n\n  partition.round = function(x) {\n    return arguments.length ? (round = !!x, partition) : round;\n  };\n\n  partition.size = function(x) {\n    return arguments.length ? (dx = +x[0], dy = +x[1], partition) : [dx, dy];\n  };\n\n  partition.padding = function(x) {\n    return arguments.length ? (padding = +x, partition) : padding;\n  };\n\n  return partition;\n};\n\nvar keyPrefix$1 = \"$\";\nvar preroot = {depth: -1};\nvar ambiguous = {};\n\nfunction defaultId(d) {\n  return d.id;\n}\n\nfunction defaultParentId(d) {\n  return d.parentId;\n}\n\nvar stratify = function() {\n  var id = defaultId,\n      parentId = defaultParentId;\n\n  function stratify(data) {\n    var d,\n        i,\n        n = data.length,\n        root,\n        parent,\n        node,\n        nodes = new Array(n),\n        nodeId,\n        nodeKey,\n        nodeByKey = {};\n\n    for (i = 0; i < n; ++i) {\n      d = data[i], node = nodes[i] = new Node(d);\n      if ((nodeId = id(d, i, data)) != null && (nodeId += \"\")) {\n        nodeKey = keyPrefix$1 + (node.id = nodeId);\n        nodeByKey[nodeKey] = nodeKey in nodeByKey ? ambiguous : node;\n      }\n    }\n\n    for (i = 0; i < n; ++i) {\n      node = nodes[i], nodeId = parentId(data[i], i, data);\n      if (nodeId == null || !(nodeId += \"\")) {\n        if (root) throw new Error(\"multiple roots\");\n        root = node;\n      } else {\n        parent = nodeByKey[keyPrefix$1 + nodeId];\n        if (!parent) throw new Error(\"missing: \" + nodeId);\n        if (parent === ambiguous) throw new Error(\"ambiguous: \" + nodeId);\n        if (parent.children) parent.children.push(node);\n        else parent.children = [node];\n        node.parent = parent;\n      }\n    }\n\n    if (!root) throw new Error(\"no root\");\n    root.parent = preroot;\n    root.eachBefore(function(node) { node.depth = node.parent.depth + 1; --n; }).eachBefore(computeHeight);\n    root.parent = null;\n    if (n > 0) throw new Error(\"cycle\");\n\n    return root;\n  }\n\n  stratify.id = function(x) {\n    return arguments.length ? (id = required(x), stratify) : id;\n  };\n\n  stratify.parentId = function(x) {\n    return arguments.length ? (parentId = required(x), stratify) : parentId;\n  };\n\n  return stratify;\n};\n\nfunction defaultSeparation$1(a, b) {\n  return a.parent === b.parent ? 1 : 2;\n}\n\n// function radialSeparation(a, b) {\n//   return (a.parent === b.parent ? 1 : 2) / a.depth;\n// }\n\n// This function is used to traverse the left contour of a subtree (or\n// subforest). It returns the successor of v on this contour. This successor is\n// either given by the leftmost child of v or by the thread of v. The function\n// returns null if and only if v is on the highest level of its subtree.\nfunction nextLeft(v) {\n  var children = v.children;\n  return children ? children[0] : v.t;\n}\n\n// This function works analogously to nextLeft.\nfunction nextRight(v) {\n  var children = v.children;\n  return children ? children[children.length - 1] : v.t;\n}\n\n// Shifts the current subtree rooted at w+. This is done by increasing\n// prelim(w+) and mod(w+) by shift.\nfunction moveSubtree(wm, wp, shift) {\n  var change = shift / (wp.i - wm.i);\n  wp.c -= change;\n  wp.s += shift;\n  wm.c += change;\n  wp.z += shift;\n  wp.m += shift;\n}\n\n// All other shifts, applied to the smaller subtrees between w- and w+, are\n// performed by this function. To prepare the shifts, we have to adjust\n// change(w+), shift(w+), and change(w-).\nfunction executeShifts(v) {\n  var shift = 0,\n      change = 0,\n      children = v.children,\n      i = children.length,\n      w;\n  while (--i >= 0) {\n    w = children[i];\n    w.z += shift;\n    w.m += shift;\n    shift += w.s + (change += w.c);\n  }\n}\n\n// If vi-’s ancestor is a sibling of v, returns vi-’s ancestor. Otherwise,\n// returns the specified (default) ancestor.\nfunction nextAncestor(vim, v, ancestor) {\n  return vim.a.parent === v.parent ? vim.a : ancestor;\n}\n\nfunction TreeNode(node, i) {\n  this._ = node;\n  this.parent = null;\n  this.children = null;\n  this.A = null; // default ancestor\n  this.a = this; // ancestor\n  this.z = 0; // prelim\n  this.m = 0; // mod\n  this.c = 0; // change\n  this.s = 0; // shift\n  this.t = null; // thread\n  this.i = i; // number\n}\n\nTreeNode.prototype = Object.create(Node.prototype);\n\nfunction treeRoot(root) {\n  var tree = new TreeNode(root, 0),\n      node,\n      nodes = [tree],\n      child,\n      children,\n      i,\n      n;\n\n  while (node = nodes.pop()) {\n    if (children = node._.children) {\n      node.children = new Array(n = children.length);\n      for (i = n - 1; i >= 0; --i) {\n        nodes.push(child = node.children[i] = new TreeNode(children[i], i));\n        child.parent = node;\n      }\n    }\n  }\n\n  (tree.parent = new TreeNode(null, 0)).children = [tree];\n  return tree;\n}\n\n// Node-link tree diagram using the Reingold-Tilford \"tidy\" algorithm\nvar tree = function() {\n  var separation = defaultSeparation$1,\n      dx = 1,\n      dy = 1,\n      nodeSize = null;\n\n  function tree(root) {\n    var t = treeRoot(root);\n\n    // Compute the layout using Buchheim et al.’s algorithm.\n    t.eachAfter(firstWalk), t.parent.m = -t.z;\n    t.eachBefore(secondWalk);\n\n    // If a fixed node size is specified, scale x and y.\n    if (nodeSize) root.eachBefore(sizeNode);\n\n    // If a fixed tree size is specified, scale x and y based on the extent.\n    // Compute the left-most, right-most, and depth-most nodes for extents.\n    else {\n      var left = root,\n          right = root,\n          bottom = root;\n      root.eachBefore(function(node) {\n        if (node.x < left.x) left = node;\n        if (node.x > right.x) right = node;\n        if (node.depth > bottom.depth) bottom = node;\n      });\n      var s = left === right ? 1 : separation(left, right) / 2,\n          tx = s - left.x,\n          kx = dx / (right.x + s + tx),\n          ky = dy / (bottom.depth || 1);\n      root.eachBefore(function(node) {\n        node.x = (node.x + tx) * kx;\n        node.y = node.depth * ky;\n      });\n    }\n\n    return root;\n  }\n\n  // Computes a preliminary x-coordinate for v. Before that, FIRST WALK is\n  // applied recursively to the children of v, as well as the function\n  // APPORTION. After spacing out the children by calling EXECUTE SHIFTS, the\n  // node v is placed to the midpoint of its outermost children.\n  function firstWalk(v) {\n    var children = v.children,\n        siblings = v.parent.children,\n        w = v.i ? siblings[v.i - 1] : null;\n    if (children) {\n      executeShifts(v);\n      var midpoint = (children[0].z + children[children.length - 1].z) / 2;\n      if (w) {\n        v.z = w.z + separation(v._, w._);\n        v.m = v.z - midpoint;\n      } else {\n        v.z = midpoint;\n      }\n    } else if (w) {\n      v.z = w.z + separation(v._, w._);\n    }\n    v.parent.A = apportion(v, w, v.parent.A || siblings[0]);\n  }\n\n  // Computes all real x-coordinates by summing up the modifiers recursively.\n  function secondWalk(v) {\n    v._.x = v.z + v.parent.m;\n    v.m += v.parent.m;\n  }\n\n  // The core of the algorithm. Here, a new subtree is combined with the\n  // previous subtrees. Threads are used to traverse the inside and outside\n  // contours of the left and right subtree up to the highest common level. The\n  // vertices used for the traversals are vi+, vi-, vo-, and vo+, where the\n  // superscript o means outside and i means inside, the subscript - means left\n  // subtree and + means right subtree. For summing up the modifiers along the\n  // contour, we use respective variables si+, si-, so-, and so+. Whenever two\n  // nodes of the inside contours conflict, we compute the left one of the\n  // greatest uncommon ancestors using the function ANCESTOR and call MOVE\n  // SUBTREE to shift the subtree and prepare the shifts of smaller subtrees.\n  // Finally, we add a new thread (if necessary).\n  function apportion(v, w, ancestor) {\n    if (w) {\n      var vip = v,\n          vop = v,\n          vim = w,\n          vom = vip.parent.children[0],\n          sip = vip.m,\n          sop = vop.m,\n          sim = vim.m,\n          som = vom.m,\n          shift;\n      while (vim = nextRight(vim), vip = nextLeft(vip), vim && vip) {\n        vom = nextLeft(vom);\n        vop = nextRight(vop);\n        vop.a = v;\n        shift = vim.z + sim - vip.z - sip + separation(vim._, vip._);\n        if (shift > 0) {\n          moveSubtree(nextAncestor(vim, v, ancestor), v, shift);\n          sip += shift;\n          sop += shift;\n        }\n        sim += vim.m;\n        sip += vip.m;\n        som += vom.m;\n        sop += vop.m;\n      }\n      if (vim && !nextRight(vop)) {\n        vop.t = vim;\n        vop.m += sim - sop;\n      }\n      if (vip && !nextLeft(vom)) {\n        vom.t = vip;\n        vom.m += sip - som;\n        ancestor = v;\n      }\n    }\n    return ancestor;\n  }\n\n  function sizeNode(node) {\n    node.x *= dx;\n    node.y = node.depth * dy;\n  }\n\n  tree.separation = function(x) {\n    return arguments.length ? (separation = x, tree) : separation;\n  };\n\n  tree.size = function(x) {\n    return arguments.length ? (nodeSize = false, dx = +x[0], dy = +x[1], tree) : (nodeSize ? null : [dx, dy]);\n  };\n\n  tree.nodeSize = function(x) {\n    return arguments.length ? (nodeSize = true, dx = +x[0], dy = +x[1], tree) : (nodeSize ? [dx, dy] : null);\n  };\n\n  return tree;\n};\n\nvar treemapSlice = function(parent, x0, y0, x1, y1) {\n  var nodes = parent.children,\n      node,\n      i = -1,\n      n = nodes.length,\n      k = parent.value && (y1 - y0) / parent.value;\n\n  while (++i < n) {\n    node = nodes[i], node.x0 = x0, node.x1 = x1;\n    node.y0 = y0, node.y1 = y0 += node.value * k;\n  }\n};\n\nvar phi = (1 + Math.sqrt(5)) / 2;\n\nfunction squarifyRatio(ratio, parent, x0, y0, x1, y1) {\n  var rows = [],\n      nodes = parent.children,\n      row,\n      nodeValue,\n      i0 = 0,\n      i1 = 0,\n      n = nodes.length,\n      dx, dy,\n      value = parent.value,\n      sumValue,\n      minValue,\n      maxValue,\n      newRatio,\n      minRatio,\n      alpha,\n      beta;\n\n  while (i0 < n) {\n    dx = x1 - x0, dy = y1 - y0;\n\n    // Find the next non-empty node.\n    do sumValue = nodes[i1++].value; while (!sumValue && i1 < n);\n    minValue = maxValue = sumValue;\n    alpha = Math.max(dy / dx, dx / dy) / (value * ratio);\n    beta = sumValue * sumValue * alpha;\n    minRatio = Math.max(maxValue / beta, beta / minValue);\n\n    // Keep adding nodes while the aspect ratio maintains or improves.\n    for (; i1 < n; ++i1) {\n      sumValue += nodeValue = nodes[i1].value;\n      if (nodeValue < minValue) minValue = nodeValue;\n      if (nodeValue > maxValue) maxValue = nodeValue;\n      beta = sumValue * sumValue * alpha;\n      newRatio = Math.max(maxValue / beta, beta / minValue);\n      if (newRatio > minRatio) { sumValue -= nodeValue; break; }\n      minRatio = newRatio;\n    }\n\n    // Position and record the row orientation.\n    rows.push(row = {value: sumValue, dice: dx < dy, children: nodes.slice(i0, i1)});\n    if (row.dice) treemapDice(row, x0, y0, x1, value ? y0 += dy * sumValue / value : y1);\n    else treemapSlice(row, x0, y0, value ? x0 += dx * sumValue / value : x1, y1);\n    value -= sumValue, i0 = i1;\n  }\n\n  return rows;\n}\n\nvar squarify = (function custom(ratio) {\n\n  function squarify(parent, x0, y0, x1, y1) {\n    squarifyRatio(ratio, parent, x0, y0, x1, y1);\n  }\n\n  squarify.ratio = function(x) {\n    return custom((x = +x) > 1 ? x : 1);\n  };\n\n  return squarify;\n})(phi);\n\nvar index$3 = function() {\n  var tile = squarify,\n      round = false,\n      dx = 1,\n      dy = 1,\n      paddingStack = [0],\n      paddingInner = constantZero,\n      paddingTop = constantZero,\n      paddingRight = constantZero,\n      paddingBottom = constantZero,\n      paddingLeft = constantZero;\n\n  function treemap(root) {\n    root.x0 =\n    root.y0 = 0;\n    root.x1 = dx;\n    root.y1 = dy;\n    root.eachBefore(positionNode);\n    paddingStack = [0];\n    if (round) root.eachBefore(roundNode);\n    return root;\n  }\n\n  function positionNode(node) {\n    var p = paddingStack[node.depth],\n        x0 = node.x0 + p,\n        y0 = node.y0 + p,\n        x1 = node.x1 - p,\n        y1 = node.y1 - p;\n    if (x1 < x0) x0 = x1 = (x0 + x1) / 2;\n    if (y1 < y0) y0 = y1 = (y0 + y1) / 2;\n    node.x0 = x0;\n    node.y0 = y0;\n    node.x1 = x1;\n    node.y1 = y1;\n    if (node.children) {\n      p = paddingStack[node.depth + 1] = paddingInner(node) / 2;\n      x0 += paddingLeft(node) - p;\n      y0 += paddingTop(node) - p;\n      x1 -= paddingRight(node) - p;\n      y1 -= paddingBottom(node) - p;\n      if (x1 < x0) x0 = x1 = (x0 + x1) / 2;\n      if (y1 < y0) y0 = y1 = (y0 + y1) / 2;\n      tile(node, x0, y0, x1, y1);\n    }\n  }\n\n  treemap.round = function(x) {\n    return arguments.length ? (round = !!x, treemap) : round;\n  };\n\n  treemap.size = function(x) {\n    return arguments.length ? (dx = +x[0], dy = +x[1], treemap) : [dx, dy];\n  };\n\n  treemap.tile = function(x) {\n    return arguments.length ? (tile = required(x), treemap) : tile;\n  };\n\n  treemap.padding = function(x) {\n    return arguments.length ? treemap.paddingInner(x).paddingOuter(x) : treemap.paddingInner();\n  };\n\n  treemap.paddingInner = function(x) {\n    return arguments.length ? (paddingInner = typeof x === \"function\" ? x : constant$8(+x), treemap) : paddingInner;\n  };\n\n  treemap.paddingOuter = function(x) {\n    return arguments.length ? treemap.paddingTop(x).paddingRight(x).paddingBottom(x).paddingLeft(x) : treemap.paddingTop();\n  };\n\n  treemap.paddingTop = function(x) {\n    return arguments.length ? (paddingTop = typeof x === \"function\" ? x : constant$8(+x), treemap) : paddingTop;\n  };\n\n  treemap.paddingRight = function(x) {\n    return arguments.length ? (paddingRight = typeof x === \"function\" ? x : constant$8(+x), treemap) : paddingRight;\n  };\n\n  treemap.paddingBottom = function(x) {\n    return arguments.length ? (paddingBottom = typeof x === \"function\" ? x : constant$8(+x), treemap) : paddingBottom;\n  };\n\n  treemap.paddingLeft = function(x) {\n    return arguments.length ? (paddingLeft = typeof x === \"function\" ? x : constant$8(+x), treemap) : paddingLeft;\n  };\n\n  return treemap;\n};\n\nvar binary = function(parent, x0, y0, x1, y1) {\n  var nodes = parent.children,\n      i, n = nodes.length,\n      sum, sums = new Array(n + 1);\n\n  for (sums[0] = sum = i = 0; i < n; ++i) {\n    sums[i + 1] = sum += nodes[i].value;\n  }\n\n  partition(0, n, parent.value, x0, y0, x1, y1);\n\n  function partition(i, j, value, x0, y0, x1, y1) {\n    if (i >= j - 1) {\n      var node = nodes[i];\n      node.x0 = x0, node.y0 = y0;\n      node.x1 = x1, node.y1 = y1;\n      return;\n    }\n\n    var valueOffset = sums[i],\n        valueTarget = (value / 2) + valueOffset,\n        k = i + 1,\n        hi = j - 1;\n\n    while (k < hi) {\n      var mid = k + hi >>> 1;\n      if (sums[mid] < valueTarget) k = mid + 1;\n      else hi = mid;\n    }\n\n    if ((valueTarget - sums[k - 1]) < (sums[k] - valueTarget) && i + 1 < k) --k;\n\n    var valueLeft = sums[k] - valueOffset,\n        valueRight = value - valueLeft;\n\n    if ((x1 - x0) > (y1 - y0)) {\n      var xk = (x0 * valueRight + x1 * valueLeft) / value;\n      partition(i, k, valueLeft, x0, y0, xk, y1);\n      partition(k, j, valueRight, xk, y0, x1, y1);\n    } else {\n      var yk = (y0 * valueRight + y1 * valueLeft) / value;\n      partition(i, k, valueLeft, x0, y0, x1, yk);\n      partition(k, j, valueRight, x0, yk, x1, y1);\n    }\n  }\n};\n\nvar sliceDice = function(parent, x0, y0, x1, y1) {\n  (parent.depth & 1 ? treemapSlice : treemapDice)(parent, x0, y0, x1, y1);\n};\n\nvar resquarify = (function custom(ratio) {\n\n  function resquarify(parent, x0, y0, x1, y1) {\n    if ((rows = parent._squarify) && (rows.ratio === ratio)) {\n      var rows,\n          row,\n          nodes,\n          i,\n          j = -1,\n          n,\n          m = rows.length,\n          value = parent.value;\n\n      while (++j < m) {\n        row = rows[j], nodes = row.children;\n        for (i = row.value = 0, n = nodes.length; i < n; ++i) row.value += nodes[i].value;\n        if (row.dice) treemapDice(row, x0, y0, x1, y0 += (y1 - y0) * row.value / value);\n        else treemapSlice(row, x0, y0, x0 += (x1 - x0) * row.value / value, y1);\n        value -= row.value;\n      }\n    } else {\n      parent._squarify = rows = squarifyRatio(ratio, parent, x0, y0, x1, y1);\n      rows.ratio = ratio;\n    }\n  }\n\n  resquarify.ratio = function(x) {\n    return custom((x = +x) > 1 ? x : 1);\n  };\n\n  return resquarify;\n})(phi);\n\nvar area$1 = function(polygon) {\n  var i = -1,\n      n = polygon.length,\n      a,\n      b = polygon[n - 1],\n      area = 0;\n\n  while (++i < n) {\n    a = b;\n    b = polygon[i];\n    area += a[1] * b[0] - a[0] * b[1];\n  }\n\n  return area / 2;\n};\n\nvar centroid$1 = function(polygon) {\n  var i = -1,\n      n = polygon.length,\n      x = 0,\n      y = 0,\n      a,\n      b = polygon[n - 1],\n      c,\n      k = 0;\n\n  while (++i < n) {\n    a = b;\n    b = polygon[i];\n    k += c = a[0] * b[1] - b[0] * a[1];\n    x += (a[0] + b[0]) * c;\n    y += (a[1] + b[1]) * c;\n  }\n\n  return k *= 3, [x / k, y / k];\n};\n\n// Returns the 2D cross product of AB and AC vectors, i.e., the z-component of\n// the 3D cross product in a quadrant I Cartesian coordinate system (+x is\n// right, +y is up). Returns a positive value if ABC is counter-clockwise,\n// negative if clockwise, and zero if the points are collinear.\nvar cross$1 = function(a, b, c) {\n  return (b[0] - a[0]) * (c[1] - a[1]) - (b[1] - a[1]) * (c[0] - a[0]);\n};\n\nfunction lexicographicOrder(a, b) {\n  return a[0] - b[0] || a[1] - b[1];\n}\n\n// Computes the upper convex hull per the monotone chain algorithm.\n// Assumes points.length >= 3, is sorted by x, unique in y.\n// Returns an array of indices into points in left-to-right order.\nfunction computeUpperHullIndexes(points) {\n  var n = points.length,\n      indexes = [0, 1],\n      size = 2;\n\n  for (var i = 2; i < n; ++i) {\n    while (size > 1 && cross$1(points[indexes[size - 2]], points[indexes[size - 1]], points[i]) <= 0) --size;\n    indexes[size++] = i;\n  }\n\n  return indexes.slice(0, size); // remove popped points\n}\n\nvar hull = function(points) {\n  if ((n = points.length) < 3) return null;\n\n  var i,\n      n,\n      sortedPoints = new Array(n),\n      flippedPoints = new Array(n);\n\n  for (i = 0; i < n; ++i) sortedPoints[i] = [+points[i][0], +points[i][1], i];\n  sortedPoints.sort(lexicographicOrder);\n  for (i = 0; i < n; ++i) flippedPoints[i] = [sortedPoints[i][0], -sortedPoints[i][1]];\n\n  var upperIndexes = computeUpperHullIndexes(sortedPoints),\n      lowerIndexes = computeUpperHullIndexes(flippedPoints);\n\n  // Construct the hull polygon, removing possible duplicate endpoints.\n  var skipLeft = lowerIndexes[0] === upperIndexes[0],\n      skipRight = lowerIndexes[lowerIndexes.length - 1] === upperIndexes[upperIndexes.length - 1],\n      hull = [];\n\n  // Add upper hull in right-to-l order.\n  // Then add lower hull in left-to-right order.\n  for (i = upperIndexes.length - 1; i >= 0; --i) hull.push(points[sortedPoints[upperIndexes[i]][2]]);\n  for (i = +skipLeft; i < lowerIndexes.length - skipRight; ++i) hull.push(points[sortedPoints[lowerIndexes[i]][2]]);\n\n  return hull;\n};\n\nvar contains$1 = function(polygon, point) {\n  var n = polygon.length,\n      p = polygon[n - 1],\n      x = point[0], y = point[1],\n      x0 = p[0], y0 = p[1],\n      x1, y1,\n      inside = false;\n\n  for (var i = 0; i < n; ++i) {\n    p = polygon[i], x1 = p[0], y1 = p[1];\n    if (((y1 > y) !== (y0 > y)) && (x < (x0 - x1) * (y - y1) / (y0 - y1) + x1)) inside = !inside;\n    x0 = x1, y0 = y1;\n  }\n\n  return inside;\n};\n\nvar length$2 = function(polygon) {\n  var i = -1,\n      n = polygon.length,\n      b = polygon[n - 1],\n      xa,\n      ya,\n      xb = b[0],\n      yb = b[1],\n      perimeter = 0;\n\n  while (++i < n) {\n    xa = xb;\n    ya = yb;\n    b = polygon[i];\n    xb = b[0];\n    yb = b[1];\n    xa -= xb;\n    ya -= yb;\n    perimeter += Math.sqrt(xa * xa + ya * ya);\n  }\n\n  return perimeter;\n};\n\nvar slice$4 = [].slice;\n\nvar noabort = {};\n\nfunction Queue(size) {\n  this._size = size;\n  this._call =\n  this._error = null;\n  this._tasks = [];\n  this._data = [];\n  this._waiting =\n  this._active =\n  this._ended =\n  this._start = 0; // inside a synchronous task callback?\n}\n\nQueue.prototype = queue.prototype = {\n  constructor: Queue,\n  defer: function(callback) {\n    if (typeof callback !== \"function\") throw new Error(\"invalid callback\");\n    if (this._call) throw new Error(\"defer after await\");\n    if (this._error != null) return this;\n    var t = slice$4.call(arguments, 1);\n    t.push(callback);\n    ++this._waiting, this._tasks.push(t);\n    poke$1(this);\n    return this;\n  },\n  abort: function() {\n    if (this._error == null) abort(this, new Error(\"abort\"));\n    return this;\n  },\n  await: function(callback) {\n    if (typeof callback !== \"function\") throw new Error(\"invalid callback\");\n    if (this._call) throw new Error(\"multiple await\");\n    this._call = function(error, results) { callback.apply(null, [error].concat(results)); };\n    maybeNotify(this);\n    return this;\n  },\n  awaitAll: function(callback) {\n    if (typeof callback !== \"function\") throw new Error(\"invalid callback\");\n    if (this._call) throw new Error(\"multiple await\");\n    this._call = callback;\n    maybeNotify(this);\n    return this;\n  }\n};\n\nfunction poke$1(q) {\n  if (!q._start) {\n    try { start$1(q); } // let the current task complete\n    catch (e) {\n      if (q._tasks[q._ended + q._active - 1]) abort(q, e); // task errored synchronously\n      else if (!q._data) throw e; // await callback errored synchronously\n    }\n  }\n}\n\nfunction start$1(q) {\n  while (q._start = q._waiting && q._active < q._size) {\n    var i = q._ended + q._active,\n        t = q._tasks[i],\n        j = t.length - 1,\n        c = t[j];\n    t[j] = end(q, i);\n    --q._waiting, ++q._active;\n    t = c.apply(null, t);\n    if (!q._tasks[i]) continue; // task finished synchronously\n    q._tasks[i] = t || noabort;\n  }\n}\n\nfunction end(q, i) {\n  return function(e, r) {\n    if (!q._tasks[i]) return; // ignore multiple callbacks\n    --q._active, ++q._ended;\n    q._tasks[i] = null;\n    if (q._error != null) return; // ignore secondary errors\n    if (e != null) {\n      abort(q, e);\n    } else {\n      q._data[i] = r;\n      if (q._waiting) poke$1(q);\n      else maybeNotify(q);\n    }\n  };\n}\n\nfunction abort(q, e) {\n  var i = q._tasks.length, t;\n  q._error = e; // ignore active callbacks\n  q._data = undefined; // allow gc\n  q._waiting = NaN; // prevent starting\n\n  while (--i >= 0) {\n    if (t = q._tasks[i]) {\n      q._tasks[i] = null;\n      if (t.abort) {\n        try { t.abort(); }\n        catch (e) { /* ignore */ }\n      }\n    }\n  }\n\n  q._active = NaN; // allow notification\n  maybeNotify(q);\n}\n\nfunction maybeNotify(q) {\n  if (!q._active && q._call) {\n    var d = q._data;\n    q._data = undefined; // allow gc\n    q._call(q._error, d);\n  }\n}\n\nfunction queue(concurrency) {\n  if (concurrency == null) concurrency = Infinity;\n  else if (!((concurrency = +concurrency) >= 1)) throw new Error(\"invalid concurrency\");\n  return new Queue(concurrency);\n}\n\nvar defaultSource$1 = function() {\n  return Math.random();\n};\n\nvar uniform = (function sourceRandomUniform(source) {\n  function randomUniform(min, max) {\n    min = min == null ? 0 : +min;\n    max = max == null ? 1 : +max;\n    if (arguments.length === 1) max = min, min = 0;\n    else max -= min;\n    return function() {\n      return source() * max + min;\n    };\n  }\n\n  randomUniform.source = sourceRandomUniform;\n\n  return randomUniform;\n})(defaultSource$1);\n\nvar normal = (function sourceRandomNormal(source) {\n  function randomNormal(mu, sigma) {\n    var x, r;\n    mu = mu == null ? 0 : +mu;\n    sigma = sigma == null ? 1 : +sigma;\n    return function() {\n      var y;\n\n      // If available, use the second previously-generated uniform random.\n      if (x != null) y = x, x = null;\n\n      // Otherwise, generate a new x and y.\n      else do {\n        x = source() * 2 - 1;\n        y = source() * 2 - 1;\n        r = x * x + y * y;\n      } while (!r || r > 1);\n\n      return mu + sigma * y * Math.sqrt(-2 * Math.log(r) / r);\n    };\n  }\n\n  randomNormal.source = sourceRandomNormal;\n\n  return randomNormal;\n})(defaultSource$1);\n\nvar logNormal = (function sourceRandomLogNormal(source) {\n  function randomLogNormal() {\n    var randomNormal = normal.source(source).apply(this, arguments);\n    return function() {\n      return Math.exp(randomNormal());\n    };\n  }\n\n  randomLogNormal.source = sourceRandomLogNormal;\n\n  return randomLogNormal;\n})(defaultSource$1);\n\nvar irwinHall = (function sourceRandomIrwinHall(source) {\n  function randomIrwinHall(n) {\n    return function() {\n      for (var sum = 0, i = 0; i < n; ++i) sum += source();\n      return sum;\n    };\n  }\n\n  randomIrwinHall.source = sourceRandomIrwinHall;\n\n  return randomIrwinHall;\n})(defaultSource$1);\n\nvar bates = (function sourceRandomBates(source) {\n  function randomBates(n) {\n    var randomIrwinHall = irwinHall.source(source)(n);\n    return function() {\n      return randomIrwinHall() / n;\n    };\n  }\n\n  randomBates.source = sourceRandomBates;\n\n  return randomBates;\n})(defaultSource$1);\n\nvar exponential$1 = (function sourceRandomExponential(source) {\n  function randomExponential(lambda) {\n    return function() {\n      return -Math.log(1 - source()) / lambda;\n    };\n  }\n\n  randomExponential.source = sourceRandomExponential;\n\n  return randomExponential;\n})(defaultSource$1);\n\nvar request = function(url, callback) {\n  var request,\n      event = dispatch(\"beforesend\", \"progress\", \"load\", \"error\"),\n      mimeType,\n      headers = map$1(),\n      xhr = new XMLHttpRequest,\n      user = null,\n      password = null,\n      response,\n      responseType,\n      timeout = 0;\n\n  // If IE does not support CORS, use XDomainRequest.\n  if (typeof XDomainRequest !== \"undefined\"\n      && !(\"withCredentials\" in xhr)\n      && /^(http(s)?:)?\\/\\//.test(url)) xhr = new XDomainRequest;\n\n  \"onload\" in xhr\n      ? xhr.onload = xhr.onerror = xhr.ontimeout = respond\n      : xhr.onreadystatechange = function(o) { xhr.readyState > 3 && respond(o); };\n\n  function respond(o) {\n    var status = xhr.status, result;\n    if (!status && hasResponse(xhr)\n        || status >= 200 && status < 300\n        || status === 304) {\n      if (response) {\n        try {\n          result = response.call(request, xhr);\n        } catch (e) {\n          event.call(\"error\", request, e);\n          return;\n        }\n      } else {\n        result = xhr;\n      }\n      event.call(\"load\", request, result);\n    } else {\n      event.call(\"error\", request, o);\n    }\n  }\n\n  xhr.onprogress = function(e) {\n    event.call(\"progress\", request, e);\n  };\n\n  request = {\n    header: function(name, value) {\n      name = (name + \"\").toLowerCase();\n      if (arguments.length < 2) return headers.get(name);\n      if (value == null) headers.remove(name);\n      else headers.set(name, value + \"\");\n      return request;\n    },\n\n    // If mimeType is non-null and no Accept header is set, a default is used.\n    mimeType: function(value) {\n      if (!arguments.length) return mimeType;\n      mimeType = value == null ? null : value + \"\";\n      return request;\n    },\n\n    // Specifies what type the response value should take;\n    // for instance, arraybuffer, blob, document, or text.\n    responseType: function(value) {\n      if (!arguments.length) return responseType;\n      responseType = value;\n      return request;\n    },\n\n    timeout: function(value) {\n      if (!arguments.length) return timeout;\n      timeout = +value;\n      return request;\n    },\n\n    user: function(value) {\n      return arguments.length < 1 ? user : (user = value == null ? null : value + \"\", request);\n    },\n\n    password: function(value) {\n      return arguments.length < 1 ? password : (password = value == null ? null : value + \"\", request);\n    },\n\n    // Specify how to convert the response content to a specific type;\n    // changes the callback value on \"load\" events.\n    response: function(value) {\n      response = value;\n      return request;\n    },\n\n    // Alias for send(\"GET\", …).\n    get: function(data, callback) {\n      return request.send(\"GET\", data, callback);\n    },\n\n    // Alias for send(\"POST\", …).\n    post: function(data, callback) {\n      return request.send(\"POST\", data, callback);\n    },\n\n    // If callback is non-null, it will be used for error and load events.\n    send: function(method, data, callback) {\n      xhr.open(method, url, true, user, password);\n      if (mimeType != null && !headers.has(\"accept\")) headers.set(\"accept\", mimeType + \",*/*\");\n      if (xhr.setRequestHeader) headers.each(function(value, name) { xhr.setRequestHeader(name, value); });\n      if (mimeType != null && xhr.overrideMimeType) xhr.overrideMimeType(mimeType);\n      if (responseType != null) xhr.responseType = responseType;\n      if (timeout > 0) xhr.timeout = timeout;\n      if (callback == null && typeof data === \"function\") callback = data, data = null;\n      if (callback != null && callback.length === 1) callback = fixCallback(callback);\n      if (callback != null) request.on(\"error\", callback).on(\"load\", function(xhr) { callback(null, xhr); });\n      event.call(\"beforesend\", request, xhr);\n      xhr.send(data == null ? null : data);\n      return request;\n    },\n\n    abort: function() {\n      xhr.abort();\n      return request;\n    },\n\n    on: function() {\n      var value = event.on.apply(event, arguments);\n      return value === event ? request : value;\n    }\n  };\n\n  if (callback != null) {\n    if (typeof callback !== \"function\") throw new Error(\"invalid callback: \" + callback);\n    return request.get(callback);\n  }\n\n  return request;\n};\n\nfunction fixCallback(callback) {\n  return function(error, xhr) {\n    callback(error == null ? xhr : null);\n  };\n}\n\nfunction hasResponse(xhr) {\n  var type = xhr.responseType;\n  return type && type !== \"text\"\n      ? xhr.response // null on error\n      : xhr.responseText; // \"\" on error\n}\n\nvar type$1 = function(defaultMimeType, response) {\n  return function(url, callback) {\n    var r = request(url).mimeType(defaultMimeType).response(response);\n    if (callback != null) {\n      if (typeof callback !== \"function\") throw new Error(\"invalid callback: \" + callback);\n      return r.get(callback);\n    }\n    return r;\n  };\n};\n\nvar html = type$1(\"text/html\", function(xhr) {\n  return document.createRange().createContextualFragment(xhr.responseText);\n});\n\nvar json = type$1(\"application/json\", function(xhr) {\n  return JSON.parse(xhr.responseText);\n});\n\nvar text = type$1(\"text/plain\", function(xhr) {\n  return xhr.responseText;\n});\n\nvar xml = type$1(\"application/xml\", function(xhr) {\n  var xml = xhr.responseXML;\n  if (!xml) throw new Error(\"parse error\");\n  return xml;\n});\n\nvar dsv$1 = function(defaultMimeType, parse) {\n  return function(url, row, callback) {\n    if (arguments.length < 3) callback = row, row = null;\n    var r = request(url).mimeType(defaultMimeType);\n    r.row = function(_) { return arguments.length ? r.response(responseOf(parse, row = _)) : row; };\n    r.row(row);\n    return callback ? r.get(callback) : r;\n  };\n};\n\nfunction responseOf(parse, row) {\n  return function(request$$1) {\n    return parse(request$$1.responseText, row);\n  };\n}\n\nvar csv$1 = dsv$1(\"text/csv\", csvParse);\n\nvar tsv$1 = dsv$1(\"text/tab-separated-values\", tsvParse);\n\nvar array$2 = Array.prototype;\n\nvar map$3 = array$2.map;\nvar slice$5 = array$2.slice;\n\nvar implicit = {name: \"implicit\"};\n\nfunction ordinal(range) {\n  var index = map$1(),\n      domain = [],\n      unknown = implicit;\n\n  range = range == null ? [] : slice$5.call(range);\n\n  function scale(d) {\n    var key = d + \"\", i = index.get(key);\n    if (!i) {\n      if (unknown !== implicit) return unknown;\n      index.set(key, i = domain.push(d));\n    }\n    return range[(i - 1) % range.length];\n  }\n\n  scale.domain = function(_) {\n    if (!arguments.length) return domain.slice();\n    domain = [], index = map$1();\n    var i = -1, n = _.length, d, key;\n    while (++i < n) if (!index.has(key = (d = _[i]) + \"\")) index.set(key, domain.push(d));\n    return scale;\n  };\n\n  scale.range = function(_) {\n    return arguments.length ? (range = slice$5.call(_), scale) : range.slice();\n  };\n\n  scale.unknown = function(_) {\n    return arguments.length ? (unknown = _, scale) : unknown;\n  };\n\n  scale.copy = function() {\n    return ordinal()\n        .domain(domain)\n        .range(range)\n        .unknown(unknown);\n  };\n\n  return scale;\n}\n\nfunction band() {\n  var scale = ordinal().unknown(undefined),\n      domain = scale.domain,\n      ordinalRange = scale.range,\n      range$$1 = [0, 1],\n      step,\n      bandwidth,\n      round = false,\n      paddingInner = 0,\n      paddingOuter = 0,\n      align = 0.5;\n\n  delete scale.unknown;\n\n  function rescale() {\n    var n = domain().length,\n        reverse = range$$1[1] < range$$1[0],\n        start = range$$1[reverse - 0],\n        stop = range$$1[1 - reverse];\n    step = (stop - start) / Math.max(1, n - paddingInner + paddingOuter * 2);\n    if (round) step = Math.floor(step);\n    start += (stop - start - step * (n - paddingInner)) * align;\n    bandwidth = step * (1 - paddingInner);\n    if (round) start = Math.round(start), bandwidth = Math.round(bandwidth);\n    var values = sequence(n).map(function(i) { return start + step * i; });\n    return ordinalRange(reverse ? values.reverse() : values);\n  }\n\n  scale.domain = function(_) {\n    return arguments.length ? (domain(_), rescale()) : domain();\n  };\n\n  scale.range = function(_) {\n    return arguments.length ? (range$$1 = [+_[0], +_[1]], rescale()) : range$$1.slice();\n  };\n\n  scale.rangeRound = function(_) {\n    return range$$1 = [+_[0], +_[1]], round = true, rescale();\n  };\n\n  scale.bandwidth = function() {\n    return bandwidth;\n  };\n\n  scale.step = function() {\n    return step;\n  };\n\n  scale.round = function(_) {\n    return arguments.length ? (round = !!_, rescale()) : round;\n  };\n\n  scale.padding = function(_) {\n    return arguments.length ? (paddingInner = paddingOuter = Math.max(0, Math.min(1, _)), rescale()) : paddingInner;\n  };\n\n  scale.paddingInner = function(_) {\n    return arguments.length ? (paddingInner = Math.max(0, Math.min(1, _)), rescale()) : paddingInner;\n  };\n\n  scale.paddingOuter = function(_) {\n    return arguments.length ? (paddingOuter = Math.max(0, Math.min(1, _)), rescale()) : paddingOuter;\n  };\n\n  scale.align = function(_) {\n    return arguments.length ? (align = Math.max(0, Math.min(1, _)), rescale()) : align;\n  };\n\n  scale.copy = function() {\n    return band()\n        .domain(domain())\n        .range(range$$1)\n        .round(round)\n        .paddingInner(paddingInner)\n        .paddingOuter(paddingOuter)\n        .align(align);\n  };\n\n  return rescale();\n}\n\nfunction pointish(scale) {\n  var copy = scale.copy;\n\n  scale.padding = scale.paddingOuter;\n  delete scale.paddingInner;\n  delete scale.paddingOuter;\n\n  scale.copy = function() {\n    return pointish(copy());\n  };\n\n  return scale;\n}\n\nfunction point$1() {\n  return pointish(band().paddingInner(1));\n}\n\nvar constant$9 = function(x) {\n  return function() {\n    return x;\n  };\n};\n\nvar number$2 = function(x) {\n  return +x;\n};\n\nvar unit = [0, 1];\n\nfunction deinterpolateLinear(a, b) {\n  return (b -= (a = +a))\n      ? function(x) { return (x - a) / b; }\n      : constant$9(b);\n}\n\nfunction deinterpolateClamp(deinterpolate) {\n  return function(a, b) {\n    var d = deinterpolate(a = +a, b = +b);\n    return function(x) { return x <= a ? 0 : x >= b ? 1 : d(x); };\n  };\n}\n\nfunction reinterpolateClamp(reinterpolate) {\n  return function(a, b) {\n    var r = reinterpolate(a = +a, b = +b);\n    return function(t) { return t <= 0 ? a : t >= 1 ? b : r(t); };\n  };\n}\n\nfunction bimap(domain, range, deinterpolate, reinterpolate) {\n  var d0 = domain[0], d1 = domain[1], r0 = range[0], r1 = range[1];\n  if (d1 < d0) d0 = deinterpolate(d1, d0), r0 = reinterpolate(r1, r0);\n  else d0 = deinterpolate(d0, d1), r0 = reinterpolate(r0, r1);\n  return function(x) { return r0(d0(x)); };\n}\n\nfunction polymap(domain, range, deinterpolate, reinterpolate) {\n  var j = Math.min(domain.length, range.length) - 1,\n      d = new Array(j),\n      r = new Array(j),\n      i = -1;\n\n  // Reverse descending domains.\n  if (domain[j] < domain[0]) {\n    domain = domain.slice().reverse();\n    range = range.slice().reverse();\n  }\n\n  while (++i < j) {\n    d[i] = deinterpolate(domain[i], domain[i + 1]);\n    r[i] = reinterpolate(range[i], range[i + 1]);\n  }\n\n  return function(x) {\n    var i = bisectRight(domain, x, 1, j) - 1;\n    return r[i](d[i](x));\n  };\n}\n\nfunction copy(source, target) {\n  return target\n      .domain(source.domain())\n      .range(source.range())\n      .interpolate(source.interpolate())\n      .clamp(source.clamp());\n}\n\n// deinterpolate(a, b)(x) takes a domain value x in [a,b] and returns the corresponding parameter t in [0,1].\n// reinterpolate(a, b)(t) takes a parameter t in [0,1] and returns the corresponding domain value x in [a,b].\nfunction continuous(deinterpolate, reinterpolate) {\n  var domain = unit,\n      range = unit,\n      interpolate$$1 = interpolateValue,\n      clamp = false,\n      piecewise,\n      output,\n      input;\n\n  function rescale() {\n    piecewise = Math.min(domain.length, range.length) > 2 ? polymap : bimap;\n    output = input = null;\n    return scale;\n  }\n\n  function scale(x) {\n    return (output || (output = piecewise(domain, range, clamp ? deinterpolateClamp(deinterpolate) : deinterpolate, interpolate$$1)))(+x);\n  }\n\n  scale.invert = function(y) {\n    return (input || (input = piecewise(range, domain, deinterpolateLinear, clamp ? reinterpolateClamp(reinterpolate) : reinterpolate)))(+y);\n  };\n\n  scale.domain = function(_) {\n    return arguments.length ? (domain = map$3.call(_, number$2), rescale()) : domain.slice();\n  };\n\n  scale.range = function(_) {\n    return arguments.length ? (range = slice$5.call(_), rescale()) : range.slice();\n  };\n\n  scale.rangeRound = function(_) {\n    return range = slice$5.call(_), interpolate$$1 = interpolateRound, rescale();\n  };\n\n  scale.clamp = function(_) {\n    return arguments.length ? (clamp = !!_, rescale()) : clamp;\n  };\n\n  scale.interpolate = function(_) {\n    return arguments.length ? (interpolate$$1 = _, rescale()) : interpolate$$1;\n  };\n\n  return rescale();\n}\n\nvar tickFormat = function(domain, count, specifier) {\n  var start = domain[0],\n      stop = domain[domain.length - 1],\n      step = tickStep(start, stop, count == null ? 10 : count),\n      precision;\n  specifier = formatSpecifier(specifier == null ? \",f\" : specifier);\n  switch (specifier.type) {\n    case \"s\": {\n      var value = Math.max(Math.abs(start), Math.abs(stop));\n      if (specifier.precision == null && !isNaN(precision = precisionPrefix(step, value))) specifier.precision = precision;\n      return exports.formatPrefix(specifier, value);\n    }\n    case \"\":\n    case \"e\":\n    case \"g\":\n    case \"p\":\n    case \"r\": {\n      if (specifier.precision == null && !isNaN(precision = precisionRound(step, Math.max(Math.abs(start), Math.abs(stop))))) specifier.precision = precision - (specifier.type === \"e\");\n      break;\n    }\n    case \"f\":\n    case \"%\": {\n      if (specifier.precision == null && !isNaN(precision = precisionFixed(step))) specifier.precision = precision - (specifier.type === \"%\") * 2;\n      break;\n    }\n  }\n  return exports.format(specifier);\n};\n\nfunction linearish(scale) {\n  var domain = scale.domain;\n\n  scale.ticks = function(count) {\n    var d = domain();\n    return ticks(d[0], d[d.length - 1], count == null ? 10 : count);\n  };\n\n  scale.tickFormat = function(count, specifier) {\n    return tickFormat(domain(), count, specifier);\n  };\n\n  scale.nice = function(count) {\n    if (count == null) count = 10;\n\n    var d = domain(),\n        i0 = 0,\n        i1 = d.length - 1,\n        start = d[i0],\n        stop = d[i1],\n        step;\n\n    if (stop < start) {\n      step = start, start = stop, stop = step;\n      step = i0, i0 = i1, i1 = step;\n    }\n\n    step = tickIncrement(start, stop, count);\n\n    if (step > 0) {\n      start = Math.floor(start / step) * step;\n      stop = Math.ceil(stop / step) * step;\n      step = tickIncrement(start, stop, count);\n    } else if (step < 0) {\n      start = Math.ceil(start * step) / step;\n      stop = Math.floor(stop * step) / step;\n      step = tickIncrement(start, stop, count);\n    }\n\n    if (step > 0) {\n      d[i0] = Math.floor(start / step) * step;\n      d[i1] = Math.ceil(stop / step) * step;\n      domain(d);\n    } else if (step < 0) {\n      d[i0] = Math.ceil(start * step) / step;\n      d[i1] = Math.floor(stop * step) / step;\n      domain(d);\n    }\n\n    return scale;\n  };\n\n  return scale;\n}\n\nfunction linear$2() {\n  var scale = continuous(deinterpolateLinear, reinterpolate);\n\n  scale.copy = function() {\n    return copy(scale, linear$2());\n  };\n\n  return linearish(scale);\n}\n\nfunction identity$6() {\n  var domain = [0, 1];\n\n  function scale(x) {\n    return +x;\n  }\n\n  scale.invert = scale;\n\n  scale.domain = scale.range = function(_) {\n    return arguments.length ? (domain = map$3.call(_, number$2), scale) : domain.slice();\n  };\n\n  scale.copy = function() {\n    return identity$6().domain(domain);\n  };\n\n  return linearish(scale);\n}\n\nvar nice = function(domain, interval) {\n  domain = domain.slice();\n\n  var i0 = 0,\n      i1 = domain.length - 1,\n      x0 = domain[i0],\n      x1 = domain[i1],\n      t;\n\n  if (x1 < x0) {\n    t = i0, i0 = i1, i1 = t;\n    t = x0, x0 = x1, x1 = t;\n  }\n\n  domain[i0] = interval.floor(x0);\n  domain[i1] = interval.ceil(x1);\n  return domain;\n};\n\nfunction deinterpolate(a, b) {\n  return (b = Math.log(b / a))\n      ? function(x) { return Math.log(x / a) / b; }\n      : constant$9(b);\n}\n\nfunction reinterpolate$1(a, b) {\n  return a < 0\n      ? function(t) { return -Math.pow(-b, t) * Math.pow(-a, 1 - t); }\n      : function(t) { return Math.pow(b, t) * Math.pow(a, 1 - t); };\n}\n\nfunction pow10(x) {\n  return isFinite(x) ? +(\"1e\" + x) : x < 0 ? 0 : x;\n}\n\nfunction powp(base) {\n  return base === 10 ? pow10\n      : base === Math.E ? Math.exp\n      : function(x) { return Math.pow(base, x); };\n}\n\nfunction logp(base) {\n  return base === Math.E ? Math.log\n      : base === 10 && Math.log10\n      || base === 2 && Math.log2\n      || (base = Math.log(base), function(x) { return Math.log(x) / base; });\n}\n\nfunction reflect(f) {\n  return function(x) {\n    return -f(-x);\n  };\n}\n\nfunction log$1() {\n  var scale = continuous(deinterpolate, reinterpolate$1).domain([1, 10]),\n      domain = scale.domain,\n      base = 10,\n      logs = logp(10),\n      pows = powp(10);\n\n  function rescale() {\n    logs = logp(base), pows = powp(base);\n    if (domain()[0] < 0) logs = reflect(logs), pows = reflect(pows);\n    return scale;\n  }\n\n  scale.base = function(_) {\n    return arguments.length ? (base = +_, rescale()) : base;\n  };\n\n  scale.domain = function(_) {\n    return arguments.length ? (domain(_), rescale()) : domain();\n  };\n\n  scale.ticks = function(count) {\n    var d = domain(),\n        u = d[0],\n        v = d[d.length - 1],\n        r;\n\n    if (r = v < u) i = u, u = v, v = i;\n\n    var i = logs(u),\n        j = logs(v),\n        p,\n        k,\n        t,\n        n = count == null ? 10 : +count,\n        z = [];\n\n    if (!(base % 1) && j - i < n) {\n      i = Math.round(i) - 1, j = Math.round(j) + 1;\n      if (u > 0) for (; i < j; ++i) {\n        for (k = 1, p = pows(i); k < base; ++k) {\n          t = p * k;\n          if (t < u) continue;\n          if (t > v) break;\n          z.push(t);\n        }\n      } else for (; i < j; ++i) {\n        for (k = base - 1, p = pows(i); k >= 1; --k) {\n          t = p * k;\n          if (t < u) continue;\n          if (t > v) break;\n          z.push(t);\n        }\n      }\n    } else {\n      z = ticks(i, j, Math.min(j - i, n)).map(pows);\n    }\n\n    return r ? z.reverse() : z;\n  };\n\n  scale.tickFormat = function(count, specifier) {\n    if (specifier == null) specifier = base === 10 ? \".0e\" : \",\";\n    if (typeof specifier !== \"function\") specifier = exports.format(specifier);\n    if (count === Infinity) return specifier;\n    if (count == null) count = 10;\n    var k = Math.max(1, base * count / scale.ticks().length); // TODO fast estimate?\n    return function(d) {\n      var i = d / pows(Math.round(logs(d)));\n      if (i * base < base - 0.5) i *= base;\n      return i <= k ? specifier(d) : \"\";\n    };\n  };\n\n  scale.nice = function() {\n    return domain(nice(domain(), {\n      floor: function(x) { return pows(Math.floor(logs(x))); },\n      ceil: function(x) { return pows(Math.ceil(logs(x))); }\n    }));\n  };\n\n  scale.copy = function() {\n    return copy(scale, log$1().base(base));\n  };\n\n  return scale;\n}\n\nfunction raise$1(x, exponent) {\n  return x < 0 ? -Math.pow(-x, exponent) : Math.pow(x, exponent);\n}\n\nfunction pow$1() {\n  var exponent = 1,\n      scale = continuous(deinterpolate, reinterpolate),\n      domain = scale.domain;\n\n  function deinterpolate(a, b) {\n    return (b = raise$1(b, exponent) - (a = raise$1(a, exponent)))\n        ? function(x) { return (raise$1(x, exponent) - a) / b; }\n        : constant$9(b);\n  }\n\n  function reinterpolate(a, b) {\n    b = raise$1(b, exponent) - (a = raise$1(a, exponent));\n    return function(t) { return raise$1(a + b * t, 1 / exponent); };\n  }\n\n  scale.exponent = function(_) {\n    return arguments.length ? (exponent = +_, domain(domain())) : exponent;\n  };\n\n  scale.copy = function() {\n    return copy(scale, pow$1().exponent(exponent));\n  };\n\n  return linearish(scale);\n}\n\nfunction sqrt$1() {\n  return pow$1().exponent(0.5);\n}\n\nfunction quantile$$1() {\n  var domain = [],\n      range = [],\n      thresholds = [];\n\n  function rescale() {\n    var i = 0, n = Math.max(1, range.length);\n    thresholds = new Array(n - 1);\n    while (++i < n) thresholds[i - 1] = threshold(domain, i / n);\n    return scale;\n  }\n\n  function scale(x) {\n    if (!isNaN(x = +x)) return range[bisectRight(thresholds, x)];\n  }\n\n  scale.invertExtent = function(y) {\n    var i = range.indexOf(y);\n    return i < 0 ? [NaN, NaN] : [\n      i > 0 ? thresholds[i - 1] : domain[0],\n      i < thresholds.length ? thresholds[i] : domain[domain.length - 1]\n    ];\n  };\n\n  scale.domain = function(_) {\n    if (!arguments.length) return domain.slice();\n    domain = [];\n    for (var i = 0, n = _.length, d; i < n; ++i) if (d = _[i], d != null && !isNaN(d = +d)) domain.push(d);\n    domain.sort(ascending);\n    return rescale();\n  };\n\n  scale.range = function(_) {\n    return arguments.length ? (range = slice$5.call(_), rescale()) : range.slice();\n  };\n\n  scale.quantiles = function() {\n    return thresholds.slice();\n  };\n\n  scale.copy = function() {\n    return quantile$$1()\n        .domain(domain)\n        .range(range);\n  };\n\n  return scale;\n}\n\nfunction quantize$1() {\n  var x0 = 0,\n      x1 = 1,\n      n = 1,\n      domain = [0.5],\n      range = [0, 1];\n\n  function scale(x) {\n    if (x <= x) return range[bisectRight(domain, x, 0, n)];\n  }\n\n  function rescale() {\n    var i = -1;\n    domain = new Array(n);\n    while (++i < n) domain[i] = ((i + 1) * x1 - (i - n) * x0) / (n + 1);\n    return scale;\n  }\n\n  scale.domain = function(_) {\n    return arguments.length ? (x0 = +_[0], x1 = +_[1], rescale()) : [x0, x1];\n  };\n\n  scale.range = function(_) {\n    return arguments.length ? (n = (range = slice$5.call(_)).length - 1, rescale()) : range.slice();\n  };\n\n  scale.invertExtent = function(y) {\n    var i = range.indexOf(y);\n    return i < 0 ? [NaN, NaN]\n        : i < 1 ? [x0, domain[0]]\n        : i >= n ? [domain[n - 1], x1]\n        : [domain[i - 1], domain[i]];\n  };\n\n  scale.copy = function() {\n    return quantize$1()\n        .domain([x0, x1])\n        .range(range);\n  };\n\n  return linearish(scale);\n}\n\nfunction threshold$1() {\n  var domain = [0.5],\n      range = [0, 1],\n      n = 1;\n\n  function scale(x) {\n    if (x <= x) return range[bisectRight(domain, x, 0, n)];\n  }\n\n  scale.domain = function(_) {\n    return arguments.length ? (domain = slice$5.call(_), n = Math.min(domain.length, range.length - 1), scale) : domain.slice();\n  };\n\n  scale.range = function(_) {\n    return arguments.length ? (range = slice$5.call(_), n = Math.min(domain.length, range.length - 1), scale) : range.slice();\n  };\n\n  scale.invertExtent = function(y) {\n    var i = range.indexOf(y);\n    return [domain[i - 1], domain[i]];\n  };\n\n  scale.copy = function() {\n    return threshold$1()\n        .domain(domain)\n        .range(range);\n  };\n\n  return scale;\n}\n\nvar t0$1 = new Date;\nvar t1$1 = new Date;\n\nfunction newInterval(floori, offseti, count, field) {\n\n  function interval(date) {\n    return floori(date = new Date(+date)), date;\n  }\n\n  interval.floor = interval;\n\n  interval.ceil = function(date) {\n    return floori(date = new Date(date - 1)), offseti(date, 1), floori(date), date;\n  };\n\n  interval.round = function(date) {\n    var d0 = interval(date),\n        d1 = interval.ceil(date);\n    return date - d0 < d1 - date ? d0 : d1;\n  };\n\n  interval.offset = function(date, step) {\n    return offseti(date = new Date(+date), step == null ? 1 : Math.floor(step)), date;\n  };\n\n  interval.range = function(start, stop, step) {\n    var range = [];\n    start = interval.ceil(start);\n    step = step == null ? 1 : Math.floor(step);\n    if (!(start < stop) || !(step > 0)) return range; // also handles Invalid Date\n    do range.push(new Date(+start)); while (offseti(start, step), floori(start), start < stop)\n    return range;\n  };\n\n  interval.filter = function(test) {\n    return newInterval(function(date) {\n      if (date >= date) while (floori(date), !test(date)) date.setTime(date - 1);\n    }, function(date, step) {\n      if (date >= date) {\n        if (step < 0) while (++step <= 0) {\n          while (offseti(date, -1), !test(date)) {} // eslint-disable-line no-empty\n        } else while (--step >= 0) {\n          while (offseti(date, +1), !test(date)) {} // eslint-disable-line no-empty\n        }\n      }\n    });\n  };\n\n  if (count) {\n    interval.count = function(start, end) {\n      t0$1.setTime(+start), t1$1.setTime(+end);\n      floori(t0$1), floori(t1$1);\n      return Math.floor(count(t0$1, t1$1));\n    };\n\n    interval.every = function(step) {\n      step = Math.floor(step);\n      return !isFinite(step) || !(step > 0) ? null\n          : !(step > 1) ? interval\n          : interval.filter(field\n              ? function(d) { return field(d) % step === 0; }\n              : function(d) { return interval.count(0, d) % step === 0; });\n    };\n  }\n\n  return interval;\n}\n\nvar millisecond = newInterval(function() {\n  // noop\n}, function(date, step) {\n  date.setTime(+date + step);\n}, function(start, end) {\n  return end - start;\n});\n\n// An optimized implementation for this simple case.\nmillisecond.every = function(k) {\n  k = Math.floor(k);\n  if (!isFinite(k) || !(k > 0)) return null;\n  if (!(k > 1)) return millisecond;\n  return newInterval(function(date) {\n    date.setTime(Math.floor(date / k) * k);\n  }, function(date, step) {\n    date.setTime(+date + step * k);\n  }, function(start, end) {\n    return (end - start) / k;\n  });\n};\n\nvar milliseconds = millisecond.range;\n\nvar durationSecond$1 = 1e3;\nvar durationMinute$1 = 6e4;\nvar durationHour$1 = 36e5;\nvar durationDay$1 = 864e5;\nvar durationWeek$1 = 6048e5;\n\nvar second = newInterval(function(date) {\n  date.setTime(Math.floor(date / durationSecond$1) * durationSecond$1);\n}, function(date, step) {\n  date.setTime(+date + step * durationSecond$1);\n}, function(start, end) {\n  return (end - start) / durationSecond$1;\n}, function(date) {\n  return date.getUTCSeconds();\n});\n\nvar seconds = second.range;\n\nvar minute = newInterval(function(date) {\n  date.setTime(Math.floor(date / durationMinute$1) * durationMinute$1);\n}, function(date, step) {\n  date.setTime(+date + step * durationMinute$1);\n}, function(start, end) {\n  return (end - start) / durationMinute$1;\n}, function(date) {\n  return date.getMinutes();\n});\n\nvar minutes = minute.range;\n\nvar hour = newInterval(function(date) {\n  var offset = date.getTimezoneOffset() * durationMinute$1 % durationHour$1;\n  if (offset < 0) offset += durationHour$1;\n  date.setTime(Math.floor((+date - offset) / durationHour$1) * durationHour$1 + offset);\n}, function(date, step) {\n  date.setTime(+date + step * durationHour$1);\n}, function(start, end) {\n  return (end - start) / durationHour$1;\n}, function(date) {\n  return date.getHours();\n});\n\nvar hours = hour.range;\n\nvar day = newInterval(function(date) {\n  date.setHours(0, 0, 0, 0);\n}, function(date, step) {\n  date.setDate(date.getDate() + step);\n}, function(start, end) {\n  return (end - start - (end.getTimezoneOffset() - start.getTimezoneOffset()) * durationMinute$1) / durationDay$1;\n}, function(date) {\n  return date.getDate() - 1;\n});\n\nvar days = day.range;\n\nfunction weekday(i) {\n  return newInterval(function(date) {\n    date.setDate(date.getDate() - (date.getDay() + 7 - i) % 7);\n    date.setHours(0, 0, 0, 0);\n  }, function(date, step) {\n    date.setDate(date.getDate() + step * 7);\n  }, function(start, end) {\n    return (end - start - (end.getTimezoneOffset() - start.getTimezoneOffset()) * durationMinute$1) / durationWeek$1;\n  });\n}\n\nvar sunday = weekday(0);\nvar monday = weekday(1);\nvar tuesday = weekday(2);\nvar wednesday = weekday(3);\nvar thursday = weekday(4);\nvar friday = weekday(5);\nvar saturday = weekday(6);\n\nvar sundays = sunday.range;\nvar mondays = monday.range;\nvar tuesdays = tuesday.range;\nvar wednesdays = wednesday.range;\nvar thursdays = thursday.range;\nvar fridays = friday.range;\nvar saturdays = saturday.range;\n\nvar month = newInterval(function(date) {\n  date.setDate(1);\n  date.setHours(0, 0, 0, 0);\n}, function(date, step) {\n  date.setMonth(date.getMonth() + step);\n}, function(start, end) {\n  return end.getMonth() - start.getMonth() + (end.getFullYear() - start.getFullYear()) * 12;\n}, function(date) {\n  return date.getMonth();\n});\n\nvar months = month.range;\n\nvar year = newInterval(function(date) {\n  date.setMonth(0, 1);\n  date.setHours(0, 0, 0, 0);\n}, function(date, step) {\n  date.setFullYear(date.getFullYear() + step);\n}, function(start, end) {\n  return end.getFullYear() - start.getFullYear();\n}, function(date) {\n  return date.getFullYear();\n});\n\n// An optimized implementation for this simple case.\nyear.every = function(k) {\n  return !isFinite(k = Math.floor(k)) || !(k > 0) ? null : newInterval(function(date) {\n    date.setFullYear(Math.floor(date.getFullYear() / k) * k);\n    date.setMonth(0, 1);\n    date.setHours(0, 0, 0, 0);\n  }, function(date, step) {\n    date.setFullYear(date.getFullYear() + step * k);\n  });\n};\n\nvar years = year.range;\n\nvar utcMinute = newInterval(function(date) {\n  date.setUTCSeconds(0, 0);\n}, function(date, step) {\n  date.setTime(+date + step * durationMinute$1);\n}, function(start, end) {\n  return (end - start) / durationMinute$1;\n}, function(date) {\n  return date.getUTCMinutes();\n});\n\nvar utcMinutes = utcMinute.range;\n\nvar utcHour = newInterval(function(date) {\n  date.setUTCMinutes(0, 0, 0);\n}, function(date, step) {\n  date.setTime(+date + step * durationHour$1);\n}, function(start, end) {\n  return (end - start) / durationHour$1;\n}, function(date) {\n  return date.getUTCHours();\n});\n\nvar utcHours = utcHour.range;\n\nvar utcDay = newInterval(function(date) {\n  date.setUTCHours(0, 0, 0, 0);\n}, function(date, step) {\n  date.setUTCDate(date.getUTCDate() + step);\n}, function(start, end) {\n  return (end - start) / durationDay$1;\n}, function(date) {\n  return date.getUTCDate() - 1;\n});\n\nvar utcDays = utcDay.range;\n\nfunction utcWeekday(i) {\n  return newInterval(function(date) {\n    date.setUTCDate(date.getUTCDate() - (date.getUTCDay() + 7 - i) % 7);\n    date.setUTCHours(0, 0, 0, 0);\n  }, function(date, step) {\n    date.setUTCDate(date.getUTCDate() + step * 7);\n  }, function(start, end) {\n    return (end - start) / durationWeek$1;\n  });\n}\n\nvar utcSunday = utcWeekday(0);\nvar utcMonday = utcWeekday(1);\nvar utcTuesday = utcWeekday(2);\nvar utcWednesday = utcWeekday(3);\nvar utcThursday = utcWeekday(4);\nvar utcFriday = utcWeekday(5);\nvar utcSaturday = utcWeekday(6);\n\nvar utcSundays = utcSunday.range;\nvar utcMondays = utcMonday.range;\nvar utcTuesdays = utcTuesday.range;\nvar utcWednesdays = utcWednesday.range;\nvar utcThursdays = utcThursday.range;\nvar utcFridays = utcFriday.range;\nvar utcSaturdays = utcSaturday.range;\n\nvar utcMonth = newInterval(function(date) {\n  date.setUTCDate(1);\n  date.setUTCHours(0, 0, 0, 0);\n}, function(date, step) {\n  date.setUTCMonth(date.getUTCMonth() + step);\n}, function(start, end) {\n  return end.getUTCMonth() - start.getUTCMonth() + (end.getUTCFullYear() - start.getUTCFullYear()) * 12;\n}, function(date) {\n  return date.getUTCMonth();\n});\n\nvar utcMonths = utcMonth.range;\n\nvar utcYear = newInterval(function(date) {\n  date.setUTCMonth(0, 1);\n  date.setUTCHours(0, 0, 0, 0);\n}, function(date, step) {\n  date.setUTCFullYear(date.getUTCFullYear() + step);\n}, function(start, end) {\n  return end.getUTCFullYear() - start.getUTCFullYear();\n}, function(date) {\n  return date.getUTCFullYear();\n});\n\n// An optimized implementation for this simple case.\nutcYear.every = function(k) {\n  return !isFinite(k = Math.floor(k)) || !(k > 0) ? null : newInterval(function(date) {\n    date.setUTCFullYear(Math.floor(date.getUTCFullYear() / k) * k);\n    date.setUTCMonth(0, 1);\n    date.setUTCHours(0, 0, 0, 0);\n  }, function(date, step) {\n    date.setUTCFullYear(date.getUTCFullYear() + step * k);\n  });\n};\n\nvar utcYears = utcYear.range;\n\nfunction localDate(d) {\n  if (0 <= d.y && d.y < 100) {\n    var date = new Date(-1, d.m, d.d, d.H, d.M, d.S, d.L);\n    date.setFullYear(d.y);\n    return date;\n  }\n  return new Date(d.y, d.m, d.d, d.H, d.M, d.S, d.L);\n}\n\nfunction utcDate(d) {\n  if (0 <= d.y && d.y < 100) {\n    var date = new Date(Date.UTC(-1, d.m, d.d, d.H, d.M, d.S, d.L));\n    date.setUTCFullYear(d.y);\n    return date;\n  }\n  return new Date(Date.UTC(d.y, d.m, d.d, d.H, d.M, d.S, d.L));\n}\n\nfunction newYear(y) {\n  return {y: y, m: 0, d: 1, H: 0, M: 0, S: 0, L: 0};\n}\n\nfunction formatLocale$1(locale) {\n  var locale_dateTime = locale.dateTime,\n      locale_date = locale.date,\n      locale_time = locale.time,\n      locale_periods = locale.periods,\n      locale_weekdays = locale.days,\n      locale_shortWeekdays = locale.shortDays,\n      locale_months = locale.months,\n      locale_shortMonths = locale.shortMonths;\n\n  var periodRe = formatRe(locale_periods),\n      periodLookup = formatLookup(locale_periods),\n      weekdayRe = formatRe(locale_weekdays),\n      weekdayLookup = formatLookup(locale_weekdays),\n      shortWeekdayRe = formatRe(locale_shortWeekdays),\n      shortWeekdayLookup = formatLookup(locale_shortWeekdays),\n      monthRe = formatRe(locale_months),\n      monthLookup = formatLookup(locale_months),\n      shortMonthRe = formatRe(locale_shortMonths),\n      shortMonthLookup = formatLookup(locale_shortMonths);\n\n  var formats = {\n    \"a\": formatShortWeekday,\n    \"A\": formatWeekday,\n    \"b\": formatShortMonth,\n    \"B\": formatMonth,\n    \"c\": null,\n    \"d\": formatDayOfMonth,\n    \"e\": formatDayOfMonth,\n    \"H\": formatHour24,\n    \"I\": formatHour12,\n    \"j\": formatDayOfYear,\n    \"L\": formatMilliseconds,\n    \"m\": formatMonthNumber,\n    \"M\": formatMinutes,\n    \"p\": formatPeriod,\n    \"S\": formatSeconds,\n    \"U\": formatWeekNumberSunday,\n    \"w\": formatWeekdayNumber,\n    \"W\": formatWeekNumberMonday,\n    \"x\": null,\n    \"X\": null,\n    \"y\": formatYear,\n    \"Y\": formatFullYear,\n    \"Z\": formatZone,\n    \"%\": formatLiteralPercent\n  };\n\n  var utcFormats = {\n    \"a\": formatUTCShortWeekday,\n    \"A\": formatUTCWeekday,\n    \"b\": formatUTCShortMonth,\n    \"B\": formatUTCMonth,\n    \"c\": null,\n    \"d\": formatUTCDayOfMonth,\n    \"e\": formatUTCDayOfMonth,\n    \"H\": formatUTCHour24,\n    \"I\": formatUTCHour12,\n    \"j\": formatUTCDayOfYear,\n    \"L\": formatUTCMilliseconds,\n    \"m\": formatUTCMonthNumber,\n    \"M\": formatUTCMinutes,\n    \"p\": formatUTCPeriod,\n    \"S\": formatUTCSeconds,\n    \"U\": formatUTCWeekNumberSunday,\n    \"w\": formatUTCWeekdayNumber,\n    \"W\": formatUTCWeekNumberMonday,\n    \"x\": null,\n    \"X\": null,\n    \"y\": formatUTCYear,\n    \"Y\": formatUTCFullYear,\n    \"Z\": formatUTCZone,\n    \"%\": formatLiteralPercent\n  };\n\n  var parses = {\n    \"a\": parseShortWeekday,\n    \"A\": parseWeekday,\n    \"b\": parseShortMonth,\n    \"B\": parseMonth,\n    \"c\": parseLocaleDateTime,\n    \"d\": parseDayOfMonth,\n    \"e\": parseDayOfMonth,\n    \"H\": parseHour24,\n    \"I\": parseHour24,\n    \"j\": parseDayOfYear,\n    \"L\": parseMilliseconds,\n    \"m\": parseMonthNumber,\n    \"M\": parseMinutes,\n    \"p\": parsePeriod,\n    \"S\": parseSeconds,\n    \"U\": parseWeekNumberSunday,\n    \"w\": parseWeekdayNumber,\n    \"W\": parseWeekNumberMonday,\n    \"x\": parseLocaleDate,\n    \"X\": parseLocaleTime,\n    \"y\": parseYear,\n    \"Y\": parseFullYear,\n    \"Z\": parseZone,\n    \"%\": parseLiteralPercent\n  };\n\n  // These recursive directive definitions must be deferred.\n  formats.x = newFormat(locale_date, formats);\n  formats.X = newFormat(locale_time, formats);\n  formats.c = newFormat(locale_dateTime, formats);\n  utcFormats.x = newFormat(locale_date, utcFormats);\n  utcFormats.X = newFormat(locale_time, utcFormats);\n  utcFormats.c = newFormat(locale_dateTime, utcFormats);\n\n  function newFormat(specifier, formats) {\n    return function(date) {\n      var string = [],\n          i = -1,\n          j = 0,\n          n = specifier.length,\n          c,\n          pad,\n          format;\n\n      if (!(date instanceof Date)) date = new Date(+date);\n\n      while (++i < n) {\n        if (specifier.charCodeAt(i) === 37) {\n          string.push(specifier.slice(j, i));\n          if ((pad = pads[c = specifier.charAt(++i)]) != null) c = specifier.charAt(++i);\n          else pad = c === \"e\" ? \" \" : \"0\";\n          if (format = formats[c]) c = format(date, pad);\n          string.push(c);\n          j = i + 1;\n        }\n      }\n\n      string.push(specifier.slice(j, i));\n      return string.join(\"\");\n    };\n  }\n\n  function newParse(specifier, newDate) {\n    return function(string) {\n      var d = newYear(1900),\n          i = parseSpecifier(d, specifier, string += \"\", 0);\n      if (i != string.length) return null;\n\n      // The am-pm flag is 0 for AM, and 1 for PM.\n      if (\"p\" in d) d.H = d.H % 12 + d.p * 12;\n\n      // Convert day-of-week and week-of-year to day-of-year.\n      if (\"W\" in d || \"U\" in d) {\n        if (!(\"w\" in d)) d.w = \"W\" in d ? 1 : 0;\n        var day$$1 = \"Z\" in d ? utcDate(newYear(d.y)).getUTCDay() : newDate(newYear(d.y)).getDay();\n        d.m = 0;\n        d.d = \"W\" in d ? (d.w + 6) % 7 + d.W * 7 - (day$$1 + 5) % 7 : d.w + d.U * 7 - (day$$1 + 6) % 7;\n      }\n\n      // If a time zone is specified, all fields are interpreted as UTC and then\n      // offset according to the specified time zone.\n      if (\"Z\" in d) {\n        d.H += d.Z / 100 | 0;\n        d.M += d.Z % 100;\n        return utcDate(d);\n      }\n\n      // Otherwise, all fields are in local time.\n      return newDate(d);\n    };\n  }\n\n  function parseSpecifier(d, specifier, string, j) {\n    var i = 0,\n        n = specifier.length,\n        m = string.length,\n        c,\n        parse;\n\n    while (i < n) {\n      if (j >= m) return -1;\n      c = specifier.charCodeAt(i++);\n      if (c === 37) {\n        c = specifier.charAt(i++);\n        parse = parses[c in pads ? specifier.charAt(i++) : c];\n        if (!parse || ((j = parse(d, string, j)) < 0)) return -1;\n      } else if (c != string.charCodeAt(j++)) {\n        return -1;\n      }\n    }\n\n    return j;\n  }\n\n  function parsePeriod(d, string, i) {\n    var n = periodRe.exec(string.slice(i));\n    return n ? (d.p = periodLookup[n[0].toLowerCase()], i + n[0].length) : -1;\n  }\n\n  function parseShortWeekday(d, string, i) {\n    var n = shortWeekdayRe.exec(string.slice(i));\n    return n ? (d.w = shortWeekdayLookup[n[0].toLowerCase()], i + n[0].length) : -1;\n  }\n\n  function parseWeekday(d, string, i) {\n    var n = weekdayRe.exec(string.slice(i));\n    return n ? (d.w = weekdayLookup[n[0].toLowerCase()], i + n[0].length) : -1;\n  }\n\n  function parseShortMonth(d, string, i) {\n    var n = shortMonthRe.exec(string.slice(i));\n    return n ? (d.m = shortMonthLookup[n[0].toLowerCase()], i + n[0].length) : -1;\n  }\n\n  function parseMonth(d, string, i) {\n    var n = monthRe.exec(string.slice(i));\n    return n ? (d.m = monthLookup[n[0].toLowerCase()], i + n[0].length) : -1;\n  }\n\n  function parseLocaleDateTime(d, string, i) {\n    return parseSpecifier(d, locale_dateTime, string, i);\n  }\n\n  function parseLocaleDate(d, string, i) {\n    return parseSpecifier(d, locale_date, string, i);\n  }\n\n  function parseLocaleTime(d, string, i) {\n    return parseSpecifier(d, locale_time, string, i);\n  }\n\n  function formatShortWeekday(d) {\n    return locale_shortWeekdays[d.getDay()];\n  }\n\n  function formatWeekday(d) {\n    return locale_weekdays[d.getDay()];\n  }\n\n  function formatShortMonth(d) {\n    return locale_shortMonths[d.getMonth()];\n  }\n\n  function formatMonth(d) {\n    return locale_months[d.getMonth()];\n  }\n\n  function formatPeriod(d) {\n    return locale_periods[+(d.getHours() >= 12)];\n  }\n\n  function formatUTCShortWeekday(d) {\n    return locale_shortWeekdays[d.getUTCDay()];\n  }\n\n  function formatUTCWeekday(d) {\n    return locale_weekdays[d.getUTCDay()];\n  }\n\n  function formatUTCShortMonth(d) {\n    return locale_shortMonths[d.getUTCMonth()];\n  }\n\n  function formatUTCMonth(d) {\n    return locale_months[d.getUTCMonth()];\n  }\n\n  function formatUTCPeriod(d) {\n    return locale_periods[+(d.getUTCHours() >= 12)];\n  }\n\n  return {\n    format: function(specifier) {\n      var f = newFormat(specifier += \"\", formats);\n      f.toString = function() { return specifier; };\n      return f;\n    },\n    parse: function(specifier) {\n      var p = newParse(specifier += \"\", localDate);\n      p.toString = function() { return specifier; };\n      return p;\n    },\n    utcFormat: function(specifier) {\n      var f = newFormat(specifier += \"\", utcFormats);\n      f.toString = function() { return specifier; };\n      return f;\n    },\n    utcParse: function(specifier) {\n      var p = newParse(specifier, utcDate);\n      p.toString = function() { return specifier; };\n      return p;\n    }\n  };\n}\n\nvar pads = {\"-\": \"\", \"_\": \" \", \"0\": \"0\"};\nvar numberRe = /^\\s*\\d+/;\nvar percentRe = /^%/;\nvar requoteRe = /[\\\\\\^\\$\\*\\+\\?\\|\\[\\]\\(\\)\\.\\{\\}]/g;\n\nfunction pad(value, fill, width) {\n  var sign = value < 0 ? \"-\" : \"\",\n      string = (sign ? -value : value) + \"\",\n      length = string.length;\n  return sign + (length < width ? new Array(width - length + 1).join(fill) + string : string);\n}\n\nfunction requote(s) {\n  return s.replace(requoteRe, \"\\\\$&\");\n}\n\nfunction formatRe(names) {\n  return new RegExp(\"^(?:\" + names.map(requote).join(\"|\") + \")\", \"i\");\n}\n\nfunction formatLookup(names) {\n  var map = {}, i = -1, n = names.length;\n  while (++i < n) map[names[i].toLowerCase()] = i;\n  return map;\n}\n\nfunction parseWeekdayNumber(d, string, i) {\n  var n = numberRe.exec(string.slice(i, i + 1));\n  return n ? (d.w = +n[0], i + n[0].length) : -1;\n}\n\nfunction parseWeekNumberSunday(d, string, i) {\n  var n = numberRe.exec(string.slice(i));\n  return n ? (d.U = +n[0], i + n[0].length) : -1;\n}\n\nfunction parseWeekNumberMonday(d, string, i) {\n  var n = numberRe.exec(string.slice(i));\n  return n ? (d.W = +n[0], i + n[0].length) : -1;\n}\n\nfunction parseFullYear(d, string, i) {\n  var n = numberRe.exec(string.slice(i, i + 4));\n  return n ? (d.y = +n[0], i + n[0].length) : -1;\n}\n\nfunction parseYear(d, string, i) {\n  var n = numberRe.exec(string.slice(i, i + 2));\n  return n ? (d.y = +n[0] + (+n[0] > 68 ? 1900 : 2000), i + n[0].length) : -1;\n}\n\nfunction parseZone(d, string, i) {\n  var n = /^(Z)|([+-]\\d\\d)(?:\\:?(\\d\\d))?/.exec(string.slice(i, i + 6));\n  return n ? (d.Z = n[1] ? 0 : -(n[2] + (n[3] || \"00\")), i + n[0].length) : -1;\n}\n\nfunction parseMonthNumber(d, string, i) {\n  var n = numberRe.exec(string.slice(i, i + 2));\n  return n ? (d.m = n[0] - 1, i + n[0].length) : -1;\n}\n\nfunction parseDayOfMonth(d, string, i) {\n  var n = numberRe.exec(string.slice(i, i + 2));\n  return n ? (d.d = +n[0], i + n[0].length) : -1;\n}\n\nfunction parseDayOfYear(d, string, i) {\n  var n = numberRe.exec(string.slice(i, i + 3));\n  return n ? (d.m = 0, d.d = +n[0], i + n[0].length) : -1;\n}\n\nfunction parseHour24(d, string, i) {\n  var n = numberRe.exec(string.slice(i, i + 2));\n  return n ? (d.H = +n[0], i + n[0].length) : -1;\n}\n\nfunction parseMinutes(d, string, i) {\n  var n = numberRe.exec(string.slice(i, i + 2));\n  return n ? (d.M = +n[0], i + n[0].length) : -1;\n}\n\nfunction parseSeconds(d, string, i) {\n  var n = numberRe.exec(string.slice(i, i + 2));\n  return n ? (d.S = +n[0], i + n[0].length) : -1;\n}\n\nfunction parseMilliseconds(d, string, i) {\n  var n = numberRe.exec(string.slice(i, i + 3));\n  return n ? (d.L = +n[0], i + n[0].length) : -1;\n}\n\nfunction parseLiteralPercent(d, string, i) {\n  var n = percentRe.exec(string.slice(i, i + 1));\n  return n ? i + n[0].length : -1;\n}\n\nfunction formatDayOfMonth(d, p) {\n  return pad(d.getDate(), p, 2);\n}\n\nfunction formatHour24(d, p) {\n  return pad(d.getHours(), p, 2);\n}\n\nfunction formatHour12(d, p) {\n  return pad(d.getHours() % 12 || 12, p, 2);\n}\n\nfunction formatDayOfYear(d, p) {\n  return pad(1 + day.count(year(d), d), p, 3);\n}\n\nfunction formatMilliseconds(d, p) {\n  return pad(d.getMilliseconds(), p, 3);\n}\n\nfunction formatMonthNumber(d, p) {\n  return pad(d.getMonth() + 1, p, 2);\n}\n\nfunction formatMinutes(d, p) {\n  return pad(d.getMinutes(), p, 2);\n}\n\nfunction formatSeconds(d, p) {\n  return pad(d.getSeconds(), p, 2);\n}\n\nfunction formatWeekNumberSunday(d, p) {\n  return pad(sunday.count(year(d), d), p, 2);\n}\n\nfunction formatWeekdayNumber(d) {\n  return d.getDay();\n}\n\nfunction formatWeekNumberMonday(d, p) {\n  return pad(monday.count(year(d), d), p, 2);\n}\n\nfunction formatYear(d, p) {\n  return pad(d.getFullYear() % 100, p, 2);\n}\n\nfunction formatFullYear(d, p) {\n  return pad(d.getFullYear() % 10000, p, 4);\n}\n\nfunction formatZone(d) {\n  var z = d.getTimezoneOffset();\n  return (z > 0 ? \"-\" : (z *= -1, \"+\"))\n      + pad(z / 60 | 0, \"0\", 2)\n      + pad(z % 60, \"0\", 2);\n}\n\nfunction formatUTCDayOfMonth(d, p) {\n  return pad(d.getUTCDate(), p, 2);\n}\n\nfunction formatUTCHour24(d, p) {\n  return pad(d.getUTCHours(), p, 2);\n}\n\nfunction formatUTCHour12(d, p) {\n  return pad(d.getUTCHours() % 12 || 12, p, 2);\n}\n\nfunction formatUTCDayOfYear(d, p) {\n  return pad(1 + utcDay.count(utcYear(d), d), p, 3);\n}\n\nfunction formatUTCMilliseconds(d, p) {\n  return pad(d.getUTCMilliseconds(), p, 3);\n}\n\nfunction formatUTCMonthNumber(d, p) {\n  return pad(d.getUTCMonth() + 1, p, 2);\n}\n\nfunction formatUTCMinutes(d, p) {\n  return pad(d.getUTCMinutes(), p, 2);\n}\n\nfunction formatUTCSeconds(d, p) {\n  return pad(d.getUTCSeconds(), p, 2);\n}\n\nfunction formatUTCWeekNumberSunday(d, p) {\n  return pad(utcSunday.count(utcYear(d), d), p, 2);\n}\n\nfunction formatUTCWeekdayNumber(d) {\n  return d.getUTCDay();\n}\n\nfunction formatUTCWeekNumberMonday(d, p) {\n  return pad(utcMonday.count(utcYear(d), d), p, 2);\n}\n\nfunction formatUTCYear(d, p) {\n  return pad(d.getUTCFullYear() % 100, p, 2);\n}\n\nfunction formatUTCFullYear(d, p) {\n  return pad(d.getUTCFullYear() % 10000, p, 4);\n}\n\nfunction formatUTCZone() {\n  return \"+0000\";\n}\n\nfunction formatLiteralPercent() {\n  return \"%\";\n}\n\nvar locale$1;\n\n\n\n\n\ndefaultLocale$1({\n  dateTime: \"%x, %X\",\n  date: \"%-m/%-d/%Y\",\n  time: \"%-I:%M:%S %p\",\n  periods: [\"AM\", \"PM\"],\n  days: [\"Sunday\", \"Monday\", \"Tuesday\", \"Wednesday\", \"Thursday\", \"Friday\", \"Saturday\"],\n  shortDays: [\"Sun\", \"Mon\", \"Tue\", \"Wed\", \"Thu\", \"Fri\", \"Sat\"],\n  months: [\"January\", \"February\", \"March\", \"April\", \"May\", \"June\", \"July\", \"August\", \"September\", \"October\", \"November\", \"December\"],\n  shortMonths: [\"Jan\", \"Feb\", \"Mar\", \"Apr\", \"May\", \"Jun\", \"Jul\", \"Aug\", \"Sep\", \"Oct\", \"Nov\", \"Dec\"]\n});\n\nfunction defaultLocale$1(definition) {\n  locale$1 = formatLocale$1(definition);\n  exports.timeFormat = locale$1.format;\n  exports.timeParse = locale$1.parse;\n  exports.utcFormat = locale$1.utcFormat;\n  exports.utcParse = locale$1.utcParse;\n  return locale$1;\n}\n\nvar isoSpecifier = \"%Y-%m-%dT%H:%M:%S.%LZ\";\n\nfunction formatIsoNative(date) {\n  return date.toISOString();\n}\n\nvar formatIso = Date.prototype.toISOString\n    ? formatIsoNative\n    : exports.utcFormat(isoSpecifier);\n\nfunction parseIsoNative(string) {\n  var date = new Date(string);\n  return isNaN(date) ? null : date;\n}\n\nvar parseIso = +new Date(\"2000-01-01T00:00:00.000Z\")\n    ? parseIsoNative\n    : exports.utcParse(isoSpecifier);\n\nvar durationSecond = 1000;\nvar durationMinute = durationSecond * 60;\nvar durationHour = durationMinute * 60;\nvar durationDay = durationHour * 24;\nvar durationWeek = durationDay * 7;\nvar durationMonth = durationDay * 30;\nvar durationYear = durationDay * 365;\n\nfunction date$1(t) {\n  return new Date(t);\n}\n\nfunction number$3(t) {\n  return t instanceof Date ? +t : +new Date(+t);\n}\n\nfunction calendar(year$$1, month$$1, week, day$$1, hour$$1, minute$$1, second$$1, millisecond$$1, format) {\n  var scale = continuous(deinterpolateLinear, reinterpolate),\n      invert = scale.invert,\n      domain = scale.domain;\n\n  var formatMillisecond = format(\".%L\"),\n      formatSecond = format(\":%S\"),\n      formatMinute = format(\"%I:%M\"),\n      formatHour = format(\"%I %p\"),\n      formatDay = format(\"%a %d\"),\n      formatWeek = format(\"%b %d\"),\n      formatMonth = format(\"%B\"),\n      formatYear = format(\"%Y\");\n\n  var tickIntervals = [\n    [second$$1,  1,      durationSecond],\n    [second$$1,  5,  5 * durationSecond],\n    [second$$1, 15, 15 * durationSecond],\n    [second$$1, 30, 30 * durationSecond],\n    [minute$$1,  1,      durationMinute],\n    [minute$$1,  5,  5 * durationMinute],\n    [minute$$1, 15, 15 * durationMinute],\n    [minute$$1, 30, 30 * durationMinute],\n    [  hour$$1,  1,      durationHour  ],\n    [  hour$$1,  3,  3 * durationHour  ],\n    [  hour$$1,  6,  6 * durationHour  ],\n    [  hour$$1, 12, 12 * durationHour  ],\n    [   day$$1,  1,      durationDay   ],\n    [   day$$1,  2,  2 * durationDay   ],\n    [  week,  1,      durationWeek  ],\n    [ month$$1,  1,      durationMonth ],\n    [ month$$1,  3,  3 * durationMonth ],\n    [  year$$1,  1,      durationYear  ]\n  ];\n\n  function tickFormat(date) {\n    return (second$$1(date) < date ? formatMillisecond\n        : minute$$1(date) < date ? formatSecond\n        : hour$$1(date) < date ? formatMinute\n        : day$$1(date) < date ? formatHour\n        : month$$1(date) < date ? (week(date) < date ? formatDay : formatWeek)\n        : year$$1(date) < date ? formatMonth\n        : formatYear)(date);\n  }\n\n  function tickInterval(interval, start, stop, step) {\n    if (interval == null) interval = 10;\n\n    // If a desired tick count is specified, pick a reasonable tick interval\n    // based on the extent of the domain and a rough estimate of tick size.\n    // Otherwise, assume interval is already a time interval and use it.\n    if (typeof interval === \"number\") {\n      var target = Math.abs(stop - start) / interval,\n          i = bisector(function(i) { return i[2]; }).right(tickIntervals, target);\n      if (i === tickIntervals.length) {\n        step = tickStep(start / durationYear, stop / durationYear, interval);\n        interval = year$$1;\n      } else if (i) {\n        i = tickIntervals[target / tickIntervals[i - 1][2] < tickIntervals[i][2] / target ? i - 1 : i];\n        step = i[1];\n        interval = i[0];\n      } else {\n        step = tickStep(start, stop, interval);\n        interval = millisecond$$1;\n      }\n    }\n\n    return step == null ? interval : interval.every(step);\n  }\n\n  scale.invert = function(y) {\n    return new Date(invert(y));\n  };\n\n  scale.domain = function(_) {\n    return arguments.length ? domain(map$3.call(_, number$3)) : domain().map(date$1);\n  };\n\n  scale.ticks = function(interval, step) {\n    var d = domain(),\n        t0 = d[0],\n        t1 = d[d.length - 1],\n        r = t1 < t0,\n        t;\n    if (r) t = t0, t0 = t1, t1 = t;\n    t = tickInterval(interval, t0, t1, step);\n    t = t ? t.range(t0, t1 + 1) : []; // inclusive stop\n    return r ? t.reverse() : t;\n  };\n\n  scale.tickFormat = function(count, specifier) {\n    return specifier == null ? tickFormat : format(specifier);\n  };\n\n  scale.nice = function(interval, step) {\n    var d = domain();\n    return (interval = tickInterval(interval, d[0], d[d.length - 1], step))\n        ? domain(nice(d, interval))\n        : scale;\n  };\n\n  scale.copy = function() {\n    return copy(scale, calendar(year$$1, month$$1, week, day$$1, hour$$1, minute$$1, second$$1, millisecond$$1, format));\n  };\n\n  return scale;\n}\n\nvar time = function() {\n  return calendar(year, month, sunday, day, hour, minute, second, millisecond, exports.timeFormat).domain([new Date(2000, 0, 1), new Date(2000, 0, 2)]);\n};\n\nvar utcTime = function() {\n  return calendar(utcYear, utcMonth, utcSunday, utcDay, utcHour, utcMinute, second, millisecond, exports.utcFormat).domain([Date.UTC(2000, 0, 1), Date.UTC(2000, 0, 2)]);\n};\n\nvar colors = function(s) {\n  return s.match(/.{6}/g).map(function(x) {\n    return \"#\" + x;\n  });\n};\n\nvar category10 = colors(\"1f77b4ff7f0e2ca02cd627289467bd8c564be377c27f7f7fbcbd2217becf\");\n\nvar category20b = colors(\"393b795254a36b6ecf9c9ede6379398ca252b5cf6bcedb9c8c6d31bd9e39e7ba52e7cb94843c39ad494ad6616be7969c7b4173a55194ce6dbdde9ed6\");\n\nvar category20c = colors(\"3182bd6baed69ecae1c6dbefe6550dfd8d3cfdae6bfdd0a231a35474c476a1d99bc7e9c0756bb19e9ac8bcbddcdadaeb636363969696bdbdbdd9d9d9\");\n\nvar category20 = colors(\"1f77b4aec7e8ff7f0effbb782ca02c98df8ad62728ff98969467bdc5b0d58c564bc49c94e377c2f7b6d27f7f7fc7c7c7bcbd22dbdb8d17becf9edae5\");\n\nvar cubehelix$3 = cubehelixLong(cubehelix(300, 0.5, 0.0), cubehelix(-240, 0.5, 1.0));\n\nvar warm = cubehelixLong(cubehelix(-100, 0.75, 0.35), cubehelix(80, 1.50, 0.8));\n\nvar cool = cubehelixLong(cubehelix(260, 0.75, 0.35), cubehelix(80, 1.50, 0.8));\n\nvar rainbow = cubehelix();\n\nvar rainbow$1 = function(t) {\n  if (t < 0 || t > 1) t -= Math.floor(t);\n  var ts = Math.abs(t - 0.5);\n  rainbow.h = 360 * t - 100;\n  rainbow.s = 1.5 - 1.5 * ts;\n  rainbow.l = 0.8 - 0.9 * ts;\n  return rainbow + \"\";\n};\n\nfunction ramp(range) {\n  var n = range.length;\n  return function(t) {\n    return range[Math.max(0, Math.min(n - 1, Math.floor(t * n)))];\n  };\n}\n\nvar viridis = ramp(colors(\"44015444025645045745055946075a46085c460a5d460b5e470d60470e6147106347116447136548146748166848176948186a481a6c481b6d481c6e481d6f481f70482071482173482374482475482576482677482878482979472a7a472c7a472d7b472e7c472f7d46307e46327e46337f463480453581453781453882443983443a83443b84433d84433e85423f854240864241864142874144874045884046883f47883f48893e49893e4a893e4c8a3d4d8a3d4e8a3c4f8a3c508b3b518b3b528b3a538b3a548c39558c39568c38588c38598c375a8c375b8d365c8d365d8d355e8d355f8d34608d34618d33628d33638d32648e32658e31668e31678e31688e30698e306a8e2f6b8e2f6c8e2e6d8e2e6e8e2e6f8e2d708e2d718e2c718e2c728e2c738e2b748e2b758e2a768e2a778e2a788e29798e297a8e297b8e287c8e287d8e277e8e277f8e27808e26818e26828e26828e25838e25848e25858e24868e24878e23888e23898e238a8d228b8d228c8d228d8d218e8d218f8d21908d21918c20928c20928c20938c1f948c1f958b1f968b1f978b1f988b1f998a1f9a8a1e9b8a1e9c891e9d891f9e891f9f881fa0881fa1881fa1871fa28720a38620a48621a58521a68522a78522a88423a98324aa8325ab8225ac8226ad8127ad8128ae8029af7f2ab07f2cb17e2db27d2eb37c2fb47c31b57b32b67a34b67935b77937b87838b9773aba763bbb753dbc743fbc7340bd7242be7144bf7046c06f48c16e4ac16d4cc26c4ec36b50c46a52c56954c56856c66758c7655ac8645cc8635ec96260ca6063cb5f65cb5e67cc5c69cd5b6ccd5a6ece5870cf5773d05675d05477d1537ad1517cd2507fd34e81d34d84d44b86d54989d5488bd6468ed64590d74393d74195d84098d83e9bd93c9dd93ba0da39a2da37a5db36a8db34aadc32addc30b0dd2fb2dd2db5de2bb8de29bade28bddf26c0df25c2df23c5e021c8e020cae11fcde11dd0e11cd2e21bd5e21ad8e219dae319dde318dfe318e2e418e5e419e7e419eae51aece51befe51cf1e51df4e61ef6e620f8e621fbe723fde725\"));\n\nvar magma = ramp(colors(\"00000401000501010601010802010902020b02020d03030f03031204041405041606051806051a07061c08071e0907200a08220b09240c09260d0a290e0b2b100b2d110c2f120d31130d34140e36150e38160f3b180f3d19103f1a10421c10441d11471e114920114b21114e22115024125325125527125829115a2a115c2c115f2d11612f116331116533106734106936106b38106c390f6e3b0f703d0f713f0f72400f74420f75440f764510774710784910784a10794c117a4e117b4f127b51127c52137c54137d56147d57157e59157e5a167e5c167f5d177f5f187f601880621980641a80651a80671b80681c816a1c816b1d816d1d816e1e81701f81721f817320817521817621817822817922827b23827c23827e24828025828125818326818426818627818827818928818b29818c29818e2a81902a81912b81932b80942c80962c80982d80992d809b2e7f9c2e7f9e2f7fa02f7fa1307ea3307ea5317ea6317da8327daa337dab337cad347cae347bb0357bb2357bb3367ab5367ab73779b83779ba3878bc3978bd3977bf3a77c03a76c23b75c43c75c53c74c73d73c83e73ca3e72cc3f71cd4071cf4070d0416fd2426fd3436ed5446dd6456cd8456cd9466bdb476adc4869de4968df4a68e04c67e24d66e34e65e44f64e55064e75263e85362e95462ea5661eb5760ec5860ed5a5fee5b5eef5d5ef05f5ef1605df2625df2645cf3655cf4675cf4695cf56b5cf66c5cf66e5cf7705cf7725cf8745cf8765cf9785df9795df97b5dfa7d5efa7f5efa815ffb835ffb8560fb8761fc8961fc8a62fc8c63fc8e64fc9065fd9266fd9467fd9668fd9869fd9a6afd9b6bfe9d6cfe9f6dfea16efea36ffea571fea772fea973feaa74feac76feae77feb078feb27afeb47bfeb67cfeb77efeb97ffebb81febd82febf84fec185fec287fec488fec68afec88cfeca8dfecc8ffecd90fecf92fed194fed395fed597fed799fed89afdda9cfddc9efddea0fde0a1fde2a3fde3a5fde5a7fde7a9fde9aafdebacfcecaefceeb0fcf0b2fcf2b4fcf4b6fcf6b8fcf7b9fcf9bbfcfbbdfcfdbf\"));\n\nvar inferno = ramp(colors(\"00000401000501010601010802010a02020c02020e03021004031204031405041706041907051b08051d09061f0a07220b07240c08260d08290e092b10092d110a30120a32140b34150b37160b39180c3c190c3e1b0c411c0c431e0c451f0c48210c4a230c4c240c4f260c51280b53290b552b0b572d0b592f0a5b310a5c320a5e340a5f3609613809623909633b09643d09653e0966400a67420a68440a68450a69470b6a490b6a4a0c6b4c0c6b4d0d6c4f0d6c510e6c520e6d540f6d550f6d57106e59106e5a116e5c126e5d126e5f136e61136e62146e64156e65156e67166e69166e6a176e6c186e6d186e6f196e71196e721a6e741a6e751b6e771c6d781c6d7a1d6d7c1d6d7d1e6d7f1e6c801f6c82206c84206b85216b87216b88226a8a226a8c23698d23698f24699025689225689326679526679727669827669a28659b29649d29649f2a63a02a63a22b62a32c61a52c60a62d60a82e5fa92e5eab2f5ead305dae305cb0315bb1325ab3325ab43359b63458b73557b93556ba3655bc3754bd3853bf3952c03a51c13a50c33b4fc43c4ec63d4dc73e4cc83f4bca404acb4149cc4248ce4347cf4446d04545d24644d34743d44842d54a41d74b3fd84c3ed94d3dda4e3cdb503bdd513ade5238df5337e05536e15635e25734e35933e45a31e55c30e65d2fe75e2ee8602de9612bea632aeb6429eb6628ec6726ed6925ee6a24ef6c23ef6e21f06f20f1711ff1731df2741cf3761bf37819f47918f57b17f57d15f67e14f68013f78212f78410f8850ff8870ef8890cf98b0bf98c0af98e09fa9008fa9207fa9407fb9606fb9706fb9906fb9b06fb9d07fc9f07fca108fca309fca50afca60cfca80dfcaa0ffcac11fcae12fcb014fcb216fcb418fbb61afbb81dfbba1ffbbc21fbbe23fac026fac228fac42afac62df9c72ff9c932f9cb35f8cd37f8cf3af7d13df7d340f6d543f6d746f5d949f5db4cf4dd4ff4df53f4e156f3e35af3e55df2e661f2e865f2ea69f1ec6df1ed71f1ef75f1f179f2f27df2f482f3f586f3f68af4f88ef5f992f6fa96f8fb9af9fc9dfafda1fcffa4\"));\n\nvar plasma = ramp(colors(\"0d088710078813078916078a19068c1b068d1d068e20068f2206902406912605912805922a05932c05942e05952f059631059733059735049837049938049a3a049a3c049b3e049c3f049c41049d43039e44039e46039f48039f4903a04b03a14c02a14e02a25002a25102a35302a35502a45601a45801a45901a55b01a55c01a65e01a66001a66100a76300a76400a76600a76700a86900a86a00a86c00a86e00a86f00a87100a87201a87401a87501a87701a87801a87a02a87b02a87d03a87e03a88004a88104a78305a78405a78606a68707a68808a68a09a58b0aa58d0ba58e0ca48f0da4910ea3920fa39410a29511a19613a19814a099159f9a169f9c179e9d189d9e199da01a9ca11b9ba21d9aa31e9aa51f99a62098a72197a82296aa2395ab2494ac2694ad2793ae2892b02991b12a90b22b8fb32c8eb42e8db52f8cb6308bb7318ab83289ba3388bb3488bc3587bd3786be3885bf3984c03a83c13b82c23c81c33d80c43e7fc5407ec6417dc7427cc8437bc9447aca457acb4679cc4778cc4977cd4a76ce4b75cf4c74d04d73d14e72d24f71d35171d45270d5536fd5546ed6556dd7566cd8576bd9586ada5a6ada5b69db5c68dc5d67dd5e66de5f65de6164df6263e06363e16462e26561e26660e3685fe4695ee56a5de56b5de66c5ce76e5be76f5ae87059e97158e97257ea7457eb7556eb7655ec7754ed7953ed7a52ee7b51ef7c51ef7e50f07f4ff0804ef1814df1834cf2844bf3854bf3874af48849f48948f58b47f58c46f68d45f68f44f79044f79143f79342f89441f89540f9973ff9983ef99a3efa9b3dfa9c3cfa9e3bfb9f3afba139fba238fca338fca537fca636fca835fca934fdab33fdac33fdae32fdaf31fdb130fdb22ffdb42ffdb52efeb72dfeb82cfeba2cfebb2bfebd2afebe2afec029fdc229fdc328fdc527fdc627fdc827fdca26fdcb26fccd25fcce25fcd025fcd225fbd324fbd524fbd724fad824fada24f9dc24f9dd25f8df25f8e125f7e225f7e425f6e626f6e826f5e926f5eb27f4ed27f3ee27f3f027f2f227f1f426f1f525f0f724f0f921\"));\n\nfunction sequential(interpolator) {\n  var x0 = 0,\n      x1 = 1,\n      clamp = false;\n\n  function scale(x) {\n    var t = (x - x0) / (x1 - x0);\n    return interpolator(clamp ? Math.max(0, Math.min(1, t)) : t);\n  }\n\n  scale.domain = function(_) {\n    return arguments.length ? (x0 = +_[0], x1 = +_[1], scale) : [x0, x1];\n  };\n\n  scale.clamp = function(_) {\n    return arguments.length ? (clamp = !!_, scale) : clamp;\n  };\n\n  scale.interpolator = function(_) {\n    return arguments.length ? (interpolator = _, scale) : interpolator;\n  };\n\n  scale.copy = function() {\n    return sequential(interpolator).domain([x0, x1]).clamp(clamp);\n  };\n\n  return linearish(scale);\n}\n\nvar constant$10 = function(x) {\n  return function constant() {\n    return x;\n  };\n};\n\nvar abs$1 = Math.abs;\nvar atan2$1 = Math.atan2;\nvar cos$2 = Math.cos;\nvar max$2 = Math.max;\nvar min$1 = Math.min;\nvar sin$2 = Math.sin;\nvar sqrt$2 = Math.sqrt;\n\nvar epsilon$3 = 1e-12;\nvar pi$4 = Math.PI;\nvar halfPi$3 = pi$4 / 2;\nvar tau$4 = 2 * pi$4;\n\nfunction acos$1(x) {\n  return x > 1 ? 0 : x < -1 ? pi$4 : Math.acos(x);\n}\n\nfunction asin$1(x) {\n  return x >= 1 ? halfPi$3 : x <= -1 ? -halfPi$3 : Math.asin(x);\n}\n\nfunction arcInnerRadius(d) {\n  return d.innerRadius;\n}\n\nfunction arcOuterRadius(d) {\n  return d.outerRadius;\n}\n\nfunction arcStartAngle(d) {\n  return d.startAngle;\n}\n\nfunction arcEndAngle(d) {\n  return d.endAngle;\n}\n\nfunction arcPadAngle(d) {\n  return d && d.padAngle; // Note: optional!\n}\n\nfunction intersect(x0, y0, x1, y1, x2, y2, x3, y3) {\n  var x10 = x1 - x0, y10 = y1 - y0,\n      x32 = x3 - x2, y32 = y3 - y2,\n      t = (x32 * (y0 - y2) - y32 * (x0 - x2)) / (y32 * x10 - x32 * y10);\n  return [x0 + t * x10, y0 + t * y10];\n}\n\n// Compute perpendicular offset line of length rc.\n// http://mathworld.wolfram.com/Circle-LineIntersection.html\nfunction cornerTangents(x0, y0, x1, y1, r1, rc, cw) {\n  var x01 = x0 - x1,\n      y01 = y0 - y1,\n      lo = (cw ? rc : -rc) / sqrt$2(x01 * x01 + y01 * y01),\n      ox = lo * y01,\n      oy = -lo * x01,\n      x11 = x0 + ox,\n      y11 = y0 + oy,\n      x10 = x1 + ox,\n      y10 = y1 + oy,\n      x00 = (x11 + x10) / 2,\n      y00 = (y11 + y10) / 2,\n      dx = x10 - x11,\n      dy = y10 - y11,\n      d2 = dx * dx + dy * dy,\n      r = r1 - rc,\n      D = x11 * y10 - x10 * y11,\n      d = (dy < 0 ? -1 : 1) * sqrt$2(max$2(0, r * r * d2 - D * D)),\n      cx0 = (D * dy - dx * d) / d2,\n      cy0 = (-D * dx - dy * d) / d2,\n      cx1 = (D * dy + dx * d) / d2,\n      cy1 = (-D * dx + dy * d) / d2,\n      dx0 = cx0 - x00,\n      dy0 = cy0 - y00,\n      dx1 = cx1 - x00,\n      dy1 = cy1 - y00;\n\n  // Pick the closer of the two intersection points.\n  // TODO Is there a faster way to determine which intersection to use?\n  if (dx0 * dx0 + dy0 * dy0 > dx1 * dx1 + dy1 * dy1) cx0 = cx1, cy0 = cy1;\n\n  return {\n    cx: cx0,\n    cy: cy0,\n    x01: -ox,\n    y01: -oy,\n    x11: cx0 * (r1 / r - 1),\n    y11: cy0 * (r1 / r - 1)\n  };\n}\n\nvar arc = function() {\n  var innerRadius = arcInnerRadius,\n      outerRadius = arcOuterRadius,\n      cornerRadius = constant$10(0),\n      padRadius = null,\n      startAngle = arcStartAngle,\n      endAngle = arcEndAngle,\n      padAngle = arcPadAngle,\n      context = null;\n\n  function arc() {\n    var buffer,\n        r,\n        r0 = +innerRadius.apply(this, arguments),\n        r1 = +outerRadius.apply(this, arguments),\n        a0 = startAngle.apply(this, arguments) - halfPi$3,\n        a1 = endAngle.apply(this, arguments) - halfPi$3,\n        da = abs$1(a1 - a0),\n        cw = a1 > a0;\n\n    if (!context) context = buffer = path();\n\n    // Ensure that the outer radius is always larger than the inner radius.\n    if (r1 < r0) r = r1, r1 = r0, r0 = r;\n\n    // Is it a point?\n    if (!(r1 > epsilon$3)) context.moveTo(0, 0);\n\n    // Or is it a circle or annulus?\n    else if (da > tau$4 - epsilon$3) {\n      context.moveTo(r1 * cos$2(a0), r1 * sin$2(a0));\n      context.arc(0, 0, r1, a0, a1, !cw);\n      if (r0 > epsilon$3) {\n        context.moveTo(r0 * cos$2(a1), r0 * sin$2(a1));\n        context.arc(0, 0, r0, a1, a0, cw);\n      }\n    }\n\n    // Or is it a circular or annular sector?\n    else {\n      var a01 = a0,\n          a11 = a1,\n          a00 = a0,\n          a10 = a1,\n          da0 = da,\n          da1 = da,\n          ap = padAngle.apply(this, arguments) / 2,\n          rp = (ap > epsilon$3) && (padRadius ? +padRadius.apply(this, arguments) : sqrt$2(r0 * r0 + r1 * r1)),\n          rc = min$1(abs$1(r1 - r0) / 2, +cornerRadius.apply(this, arguments)),\n          rc0 = rc,\n          rc1 = rc,\n          t0,\n          t1;\n\n      // Apply padding? Note that since r1 ≥ r0, da1 ≥ da0.\n      if (rp > epsilon$3) {\n        var p0 = asin$1(rp / r0 * sin$2(ap)),\n            p1 = asin$1(rp / r1 * sin$2(ap));\n        if ((da0 -= p0 * 2) > epsilon$3) p0 *= (cw ? 1 : -1), a00 += p0, a10 -= p0;\n        else da0 = 0, a00 = a10 = (a0 + a1) / 2;\n        if ((da1 -= p1 * 2) > epsilon$3) p1 *= (cw ? 1 : -1), a01 += p1, a11 -= p1;\n        else da1 = 0, a01 = a11 = (a0 + a1) / 2;\n      }\n\n      var x01 = r1 * cos$2(a01),\n          y01 = r1 * sin$2(a01),\n          x10 = r0 * cos$2(a10),\n          y10 = r0 * sin$2(a10);\n\n      // Apply rounded corners?\n      if (rc > epsilon$3) {\n        var x11 = r1 * cos$2(a11),\n            y11 = r1 * sin$2(a11),\n            x00 = r0 * cos$2(a00),\n            y00 = r0 * sin$2(a00);\n\n        // Restrict the corner radius according to the sector angle.\n        if (da < pi$4) {\n          var oc = da0 > epsilon$3 ? intersect(x01, y01, x00, y00, x11, y11, x10, y10) : [x10, y10],\n              ax = x01 - oc[0],\n              ay = y01 - oc[1],\n              bx = x11 - oc[0],\n              by = y11 - oc[1],\n              kc = 1 / sin$2(acos$1((ax * bx + ay * by) / (sqrt$2(ax * ax + ay * ay) * sqrt$2(bx * bx + by * by))) / 2),\n              lc = sqrt$2(oc[0] * oc[0] + oc[1] * oc[1]);\n          rc0 = min$1(rc, (r0 - lc) / (kc - 1));\n          rc1 = min$1(rc, (r1 - lc) / (kc + 1));\n        }\n      }\n\n      // Is the sector collapsed to a line?\n      if (!(da1 > epsilon$3)) context.moveTo(x01, y01);\n\n      // Does the sector’s outer ring have rounded corners?\n      else if (rc1 > epsilon$3) {\n        t0 = cornerTangents(x00, y00, x01, y01, r1, rc1, cw);\n        t1 = cornerTangents(x11, y11, x10, y10, r1, rc1, cw);\n\n        context.moveTo(t0.cx + t0.x01, t0.cy + t0.y01);\n\n        // Have the corners merged?\n        if (rc1 < rc) context.arc(t0.cx, t0.cy, rc1, atan2$1(t0.y01, t0.x01), atan2$1(t1.y01, t1.x01), !cw);\n\n        // Otherwise, draw the two corners and the ring.\n        else {\n          context.arc(t0.cx, t0.cy, rc1, atan2$1(t0.y01, t0.x01), atan2$1(t0.y11, t0.x11), !cw);\n          context.arc(0, 0, r1, atan2$1(t0.cy + t0.y11, t0.cx + t0.x11), atan2$1(t1.cy + t1.y11, t1.cx + t1.x11), !cw);\n          context.arc(t1.cx, t1.cy, rc1, atan2$1(t1.y11, t1.x11), atan2$1(t1.y01, t1.x01), !cw);\n        }\n      }\n\n      // Or is the outer ring just a circular arc?\n      else context.moveTo(x01, y01), context.arc(0, 0, r1, a01, a11, !cw);\n\n      // Is there no inner ring, and it’s a circular sector?\n      // Or perhaps it’s an annular sector collapsed due to padding?\n      if (!(r0 > epsilon$3) || !(da0 > epsilon$3)) context.lineTo(x10, y10);\n\n      // Does the sector’s inner ring (or point) have rounded corners?\n      else if (rc0 > epsilon$3) {\n        t0 = cornerTangents(x10, y10, x11, y11, r0, -rc0, cw);\n        t1 = cornerTangents(x01, y01, x00, y00, r0, -rc0, cw);\n\n        context.lineTo(t0.cx + t0.x01, t0.cy + t0.y01);\n\n        // Have the corners merged?\n        if (rc0 < rc) context.arc(t0.cx, t0.cy, rc0, atan2$1(t0.y01, t0.x01), atan2$1(t1.y01, t1.x01), !cw);\n\n        // Otherwise, draw the two corners and the ring.\n        else {\n          context.arc(t0.cx, t0.cy, rc0, atan2$1(t0.y01, t0.x01), atan2$1(t0.y11, t0.x11), !cw);\n          context.arc(0, 0, r0, atan2$1(t0.cy + t0.y11, t0.cx + t0.x11), atan2$1(t1.cy + t1.y11, t1.cx + t1.x11), cw);\n          context.arc(t1.cx, t1.cy, rc0, atan2$1(t1.y11, t1.x11), atan2$1(t1.y01, t1.x01), !cw);\n        }\n      }\n\n      // Or is the inner ring just a circular arc?\n      else context.arc(0, 0, r0, a10, a00, cw);\n    }\n\n    context.closePath();\n\n    if (buffer) return context = null, buffer + \"\" || null;\n  }\n\n  arc.centroid = function() {\n    var r = (+innerRadius.apply(this, arguments) + +outerRadius.apply(this, arguments)) / 2,\n        a = (+startAngle.apply(this, arguments) + +endAngle.apply(this, arguments)) / 2 - pi$4 / 2;\n    return [cos$2(a) * r, sin$2(a) * r];\n  };\n\n  arc.innerRadius = function(_) {\n    return arguments.length ? (innerRadius = typeof _ === \"function\" ? _ : constant$10(+_), arc) : innerRadius;\n  };\n\n  arc.outerRadius = function(_) {\n    return arguments.length ? (outerRadius = typeof _ === \"function\" ? _ : constant$10(+_), arc) : outerRadius;\n  };\n\n  arc.cornerRadius = function(_) {\n    return arguments.length ? (cornerRadius = typeof _ === \"function\" ? _ : constant$10(+_), arc) : cornerRadius;\n  };\n\n  arc.padRadius = function(_) {\n    return arguments.length ? (padRadius = _ == null ? null : typeof _ === \"function\" ? _ : constant$10(+_), arc) : padRadius;\n  };\n\n  arc.startAngle = function(_) {\n    return arguments.length ? (startAngle = typeof _ === \"function\" ? _ : constant$10(+_), arc) : startAngle;\n  };\n\n  arc.endAngle = function(_) {\n    return arguments.length ? (endAngle = typeof _ === \"function\" ? _ : constant$10(+_), arc) : endAngle;\n  };\n\n  arc.padAngle = function(_) {\n    return arguments.length ? (padAngle = typeof _ === \"function\" ? _ : constant$10(+_), arc) : padAngle;\n  };\n\n  arc.context = function(_) {\n    return arguments.length ? ((context = _ == null ? null : _), arc) : context;\n  };\n\n  return arc;\n};\n\nfunction Linear(context) {\n  this._context = context;\n}\n\nLinear.prototype = {\n  areaStart: function() {\n    this._line = 0;\n  },\n  areaEnd: function() {\n    this._line = NaN;\n  },\n  lineStart: function() {\n    this._point = 0;\n  },\n  lineEnd: function() {\n    if (this._line || (this._line !== 0 && this._point === 1)) this._context.closePath();\n    this._line = 1 - this._line;\n  },\n  point: function(x, y) {\n    x = +x, y = +y;\n    switch (this._point) {\n      case 0: this._point = 1; this._line ? this._context.lineTo(x, y) : this._context.moveTo(x, y); break;\n      case 1: this._point = 2; // proceed\n      default: this._context.lineTo(x, y); break;\n    }\n  }\n};\n\nvar curveLinear = function(context) {\n  return new Linear(context);\n};\n\nfunction x$3(p) {\n  return p[0];\n}\n\nfunction y$3(p) {\n  return p[1];\n}\n\nvar line = function() {\n  var x$$1 = x$3,\n      y$$1 = y$3,\n      defined = constant$10(true),\n      context = null,\n      curve = curveLinear,\n      output = null;\n\n  function line(data) {\n    var i,\n        n = data.length,\n        d,\n        defined0 = false,\n        buffer;\n\n    if (context == null) output = curve(buffer = path());\n\n    for (i = 0; i <= n; ++i) {\n      if (!(i < n && defined(d = data[i], i, data)) === defined0) {\n        if (defined0 = !defined0) output.lineStart();\n        else output.lineEnd();\n      }\n      if (defined0) output.point(+x$$1(d, i, data), +y$$1(d, i, data));\n    }\n\n    if (buffer) return output = null, buffer + \"\" || null;\n  }\n\n  line.x = function(_) {\n    return arguments.length ? (x$$1 = typeof _ === \"function\" ? _ : constant$10(+_), line) : x$$1;\n  };\n\n  line.y = function(_) {\n    return arguments.length ? (y$$1 = typeof _ === \"function\" ? _ : constant$10(+_), line) : y$$1;\n  };\n\n  line.defined = function(_) {\n    return arguments.length ? (defined = typeof _ === \"function\" ? _ : constant$10(!!_), line) : defined;\n  };\n\n  line.curve = function(_) {\n    return arguments.length ? (curve = _, context != null && (output = curve(context)), line) : curve;\n  };\n\n  line.context = function(_) {\n    return arguments.length ? (_ == null ? context = output = null : output = curve(context = _), line) : context;\n  };\n\n  return line;\n};\n\nvar area$2 = function() {\n  var x0 = x$3,\n      x1 = null,\n      y0 = constant$10(0),\n      y1 = y$3,\n      defined = constant$10(true),\n      context = null,\n      curve = curveLinear,\n      output = null;\n\n  function area(data) {\n    var i,\n        j,\n        k,\n        n = data.length,\n        d,\n        defined0 = false,\n        buffer,\n        x0z = new Array(n),\n        y0z = new Array(n);\n\n    if (context == null) output = curve(buffer = path());\n\n    for (i = 0; i <= n; ++i) {\n      if (!(i < n && defined(d = data[i], i, data)) === defined0) {\n        if (defined0 = !defined0) {\n          j = i;\n          output.areaStart();\n          output.lineStart();\n        } else {\n          output.lineEnd();\n          output.lineStart();\n          for (k = i - 1; k >= j; --k) {\n            output.point(x0z[k], y0z[k]);\n          }\n          output.lineEnd();\n          output.areaEnd();\n        }\n      }\n      if (defined0) {\n        x0z[i] = +x0(d, i, data), y0z[i] = +y0(d, i, data);\n        output.point(x1 ? +x1(d, i, data) : x0z[i], y1 ? +y1(d, i, data) : y0z[i]);\n      }\n    }\n\n    if (buffer) return output = null, buffer + \"\" || null;\n  }\n\n  function arealine() {\n    return line().defined(defined).curve(curve).context(context);\n  }\n\n  area.x = function(_) {\n    return arguments.length ? (x0 = typeof _ === \"function\" ? _ : constant$10(+_), x1 = null, area) : x0;\n  };\n\n  area.x0 = function(_) {\n    return arguments.length ? (x0 = typeof _ === \"function\" ? _ : constant$10(+_), area) : x0;\n  };\n\n  area.x1 = function(_) {\n    return arguments.length ? (x1 = _ == null ? null : typeof _ === \"function\" ? _ : constant$10(+_), area) : x1;\n  };\n\n  area.y = function(_) {\n    return arguments.length ? (y0 = typeof _ === \"function\" ? _ : constant$10(+_), y1 = null, area) : y0;\n  };\n\n  area.y0 = function(_) {\n    return arguments.length ? (y0 = typeof _ === \"function\" ? _ : constant$10(+_), area) : y0;\n  };\n\n  area.y1 = function(_) {\n    return arguments.length ? (y1 = _ == null ? null : typeof _ === \"function\" ? _ : constant$10(+_), area) : y1;\n  };\n\n  area.lineX0 =\n  area.lineY0 = function() {\n    return arealine().x(x0).y(y0);\n  };\n\n  area.lineY1 = function() {\n    return arealine().x(x0).y(y1);\n  };\n\n  area.lineX1 = function() {\n    return arealine().x(x1).y(y0);\n  };\n\n  area.defined = function(_) {\n    return arguments.length ? (defined = typeof _ === \"function\" ? _ : constant$10(!!_), area) : defined;\n  };\n\n  area.curve = function(_) {\n    return arguments.length ? (curve = _, context != null && (output = curve(context)), area) : curve;\n  };\n\n  area.context = function(_) {\n    return arguments.length ? (_ == null ? context = output = null : output = curve(context = _), area) : context;\n  };\n\n  return area;\n};\n\nvar descending$1 = function(a, b) {\n  return b < a ? -1 : b > a ? 1 : b >= a ? 0 : NaN;\n};\n\nvar identity$7 = function(d) {\n  return d;\n};\n\nvar pie = function() {\n  var value = identity$7,\n      sortValues = descending$1,\n      sort = null,\n      startAngle = constant$10(0),\n      endAngle = constant$10(tau$4),\n      padAngle = constant$10(0);\n\n  function pie(data) {\n    var i,\n        n = data.length,\n        j,\n        k,\n        sum = 0,\n        index = new Array(n),\n        arcs = new Array(n),\n        a0 = +startAngle.apply(this, arguments),\n        da = Math.min(tau$4, Math.max(-tau$4, endAngle.apply(this, arguments) - a0)),\n        a1,\n        p = Math.min(Math.abs(da) / n, padAngle.apply(this, arguments)),\n        pa = p * (da < 0 ? -1 : 1),\n        v;\n\n    for (i = 0; i < n; ++i) {\n      if ((v = arcs[index[i] = i] = +value(data[i], i, data)) > 0) {\n        sum += v;\n      }\n    }\n\n    // Optionally sort the arcs by previously-computed values or by data.\n    if (sortValues != null) index.sort(function(i, j) { return sortValues(arcs[i], arcs[j]); });\n    else if (sort != null) index.sort(function(i, j) { return sort(data[i], data[j]); });\n\n    // Compute the arcs! They are stored in the original data's order.\n    for (i = 0, k = sum ? (da - n * pa) / sum : 0; i < n; ++i, a0 = a1) {\n      j = index[i], v = arcs[j], a1 = a0 + (v > 0 ? v * k : 0) + pa, arcs[j] = {\n        data: data[j],\n        index: i,\n        value: v,\n        startAngle: a0,\n        endAngle: a1,\n        padAngle: p\n      };\n    }\n\n    return arcs;\n  }\n\n  pie.value = function(_) {\n    return arguments.length ? (value = typeof _ === \"function\" ? _ : constant$10(+_), pie) : value;\n  };\n\n  pie.sortValues = function(_) {\n    return arguments.length ? (sortValues = _, sort = null, pie) : sortValues;\n  };\n\n  pie.sort = function(_) {\n    return arguments.length ? (sort = _, sortValues = null, pie) : sort;\n  };\n\n  pie.startAngle = function(_) {\n    return arguments.length ? (startAngle = typeof _ === \"function\" ? _ : constant$10(+_), pie) : startAngle;\n  };\n\n  pie.endAngle = function(_) {\n    return arguments.length ? (endAngle = typeof _ === \"function\" ? _ : constant$10(+_), pie) : endAngle;\n  };\n\n  pie.padAngle = function(_) {\n    return arguments.length ? (padAngle = typeof _ === \"function\" ? _ : constant$10(+_), pie) : padAngle;\n  };\n\n  return pie;\n};\n\nvar curveRadialLinear = curveRadial(curveLinear);\n\nfunction Radial(curve) {\n  this._curve = curve;\n}\n\nRadial.prototype = {\n  areaStart: function() {\n    this._curve.areaStart();\n  },\n  areaEnd: function() {\n    this._curve.areaEnd();\n  },\n  lineStart: function() {\n    this._curve.lineStart();\n  },\n  lineEnd: function() {\n    this._curve.lineEnd();\n  },\n  point: function(a, r) {\n    this._curve.point(r * Math.sin(a), r * -Math.cos(a));\n  }\n};\n\nfunction curveRadial(curve) {\n\n  function radial(context) {\n    return new Radial(curve(context));\n  }\n\n  radial._curve = curve;\n\n  return radial;\n}\n\nfunction lineRadial(l) {\n  var c = l.curve;\n\n  l.angle = l.x, delete l.x;\n  l.radius = l.y, delete l.y;\n\n  l.curve = function(_) {\n    return arguments.length ? c(curveRadial(_)) : c()._curve;\n  };\n\n  return l;\n}\n\nvar lineRadial$1 = function() {\n  return lineRadial(line().curve(curveRadialLinear));\n};\n\nvar areaRadial = function() {\n  var a = area$2().curve(curveRadialLinear),\n      c = a.curve,\n      x0 = a.lineX0,\n      x1 = a.lineX1,\n      y0 = a.lineY0,\n      y1 = a.lineY1;\n\n  a.angle = a.x, delete a.x;\n  a.startAngle = a.x0, delete a.x0;\n  a.endAngle = a.x1, delete a.x1;\n  a.radius = a.y, delete a.y;\n  a.innerRadius = a.y0, delete a.y0;\n  a.outerRadius = a.y1, delete a.y1;\n  a.lineStartAngle = function() { return lineRadial(x0()); }, delete a.lineX0;\n  a.lineEndAngle = function() { return lineRadial(x1()); }, delete a.lineX1;\n  a.lineInnerRadius = function() { return lineRadial(y0()); }, delete a.lineY0;\n  a.lineOuterRadius = function() { return lineRadial(y1()); }, delete a.lineY1;\n\n  a.curve = function(_) {\n    return arguments.length ? c(curveRadial(_)) : c()._curve;\n  };\n\n  return a;\n};\n\nvar pointRadial = function(x, y) {\n  return [(y = +y) * Math.cos(x -= Math.PI / 2), y * Math.sin(x)];\n};\n\nvar slice$6 = Array.prototype.slice;\n\nfunction linkSource(d) {\n  return d.source;\n}\n\nfunction linkTarget(d) {\n  return d.target;\n}\n\nfunction link$2(curve) {\n  var source = linkSource,\n      target = linkTarget,\n      x$$1 = x$3,\n      y$$1 = y$3,\n      context = null;\n\n  function link() {\n    var buffer, argv = slice$6.call(arguments), s = source.apply(this, argv), t = target.apply(this, argv);\n    if (!context) context = buffer = path();\n    curve(context, +x$$1.apply(this, (argv[0] = s, argv)), +y$$1.apply(this, argv), +x$$1.apply(this, (argv[0] = t, argv)), +y$$1.apply(this, argv));\n    if (buffer) return context = null, buffer + \"\" || null;\n  }\n\n  link.source = function(_) {\n    return arguments.length ? (source = _, link) : source;\n  };\n\n  link.target = function(_) {\n    return arguments.length ? (target = _, link) : target;\n  };\n\n  link.x = function(_) {\n    return arguments.length ? (x$$1 = typeof _ === \"function\" ? _ : constant$10(+_), link) : x$$1;\n  };\n\n  link.y = function(_) {\n    return arguments.length ? (y$$1 = typeof _ === \"function\" ? _ : constant$10(+_), link) : y$$1;\n  };\n\n  link.context = function(_) {\n    return arguments.length ? ((context = _ == null ? null : _), link) : context;\n  };\n\n  return link;\n}\n\nfunction curveHorizontal(context, x0, y0, x1, y1) {\n  context.moveTo(x0, y0);\n  context.bezierCurveTo(x0 = (x0 + x1) / 2, y0, x0, y1, x1, y1);\n}\n\nfunction curveVertical(context, x0, y0, x1, y1) {\n  context.moveTo(x0, y0);\n  context.bezierCurveTo(x0, y0 = (y0 + y1) / 2, x1, y0, x1, y1);\n}\n\nfunction curveRadial$1(context, x0, y0, x1, y1) {\n  var p0 = pointRadial(x0, y0),\n      p1 = pointRadial(x0, y0 = (y0 + y1) / 2),\n      p2 = pointRadial(x1, y0),\n      p3 = pointRadial(x1, y1);\n  context.moveTo(p0[0], p0[1]);\n  context.bezierCurveTo(p1[0], p1[1], p2[0], p2[1], p3[0], p3[1]);\n}\n\nfunction linkHorizontal() {\n  return link$2(curveHorizontal);\n}\n\nfunction linkVertical() {\n  return link$2(curveVertical);\n}\n\nfunction linkRadial() {\n  var l = link$2(curveRadial$1);\n  l.angle = l.x, delete l.x;\n  l.radius = l.y, delete l.y;\n  return l;\n}\n\nvar circle$2 = {\n  draw: function(context, size) {\n    var r = Math.sqrt(size / pi$4);\n    context.moveTo(r, 0);\n    context.arc(0, 0, r, 0, tau$4);\n  }\n};\n\nvar cross$2 = {\n  draw: function(context, size) {\n    var r = Math.sqrt(size / 5) / 2;\n    context.moveTo(-3 * r, -r);\n    context.lineTo(-r, -r);\n    context.lineTo(-r, -3 * r);\n    context.lineTo(r, -3 * r);\n    context.lineTo(r, -r);\n    context.lineTo(3 * r, -r);\n    context.lineTo(3 * r, r);\n    context.lineTo(r, r);\n    context.lineTo(r, 3 * r);\n    context.lineTo(-r, 3 * r);\n    context.lineTo(-r, r);\n    context.lineTo(-3 * r, r);\n    context.closePath();\n  }\n};\n\nvar tan30 = Math.sqrt(1 / 3);\nvar tan30_2 = tan30 * 2;\n\nvar diamond = {\n  draw: function(context, size) {\n    var y = Math.sqrt(size / tan30_2),\n        x = y * tan30;\n    context.moveTo(0, -y);\n    context.lineTo(x, 0);\n    context.lineTo(0, y);\n    context.lineTo(-x, 0);\n    context.closePath();\n  }\n};\n\nvar ka = 0.89081309152928522810;\nvar kr = Math.sin(pi$4 / 10) / Math.sin(7 * pi$4 / 10);\nvar kx = Math.sin(tau$4 / 10) * kr;\nvar ky = -Math.cos(tau$4 / 10) * kr;\n\nvar star = {\n  draw: function(context, size) {\n    var r = Math.sqrt(size * ka),\n        x = kx * r,\n        y = ky * r;\n    context.moveTo(0, -r);\n    context.lineTo(x, y);\n    for (var i = 1; i < 5; ++i) {\n      var a = tau$4 * i / 5,\n          c = Math.cos(a),\n          s = Math.sin(a);\n      context.lineTo(s * r, -c * r);\n      context.lineTo(c * x - s * y, s * x + c * y);\n    }\n    context.closePath();\n  }\n};\n\nvar square = {\n  draw: function(context, size) {\n    var w = Math.sqrt(size),\n        x = -w / 2;\n    context.rect(x, x, w, w);\n  }\n};\n\nvar sqrt3 = Math.sqrt(3);\n\nvar triangle = {\n  draw: function(context, size) {\n    var y = -Math.sqrt(size / (sqrt3 * 3));\n    context.moveTo(0, y * 2);\n    context.lineTo(-sqrt3 * y, -y);\n    context.lineTo(sqrt3 * y, -y);\n    context.closePath();\n  }\n};\n\nvar c = -0.5;\nvar s = Math.sqrt(3) / 2;\nvar k = 1 / Math.sqrt(12);\nvar a = (k / 2 + 1) * 3;\n\nvar wye = {\n  draw: function(context, size) {\n    var r = Math.sqrt(size / a),\n        x0 = r / 2,\n        y0 = r * k,\n        x1 = x0,\n        y1 = r * k + r,\n        x2 = -x1,\n        y2 = y1;\n    context.moveTo(x0, y0);\n    context.lineTo(x1, y1);\n    context.lineTo(x2, y2);\n    context.lineTo(c * x0 - s * y0, s * x0 + c * y0);\n    context.lineTo(c * x1 - s * y1, s * x1 + c * y1);\n    context.lineTo(c * x2 - s * y2, s * x2 + c * y2);\n    context.lineTo(c * x0 + s * y0, c * y0 - s * x0);\n    context.lineTo(c * x1 + s * y1, c * y1 - s * x1);\n    context.lineTo(c * x2 + s * y2, c * y2 - s * x2);\n    context.closePath();\n  }\n};\n\nvar symbols = [\n  circle$2,\n  cross$2,\n  diamond,\n  square,\n  star,\n  triangle,\n  wye\n];\n\nvar symbol = function() {\n  var type = constant$10(circle$2),\n      size = constant$10(64),\n      context = null;\n\n  function symbol() {\n    var buffer;\n    if (!context) context = buffer = path();\n    type.apply(this, arguments).draw(context, +size.apply(this, arguments));\n    if (buffer) return context = null, buffer + \"\" || null;\n  }\n\n  symbol.type = function(_) {\n    return arguments.length ? (type = typeof _ === \"function\" ? _ : constant$10(_), symbol) : type;\n  };\n\n  symbol.size = function(_) {\n    return arguments.length ? (size = typeof _ === \"function\" ? _ : constant$10(+_), symbol) : size;\n  };\n\n  symbol.context = function(_) {\n    return arguments.length ? (context = _ == null ? null : _, symbol) : context;\n  };\n\n  return symbol;\n};\n\nvar noop$2 = function() {};\n\nfunction point$2(that, x, y) {\n  that._context.bezierCurveTo(\n    (2 * that._x0 + that._x1) / 3,\n    (2 * that._y0 + that._y1) / 3,\n    (that._x0 + 2 * that._x1) / 3,\n    (that._y0 + 2 * that._y1) / 3,\n    (that._x0 + 4 * that._x1 + x) / 6,\n    (that._y0 + 4 * that._y1 + y) / 6\n  );\n}\n\nfunction Basis(context) {\n  this._context = context;\n}\n\nBasis.prototype = {\n  areaStart: function() {\n    this._line = 0;\n  },\n  areaEnd: function() {\n    this._line = NaN;\n  },\n  lineStart: function() {\n    this._x0 = this._x1 =\n    this._y0 = this._y1 = NaN;\n    this._point = 0;\n  },\n  lineEnd: function() {\n    switch (this._point) {\n      case 3: point$2(this, this._x1, this._y1); // proceed\n      case 2: this._context.lineTo(this._x1, this._y1); break;\n    }\n    if (this._line || (this._line !== 0 && this._point === 1)) this._context.closePath();\n    this._line = 1 - this._line;\n  },\n  point: function(x, y) {\n    x = +x, y = +y;\n    switch (this._point) {\n      case 0: this._point = 1; this._line ? this._context.lineTo(x, y) : this._context.moveTo(x, y); break;\n      case 1: this._point = 2; break;\n      case 2: this._point = 3; this._context.lineTo((5 * this._x0 + this._x1) / 6, (5 * this._y0 + this._y1) / 6); // proceed\n      default: point$2(this, x, y); break;\n    }\n    this._x0 = this._x1, this._x1 = x;\n    this._y0 = this._y1, this._y1 = y;\n  }\n};\n\nvar basis$2 = function(context) {\n  return new Basis(context);\n};\n\nfunction BasisClosed(context) {\n  this._context = context;\n}\n\nBasisClosed.prototype = {\n  areaStart: noop$2,\n  areaEnd: noop$2,\n  lineStart: function() {\n    this._x0 = this._x1 = this._x2 = this._x3 = this._x4 =\n    this._y0 = this._y1 = this._y2 = this._y3 = this._y4 = NaN;\n    this._point = 0;\n  },\n  lineEnd: function() {\n    switch (this._point) {\n      case 1: {\n        this._context.moveTo(this._x2, this._y2);\n        this._context.closePath();\n        break;\n      }\n      case 2: {\n        this._context.moveTo((this._x2 + 2 * this._x3) / 3, (this._y2 + 2 * this._y3) / 3);\n        this._context.lineTo((this._x3 + 2 * this._x2) / 3, (this._y3 + 2 * this._y2) / 3);\n        this._context.closePath();\n        break;\n      }\n      case 3: {\n        this.point(this._x2, this._y2);\n        this.point(this._x3, this._y3);\n        this.point(this._x4, this._y4);\n        break;\n      }\n    }\n  },\n  point: function(x, y) {\n    x = +x, y = +y;\n    switch (this._point) {\n      case 0: this._point = 1; this._x2 = x, this._y2 = y; break;\n      case 1: this._point = 2; this._x3 = x, this._y3 = y; break;\n      case 2: this._point = 3; this._x4 = x, this._y4 = y; this._context.moveTo((this._x0 + 4 * this._x1 + x) / 6, (this._y0 + 4 * this._y1 + y) / 6); break;\n      default: point$2(this, x, y); break;\n    }\n    this._x0 = this._x1, this._x1 = x;\n    this._y0 = this._y1, this._y1 = y;\n  }\n};\n\nvar basisClosed$1 = function(context) {\n  return new BasisClosed(context);\n};\n\nfunction BasisOpen(context) {\n  this._context = context;\n}\n\nBasisOpen.prototype = {\n  areaStart: function() {\n    this._line = 0;\n  },\n  areaEnd: function() {\n    this._line = NaN;\n  },\n  lineStart: function() {\n    this._x0 = this._x1 =\n    this._y0 = this._y1 = NaN;\n    this._point = 0;\n  },\n  lineEnd: function() {\n    if (this._line || (this._line !== 0 && this._point === 3)) this._context.closePath();\n    this._line = 1 - this._line;\n  },\n  point: function(x, y) {\n    x = +x, y = +y;\n    switch (this._point) {\n      case 0: this._point = 1; break;\n      case 1: this._point = 2; break;\n      case 2: this._point = 3; var x0 = (this._x0 + 4 * this._x1 + x) / 6, y0 = (this._y0 + 4 * this._y1 + y) / 6; this._line ? this._context.lineTo(x0, y0) : this._context.moveTo(x0, y0); break;\n      case 3: this._point = 4; // proceed\n      default: point$2(this, x, y); break;\n    }\n    this._x0 = this._x1, this._x1 = x;\n    this._y0 = this._y1, this._y1 = y;\n  }\n};\n\nvar basisOpen = function(context) {\n  return new BasisOpen(context);\n};\n\nfunction Bundle(context, beta) {\n  this._basis = new Basis(context);\n  this._beta = beta;\n}\n\nBundle.prototype = {\n  lineStart: function() {\n    this._x = [];\n    this._y = [];\n    this._basis.lineStart();\n  },\n  lineEnd: function() {\n    var x = this._x,\n        y = this._y,\n        j = x.length - 1;\n\n    if (j > 0) {\n      var x0 = x[0],\n          y0 = y[0],\n          dx = x[j] - x0,\n          dy = y[j] - y0,\n          i = -1,\n          t;\n\n      while (++i <= j) {\n        t = i / j;\n        this._basis.point(\n          this._beta * x[i] + (1 - this._beta) * (x0 + t * dx),\n          this._beta * y[i] + (1 - this._beta) * (y0 + t * dy)\n        );\n      }\n    }\n\n    this._x = this._y = null;\n    this._basis.lineEnd();\n  },\n  point: function(x, y) {\n    this._x.push(+x);\n    this._y.push(+y);\n  }\n};\n\nvar bundle = (function custom(beta) {\n\n  function bundle(context) {\n    return beta === 1 ? new Basis(context) : new Bundle(context, beta);\n  }\n\n  bundle.beta = function(beta) {\n    return custom(+beta);\n  };\n\n  return bundle;\n})(0.85);\n\nfunction point$3(that, x, y) {\n  that._context.bezierCurveTo(\n    that._x1 + that._k * (that._x2 - that._x0),\n    that._y1 + that._k * (that._y2 - that._y0),\n    that._x2 + that._k * (that._x1 - x),\n    that._y2 + that._k * (that._y1 - y),\n    that._x2,\n    that._y2\n  );\n}\n\nfunction Cardinal(context, tension) {\n  this._context = context;\n  this._k = (1 - tension) / 6;\n}\n\nCardinal.prototype = {\n  areaStart: function() {\n    this._line = 0;\n  },\n  areaEnd: function() {\n    this._line = NaN;\n  },\n  lineStart: function() {\n    this._x0 = this._x1 = this._x2 =\n    this._y0 = this._y1 = this._y2 = NaN;\n    this._point = 0;\n  },\n  lineEnd: function() {\n    switch (this._point) {\n      case 2: this._context.lineTo(this._x2, this._y2); break;\n      case 3: point$3(this, this._x1, this._y1); break;\n    }\n    if (this._line || (this._line !== 0 && this._point === 1)) this._context.closePath();\n    this._line = 1 - this._line;\n  },\n  point: function(x, y) {\n    x = +x, y = +y;\n    switch (this._point) {\n      case 0: this._point = 1; this._line ? this._context.lineTo(x, y) : this._context.moveTo(x, y); break;\n      case 1: this._point = 2; this._x1 = x, this._y1 = y; break;\n      case 2: this._point = 3; // proceed\n      default: point$3(this, x, y); break;\n    }\n    this._x0 = this._x1, this._x1 = this._x2, this._x2 = x;\n    this._y0 = this._y1, this._y1 = this._y2, this._y2 = y;\n  }\n};\n\nvar cardinal = (function custom(tension) {\n\n  function cardinal(context) {\n    return new Cardinal(context, tension);\n  }\n\n  cardinal.tension = function(tension) {\n    return custom(+tension);\n  };\n\n  return cardinal;\n})(0);\n\nfunction CardinalClosed(context, tension) {\n  this._context = context;\n  this._k = (1 - tension) / 6;\n}\n\nCardinalClosed.prototype = {\n  areaStart: noop$2,\n  areaEnd: noop$2,\n  lineStart: function() {\n    this._x0 = this._x1 = this._x2 = this._x3 = this._x4 = this._x5 =\n    this._y0 = this._y1 = this._y2 = this._y3 = this._y4 = this._y5 = NaN;\n    this._point = 0;\n  },\n  lineEnd: function() {\n    switch (this._point) {\n      case 1: {\n        this._context.moveTo(this._x3, this._y3);\n        this._context.closePath();\n        break;\n      }\n      case 2: {\n        this._context.lineTo(this._x3, this._y3);\n        this._context.closePath();\n        break;\n      }\n      case 3: {\n        this.point(this._x3, this._y3);\n        this.point(this._x4, this._y4);\n        this.point(this._x5, this._y5);\n        break;\n      }\n    }\n  },\n  point: function(x, y) {\n    x = +x, y = +y;\n    switch (this._point) {\n      case 0: this._point = 1; this._x3 = x, this._y3 = y; break;\n      case 1: this._point = 2; this._context.moveTo(this._x4 = x, this._y4 = y); break;\n      case 2: this._point = 3; this._x5 = x, this._y5 = y; break;\n      default: point$3(this, x, y); break;\n    }\n    this._x0 = this._x1, this._x1 = this._x2, this._x2 = x;\n    this._y0 = this._y1, this._y1 = this._y2, this._y2 = y;\n  }\n};\n\nvar cardinalClosed = (function custom(tension) {\n\n  function cardinal$$1(context) {\n    return new CardinalClosed(context, tension);\n  }\n\n  cardinal$$1.tension = function(tension) {\n    return custom(+tension);\n  };\n\n  return cardinal$$1;\n})(0);\n\nfunction CardinalOpen(context, tension) {\n  this._context = context;\n  this._k = (1 - tension) / 6;\n}\n\nCardinalOpen.prototype = {\n  areaStart: function() {\n    this._line = 0;\n  },\n  areaEnd: function() {\n    this._line = NaN;\n  },\n  lineStart: function() {\n    this._x0 = this._x1 = this._x2 =\n    this._y0 = this._y1 = this._y2 = NaN;\n    this._point = 0;\n  },\n  lineEnd: function() {\n    if (this._line || (this._line !== 0 && this._point === 3)) this._context.closePath();\n    this._line = 1 - this._line;\n  },\n  point: function(x, y) {\n    x = +x, y = +y;\n    switch (this._point) {\n      case 0: this._point = 1; break;\n      case 1: this._point = 2; break;\n      case 2: this._point = 3; this._line ? this._context.lineTo(this._x2, this._y2) : this._context.moveTo(this._x2, this._y2); break;\n      case 3: this._point = 4; // proceed\n      default: point$3(this, x, y); break;\n    }\n    this._x0 = this._x1, this._x1 = this._x2, this._x2 = x;\n    this._y0 = this._y1, this._y1 = this._y2, this._y2 = y;\n  }\n};\n\nvar cardinalOpen = (function custom(tension) {\n\n  function cardinal$$1(context) {\n    return new CardinalOpen(context, tension);\n  }\n\n  cardinal$$1.tension = function(tension) {\n    return custom(+tension);\n  };\n\n  return cardinal$$1;\n})(0);\n\nfunction point$4(that, x, y) {\n  var x1 = that._x1,\n      y1 = that._y1,\n      x2 = that._x2,\n      y2 = that._y2;\n\n  if (that._l01_a > epsilon$3) {\n    var a = 2 * that._l01_2a + 3 * that._l01_a * that._l12_a + that._l12_2a,\n        n = 3 * that._l01_a * (that._l01_a + that._l12_a);\n    x1 = (x1 * a - that._x0 * that._l12_2a + that._x2 * that._l01_2a) / n;\n    y1 = (y1 * a - that._y0 * that._l12_2a + that._y2 * that._l01_2a) / n;\n  }\n\n  if (that._l23_a > epsilon$3) {\n    var b = 2 * that._l23_2a + 3 * that._l23_a * that._l12_a + that._l12_2a,\n        m = 3 * that._l23_a * (that._l23_a + that._l12_a);\n    x2 = (x2 * b + that._x1 * that._l23_2a - x * that._l12_2a) / m;\n    y2 = (y2 * b + that._y1 * that._l23_2a - y * that._l12_2a) / m;\n  }\n\n  that._context.bezierCurveTo(x1, y1, x2, y2, that._x2, that._y2);\n}\n\nfunction CatmullRom(context, alpha) {\n  this._context = context;\n  this._alpha = alpha;\n}\n\nCatmullRom.prototype = {\n  areaStart: function() {\n    this._line = 0;\n  },\n  areaEnd: function() {\n    this._line = NaN;\n  },\n  lineStart: function() {\n    this._x0 = this._x1 = this._x2 =\n    this._y0 = this._y1 = this._y2 = NaN;\n    this._l01_a = this._l12_a = this._l23_a =\n    this._l01_2a = this._l12_2a = this._l23_2a =\n    this._point = 0;\n  },\n  lineEnd: function() {\n    switch (this._point) {\n      case 2: this._context.lineTo(this._x2, this._y2); break;\n      case 3: this.point(this._x2, this._y2); break;\n    }\n    if (this._line || (this._line !== 0 && this._point === 1)) this._context.closePath();\n    this._line = 1 - this._line;\n  },\n  point: function(x, y) {\n    x = +x, y = +y;\n\n    if (this._point) {\n      var x23 = this._x2 - x,\n          y23 = this._y2 - y;\n      this._l23_a = Math.sqrt(this._l23_2a = Math.pow(x23 * x23 + y23 * y23, this._alpha));\n    }\n\n    switch (this._point) {\n      case 0: this._point = 1; this._line ? this._context.lineTo(x, y) : this._context.moveTo(x, y); break;\n      case 1: this._point = 2; break;\n      case 2: this._point = 3; // proceed\n      default: point$4(this, x, y); break;\n    }\n\n    this._l01_a = this._l12_a, this._l12_a = this._l23_a;\n    this._l01_2a = this._l12_2a, this._l12_2a = this._l23_2a;\n    this._x0 = this._x1, this._x1 = this._x2, this._x2 = x;\n    this._y0 = this._y1, this._y1 = this._y2, this._y2 = y;\n  }\n};\n\nvar catmullRom = (function custom(alpha) {\n\n  function catmullRom(context) {\n    return alpha ? new CatmullRom(context, alpha) : new Cardinal(context, 0);\n  }\n\n  catmullRom.alpha = function(alpha) {\n    return custom(+alpha);\n  };\n\n  return catmullRom;\n})(0.5);\n\nfunction CatmullRomClosed(context, alpha) {\n  this._context = context;\n  this._alpha = alpha;\n}\n\nCatmullRomClosed.prototype = {\n  areaStart: noop$2,\n  areaEnd: noop$2,\n  lineStart: function() {\n    this._x0 = this._x1 = this._x2 = this._x3 = this._x4 = this._x5 =\n    this._y0 = this._y1 = this._y2 = this._y3 = this._y4 = this._y5 = NaN;\n    this._l01_a = this._l12_a = this._l23_a =\n    this._l01_2a = this._l12_2a = this._l23_2a =\n    this._point = 0;\n  },\n  lineEnd: function() {\n    switch (this._point) {\n      case 1: {\n        this._context.moveTo(this._x3, this._y3);\n        this._context.closePath();\n        break;\n      }\n      case 2: {\n        this._context.lineTo(this._x3, this._y3);\n        this._context.closePath();\n        break;\n      }\n      case 3: {\n        this.point(this._x3, this._y3);\n        this.point(this._x4, this._y4);\n        this.point(this._x5, this._y5);\n        break;\n      }\n    }\n  },\n  point: function(x, y) {\n    x = +x, y = +y;\n\n    if (this._point) {\n      var x23 = this._x2 - x,\n          y23 = this._y2 - y;\n      this._l23_a = Math.sqrt(this._l23_2a = Math.pow(x23 * x23 + y23 * y23, this._alpha));\n    }\n\n    switch (this._point) {\n      case 0: this._point = 1; this._x3 = x, this._y3 = y; break;\n      case 1: this._point = 2; this._context.moveTo(this._x4 = x, this._y4 = y); break;\n      case 2: this._point = 3; this._x5 = x, this._y5 = y; break;\n      default: point$4(this, x, y); break;\n    }\n\n    this._l01_a = this._l12_a, this._l12_a = this._l23_a;\n    this._l01_2a = this._l12_2a, this._l12_2a = this._l23_2a;\n    this._x0 = this._x1, this._x1 = this._x2, this._x2 = x;\n    this._y0 = this._y1, this._y1 = this._y2, this._y2 = y;\n  }\n};\n\nvar catmullRomClosed = (function custom(alpha) {\n\n  function catmullRom$$1(context) {\n    return alpha ? new CatmullRomClosed(context, alpha) : new CardinalClosed(context, 0);\n  }\n\n  catmullRom$$1.alpha = function(alpha) {\n    return custom(+alpha);\n  };\n\n  return catmullRom$$1;\n})(0.5);\n\nfunction CatmullRomOpen(context, alpha) {\n  this._context = context;\n  this._alpha = alpha;\n}\n\nCatmullRomOpen.prototype = {\n  areaStart: function() {\n    this._line = 0;\n  },\n  areaEnd: function() {\n    this._line = NaN;\n  },\n  lineStart: function() {\n    this._x0 = this._x1 = this._x2 =\n    this._y0 = this._y1 = this._y2 = NaN;\n    this._l01_a = this._l12_a = this._l23_a =\n    this._l01_2a = this._l12_2a = this._l23_2a =\n    this._point = 0;\n  },\n  lineEnd: function() {\n    if (this._line || (this._line !== 0 && this._point === 3)) this._context.closePath();\n    this._line = 1 - this._line;\n  },\n  point: function(x, y) {\n    x = +x, y = +y;\n\n    if (this._point) {\n      var x23 = this._x2 - x,\n          y23 = this._y2 - y;\n      this._l23_a = Math.sqrt(this._l23_2a = Math.pow(x23 * x23 + y23 * y23, this._alpha));\n    }\n\n    switch (this._point) {\n      case 0: this._point = 1; break;\n      case 1: this._point = 2; break;\n      case 2: this._point = 3; this._line ? this._context.lineTo(this._x2, this._y2) : this._context.moveTo(this._x2, this._y2); break;\n      case 3: this._point = 4; // proceed\n      default: point$4(this, x, y); break;\n    }\n\n    this._l01_a = this._l12_a, this._l12_a = this._l23_a;\n    this._l01_2a = this._l12_2a, this._l12_2a = this._l23_2a;\n    this._x0 = this._x1, this._x1 = this._x2, this._x2 = x;\n    this._y0 = this._y1, this._y1 = this._y2, this._y2 = y;\n  }\n};\n\nvar catmullRomOpen = (function custom(alpha) {\n\n  function catmullRom$$1(context) {\n    return alpha ? new CatmullRomOpen(context, alpha) : new CardinalOpen(context, 0);\n  }\n\n  catmullRom$$1.alpha = function(alpha) {\n    return custom(+alpha);\n  };\n\n  return catmullRom$$1;\n})(0.5);\n\nfunction LinearClosed(context) {\n  this._context = context;\n}\n\nLinearClosed.prototype = {\n  areaStart: noop$2,\n  areaEnd: noop$2,\n  lineStart: function() {\n    this._point = 0;\n  },\n  lineEnd: function() {\n    if (this._point) this._context.closePath();\n  },\n  point: function(x, y) {\n    x = +x, y = +y;\n    if (this._point) this._context.lineTo(x, y);\n    else this._point = 1, this._context.moveTo(x, y);\n  }\n};\n\nvar linearClosed = function(context) {\n  return new LinearClosed(context);\n};\n\nfunction sign$1(x) {\n  return x < 0 ? -1 : 1;\n}\n\n// Calculate the slopes of the tangents (Hermite-type interpolation) based on\n// the following paper: Steffen, M. 1990. A Simple Method for Monotonic\n// Interpolation in One Dimension. Astronomy and Astrophysics, Vol. 239, NO.\n// NOV(II), P. 443, 1990.\nfunction slope3(that, x2, y2) {\n  var h0 = that._x1 - that._x0,\n      h1 = x2 - that._x1,\n      s0 = (that._y1 - that._y0) / (h0 || h1 < 0 && -0),\n      s1 = (y2 - that._y1) / (h1 || h0 < 0 && -0),\n      p = (s0 * h1 + s1 * h0) / (h0 + h1);\n  return (sign$1(s0) + sign$1(s1)) * Math.min(Math.abs(s0), Math.abs(s1), 0.5 * Math.abs(p)) || 0;\n}\n\n// Calculate a one-sided slope.\nfunction slope2(that, t) {\n  var h = that._x1 - that._x0;\n  return h ? (3 * (that._y1 - that._y0) / h - t) / 2 : t;\n}\n\n// According to https://en.wikipedia.org/wiki/Cubic_Hermite_spline#Representations\n// \"you can express cubic Hermite interpolation in terms of cubic Bézier curves\n// with respect to the four values p0, p0 + m0 / 3, p1 - m1 / 3, p1\".\nfunction point$5(that, t0, t1) {\n  var x0 = that._x0,\n      y0 = that._y0,\n      x1 = that._x1,\n      y1 = that._y1,\n      dx = (x1 - x0) / 3;\n  that._context.bezierCurveTo(x0 + dx, y0 + dx * t0, x1 - dx, y1 - dx * t1, x1, y1);\n}\n\nfunction MonotoneX(context) {\n  this._context = context;\n}\n\nMonotoneX.prototype = {\n  areaStart: function() {\n    this._line = 0;\n  },\n  areaEnd: function() {\n    this._line = NaN;\n  },\n  lineStart: function() {\n    this._x0 = this._x1 =\n    this._y0 = this._y1 =\n    this._t0 = NaN;\n    this._point = 0;\n  },\n  lineEnd: function() {\n    switch (this._point) {\n      case 2: this._context.lineTo(this._x1, this._y1); break;\n      case 3: point$5(this, this._t0, slope2(this, this._t0)); break;\n    }\n    if (this._line || (this._line !== 0 && this._point === 1)) this._context.closePath();\n    this._line = 1 - this._line;\n  },\n  point: function(x, y) {\n    var t1 = NaN;\n\n    x = +x, y = +y;\n    if (x === this._x1 && y === this._y1) return; // Ignore coincident points.\n    switch (this._point) {\n      case 0: this._point = 1; this._line ? this._context.lineTo(x, y) : this._context.moveTo(x, y); break;\n      case 1: this._point = 2; break;\n      case 2: this._point = 3; point$5(this, slope2(this, t1 = slope3(this, x, y)), t1); break;\n      default: point$5(this, this._t0, t1 = slope3(this, x, y)); break;\n    }\n\n    this._x0 = this._x1, this._x1 = x;\n    this._y0 = this._y1, this._y1 = y;\n    this._t0 = t1;\n  }\n};\n\nfunction MonotoneY(context) {\n  this._context = new ReflectContext(context);\n}\n\n(MonotoneY.prototype = Object.create(MonotoneX.prototype)).point = function(x, y) {\n  MonotoneX.prototype.point.call(this, y, x);\n};\n\nfunction ReflectContext(context) {\n  this._context = context;\n}\n\nReflectContext.prototype = {\n  moveTo: function(x, y) { this._context.moveTo(y, x); },\n  closePath: function() { this._context.closePath(); },\n  lineTo: function(x, y) { this._context.lineTo(y, x); },\n  bezierCurveTo: function(x1, y1, x2, y2, x, y) { this._context.bezierCurveTo(y1, x1, y2, x2, y, x); }\n};\n\nfunction monotoneX(context) {\n  return new MonotoneX(context);\n}\n\nfunction monotoneY(context) {\n  return new MonotoneY(context);\n}\n\nfunction Natural(context) {\n  this._context = context;\n}\n\nNatural.prototype = {\n  areaStart: function() {\n    this._line = 0;\n  },\n  areaEnd: function() {\n    this._line = NaN;\n  },\n  lineStart: function() {\n    this._x = [];\n    this._y = [];\n  },\n  lineEnd: function() {\n    var x = this._x,\n        y = this._y,\n        n = x.length;\n\n    if (n) {\n      this._line ? this._context.lineTo(x[0], y[0]) : this._context.moveTo(x[0], y[0]);\n      if (n === 2) {\n        this._context.lineTo(x[1], y[1]);\n      } else {\n        var px = controlPoints(x),\n            py = controlPoints(y);\n        for (var i0 = 0, i1 = 1; i1 < n; ++i0, ++i1) {\n          this._context.bezierCurveTo(px[0][i0], py[0][i0], px[1][i0], py[1][i0], x[i1], y[i1]);\n        }\n      }\n    }\n\n    if (this._line || (this._line !== 0 && n === 1)) this._context.closePath();\n    this._line = 1 - this._line;\n    this._x = this._y = null;\n  },\n  point: function(x, y) {\n    this._x.push(+x);\n    this._y.push(+y);\n  }\n};\n\n// See https://www.particleincell.com/2012/bezier-splines/ for derivation.\nfunction controlPoints(x) {\n  var i,\n      n = x.length - 1,\n      m,\n      a = new Array(n),\n      b = new Array(n),\n      r = new Array(n);\n  a[0] = 0, b[0] = 2, r[0] = x[0] + 2 * x[1];\n  for (i = 1; i < n - 1; ++i) a[i] = 1, b[i] = 4, r[i] = 4 * x[i] + 2 * x[i + 1];\n  a[n - 1] = 2, b[n - 1] = 7, r[n - 1] = 8 * x[n - 1] + x[n];\n  for (i = 1; i < n; ++i) m = a[i] / b[i - 1], b[i] -= m, r[i] -= m * r[i - 1];\n  a[n - 1] = r[n - 1] / b[n - 1];\n  for (i = n - 2; i >= 0; --i) a[i] = (r[i] - a[i + 1]) / b[i];\n  b[n - 1] = (x[n] + a[n - 1]) / 2;\n  for (i = 0; i < n - 1; ++i) b[i] = 2 * x[i + 1] - a[i + 1];\n  return [a, b];\n}\n\nvar natural = function(context) {\n  return new Natural(context);\n};\n\nfunction Step(context, t) {\n  this._context = context;\n  this._t = t;\n}\n\nStep.prototype = {\n  areaStart: function() {\n    this._line = 0;\n  },\n  areaEnd: function() {\n    this._line = NaN;\n  },\n  lineStart: function() {\n    this._x = this._y = NaN;\n    this._point = 0;\n  },\n  lineEnd: function() {\n    if (0 < this._t && this._t < 1 && this._point === 2) this._context.lineTo(this._x, this._y);\n    if (this._line || (this._line !== 0 && this._point === 1)) this._context.closePath();\n    if (this._line >= 0) this._t = 1 - this._t, this._line = 1 - this._line;\n  },\n  point: function(x, y) {\n    x = +x, y = +y;\n    switch (this._point) {\n      case 0: this._point = 1; this._line ? this._context.lineTo(x, y) : this._context.moveTo(x, y); break;\n      case 1: this._point = 2; // proceed\n      default: {\n        if (this._t <= 0) {\n          this._context.lineTo(this._x, y);\n          this._context.lineTo(x, y);\n        } else {\n          var x1 = this._x * (1 - this._t) + x * this._t;\n          this._context.lineTo(x1, this._y);\n          this._context.lineTo(x1, y);\n        }\n        break;\n      }\n    }\n    this._x = x, this._y = y;\n  }\n};\n\nvar step = function(context) {\n  return new Step(context, 0.5);\n};\n\nfunction stepBefore(context) {\n  return new Step(context, 0);\n}\n\nfunction stepAfter(context) {\n  return new Step(context, 1);\n}\n\nvar none$1 = function(series, order) {\n  if (!((n = series.length) > 1)) return;\n  for (var i = 1, j, s0, s1 = series[order[0]], n, m = s1.length; i < n; ++i) {\n    s0 = s1, s1 = series[order[i]];\n    for (j = 0; j < m; ++j) {\n      s1[j][1] += s1[j][0] = isNaN(s0[j][1]) ? s0[j][0] : s0[j][1];\n    }\n  }\n};\n\nvar none$2 = function(series) {\n  var n = series.length, o = new Array(n);\n  while (--n >= 0) o[n] = n;\n  return o;\n};\n\nfunction stackValue(d, key) {\n  return d[key];\n}\n\nvar stack = function() {\n  var keys = constant$10([]),\n      order = none$2,\n      offset = none$1,\n      value = stackValue;\n\n  function stack(data) {\n    var kz = keys.apply(this, arguments),\n        i,\n        m = data.length,\n        n = kz.length,\n        sz = new Array(n),\n        oz;\n\n    for (i = 0; i < n; ++i) {\n      for (var ki = kz[i], si = sz[i] = new Array(m), j = 0, sij; j < m; ++j) {\n        si[j] = sij = [0, +value(data[j], ki, j, data)];\n        sij.data = data[j];\n      }\n      si.key = ki;\n    }\n\n    for (i = 0, oz = order(sz); i < n; ++i) {\n      sz[oz[i]].index = i;\n    }\n\n    offset(sz, oz);\n    return sz;\n  }\n\n  stack.keys = function(_) {\n    return arguments.length ? (keys = typeof _ === \"function\" ? _ : constant$10(slice$6.call(_)), stack) : keys;\n  };\n\n  stack.value = function(_) {\n    return arguments.length ? (value = typeof _ === \"function\" ? _ : constant$10(+_), stack) : value;\n  };\n\n  stack.order = function(_) {\n    return arguments.length ? (order = _ == null ? none$2 : typeof _ === \"function\" ? _ : constant$10(slice$6.call(_)), stack) : order;\n  };\n\n  stack.offset = function(_) {\n    return arguments.length ? (offset = _ == null ? none$1 : _, stack) : offset;\n  };\n\n  return stack;\n};\n\nvar expand = function(series, order) {\n  if (!((n = series.length) > 0)) return;\n  for (var i, n, j = 0, m = series[0].length, y; j < m; ++j) {\n    for (y = i = 0; i < n; ++i) y += series[i][j][1] || 0;\n    if (y) for (i = 0; i < n; ++i) series[i][j][1] /= y;\n  }\n  none$1(series, order);\n};\n\nvar diverging = function(series, order) {\n  if (!((n = series.length) > 1)) return;\n  for (var i, j = 0, d, dy, yp, yn, n, m = series[order[0]].length; j < m; ++j) {\n    for (yp = yn = 0, i = 0; i < n; ++i) {\n      if ((dy = (d = series[order[i]][j])[1] - d[0]) >= 0) {\n        d[0] = yp, d[1] = yp += dy;\n      } else if (dy < 0) {\n        d[1] = yn, d[0] = yn += dy;\n      } else {\n        d[0] = yp;\n      }\n    }\n  }\n};\n\nvar silhouette = function(series, order) {\n  if (!((n = series.length) > 0)) return;\n  for (var j = 0, s0 = series[order[0]], n, m = s0.length; j < m; ++j) {\n    for (var i = 0, y = 0; i < n; ++i) y += series[i][j][1] || 0;\n    s0[j][1] += s0[j][0] = -y / 2;\n  }\n  none$1(series, order);\n};\n\nvar wiggle = function(series, order) {\n  if (!((n = series.length) > 0) || !((m = (s0 = series[order[0]]).length) > 0)) return;\n  for (var y = 0, j = 1, s0, m, n; j < m; ++j) {\n    for (var i = 0, s1 = 0, s2 = 0; i < n; ++i) {\n      var si = series[order[i]],\n          sij0 = si[j][1] || 0,\n          sij1 = si[j - 1][1] || 0,\n          s3 = (sij0 - sij1) / 2;\n      for (var k = 0; k < i; ++k) {\n        var sk = series[order[k]],\n            skj0 = sk[j][1] || 0,\n            skj1 = sk[j - 1][1] || 0;\n        s3 += skj0 - skj1;\n      }\n      s1 += sij0, s2 += s3 * sij0;\n    }\n    s0[j - 1][1] += s0[j - 1][0] = y;\n    if (s1) y -= s2 / s1;\n  }\n  s0[j - 1][1] += s0[j - 1][0] = y;\n  none$1(series, order);\n};\n\nvar ascending$2 = function(series) {\n  var sums = series.map(sum$2);\n  return none$2(series).sort(function(a, b) { return sums[a] - sums[b]; });\n};\n\nfunction sum$2(series) {\n  var s = 0, i = -1, n = series.length, v;\n  while (++i < n) if (v = +series[i][1]) s += v;\n  return s;\n}\n\nvar descending$2 = function(series) {\n  return ascending$2(series).reverse();\n};\n\nvar insideOut = function(series) {\n  var n = series.length,\n      i,\n      j,\n      sums = series.map(sum$2),\n      order = none$2(series).sort(function(a, b) { return sums[b] - sums[a]; }),\n      top = 0,\n      bottom = 0,\n      tops = [],\n      bottoms = [];\n\n  for (i = 0; i < n; ++i) {\n    j = order[i];\n    if (top < bottom) {\n      top += sums[j];\n      tops.push(j);\n    } else {\n      bottom += sums[j];\n      bottoms.push(j);\n    }\n  }\n\n  return bottoms.reverse().concat(tops);\n};\n\nvar reverse = function(series) {\n  return none$2(series).reverse();\n};\n\nvar constant$11 = function(x) {\n  return function() {\n    return x;\n  };\n};\n\nfunction x$4(d) {\n  return d[0];\n}\n\nfunction y$4(d) {\n  return d[1];\n}\n\nfunction RedBlackTree() {\n  this._ = null; // root node\n}\n\nfunction RedBlackNode(node) {\n  node.U = // parent node\n  node.C = // color - true for red, false for black\n  node.L = // left node\n  node.R = // right node\n  node.P = // previous node\n  node.N = null; // next node\n}\n\nRedBlackTree.prototype = {\n  constructor: RedBlackTree,\n\n  insert: function(after, node) {\n    var parent, grandpa, uncle;\n\n    if (after) {\n      node.P = after;\n      node.N = after.N;\n      if (after.N) after.N.P = node;\n      after.N = node;\n      if (after.R) {\n        after = after.R;\n        while (after.L) after = after.L;\n        after.L = node;\n      } else {\n        after.R = node;\n      }\n      parent = after;\n    } else if (this._) {\n      after = RedBlackFirst(this._);\n      node.P = null;\n      node.N = after;\n      after.P = after.L = node;\n      parent = after;\n    } else {\n      node.P = node.N = null;\n      this._ = node;\n      parent = null;\n    }\n    node.L = node.R = null;\n    node.U = parent;\n    node.C = true;\n\n    after = node;\n    while (parent && parent.C) {\n      grandpa = parent.U;\n      if (parent === grandpa.L) {\n        uncle = grandpa.R;\n        if (uncle && uncle.C) {\n          parent.C = uncle.C = false;\n          grandpa.C = true;\n          after = grandpa;\n        } else {\n          if (after === parent.R) {\n            RedBlackRotateLeft(this, parent);\n            after = parent;\n            parent = after.U;\n          }\n          parent.C = false;\n          grandpa.C = true;\n          RedBlackRotateRight(this, grandpa);\n        }\n      } else {\n        uncle = grandpa.L;\n        if (uncle && uncle.C) {\n          parent.C = uncle.C = false;\n          grandpa.C = true;\n          after = grandpa;\n        } else {\n          if (after === parent.L) {\n            RedBlackRotateRight(this, parent);\n            after = parent;\n            parent = after.U;\n          }\n          parent.C = false;\n          grandpa.C = true;\n          RedBlackRotateLeft(this, grandpa);\n        }\n      }\n      parent = after.U;\n    }\n    this._.C = false;\n  },\n\n  remove: function(node) {\n    if (node.N) node.N.P = node.P;\n    if (node.P) node.P.N = node.N;\n    node.N = node.P = null;\n\n    var parent = node.U,\n        sibling,\n        left = node.L,\n        right = node.R,\n        next,\n        red;\n\n    if (!left) next = right;\n    else if (!right) next = left;\n    else next = RedBlackFirst(right);\n\n    if (parent) {\n      if (parent.L === node) parent.L = next;\n      else parent.R = next;\n    } else {\n      this._ = next;\n    }\n\n    if (left && right) {\n      red = next.C;\n      next.C = node.C;\n      next.L = left;\n      left.U = next;\n      if (next !== right) {\n        parent = next.U;\n        next.U = node.U;\n        node = next.R;\n        parent.L = node;\n        next.R = right;\n        right.U = next;\n      } else {\n        next.U = parent;\n        parent = next;\n        node = next.R;\n      }\n    } else {\n      red = node.C;\n      node = next;\n    }\n\n    if (node) node.U = parent;\n    if (red) return;\n    if (node && node.C) { node.C = false; return; }\n\n    do {\n      if (node === this._) break;\n      if (node === parent.L) {\n        sibling = parent.R;\n        if (sibling.C) {\n          sibling.C = false;\n          parent.C = true;\n          RedBlackRotateLeft(this, parent);\n          sibling = parent.R;\n        }\n        if ((sibling.L && sibling.L.C)\n            || (sibling.R && sibling.R.C)) {\n          if (!sibling.R || !sibling.R.C) {\n            sibling.L.C = false;\n            sibling.C = true;\n            RedBlackRotateRight(this, sibling);\n            sibling = parent.R;\n          }\n          sibling.C = parent.C;\n          parent.C = sibling.R.C = false;\n          RedBlackRotateLeft(this, parent);\n          node = this._;\n          break;\n        }\n      } else {\n        sibling = parent.L;\n        if (sibling.C) {\n          sibling.C = false;\n          parent.C = true;\n          RedBlackRotateRight(this, parent);\n          sibling = parent.L;\n        }\n        if ((sibling.L && sibling.L.C)\n          || (sibling.R && sibling.R.C)) {\n          if (!sibling.L || !sibling.L.C) {\n            sibling.R.C = false;\n            sibling.C = true;\n            RedBlackRotateLeft(this, sibling);\n            sibling = parent.L;\n          }\n          sibling.C = parent.C;\n          parent.C = sibling.L.C = false;\n          RedBlackRotateRight(this, parent);\n          node = this._;\n          break;\n        }\n      }\n      sibling.C = true;\n      node = parent;\n      parent = parent.U;\n    } while (!node.C);\n\n    if (node) node.C = false;\n  }\n};\n\nfunction RedBlackRotateLeft(tree, node) {\n  var p = node,\n      q = node.R,\n      parent = p.U;\n\n  if (parent) {\n    if (parent.L === p) parent.L = q;\n    else parent.R = q;\n  } else {\n    tree._ = q;\n  }\n\n  q.U = parent;\n  p.U = q;\n  p.R = q.L;\n  if (p.R) p.R.U = p;\n  q.L = p;\n}\n\nfunction RedBlackRotateRight(tree, node) {\n  var p = node,\n      q = node.L,\n      parent = p.U;\n\n  if (parent) {\n    if (parent.L === p) parent.L = q;\n    else parent.R = q;\n  } else {\n    tree._ = q;\n  }\n\n  q.U = parent;\n  p.U = q;\n  p.L = q.R;\n  if (p.L) p.L.U = p;\n  q.R = p;\n}\n\nfunction RedBlackFirst(node) {\n  while (node.L) node = node.L;\n  return node;\n}\n\nfunction createEdge(left, right, v0, v1) {\n  var edge = [null, null],\n      index = edges.push(edge) - 1;\n  edge.left = left;\n  edge.right = right;\n  if (v0) setEdgeEnd(edge, left, right, v0);\n  if (v1) setEdgeEnd(edge, right, left, v1);\n  cells[left.index].halfedges.push(index);\n  cells[right.index].halfedges.push(index);\n  return edge;\n}\n\nfunction createBorderEdge(left, v0, v1) {\n  var edge = [v0, v1];\n  edge.left = left;\n  return edge;\n}\n\nfunction setEdgeEnd(edge, left, right, vertex) {\n  if (!edge[0] && !edge[1]) {\n    edge[0] = vertex;\n    edge.left = left;\n    edge.right = right;\n  } else if (edge.left === right) {\n    edge[1] = vertex;\n  } else {\n    edge[0] = vertex;\n  }\n}\n\n// Liang–Barsky line clipping.\nfunction clipEdge(edge, x0, y0, x1, y1) {\n  var a = edge[0],\n      b = edge[1],\n      ax = a[0],\n      ay = a[1],\n      bx = b[0],\n      by = b[1],\n      t0 = 0,\n      t1 = 1,\n      dx = bx - ax,\n      dy = by - ay,\n      r;\n\n  r = x0 - ax;\n  if (!dx && r > 0) return;\n  r /= dx;\n  if (dx < 0) {\n    if (r < t0) return;\n    if (r < t1) t1 = r;\n  } else if (dx > 0) {\n    if (r > t1) return;\n    if (r > t0) t0 = r;\n  }\n\n  r = x1 - ax;\n  if (!dx && r < 0) return;\n  r /= dx;\n  if (dx < 0) {\n    if (r > t1) return;\n    if (r > t0) t0 = r;\n  } else if (dx > 0) {\n    if (r < t0) return;\n    if (r < t1) t1 = r;\n  }\n\n  r = y0 - ay;\n  if (!dy && r > 0) return;\n  r /= dy;\n  if (dy < 0) {\n    if (r < t0) return;\n    if (r < t1) t1 = r;\n  } else if (dy > 0) {\n    if (r > t1) return;\n    if (r > t0) t0 = r;\n  }\n\n  r = y1 - ay;\n  if (!dy && r < 0) return;\n  r /= dy;\n  if (dy < 0) {\n    if (r > t1) return;\n    if (r > t0) t0 = r;\n  } else if (dy > 0) {\n    if (r < t0) return;\n    if (r < t1) t1 = r;\n  }\n\n  if (!(t0 > 0) && !(t1 < 1)) return true; // TODO Better check?\n\n  if (t0 > 0) edge[0] = [ax + t0 * dx, ay + t0 * dy];\n  if (t1 < 1) edge[1] = [ax + t1 * dx, ay + t1 * dy];\n  return true;\n}\n\nfunction connectEdge(edge, x0, y0, x1, y1) {\n  var v1 = edge[1];\n  if (v1) return true;\n\n  var v0 = edge[0],\n      left = edge.left,\n      right = edge.right,\n      lx = left[0],\n      ly = left[1],\n      rx = right[0],\n      ry = right[1],\n      fx = (lx + rx) / 2,\n      fy = (ly + ry) / 2,\n      fm,\n      fb;\n\n  if (ry === ly) {\n    if (fx < x0 || fx >= x1) return;\n    if (lx > rx) {\n      if (!v0) v0 = [fx, y0];\n      else if (v0[1] >= y1) return;\n      v1 = [fx, y1];\n    } else {\n      if (!v0) v0 = [fx, y1];\n      else if (v0[1] < y0) return;\n      v1 = [fx, y0];\n    }\n  } else {\n    fm = (lx - rx) / (ry - ly);\n    fb = fy - fm * fx;\n    if (fm < -1 || fm > 1) {\n      if (lx > rx) {\n        if (!v0) v0 = [(y0 - fb) / fm, y0];\n        else if (v0[1] >= y1) return;\n        v1 = [(y1 - fb) / fm, y1];\n      } else {\n        if (!v0) v0 = [(y1 - fb) / fm, y1];\n        else if (v0[1] < y0) return;\n        v1 = [(y0 - fb) / fm, y0];\n      }\n    } else {\n      if (ly < ry) {\n        if (!v0) v0 = [x0, fm * x0 + fb];\n        else if (v0[0] >= x1) return;\n        v1 = [x1, fm * x1 + fb];\n      } else {\n        if (!v0) v0 = [x1, fm * x1 + fb];\n        else if (v0[0] < x0) return;\n        v1 = [x0, fm * x0 + fb];\n      }\n    }\n  }\n\n  edge[0] = v0;\n  edge[1] = v1;\n  return true;\n}\n\nfunction clipEdges(x0, y0, x1, y1) {\n  var i = edges.length,\n      edge;\n\n  while (i--) {\n    if (!connectEdge(edge = edges[i], x0, y0, x1, y1)\n        || !clipEdge(edge, x0, y0, x1, y1)\n        || !(Math.abs(edge[0][0] - edge[1][0]) > epsilon$4\n            || Math.abs(edge[0][1] - edge[1][1]) > epsilon$4)) {\n      delete edges[i];\n    }\n  }\n}\n\nfunction createCell(site) {\n  return cells[site.index] = {\n    site: site,\n    halfedges: []\n  };\n}\n\nfunction cellHalfedgeAngle(cell, edge) {\n  var site = cell.site,\n      va = edge.left,\n      vb = edge.right;\n  if (site === vb) vb = va, va = site;\n  if (vb) return Math.atan2(vb[1] - va[1], vb[0] - va[0]);\n  if (site === va) va = edge[1], vb = edge[0];\n  else va = edge[0], vb = edge[1];\n  return Math.atan2(va[0] - vb[0], vb[1] - va[1]);\n}\n\nfunction cellHalfedgeStart(cell, edge) {\n  return edge[+(edge.left !== cell.site)];\n}\n\nfunction cellHalfedgeEnd(cell, edge) {\n  return edge[+(edge.left === cell.site)];\n}\n\nfunction sortCellHalfedges() {\n  for (var i = 0, n = cells.length, cell, halfedges, j, m; i < n; ++i) {\n    if ((cell = cells[i]) && (m = (halfedges = cell.halfedges).length)) {\n      var index = new Array(m),\n          array = new Array(m);\n      for (j = 0; j < m; ++j) index[j] = j, array[j] = cellHalfedgeAngle(cell, edges[halfedges[j]]);\n      index.sort(function(i, j) { return array[j] - array[i]; });\n      for (j = 0; j < m; ++j) array[j] = halfedges[index[j]];\n      for (j = 0; j < m; ++j) halfedges[j] = array[j];\n    }\n  }\n}\n\nfunction clipCells(x0, y0, x1, y1) {\n  var nCells = cells.length,\n      iCell,\n      cell,\n      site,\n      iHalfedge,\n      halfedges,\n      nHalfedges,\n      start,\n      startX,\n      startY,\n      end,\n      endX,\n      endY,\n      cover = true;\n\n  for (iCell = 0; iCell < nCells; ++iCell) {\n    if (cell = cells[iCell]) {\n      site = cell.site;\n      halfedges = cell.halfedges;\n      iHalfedge = halfedges.length;\n\n      // Remove any dangling clipped edges.\n      while (iHalfedge--) {\n        if (!edges[halfedges[iHalfedge]]) {\n          halfedges.splice(iHalfedge, 1);\n        }\n      }\n\n      // Insert any border edges as necessary.\n      iHalfedge = 0, nHalfedges = halfedges.length;\n      while (iHalfedge < nHalfedges) {\n        end = cellHalfedgeEnd(cell, edges[halfedges[iHalfedge]]), endX = end[0], endY = end[1];\n        start = cellHalfedgeStart(cell, edges[halfedges[++iHalfedge % nHalfedges]]), startX = start[0], startY = start[1];\n        if (Math.abs(endX - startX) > epsilon$4 || Math.abs(endY - startY) > epsilon$4) {\n          halfedges.splice(iHalfedge, 0, edges.push(createBorderEdge(site, end,\n              Math.abs(endX - x0) < epsilon$4 && y1 - endY > epsilon$4 ? [x0, Math.abs(startX - x0) < epsilon$4 ? startY : y1]\n              : Math.abs(endY - y1) < epsilon$4 && x1 - endX > epsilon$4 ? [Math.abs(startY - y1) < epsilon$4 ? startX : x1, y1]\n              : Math.abs(endX - x1) < epsilon$4 && endY - y0 > epsilon$4 ? [x1, Math.abs(startX - x1) < epsilon$4 ? startY : y0]\n              : Math.abs(endY - y0) < epsilon$4 && endX - x0 > epsilon$4 ? [Math.abs(startY - y0) < epsilon$4 ? startX : x0, y0]\n              : null)) - 1);\n          ++nHalfedges;\n        }\n      }\n\n      if (nHalfedges) cover = false;\n    }\n  }\n\n  // If there weren’t any edges, have the closest site cover the extent.\n  // It doesn’t matter which corner of the extent we measure!\n  if (cover) {\n    var dx, dy, d2, dc = Infinity;\n\n    for (iCell = 0, cover = null; iCell < nCells; ++iCell) {\n      if (cell = cells[iCell]) {\n        site = cell.site;\n        dx = site[0] - x0;\n        dy = site[1] - y0;\n        d2 = dx * dx + dy * dy;\n        if (d2 < dc) dc = d2, cover = cell;\n      }\n    }\n\n    if (cover) {\n      var v00 = [x0, y0], v01 = [x0, y1], v11 = [x1, y1], v10 = [x1, y0];\n      cover.halfedges.push(\n        edges.push(createBorderEdge(site = cover.site, v00, v01)) - 1,\n        edges.push(createBorderEdge(site, v01, v11)) - 1,\n        edges.push(createBorderEdge(site, v11, v10)) - 1,\n        edges.push(createBorderEdge(site, v10, v00)) - 1\n      );\n    }\n  }\n\n  // Lastly delete any cells with no edges; these were entirely clipped.\n  for (iCell = 0; iCell < nCells; ++iCell) {\n    if (cell = cells[iCell]) {\n      if (!cell.halfedges.length) {\n        delete cells[iCell];\n      }\n    }\n  }\n}\n\nvar circlePool = [];\n\nvar firstCircle;\n\nfunction Circle() {\n  RedBlackNode(this);\n  this.x =\n  this.y =\n  this.arc =\n  this.site =\n  this.cy = null;\n}\n\nfunction attachCircle(arc) {\n  var lArc = arc.P,\n      rArc = arc.N;\n\n  if (!lArc || !rArc) return;\n\n  var lSite = lArc.site,\n      cSite = arc.site,\n      rSite = rArc.site;\n\n  if (lSite === rSite) return;\n\n  var bx = cSite[0],\n      by = cSite[1],\n      ax = lSite[0] - bx,\n      ay = lSite[1] - by,\n      cx = rSite[0] - bx,\n      cy = rSite[1] - by;\n\n  var d = 2 * (ax * cy - ay * cx);\n  if (d >= -epsilon2$2) return;\n\n  var ha = ax * ax + ay * ay,\n      hc = cx * cx + cy * cy,\n      x = (cy * ha - ay * hc) / d,\n      y = (ax * hc - cx * ha) / d;\n\n  var circle = circlePool.pop() || new Circle;\n  circle.arc = arc;\n  circle.site = cSite;\n  circle.x = x + bx;\n  circle.y = (circle.cy = y + by) + Math.sqrt(x * x + y * y); // y bottom\n\n  arc.circle = circle;\n\n  var before = null,\n      node = circles._;\n\n  while (node) {\n    if (circle.y < node.y || (circle.y === node.y && circle.x <= node.x)) {\n      if (node.L) node = node.L;\n      else { before = node.P; break; }\n    } else {\n      if (node.R) node = node.R;\n      else { before = node; break; }\n    }\n  }\n\n  circles.insert(before, circle);\n  if (!before) firstCircle = circle;\n}\n\nfunction detachCircle(arc) {\n  var circle = arc.circle;\n  if (circle) {\n    if (!circle.P) firstCircle = circle.N;\n    circles.remove(circle);\n    circlePool.push(circle);\n    RedBlackNode(circle);\n    arc.circle = null;\n  }\n}\n\nvar beachPool = [];\n\nfunction Beach() {\n  RedBlackNode(this);\n  this.edge =\n  this.site =\n  this.circle = null;\n}\n\nfunction createBeach(site) {\n  var beach = beachPool.pop() || new Beach;\n  beach.site = site;\n  return beach;\n}\n\nfunction detachBeach(beach) {\n  detachCircle(beach);\n  beaches.remove(beach);\n  beachPool.push(beach);\n  RedBlackNode(beach);\n}\n\nfunction removeBeach(beach) {\n  var circle = beach.circle,\n      x = circle.x,\n      y = circle.cy,\n      vertex = [x, y],\n      previous = beach.P,\n      next = beach.N,\n      disappearing = [beach];\n\n  detachBeach(beach);\n\n  var lArc = previous;\n  while (lArc.circle\n      && Math.abs(x - lArc.circle.x) < epsilon$4\n      && Math.abs(y - lArc.circle.cy) < epsilon$4) {\n    previous = lArc.P;\n    disappearing.unshift(lArc);\n    detachBeach(lArc);\n    lArc = previous;\n  }\n\n  disappearing.unshift(lArc);\n  detachCircle(lArc);\n\n  var rArc = next;\n  while (rArc.circle\n      && Math.abs(x - rArc.circle.x) < epsilon$4\n      && Math.abs(y - rArc.circle.cy) < epsilon$4) {\n    next = rArc.N;\n    disappearing.push(rArc);\n    detachBeach(rArc);\n    rArc = next;\n  }\n\n  disappearing.push(rArc);\n  detachCircle(rArc);\n\n  var nArcs = disappearing.length,\n      iArc;\n  for (iArc = 1; iArc < nArcs; ++iArc) {\n    rArc = disappearing[iArc];\n    lArc = disappearing[iArc - 1];\n    setEdgeEnd(rArc.edge, lArc.site, rArc.site, vertex);\n  }\n\n  lArc = disappearing[0];\n  rArc = disappearing[nArcs - 1];\n  rArc.edge = createEdge(lArc.site, rArc.site, null, vertex);\n\n  attachCircle(lArc);\n  attachCircle(rArc);\n}\n\nfunction addBeach(site) {\n  var x = site[0],\n      directrix = site[1],\n      lArc,\n      rArc,\n      dxl,\n      dxr,\n      node = beaches._;\n\n  while (node) {\n    dxl = leftBreakPoint(node, directrix) - x;\n    if (dxl > epsilon$4) node = node.L; else {\n      dxr = x - rightBreakPoint(node, directrix);\n      if (dxr > epsilon$4) {\n        if (!node.R) {\n          lArc = node;\n          break;\n        }\n        node = node.R;\n      } else {\n        if (dxl > -epsilon$4) {\n          lArc = node.P;\n          rArc = node;\n        } else if (dxr > -epsilon$4) {\n          lArc = node;\n          rArc = node.N;\n        } else {\n          lArc = rArc = node;\n        }\n        break;\n      }\n    }\n  }\n\n  createCell(site);\n  var newArc = createBeach(site);\n  beaches.insert(lArc, newArc);\n\n  if (!lArc && !rArc) return;\n\n  if (lArc === rArc) {\n    detachCircle(lArc);\n    rArc = createBeach(lArc.site);\n    beaches.insert(newArc, rArc);\n    newArc.edge = rArc.edge = createEdge(lArc.site, newArc.site);\n    attachCircle(lArc);\n    attachCircle(rArc);\n    return;\n  }\n\n  if (!rArc) { // && lArc\n    newArc.edge = createEdge(lArc.site, newArc.site);\n    return;\n  }\n\n  // else lArc !== rArc\n  detachCircle(lArc);\n  detachCircle(rArc);\n\n  var lSite = lArc.site,\n      ax = lSite[0],\n      ay = lSite[1],\n      bx = site[0] - ax,\n      by = site[1] - ay,\n      rSite = rArc.site,\n      cx = rSite[0] - ax,\n      cy = rSite[1] - ay,\n      d = 2 * (bx * cy - by * cx),\n      hb = bx * bx + by * by,\n      hc = cx * cx + cy * cy,\n      vertex = [(cy * hb - by * hc) / d + ax, (bx * hc - cx * hb) / d + ay];\n\n  setEdgeEnd(rArc.edge, lSite, rSite, vertex);\n  newArc.edge = createEdge(lSite, site, null, vertex);\n  rArc.edge = createEdge(site, rSite, null, vertex);\n  attachCircle(lArc);\n  attachCircle(rArc);\n}\n\nfunction leftBreakPoint(arc, directrix) {\n  var site = arc.site,\n      rfocx = site[0],\n      rfocy = site[1],\n      pby2 = rfocy - directrix;\n\n  if (!pby2) return rfocx;\n\n  var lArc = arc.P;\n  if (!lArc) return -Infinity;\n\n  site = lArc.site;\n  var lfocx = site[0],\n      lfocy = site[1],\n      plby2 = lfocy - directrix;\n\n  if (!plby2) return lfocx;\n\n  var hl = lfocx - rfocx,\n      aby2 = 1 / pby2 - 1 / plby2,\n      b = hl / plby2;\n\n  if (aby2) return (-b + Math.sqrt(b * b - 2 * aby2 * (hl * hl / (-2 * plby2) - lfocy + plby2 / 2 + rfocy - pby2 / 2))) / aby2 + rfocx;\n\n  return (rfocx + lfocx) / 2;\n}\n\nfunction rightBreakPoint(arc, directrix) {\n  var rArc = arc.N;\n  if (rArc) return leftBreakPoint(rArc, directrix);\n  var site = arc.site;\n  return site[1] === directrix ? site[0] : Infinity;\n}\n\nvar epsilon$4 = 1e-6;\nvar epsilon2$2 = 1e-12;\nvar beaches;\nvar cells;\nvar circles;\nvar edges;\n\nfunction triangleArea(a, b, c) {\n  return (a[0] - c[0]) * (b[1] - a[1]) - (a[0] - b[0]) * (c[1] - a[1]);\n}\n\nfunction lexicographic(a, b) {\n  return b[1] - a[1]\n      || b[0] - a[0];\n}\n\nfunction Diagram(sites, extent) {\n  var site = sites.sort(lexicographic).pop(),\n      x,\n      y,\n      circle;\n\n  edges = [];\n  cells = new Array(sites.length);\n  beaches = new RedBlackTree;\n  circles = new RedBlackTree;\n\n  while (true) {\n    circle = firstCircle;\n    if (site && (!circle || site[1] < circle.y || (site[1] === circle.y && site[0] < circle.x))) {\n      if (site[0] !== x || site[1] !== y) {\n        addBeach(site);\n        x = site[0], y = site[1];\n      }\n      site = sites.pop();\n    } else if (circle) {\n      removeBeach(circle.arc);\n    } else {\n      break;\n    }\n  }\n\n  sortCellHalfedges();\n\n  if (extent) {\n    var x0 = +extent[0][0],\n        y0 = +extent[0][1],\n        x1 = +extent[1][0],\n        y1 = +extent[1][1];\n    clipEdges(x0, y0, x1, y1);\n    clipCells(x0, y0, x1, y1);\n  }\n\n  this.edges = edges;\n  this.cells = cells;\n\n  beaches =\n  circles =\n  edges =\n  cells = null;\n}\n\nDiagram.prototype = {\n  constructor: Diagram,\n\n  polygons: function() {\n    var edges = this.edges;\n\n    return this.cells.map(function(cell) {\n      var polygon = cell.halfedges.map(function(i) { return cellHalfedgeStart(cell, edges[i]); });\n      polygon.data = cell.site.data;\n      return polygon;\n    });\n  },\n\n  triangles: function() {\n    var triangles = [],\n        edges = this.edges;\n\n    this.cells.forEach(function(cell, i) {\n      if (!(m = (halfedges = cell.halfedges).length)) return;\n      var site = cell.site,\n          halfedges,\n          j = -1,\n          m,\n          s0,\n          e1 = edges[halfedges[m - 1]],\n          s1 = e1.left === site ? e1.right : e1.left;\n\n      while (++j < m) {\n        s0 = s1;\n        e1 = edges[halfedges[j]];\n        s1 = e1.left === site ? e1.right : e1.left;\n        if (s0 && s1 && i < s0.index && i < s1.index && triangleArea(site, s0, s1) < 0) {\n          triangles.push([site.data, s0.data, s1.data]);\n        }\n      }\n    });\n\n    return triangles;\n  },\n\n  links: function() {\n    return this.edges.filter(function(edge) {\n      return edge.right;\n    }).map(function(edge) {\n      return {\n        source: edge.left.data,\n        target: edge.right.data\n      };\n    });\n  },\n\n  find: function(x, y, radius) {\n    var that = this, i0, i1 = that._found || 0, n = that.cells.length, cell;\n\n    // Use the previously-found cell, or start with an arbitrary one.\n    while (!(cell = that.cells[i1])) if (++i1 >= n) return null;\n    var dx = x - cell.site[0], dy = y - cell.site[1], d2 = dx * dx + dy * dy;\n\n    // Traverse the half-edges to find a closer cell, if any.\n    do {\n      cell = that.cells[i0 = i1], i1 = null;\n      cell.halfedges.forEach(function(e) {\n        var edge = that.edges[e], v = edge.left;\n        if ((v === cell.site || !v) && !(v = edge.right)) return;\n        var vx = x - v[0], vy = y - v[1], v2 = vx * vx + vy * vy;\n        if (v2 < d2) d2 = v2, i1 = v.index;\n      });\n    } while (i1 !== null);\n\n    that._found = i0;\n\n    return radius == null || d2 <= radius * radius ? cell.site : null;\n  }\n};\n\nvar voronoi = function() {\n  var x$$1 = x$4,\n      y$$1 = y$4,\n      extent = null;\n\n  function voronoi(data) {\n    return new Diagram(data.map(function(d, i) {\n      var s = [Math.round(x$$1(d, i, data) / epsilon$4) * epsilon$4, Math.round(y$$1(d, i, data) / epsilon$4) * epsilon$4];\n      s.index = i;\n      s.data = d;\n      return s;\n    }), extent);\n  }\n\n  voronoi.polygons = function(data) {\n    return voronoi(data).polygons();\n  };\n\n  voronoi.links = function(data) {\n    return voronoi(data).links();\n  };\n\n  voronoi.triangles = function(data) {\n    return voronoi(data).triangles();\n  };\n\n  voronoi.x = function(_) {\n    return arguments.length ? (x$$1 = typeof _ === \"function\" ? _ : constant$11(+_), voronoi) : x$$1;\n  };\n\n  voronoi.y = function(_) {\n    return arguments.length ? (y$$1 = typeof _ === \"function\" ? _ : constant$11(+_), voronoi) : y$$1;\n  };\n\n  voronoi.extent = function(_) {\n    return arguments.length ? (extent = _ == null ? null : [[+_[0][0], +_[0][1]], [+_[1][0], +_[1][1]]], voronoi) : extent && [[extent[0][0], extent[0][1]], [extent[1][0], extent[1][1]]];\n  };\n\n  voronoi.size = function(_) {\n    return arguments.length ? (extent = _ == null ? null : [[0, 0], [+_[0], +_[1]]], voronoi) : extent && [extent[1][0] - extent[0][0], extent[1][1] - extent[0][1]];\n  };\n\n  return voronoi;\n};\n\nvar constant$12 = function(x) {\n  return function() {\n    return x;\n  };\n};\n\nfunction ZoomEvent(target, type, transform) {\n  this.target = target;\n  this.type = type;\n  this.transform = transform;\n}\n\nfunction Transform(k, x, y) {\n  this.k = k;\n  this.x = x;\n  this.y = y;\n}\n\nTransform.prototype = {\n  constructor: Transform,\n  scale: function(k) {\n    return k === 1 ? this : new Transform(this.k * k, this.x, this.y);\n  },\n  translate: function(x, y) {\n    return x === 0 & y === 0 ? this : new Transform(this.k, this.x + this.k * x, this.y + this.k * y);\n  },\n  apply: function(point) {\n    return [point[0] * this.k + this.x, point[1] * this.k + this.y];\n  },\n  applyX: function(x) {\n    return x * this.k + this.x;\n  },\n  applyY: function(y) {\n    return y * this.k + this.y;\n  },\n  invert: function(location) {\n    return [(location[0] - this.x) / this.k, (location[1] - this.y) / this.k];\n  },\n  invertX: function(x) {\n    return (x - this.x) / this.k;\n  },\n  invertY: function(y) {\n    return (y - this.y) / this.k;\n  },\n  rescaleX: function(x) {\n    return x.copy().domain(x.range().map(this.invertX, this).map(x.invert, x));\n  },\n  rescaleY: function(y) {\n    return y.copy().domain(y.range().map(this.invertY, this).map(y.invert, y));\n  },\n  toString: function() {\n    return \"translate(\" + this.x + \",\" + this.y + \") scale(\" + this.k + \")\";\n  }\n};\n\nvar identity$8 = new Transform(1, 0, 0);\n\ntransform$1.prototype = Transform.prototype;\n\nfunction transform$1(node) {\n  return node.__zoom || identity$8;\n}\n\nfunction nopropagation$2() {\n  exports.event.stopImmediatePropagation();\n}\n\nvar noevent$2 = function() {\n  exports.event.preventDefault();\n  exports.event.stopImmediatePropagation();\n};\n\n// Ignore right-click, since that should open the context menu.\nfunction defaultFilter$2() {\n  return !exports.event.button;\n}\n\nfunction defaultExtent$1() {\n  var e = this, w, h;\n  if (e instanceof SVGElement) {\n    e = e.ownerSVGElement || e;\n    w = e.width.baseVal.value;\n    h = e.height.baseVal.value;\n  } else {\n    w = e.clientWidth;\n    h = e.clientHeight;\n  }\n  return [[0, 0], [w, h]];\n}\n\nfunction defaultTransform() {\n  return this.__zoom || identity$8;\n}\n\nfunction defaultWheelDelta() {\n  return -exports.event.deltaY * (exports.event.deltaMode ? 120 : 1) / 500;\n}\n\nfunction defaultTouchable$1() {\n  return \"ontouchstart\" in this;\n}\n\nvar zoom = function() {\n  var filter = defaultFilter$2,\n      extent = defaultExtent$1,\n      wheelDelta = defaultWheelDelta,\n      touchable = defaultTouchable$1,\n      k0 = 0,\n      k1 = Infinity,\n      x0 = -k1,\n      x1 = k1,\n      y0 = x0,\n      y1 = x1,\n      duration = 250,\n      interpolate = interpolateZoom,\n      gestures = [],\n      listeners = dispatch(\"start\", \"zoom\", \"end\"),\n      touchstarting,\n      touchending,\n      touchDelay = 500,\n      wheelDelay = 150,\n      clickDistance2 = 0;\n\n  function zoom(selection) {\n    selection\n        .property(\"__zoom\", defaultTransform)\n        .on(\"wheel.zoom\", wheeled)\n        .on(\"mousedown.zoom\", mousedowned)\n        .on(\"dblclick.zoom\", dblclicked)\n      .filter(touchable)\n        .on(\"touchstart.zoom\", touchstarted)\n        .on(\"touchmove.zoom\", touchmoved)\n        .on(\"touchend.zoom touchcancel.zoom\", touchended)\n        .style(\"touch-action\", \"none\")\n        .style(\"-webkit-tap-highlight-color\", \"rgba(0,0,0,0)\");\n  }\n\n  zoom.transform = function(collection, transform$$1) {\n    var selection = collection.selection ? collection.selection() : collection;\n    selection.property(\"__zoom\", defaultTransform);\n    if (collection !== selection) {\n      schedule(collection, transform$$1);\n    } else {\n      selection.interrupt().each(function() {\n        gesture(this, arguments)\n            .start()\n            .zoom(null, typeof transform$$1 === \"function\" ? transform$$1.apply(this, arguments) : transform$$1)\n            .end();\n      });\n    }\n  };\n\n  zoom.scaleBy = function(selection, k) {\n    zoom.scaleTo(selection, function() {\n      var k0 = this.__zoom.k,\n          k1 = typeof k === \"function\" ? k.apply(this, arguments) : k;\n      return k0 * k1;\n    });\n  };\n\n  zoom.scaleTo = function(selection, k) {\n    zoom.transform(selection, function() {\n      var e = extent.apply(this, arguments),\n          t0 = this.__zoom,\n          p0 = centroid(e),\n          p1 = t0.invert(p0),\n          k1 = typeof k === \"function\" ? k.apply(this, arguments) : k;\n      return constrain(translate(scale(t0, k1), p0, p1), e);\n    });\n  };\n\n  zoom.translateBy = function(selection, x, y) {\n    zoom.transform(selection, function() {\n      return constrain(this.__zoom.translate(\n        typeof x === \"function\" ? x.apply(this, arguments) : x,\n        typeof y === \"function\" ? y.apply(this, arguments) : y\n      ), extent.apply(this, arguments));\n    });\n  };\n\n  zoom.translateTo = function(selection, x, y) {\n    zoom.transform(selection, function() {\n      var e = extent.apply(this, arguments),\n          t = this.__zoom,\n          p = centroid(e);\n      return constrain(identity$8.translate(p[0], p[1]).scale(t.k).translate(\n        typeof x === \"function\" ? -x.apply(this, arguments) : -x,\n        typeof y === \"function\" ? -y.apply(this, arguments) : -y\n      ), e);\n    });\n  };\n\n  function scale(transform$$1, k) {\n    k = Math.max(k0, Math.min(k1, k));\n    return k === transform$$1.k ? transform$$1 : new Transform(k, transform$$1.x, transform$$1.y);\n  }\n\n  function translate(transform$$1, p0, p1) {\n    var x = p0[0] - p1[0] * transform$$1.k, y = p0[1] - p1[1] * transform$$1.k;\n    return x === transform$$1.x && y === transform$$1.y ? transform$$1 : new Transform(transform$$1.k, x, y);\n  }\n\n  function constrain(transform$$1, extent) {\n    var dx0 = transform$$1.invertX(extent[0][0]) - x0,\n        dx1 = transform$$1.invertX(extent[1][0]) - x1,\n        dy0 = transform$$1.invertY(extent[0][1]) - y0,\n        dy1 = transform$$1.invertY(extent[1][1]) - y1;\n    return transform$$1.translate(\n      dx1 > dx0 ? (dx0 + dx1) / 2 : Math.min(0, dx0) || Math.max(0, dx1),\n      dy1 > dy0 ? (dy0 + dy1) / 2 : Math.min(0, dy0) || Math.max(0, dy1)\n    );\n  }\n\n  function centroid(extent) {\n    return [(+extent[0][0] + +extent[1][0]) / 2, (+extent[0][1] + +extent[1][1]) / 2];\n  }\n\n  function schedule(transition, transform$$1, center) {\n    transition\n        .on(\"start.zoom\", function() { gesture(this, arguments).start(); })\n        .on(\"interrupt.zoom end.zoom\", function() { gesture(this, arguments).end(); })\n        .tween(\"zoom\", function() {\n          var that = this,\n              args = arguments,\n              g = gesture(that, args),\n              e = extent.apply(that, args),\n              p = center || centroid(e),\n              w = Math.max(e[1][0] - e[0][0], e[1][1] - e[0][1]),\n              a = that.__zoom,\n              b = typeof transform$$1 === \"function\" ? transform$$1.apply(that, args) : transform$$1,\n              i = interpolate(a.invert(p).concat(w / a.k), b.invert(p).concat(w / b.k));\n          return function(t) {\n            if (t === 1) t = b; // Avoid rounding error on end.\n            else { var l = i(t), k = w / l[2]; t = new Transform(k, p[0] - l[0] * k, p[1] - l[1] * k); }\n            g.zoom(null, t);\n          };\n        });\n  }\n\n  function gesture(that, args) {\n    for (var i = 0, n = gestures.length, g; i < n; ++i) {\n      if ((g = gestures[i]).that === that) {\n        return g;\n      }\n    }\n    return new Gesture(that, args);\n  }\n\n  function Gesture(that, args) {\n    this.that = that;\n    this.args = args;\n    this.index = -1;\n    this.active = 0;\n    this.extent = extent.apply(that, args);\n  }\n\n  Gesture.prototype = {\n    start: function() {\n      if (++this.active === 1) {\n        this.index = gestures.push(this) - 1;\n        this.emit(\"start\");\n      }\n      return this;\n    },\n    zoom: function(key, transform$$1) {\n      if (this.mouse && key !== \"mouse\") this.mouse[1] = transform$$1.invert(this.mouse[0]);\n      if (this.touch0 && key !== \"touch\") this.touch0[1] = transform$$1.invert(this.touch0[0]);\n      if (this.touch1 && key !== \"touch\") this.touch1[1] = transform$$1.invert(this.touch1[0]);\n      this.that.__zoom = transform$$1;\n      this.emit(\"zoom\");\n      return this;\n    },\n    end: function() {\n      if (--this.active === 0) {\n        gestures.splice(this.index, 1);\n        this.index = -1;\n        this.emit(\"end\");\n      }\n      return this;\n    },\n    emit: function(type) {\n      customEvent(new ZoomEvent(zoom, type, this.that.__zoom), listeners.apply, listeners, [type, this.that, this.args]);\n    }\n  };\n\n  function wheeled() {\n    if (!filter.apply(this, arguments)) return;\n    var g = gesture(this, arguments),\n        t = this.__zoom,\n        k = Math.max(k0, Math.min(k1, t.k * Math.pow(2, wheelDelta.apply(this, arguments)))),\n        p = mouse(this);\n\n    // If the mouse is in the same location as before, reuse it.\n    // If there were recent wheel events, reset the wheel idle timeout.\n    if (g.wheel) {\n      if (g.mouse[0][0] !== p[0] || g.mouse[0][1] !== p[1]) {\n        g.mouse[1] = t.invert(g.mouse[0] = p);\n      }\n      clearTimeout(g.wheel);\n    }\n\n    // If this wheel event won’t trigger a transform change, ignore it.\n    else if (t.k === k) return;\n\n    // Otherwise, capture the mouse point and location at the start.\n    else {\n      g.mouse = [p, t.invert(p)];\n      interrupt(this);\n      g.start();\n    }\n\n    noevent$2();\n    g.wheel = setTimeout(wheelidled, wheelDelay);\n    g.zoom(\"mouse\", constrain(translate(scale(t, k), g.mouse[0], g.mouse[1]), g.extent));\n\n    function wheelidled() {\n      g.wheel = null;\n      g.end();\n    }\n  }\n\n  function mousedowned() {\n    if (touchending || !filter.apply(this, arguments)) return;\n    var g = gesture(this, arguments),\n        v = select(exports.event.view).on(\"mousemove.zoom\", mousemoved, true).on(\"mouseup.zoom\", mouseupped, true),\n        p = mouse(this),\n        x0 = exports.event.clientX,\n        y0 = exports.event.clientY;\n\n    dragDisable(exports.event.view);\n    nopropagation$2();\n    g.mouse = [p, this.__zoom.invert(p)];\n    interrupt(this);\n    g.start();\n\n    function mousemoved() {\n      noevent$2();\n      if (!g.moved) {\n        var dx = exports.event.clientX - x0, dy = exports.event.clientY - y0;\n        g.moved = dx * dx + dy * dy > clickDistance2;\n      }\n      g.zoom(\"mouse\", constrain(translate(g.that.__zoom, g.mouse[0] = mouse(g.that), g.mouse[1]), g.extent));\n    }\n\n    function mouseupped() {\n      v.on(\"mousemove.zoom mouseup.zoom\", null);\n      yesdrag(exports.event.view, g.moved);\n      noevent$2();\n      g.end();\n    }\n  }\n\n  function dblclicked() {\n    if (!filter.apply(this, arguments)) return;\n    var t0 = this.__zoom,\n        p0 = mouse(this),\n        p1 = t0.invert(p0),\n        k1 = t0.k * (exports.event.shiftKey ? 0.5 : 2),\n        t1 = constrain(translate(scale(t0, k1), p0, p1), extent.apply(this, arguments));\n\n    noevent$2();\n    if (duration > 0) select(this).transition().duration(duration).call(schedule, t1, p0);\n    else select(this).call(zoom.transform, t1);\n  }\n\n  function touchstarted() {\n    if (!filter.apply(this, arguments)) return;\n    var g = gesture(this, arguments),\n        touches = exports.event.changedTouches,\n        started,\n        n = touches.length, i, t, p;\n\n    nopropagation$2();\n    for (i = 0; i < n; ++i) {\n      t = touches[i], p = touch(this, touches, t.identifier);\n      p = [p, this.__zoom.invert(p), t.identifier];\n      if (!g.touch0) g.touch0 = p, started = true;\n      else if (!g.touch1) g.touch1 = p;\n    }\n\n    // If this is a dbltap, reroute to the (optional) dblclick.zoom handler.\n    if (touchstarting) {\n      touchstarting = clearTimeout(touchstarting);\n      if (!g.touch1) {\n        g.end();\n        p = select(this).on(\"dblclick.zoom\");\n        if (p) p.apply(this, arguments);\n        return;\n      }\n    }\n\n    if (started) {\n      touchstarting = setTimeout(function() { touchstarting = null; }, touchDelay);\n      interrupt(this);\n      g.start();\n    }\n  }\n\n  function touchmoved() {\n    var g = gesture(this, arguments),\n        touches = exports.event.changedTouches,\n        n = touches.length, i, t, p, l;\n\n    noevent$2();\n    if (touchstarting) touchstarting = clearTimeout(touchstarting);\n    for (i = 0; i < n; ++i) {\n      t = touches[i], p = touch(this, touches, t.identifier);\n      if (g.touch0 && g.touch0[2] === t.identifier) g.touch0[0] = p;\n      else if (g.touch1 && g.touch1[2] === t.identifier) g.touch1[0] = p;\n    }\n    t = g.that.__zoom;\n    if (g.touch1) {\n      var p0 = g.touch0[0], l0 = g.touch0[1],\n          p1 = g.touch1[0], l1 = g.touch1[1],\n          dp = (dp = p1[0] - p0[0]) * dp + (dp = p1[1] - p0[1]) * dp,\n          dl = (dl = l1[0] - l0[0]) * dl + (dl = l1[1] - l0[1]) * dl;\n      t = scale(t, Math.sqrt(dp / dl));\n      p = [(p0[0] + p1[0]) / 2, (p0[1] + p1[1]) / 2];\n      l = [(l0[0] + l1[0]) / 2, (l0[1] + l1[1]) / 2];\n    }\n    else if (g.touch0) p = g.touch0[0], l = g.touch0[1];\n    else return;\n    g.zoom(\"touch\", constrain(translate(t, p, l), g.extent));\n  }\n\n  function touchended() {\n    var g = gesture(this, arguments),\n        touches = exports.event.changedTouches,\n        n = touches.length, i, t;\n\n    nopropagation$2();\n    if (touchending) clearTimeout(touchending);\n    touchending = setTimeout(function() { touchending = null; }, touchDelay);\n    for (i = 0; i < n; ++i) {\n      t = touches[i];\n      if (g.touch0 && g.touch0[2] === t.identifier) delete g.touch0;\n      else if (g.touch1 && g.touch1[2] === t.identifier) delete g.touch1;\n    }\n    if (g.touch1 && !g.touch0) g.touch0 = g.touch1, delete g.touch1;\n    if (g.touch0) g.touch0[1] = this.__zoom.invert(g.touch0[0]);\n    else g.end();\n  }\n\n  zoom.wheelDelta = function(_) {\n    return arguments.length ? (wheelDelta = typeof _ === \"function\" ? _ : constant$12(+_), zoom) : wheelDelta;\n  };\n\n  zoom.filter = function(_) {\n    return arguments.length ? (filter = typeof _ === \"function\" ? _ : constant$12(!!_), zoom) : filter;\n  };\n\n  zoom.touchable = function(_) {\n    return arguments.length ? (touchable = typeof _ === \"function\" ? _ : constant$12(!!_), zoom) : touchable;\n  };\n\n  zoom.extent = function(_) {\n    return arguments.length ? (extent = typeof _ === \"function\" ? _ : constant$12([[+_[0][0], +_[0][1]], [+_[1][0], +_[1][1]]]), zoom) : extent;\n  };\n\n  zoom.scaleExtent = function(_) {\n    return arguments.length ? (k0 = +_[0], k1 = +_[1], zoom) : [k0, k1];\n  };\n\n  zoom.translateExtent = function(_) {\n    return arguments.length ? (x0 = +_[0][0], x1 = +_[1][0], y0 = +_[0][1], y1 = +_[1][1], zoom) : [[x0, y0], [x1, y1]];\n  };\n\n  zoom.duration = function(_) {\n    return arguments.length ? (duration = +_, zoom) : duration;\n  };\n\n  zoom.interpolate = function(_) {\n    return arguments.length ? (interpolate = _, zoom) : interpolate;\n  };\n\n  zoom.on = function() {\n    var value = listeners.on.apply(listeners, arguments);\n    return value === listeners ? zoom : value;\n  };\n\n  zoom.clickDistance = function(_) {\n    return arguments.length ? (clickDistance2 = (_ = +_) * _, zoom) : Math.sqrt(clickDistance2);\n  };\n\n  return zoom;\n};\n\nexports.version = version;\nexports.bisect = bisectRight;\nexports.bisectRight = bisectRight;\nexports.bisectLeft = bisectLeft;\nexports.ascending = ascending;\nexports.bisector = bisector;\nexports.cross = cross;\nexports.descending = descending;\nexports.deviation = deviation;\nexports.extent = extent;\nexports.histogram = histogram;\nexports.thresholdFreedmanDiaconis = freedmanDiaconis;\nexports.thresholdScott = scott;\nexports.thresholdSturges = sturges;\nexports.max = max;\nexports.mean = mean;\nexports.median = median;\nexports.merge = merge;\nexports.min = min;\nexports.pairs = pairs;\nexports.permute = permute;\nexports.quantile = threshold;\nexports.range = sequence;\nexports.scan = scan;\nexports.shuffle = shuffle;\nexports.sum = sum;\nexports.ticks = ticks;\nexports.tickIncrement = tickIncrement;\nexports.tickStep = tickStep;\nexports.transpose = transpose;\nexports.variance = variance;\nexports.zip = zip;\nexports.axisTop = axisTop;\nexports.axisRight = axisRight;\nexports.axisBottom = axisBottom;\nexports.axisLeft = axisLeft;\nexports.brush = brush;\nexports.brushX = brushX;\nexports.brushY = brushY;\nexports.brushSelection = brushSelection;\nexports.chord = chord;\nexports.ribbon = ribbon;\nexports.nest = nest;\nexports.set = set$2;\nexports.map = map$1;\nexports.keys = keys;\nexports.values = values;\nexports.entries = entries;\nexports.color = color;\nexports.rgb = rgb;\nexports.hsl = hsl;\nexports.lab = lab;\nexports.hcl = hcl;\nexports.cubehelix = cubehelix;\nexports.dispatch = dispatch;\nexports.drag = drag;\nexports.dragDisable = dragDisable;\nexports.dragEnable = yesdrag;\nexports.dsvFormat = dsv;\nexports.csvParse = csvParse;\nexports.csvParseRows = csvParseRows;\nexports.csvFormat = csvFormat;\nexports.csvFormatRows = csvFormatRows;\nexports.tsvParse = tsvParse;\nexports.tsvParseRows = tsvParseRows;\nexports.tsvFormat = tsvFormat;\nexports.tsvFormatRows = tsvFormatRows;\nexports.easeLinear = linear$1;\nexports.easeQuad = quadInOut;\nexports.easeQuadIn = quadIn;\nexports.easeQuadOut = quadOut;\nexports.easeQuadInOut = quadInOut;\nexports.easeCubic = cubicInOut;\nexports.easeCubicIn = cubicIn;\nexports.easeCubicOut = cubicOut;\nexports.easeCubicInOut = cubicInOut;\nexports.easePoly = polyInOut;\nexports.easePolyIn = polyIn;\nexports.easePolyOut = polyOut;\nexports.easePolyInOut = polyInOut;\nexports.easeSin = sinInOut;\nexports.easeSinIn = sinIn;\nexports.easeSinOut = sinOut;\nexports.easeSinInOut = sinInOut;\nexports.easeExp = expInOut;\nexports.easeExpIn = expIn;\nexports.easeExpOut = expOut;\nexports.easeExpInOut = expInOut;\nexports.easeCircle = circleInOut;\nexports.easeCircleIn = circleIn;\nexports.easeCircleOut = circleOut;\nexports.easeCircleInOut = circleInOut;\nexports.easeBounce = bounceOut;\nexports.easeBounceIn = bounceIn;\nexports.easeBounceOut = bounceOut;\nexports.easeBounceInOut = bounceInOut;\nexports.easeBack = backInOut;\nexports.easeBackIn = backIn;\nexports.easeBackOut = backOut;\nexports.easeBackInOut = backInOut;\nexports.easeElastic = elasticOut;\nexports.easeElasticIn = elasticIn;\nexports.easeElasticOut = elasticOut;\nexports.easeElasticInOut = elasticInOut;\nexports.forceCenter = center$1;\nexports.forceCollide = collide;\nexports.forceLink = link;\nexports.forceManyBody = manyBody;\nexports.forceRadial = radial;\nexports.forceSimulation = simulation;\nexports.forceX = x$2;\nexports.forceY = y$2;\nexports.formatDefaultLocale = defaultLocale;\nexports.formatLocale = formatLocale;\nexports.formatSpecifier = formatSpecifier;\nexports.precisionFixed = precisionFixed;\nexports.precisionPrefix = precisionPrefix;\nexports.precisionRound = precisionRound;\nexports.geoArea = area;\nexports.geoBounds = bounds;\nexports.geoCentroid = centroid;\nexports.geoCircle = circle;\nexports.geoClipAntimeridian = clipAntimeridian;\nexports.geoClipCircle = clipCircle;\nexports.geoClipExtent = extent$1;\nexports.geoClipRectangle = clipRectangle;\nexports.geoContains = contains;\nexports.geoDistance = distance;\nexports.geoGraticule = graticule;\nexports.geoGraticule10 = graticule10;\nexports.geoInterpolate = interpolate$1;\nexports.geoLength = length$1;\nexports.geoPath = index$1;\nexports.geoAlbers = albers;\nexports.geoAlbersUsa = albersUsa;\nexports.geoAzimuthalEqualArea = azimuthalEqualArea;\nexports.geoAzimuthalEqualAreaRaw = azimuthalEqualAreaRaw;\nexports.geoAzimuthalEquidistant = azimuthalEquidistant;\nexports.geoAzimuthalEquidistantRaw = azimuthalEquidistantRaw;\nexports.geoConicConformal = conicConformal;\nexports.geoConicConformalRaw = conicConformalRaw;\nexports.geoConicEqualArea = conicEqualArea;\nexports.geoConicEqualAreaRaw = conicEqualAreaRaw;\nexports.geoConicEquidistant = conicEquidistant;\nexports.geoConicEquidistantRaw = conicEquidistantRaw;\nexports.geoEquirectangular = equirectangular;\nexports.geoEquirectangularRaw = equirectangularRaw;\nexports.geoGnomonic = gnomonic;\nexports.geoGnomonicRaw = gnomonicRaw;\nexports.geoIdentity = identity$5;\nexports.geoProjection = projection;\nexports.geoProjectionMutator = projectionMutator;\nexports.geoMercator = mercator;\nexports.geoMercatorRaw = mercatorRaw;\nexports.geoNaturalEarth1 = naturalEarth1;\nexports.geoNaturalEarth1Raw = naturalEarth1Raw;\nexports.geoOrthographic = orthographic;\nexports.geoOrthographicRaw = orthographicRaw;\nexports.geoStereographic = stereographic;\nexports.geoStereographicRaw = stereographicRaw;\nexports.geoTransverseMercator = transverseMercator;\nexports.geoTransverseMercatorRaw = transverseMercatorRaw;\nexports.geoRotation = rotation;\nexports.geoStream = geoStream;\nexports.geoTransform = transform;\nexports.cluster = cluster;\nexports.hierarchy = hierarchy;\nexports.pack = index$2;\nexports.packSiblings = siblings;\nexports.packEnclose = enclose;\nexports.partition = partition;\nexports.stratify = stratify;\nexports.tree = tree;\nexports.treemap = index$3;\nexports.treemapBinary = binary;\nexports.treemapDice = treemapDice;\nexports.treemapSlice = treemapSlice;\nexports.treemapSliceDice = sliceDice;\nexports.treemapSquarify = squarify;\nexports.treemapResquarify = resquarify;\nexports.interpolate = interpolateValue;\nexports.interpolateArray = array$1;\nexports.interpolateBasis = basis$1;\nexports.interpolateBasisClosed = basisClosed;\nexports.interpolateDate = date;\nexports.interpolateNumber = reinterpolate;\nexports.interpolateObject = object;\nexports.interpolateRound = interpolateRound;\nexports.interpolateString = interpolateString;\nexports.interpolateTransformCss = interpolateTransformCss;\nexports.interpolateTransformSvg = interpolateTransformSvg;\nexports.interpolateZoom = interpolateZoom;\nexports.interpolateRgb = interpolateRgb;\nexports.interpolateRgbBasis = rgbBasis;\nexports.interpolateRgbBasisClosed = rgbBasisClosed;\nexports.interpolateHsl = hsl$2;\nexports.interpolateHslLong = hslLong;\nexports.interpolateLab = lab$1;\nexports.interpolateHcl = hcl$2;\nexports.interpolateHclLong = hclLong;\nexports.interpolateCubehelix = cubehelix$2;\nexports.interpolateCubehelixLong = cubehelixLong;\nexports.quantize = quantize;\nexports.path = path;\nexports.polygonArea = area$1;\nexports.polygonCentroid = centroid$1;\nexports.polygonHull = hull;\nexports.polygonContains = contains$1;\nexports.polygonLength = length$2;\nexports.quadtree = quadtree;\nexports.queue = queue;\nexports.randomUniform = uniform;\nexports.randomNormal = normal;\nexports.randomLogNormal = logNormal;\nexports.randomBates = bates;\nexports.randomIrwinHall = irwinHall;\nexports.randomExponential = exponential$1;\nexports.request = request;\nexports.html = html;\nexports.json = json;\nexports.text = text;\nexports.xml = xml;\nexports.csv = csv$1;\nexports.tsv = tsv$1;\nexports.scaleBand = band;\nexports.scalePoint = point$1;\nexports.scaleIdentity = identity$6;\nexports.scaleLinear = linear$2;\nexports.scaleLog = log$1;\nexports.scaleOrdinal = ordinal;\nexports.scaleImplicit = implicit;\nexports.scalePow = pow$1;\nexports.scaleSqrt = sqrt$1;\nexports.scaleQuantile = quantile$$1;\nexports.scaleQuantize = quantize$1;\nexports.scaleThreshold = threshold$1;\nexports.scaleTime = time;\nexports.scaleUtc = utcTime;\nexports.schemeCategory10 = category10;\nexports.schemeCategory20b = category20b;\nexports.schemeCategory20c = category20c;\nexports.schemeCategory20 = category20;\nexports.interpolateCubehelixDefault = cubehelix$3;\nexports.interpolateRainbow = rainbow$1;\nexports.interpolateWarm = warm;\nexports.interpolateCool = cool;\nexports.interpolateViridis = viridis;\nexports.interpolateMagma = magma;\nexports.interpolateInferno = inferno;\nexports.interpolatePlasma = plasma;\nexports.scaleSequential = sequential;\nexports.creator = creator;\nexports.local = local$1;\nexports.matcher = matcher$1;\nexports.mouse = mouse;\nexports.namespace = namespace;\nexports.namespaces = namespaces;\nexports.select = select;\nexports.selectAll = selectAll;\nexports.selection = selection;\nexports.selector = selector;\nexports.selectorAll = selectorAll;\nexports.style = styleValue;\nexports.touch = touch;\nexports.touches = touches;\nexports.window = defaultView;\nexports.customEvent = customEvent;\nexports.arc = arc;\nexports.area = area$2;\nexports.line = line;\nexports.pie = pie;\nexports.areaRadial = areaRadial;\nexports.radialArea = areaRadial;\nexports.lineRadial = lineRadial$1;\nexports.radialLine = lineRadial$1;\nexports.pointRadial = pointRadial;\nexports.linkHorizontal = linkHorizontal;\nexports.linkVertical = linkVertical;\nexports.linkRadial = linkRadial;\nexports.symbol = symbol;\nexports.symbols = symbols;\nexports.symbolCircle = circle$2;\nexports.symbolCross = cross$2;\nexports.symbolDiamond = diamond;\nexports.symbolSquare = square;\nexports.symbolStar = star;\nexports.symbolTriangle = triangle;\nexports.symbolWye = wye;\nexports.curveBasisClosed = basisClosed$1;\nexports.curveBasisOpen = basisOpen;\nexports.curveBasis = basis$2;\nexports.curveBundle = bundle;\nexports.curveCardinalClosed = cardinalClosed;\nexports.curveCardinalOpen = cardinalOpen;\nexports.curveCardinal = cardinal;\nexports.curveCatmullRomClosed = catmullRomClosed;\nexports.curveCatmullRomOpen = catmullRomOpen;\nexports.curveCatmullRom = catmullRom;\nexports.curveLinearClosed = linearClosed;\nexports.curveLinear = curveLinear;\nexports.curveMonotoneX = monotoneX;\nexports.curveMonotoneY = monotoneY;\nexports.curveNatural = natural;\nexports.curveStep = step;\nexports.curveStepAfter = stepAfter;\nexports.curveStepBefore = stepBefore;\nexports.stack = stack;\nexports.stackOffsetExpand = expand;\nexports.stackOffsetDiverging = diverging;\nexports.stackOffsetNone = none$1;\nexports.stackOffsetSilhouette = silhouette;\nexports.stackOffsetWiggle = wiggle;\nexports.stackOrderAscending = ascending$2;\nexports.stackOrderDescending = descending$2;\nexports.stackOrderInsideOut = insideOut;\nexports.stackOrderNone = none$2;\nexports.stackOrderReverse = reverse;\nexports.timeInterval = newInterval;\nexports.timeMillisecond = millisecond;\nexports.timeMilliseconds = milliseconds;\nexports.utcMillisecond = millisecond;\nexports.utcMilliseconds = milliseconds;\nexports.timeSecond = second;\nexports.timeSeconds = seconds;\nexports.utcSecond = second;\nexports.utcSeconds = seconds;\nexports.timeMinute = minute;\nexports.timeMinutes = minutes;\nexports.timeHour = hour;\nexports.timeHours = hours;\nexports.timeDay = day;\nexports.timeDays = days;\nexports.timeWeek = sunday;\nexports.timeWeeks = sundays;\nexports.timeSunday = sunday;\nexports.timeSundays = sundays;\nexports.timeMonday = monday;\nexports.timeMondays = mondays;\nexports.timeTuesday = tuesday;\nexports.timeTuesdays = tuesdays;\nexports.timeWednesday = wednesday;\nexports.timeWednesdays = wednesdays;\nexports.timeThursday = thursday;\nexports.timeThursdays = thursdays;\nexports.timeFriday = friday;\nexports.timeFridays = fridays;\nexports.timeSaturday = saturday;\nexports.timeSaturdays = saturdays;\nexports.timeMonth = month;\nexports.timeMonths = months;\nexports.timeYear = year;\nexports.timeYears = years;\nexports.utcMinute = utcMinute;\nexports.utcMinutes = utcMinutes;\nexports.utcHour = utcHour;\nexports.utcHours = utcHours;\nexports.utcDay = utcDay;\nexports.utcDays = utcDays;\nexports.utcWeek = utcSunday;\nexports.utcWeeks = utcSundays;\nexports.utcSunday = utcSunday;\nexports.utcSundays = utcSundays;\nexports.utcMonday = utcMonday;\nexports.utcMondays = utcMondays;\nexports.utcTuesday = utcTuesday;\nexports.utcTuesdays = utcTuesdays;\nexports.utcWednesday = utcWednesday;\nexports.utcWednesdays = utcWednesdays;\nexports.utcThursday = utcThursday;\nexports.utcThursdays = utcThursdays;\nexports.utcFriday = utcFriday;\nexports.utcFridays = utcFridays;\nexports.utcSaturday = utcSaturday;\nexports.utcSaturdays = utcSaturdays;\nexports.utcMonth = utcMonth;\nexports.utcMonths = utcMonths;\nexports.utcYear = utcYear;\nexports.utcYears = utcYears;\nexports.timeFormatDefaultLocale = defaultLocale$1;\nexports.timeFormatLocale = formatLocale$1;\nexports.isoFormat = formatIso;\nexports.isoParse = parseIso;\nexports.now = now;\nexports.timer = timer;\nexports.timerFlush = timerFlush;\nexports.timeout = timeout$1;\nexports.interval = interval$1;\nexports.transition = transition;\nexports.active = active;\nexports.interrupt = interrupt;\nexports.voronoi = voronoi;\nexports.zoom = zoom;\nexports.zoomTransform = transform$1;\nexports.zoomIdentity = identity$8;\n\nObject.defineProperty(exports, '__esModule', { value: true });\n\n})));\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/d3/build/d3.js\n// module id = 3\n// module chunks = 0","export const mapdUI = {\n  skyBlue: \"#22A7F0\"\n}\n\nexport const mapdColors = [\n  \"#ea5545\",\n  \"#bdcf32\",\n  \"#b33dc6\",\n  \"#ef9b20\",\n  \"#87bc45\",\n  \"#f46a9b\",\n  \"#ace5c7\",\n  \"#ede15b\",\n  \"#836dc5\",\n  \"#86d87f\",\n  \"#27aeef\"\n]\n\nexport const grey = [\n  \"#F8F8FA\",\n  \"#EFF2F5\",\n  \"#D2D6DF\",\n  \"#C3C6CF\",\n  \"#ADB0B6\",\n  \"#666A73\",\n  \"#45494E\",\n  \"#363A43\",\n  \"#282C35\"\n]\n\nexport const colors = {\n  mapdUI,\n  mapdColors,\n  grey\n}\n\n\n\n\n\n// WEBPACK FOOTER //\n// ./src/charts/helpers/colors.js","export const keys = {\n  DATA: \"key\",\n  VALUE: \"value\",\n  ID: \"id\",\n  LABEL: \"label\",\n  GROUP: \"group\",\n  VALUES: \"values\",\n  SERIES: \"series\"\n}\n\n\n\n// WEBPACK FOOTER //\n// ./src/charts/helpers/constants.js","import {keys} from \"./constants\"\n\n/**\n * Clones the passed array of data\n * @param  {Object[]} dataToClone Data to clone\n * @return {Object[]}             Cloned data\n */\nexport function cloneData (_dataToClone) {\n  return JSON.parse(JSON.stringify(_dataToClone))\n}\n\nexport function sortData (_data, _keyType) {\n  const sortedData = cloneData(_data)\n  if (_keyType === \"time\") {\n    sortedData.forEach((d) => {\n      d[keys.DATA] = new Date(d[keys.DATA])\n    })\n    sortedData.sort((a, b) => a[keys.DATA].getTime() - b[keys.DATA].getTime())\n  } else if (_keyType === \"string\") {\n    sortedData.sort((a, b) => a[keys.DATA].localeCompare(b[keys.DATA], \"en\", {numeric: false}))\n  } else {\n    sortedData.sort((a, b) => a[keys.DATA] - b[keys.DATA])\n  }\n  return sortedData\n}\n\nexport function getUnique (arr) {\n  return [...new Set(arr)]\n}\n\nexport function invertScale (_scale, _mouseX, _keyType) {\n  if (_keyType === \"time\" || _keyType === \"number\") {\n    return _scale.invert(_mouseX)\n  } else {\n    const bandStep = _scale.step()\n    const index = Math.round((_mouseX) / bandStep)\n    return _scale.domain()[index]\n  }\n}\n\nexport function override (a, b) {\n  const accum = {}\n  for (const x in a) {\n    if (a.hasOwnProperty(x)) {\n      accum[x] = (x in b) ? b[x] : a[x]\n    }\n  }\n  return accum\n}\n\nexport function throttle (callback, limit) {\n  let wait = false\n  let timer = null\n  return function throttleFn (...args) {\n    if (!wait) {\n      wait = true\n      clearTimeout(timer)\n      timer = setTimeout(() => {\n        wait = false\n        callback(...args)\n      }, limit)\n    }\n  }\n}\n\nexport function rebind (target) {\n  return function reapply (...args) {\n    target.on(`${args[0]}.rebind`, ...args.slice(1))\n    return this\n  }\n}\n\nexport function stringToType (str, type) {\n  let converted = str\n  if (type === \"time\") {\n    converted = new Date(str)\n  } else if (type === \"number\") {\n    converted = Number(str)\n  }\n  return converted\n}\n\n\n\n// WEBPACK FOOTER //\n// ./src/charts/helpers/common.js","import * as d3 from \"./helpers/d3-service\"\n\nimport {keys} from \"./helpers/constants\"\nimport {getUnique, override} from \"./helpers/common\"\n\nexport default function Scale () {\n\n  let config = {\n    margin: {\n      top: 60,\n      right: 30,\n      bottom: 40,\n      left: 70\n    },\n    height: null,\n    width: null,\n    keyType: null,\n    chartType: null,\n    colorSchema: null,\n    defaultColor: null,\n    xDomain: \"auto\",\n    yDomain: \"auto\",\n    y2Domain: \"auto\"\n  }\n\n  let data = {\n    dataByKey: null,\n    dataBySeries: null,\n    flatDataSorted: null,\n    groupKeys: null\n  }\n\n  const getID = (d) => d[keys.ID]\n  const getKey = (d) => d[keys.DATA]\n  const getValue = (d) => d[keys.VALUE]\n\n  function buildXScale (_allKeys) {\n    const chartWidth = config.width - config.margin.left - config.margin.right\n    let xScale = null\n    let domain = null\n\n    if (config.keyType === \"time\") {\n      xScale = d3.scaleTime()\n    } else if (config.keyType === \"number\") {\n      xScale = d3.scaleLinear()\n    } else {\n      xScale = (config.chartType === \"bar\" || config.chartType === \"stackedBar\") ? d3.scaleBand() : d3.scalePoint()\n      xScale.padding(0)\n    }\n\n    if (config.xDomain === \"auto\") {\n      if (config.keyType === \"string\") {\n        domain = _allKeys\n      } else {\n        domain = d3.extent(_allKeys)\n      }\n    } else {\n      domain = config.xDomain\n    }\n\n    xScale.domain(domain)\n      .range([0, chartWidth])\n\n    return xScale\n  }\n\n  function buildYScale (_extent) {\n    const chartHeight = config.height - config.margin.top - config.margin.bottom\n    const yScale = d3.scaleLinear()\n        .domain(_extent)\n        .rangeRound([chartHeight, 0])\n        .nice()\n\n    return yScale\n  }\n\n  function buildColorScale () {\n    const ids = data.dataBySeries.map(getID)\n    const colorScale = d3.scaleOrdinal()\n        .range(config.colorSchema.map((d) => d.value))\n        .domain(config.colorSchema.map((d, i) => d.key || ids[i]))\n        .unknown(config.defaultColor)\n\n    return colorScale\n  }\n\n  function splitByGroups () {\n    const groups = {}\n    data.dataBySeries.forEach((d) => {\n      const key = d[keys.GROUP]\n      if (!groups[key]) {\n        groups[key] = {\n          allValues: [],\n          allKeys: []\n        }\n      }\n      groups[key].allValues = groups[key].allValues.concat(d[keys.VALUES].map(getValue))\n      groups[key].allKeys = groups[key].allKeys.concat(d[keys.VALUES].map(getKey))\n    })\n\n    return groups\n  }\n\n  function getStackedScales () {\n    const allStackHeights = data.dataByKey.map((d) => d3.sum(d.series.map((dB) => dB.value)))\n\n    const allKeys = data.flatDataSorted.map(getKey)\n    const allUniqueKeys = getUnique(allKeys)\n\n    const xScale = buildXScale(allUniqueKeys)\n    const colorScale = buildColorScale()\n\n    let yDomain = null\n    if (config.yDomain === \"auto\") {\n      const valuesExtent = d3.extent(allStackHeights)\n      yDomain = [0, valuesExtent[1]]\n    } else {\n      yDomain = config.yDomain\n    }\n    const yScale = buildYScale(yDomain)\n\n    return {\n      xScale,\n      yScale,\n      colorScale\n    }\n  }\n\n  function getHorizontalScales () {\n    const groups = splitByGroups()\n\n    const hasSecondAxis = Object.keys(data.groupKeys).length > 1\n\n    const groupAxis1 = groups[0]\n    const allUniqueKeys = groupAxis1.allKeys\n\n    const xScale = buildXScale(allUniqueKeys)\n    const colorScale = buildColorScale()\n\n    let yDomain = null\n    if (config.yDomain === \"auto\") {\n      yDomain = d3.extent(groupAxis1.allValues)\n    } else {\n      yDomain = config.yDomain\n    }\n    const yScale = buildYScale(yDomain)\n\n    let y2Scale = null\n    if (hasSecondAxis) {\n      let y2Domain = null\n      if (config.y2Domain === \"auto\") {\n        const groupAxis2 = groups[1]\n        y2Domain = d3.extent(groupAxis2.allValues)\n      } else {\n        y2Domain = config.y2Domain\n      }\n\n      y2Scale = yScale.copy()\n        .domain(y2Domain)\n    }\n\n    return {\n      hasSecondAxis,\n      xScale,\n      yScale,\n      y2Scale,\n      colorScale\n    }\n  }\n\n  function getScales () {\n    if (config.chartType === \"stackedBar\"\n      || config.chartType === \"stackedArea\") {\n      return getStackedScales()\n    } else {\n      return getHorizontalScales()\n    }\n  }\n\n  function setConfig (_config) {\n    config = override(config, _config)\n    return this\n  }\n\n  function setData (_data) {\n    data = Object.assign({}, data, _data)\n    return this\n  }\n\n  return {\n    setConfig,\n    setData,\n    getScales\n  }\n}\n\n\n\n// WEBPACK FOOTER //\n// ./src/charts/scale.js","import * as d3 from \"./helpers/d3-service\"\n\nimport {keys} from \"./helpers/constants\"\nimport {override} from \"./helpers/common\"\n\nexport default function Line (_container) {\n\n  let config = {\n    margin: {\n      top: 60,\n      right: 30,\n      bottom: 40,\n      left: 70\n    },\n    width: 800,\n    height: 500,\n    chartType: null\n  }\n\n  let scales = {\n    colorScale: null,\n    xScale: null,\n    yScale: null,\n    y2Scale: null\n  }\n\n  const cache = {\n    container: _container,\n    svg: null,\n    chartHeight: null\n  }\n\n  let data = {\n    dataBySeries: null,\n    groupKeys: null,\n    stack: null,\n    stackData: null,\n    fileData: \"\"\n  }\n\n  const getColor = (d) => scales.colorScale(d[keys.ID])\n\n  function buildSVG () {\n    cache.chartWidth = config.width - config.margin.left - config.margin.right\n    cache.chartHeight = config.height - config.margin.top - config.margin.bottom\n\n    if (!cache.svg) {\n      cache.svg = cache.container.append(\"g\")\n          .classed(\"mark-group\", true)\n    }\n  }\n\n  function drawLines () {\n    const seriesLine = d3.line()\n        .x((d) => scales.xScale(d[keys.DATA]))\n        .y((d) => scales.yScale(d[keys.VALUE]))\n\n    const seriesLine2 = d3.line()\n        .x((d) => scales.xScale(d[keys.DATA]))\n        .y((d) => scales.y2Scale(d[keys.VALUE]))\n        .curve(d3.curveCatmullRom)\n\n    const lines = cache.svg.selectAll(\".mark\")\n        .data(data.dataBySeries)\n\n    lines.enter()\n      .append(\"path\")\n      .merge(lines)\n      .attr(\"class\", \"mark line\")\n      .classed(\"y2-line\", (d) => d[keys.GROUP] > 0)\n      .attr(\"d\", (d) => {\n        if (d[keys.GROUP] === 0) {\n          return seriesLine(d[keys.VALUES])\n        } else {\n          return seriesLine2(d[keys.VALUES])\n        }\n      })\n      .style(\"stroke\", getColor)\n      .style(\"fill\", \"none\")\n\n    lines.exit().remove()\n  }\n\n  function drawAreas () {\n    const seriesArea = d3.area()\n        .x((d) => scales.xScale(d[keys.DATA]))\n        .y0((d) => scales.yScale(d[keys.VALUE]))\n        .y1(() => cache.chartHeight)\n\n    const seriesArea2 = d3.area()\n        .x((d) => scales.xScale(d[keys.DATA]))\n        .y0((d) => scales.y2Scale(d[keys.VALUE]))\n        .y1(() => cache.chartHeight)\n        .curve(d3.curveCatmullRom)\n\n    const areas = cache.svg.selectAll(\".mark\")\n        .data(data.dataBySeries)\n\n    areas.enter()\n      .append(\"path\")\n      .merge(areas)\n      .attr(\"class\", \"mark area\")\n      .classed(\"y2-area\", (d) => d[keys.GROUP] > 0)\n      .attr(\"d\", (d) => {\n        if (d[keys.GROUP] === 0) {\n          return seriesArea(d[keys.VALUES])\n        } else {\n          return seriesArea2(d[keys.VALUES])\n        }\n      })\n      .style(\"stroke\", getColor)\n      .style(\"fill\", getColor)\n\n    areas.exit().remove()\n  }\n\n  function drawStackedAreas () {\n    const seriesLine = d3.area()\n        .x((d) => scales.xScale(d.data[keys.DATA]))\n        .y0((d) => scales.yScale(d[0]))\n        .y1((d) => scales.yScale(d[1]))\n\n    const areas = cache.svg.selectAll(\".mark\")\n        .data(data.stack(data.stackData))\n\n    areas.enter()\n      .append(\"path\")\n      .merge(areas)\n      .attr(\"class\", \"mark stacked-area\")\n      .attr(\"d\", seriesLine)\n      .style(\"stroke\", \"none\")\n      .style(\"fill\", (d) => scales.colorScale(d.key))\n\n    areas.exit().remove()\n  }\n\n  function drawMarks () {\n    buildSVG()\n\n    if (config.chartType === \"area\") {\n      drawAreas()\n    } else if (config.chartType === \"line\") {\n      drawLines()\n    } else if (config.chartType === \"stackedArea\") {\n      drawStackedAreas()\n    }\n  }\n\n  function setConfig (_config) {\n    config = override(config, _config)\n    return this\n  }\n\n  function setScales (_scales) {\n    scales = override(scales, _scales)\n    return this\n  }\n\n  function setData (_data) {\n    data = Object.assign({}, data, _data)\n    return this\n  }\n\n  function loadData () {\n    console.log(\"load data\")\n    //console.log(`load: ${config.fileData}`)\n    return this\n  }\n\n  return {\n    setConfig,\n    setScales,\n    setData,\n    drawMarks,\n    loadData\n  }\n}\n\n\n\n// WEBPACK FOOTER //\n// ./src/charts/line.js","import {keys} from \"./helpers/constants\"\nimport {override} from \"./helpers/common\"\n\nexport default function Bar (_container) {\n\n  let config = {\n    margin: {\n      top: 60,\n      right: 30,\n      bottom: 40,\n      left: 70\n    },\n    width: 800,\n    height: 500,\n    chartType: null\n  }\n\n  let scales = {\n    colorScale: null,\n    xScale: null,\n    yScale: null,\n    y2Scale: null\n  }\n\n  const cache = {\n    container: _container,\n    svg: null,\n    chartHeight: null\n  }\n\n  let data = {\n    dataBySeries: null,\n    groupKeys: null,\n    stack: null,\n    stackData: null\n  }\n\n  const getColor = (d) => scales.colorScale(d[keys.ID])\n\n  function buildSVG () {\n    cache.chartWidth = config.width - config.margin.left - config.margin.right\n    cache.chartHeight = config.height - config.margin.top - config.margin.bottom\n\n    if (!cache.svg) {\n      cache.svg = cache.container.append(\"g\")\n          .classed(\"mark-group\", true)\n    }\n  }\n\n  function drawBars () {\n    const bars = cache.svg.selectAll(\".mark\")\n        .data(data.dataBySeries[0].values)\n\n    bars.enter()\n      .append(\"rect\")\n      .attr(\"class\", \"mark rect\")\n      .merge(bars)\n      .attr(\"x\", (d) => scales.xScale(d[keys.DATA]))\n      .attr(\"y\", (d) => scales.yScale(d[keys.VALUE]))\n      .attr(\"width\", () => scales.xScale.bandwidth())\n      .attr(\"height\", (d) => cache.chartHeight - scales.yScale(d[keys.VALUE]))\n      .style(\"stroke\", \"white\")\n      .style(\"fill\", getColor)\n\n    bars.exit().remove()\n  }\n\n  function drawStackedBars () {\n\n    const stackedBarGroups = cache.svg.selectAll(\".bar-group\")\n        .data(data.stack(data.stackData))\n\n    const stackedUpdate = stackedBarGroups.enter()\n      .append(\"g\")\n      .attr(\"class\", \"bar-group\")\n      .merge(stackedBarGroups)\n      .attr(\"fill\", (d) => scales.colorScale(d.key))\n      .attr(\"stroke\", \"white\")\n\n    stackedBarGroups.exit().remove()\n\n    const stackedBars = stackedUpdate.selectAll(\".mark\")\n        .data((d) => d)\n\n    stackedBars.enter()\n      .append(\"rect\")\n      .attr(\"class\", \"mark\")\n      .merge(stackedBars)\n      .attr(\"x\", (d) => scales.xScale(d.data[keys.DATA]))\n      .attr(\"y\", (d) => scales.yScale(d[1]))\n      .attr(\"height\", (d) => scales.yScale(d[0]) - scales.yScale(d[1]))\n      .attr(\"width\", scales.xScale.bandwidth())\n\n    stackedBars.exit().remove()\n  }\n\n  function drawMarks () {\n    buildSVG()\n\n    if (config.chartType === \"bar\") {\n      drawBars()\n    } else if (config.chartType === \"stackedBar\") {\n      drawStackedBars()\n    }\n  }\n\n  function setConfig (_config) {\n    config = override(config, _config)\n    return this\n  }\n\n  function setScales (_scales) {\n    scales = override(scales, _scales)\n    return this\n  }\n\n  function setData (_data) {\n    data = Object.assign({}, data, _data)\n    return this\n  }\n\n  return {\n    setConfig,\n    setScales,\n    setData,\n    drawMarks\n  }\n}\n\n\n\n// WEBPACK FOOTER //\n// ./src/charts/bar.js","import * as d3 from \"./helpers/d3-service\"\n\nimport {keys} from \"./helpers/constants\"\nimport {cloneData, override, throttle, rebind} from \"./helpers/common\"\n\nimport Scale from \"./scale\"\n//import Line from \"./line\"\n//import Bar from \"./bar\"\n//import Sunburst from \"./sunburst\"\nimport Axis from \"./axis\"\nimport Tooltip from \"./tooltip\"\nimport Legend from \"./legend\"\nimport Brush from \"./brush\"\nimport Hover from \"./hover\"\nimport Binning from \"./binning\"\nimport DomainEditor from \"./domain-editor\"\nimport BrushRangeEditor from \"./brush-range-editor\"\nimport Label from \"./label\"\n//import DataManager from \"./data-manager\"\n\nexport default function Sunburst (_container) {\n\n  let config = {\n    margin: {\n      top: 400,\n      right: 400,\n      bottom: 40,\n      left: 300\n    },\n    width: 800,\n    height: 800,\n    chartType: null,\n  }\n\n  let scales = {\n    colorScale: null,\n    xScale: null,\n    yScale: null,\n    yScale2: null\n  }\n\n  const cache = {\n    container: _container,\n    svg: null,\n    chartHeight: null\n  }\n\n  let containers = { }\n\n  let data = { }\n\n  Object.assign(config, {\n    radius: Math.min(config.width, config.height) / 2\n  });\n\n  let b = {\n    w: 75,\n    h: 30,\n    s: 3,\n    t: 10\n  };\n\n  let colors = {\n    \"(MK)\": \"#5687d1\",\n    \"(JJ GO)\": \"#7b615c\",\n    \"(CJ GO)\": \"#de783b\",\n    \"(CHURN)\": \"#6ab975\",\n    \"(OR)\": \"#a173d1\",\n    \"(PP GO)\": \"#bbbbbb\",\n    \"(GG GO)\": \"#a7bb7c\",\n    \"(CJ IOS)\": \"#58bb66\"\n  };\n\n  let totalSize = 10;\n\n  const getColor = (d) => scales.colorScale(d[keys.ID]);\n\n  const partition = d3.partition()\n    .size([2 * Math.PI, config.radius * config.radius]);\n\n  const arc = d3.arc()\n    .startAngle(function(d) { return d.x0; })\n    .endAngle(function(d) { return d.x1; })\n    .innerRadius(function(d) { return Math.sqrt(d.y0); })\n    .outerRadius(function(d) { return Math.sqrt(d.y1); })\n  buildSVG();\n\n  function buildSVG () {\n    const w = config.width === \"auto\" ? cache.container.clientWidth : config.width\n    const h = config.height === \"auto\" ? cache.container.clientHeight : config.height\n    cache.chartWidth = Math.max(w - config.margin.left - config.margin.right, 0)\n    cache.chartHeight = Math.max(h - config.margin.top - config.margin.bottom, 0)\n\n    let template = null;\n\n    if (!cache.svg) {\n      template = `<div id=\"sunburst\">\n        <div id=\"sequence\"></div>\n        <div id=\"chart\">\n          <div id=\"explanation\" style=\"visibility: hidden;\">\n            <span id=\"percentage\"></span><br/>\n            of visits begin with this sequence of pages\n          </div>\n        </div>\n      </div>\n      <div id=\"sidebar\">\n        <input type=\"checkbox\" id=\"togglelegend\"> Legend<br/>\n        <div id=\"legend\" style=\"visibility: hidden;\"></div>\n      </div>`\n\n      containers.base = d3.select(cache.container)\n        .html(template)\n\n      containers.vis = containers.base.select(\"#chart\").append(\"svg:svg\")\n        .attr(\"width\", config.width)\n        .attr(\"height\", config.height)\n        .append(\"svg:g\")\n        .attr(\"id\", \"container\")\n        .attr(\"transform\", \"translate(\" + config.width / 2 + \",\" + config.height / 2 + \")\");\n\n      const h = parseInt(containers.base.select(\"#explanation\").style(\"height\"));\n      const w = parseInt(containers.base.select(\"#explanation\").style(\"width\"));\n\n      containers.base.select(\"#explanation\")\n        .style(\"top\", `${config.height/2 - h/2}px`)\n        .style(\"left\", `${config.width/2 - w/2}px`);\n    }\n    return this\n  }\n\n  function setConfig (_config) {\n    config = override(config, _config)\n    return this\n  }\n\n  function setScales (_scales) {\n    scales = override(scales, _scales)\n    return this\n  }\n\n  function setData (_data) {\n    data = Object.assign({}, data, _data);\n    render(data);\n    return this\n  }\n\n\n  /**\n    Main function to draw and set up the visualization, once we have the data.\n    @param data: Parsed data\n   **/\n  function render(data) {\n\n    initializeBreadcrumbTrail();\n    drawLegend();\n\n    containers.base.select(\"#togglelegend\").on(\"click\", toggleLegend);\n\n    containers.vis.append(\"svg:circle\")\n      .attr(\"r\", config.radius)\n      .style(\"opacity\", 0);\n\n    let root = d3.hierarchy(data)\n      .sum(function(d) { return d.size; })\n      .sort(function(a, b) { return b.value - a.value; });\n\n    let nodes = partition(root).descendants()\n      .filter(function(d) {\n        return (d.x1 - d.x0 > 0.005); // 0.005 radians = 0.29 degrees\n      });\n\n    let path = containers.vis.data([data]).selectAll(\"path\")\n      .data(nodes)\n      .enter()\n      .append(\"svg:path\")\n      .attr(\"display\", function(d) { return d.depth ? null : \"none\"; })\n      .attr(\"d\", arc)\n      .attr(\"fill-rule\", \"evenodd\")\n      .style(\"fill\", function(d) { return colors[d.data.name]; })\n      .style(\"opacity\", 1)\n      .on(\"mouseover\", mouseover);\n\n    containers.base.select(\"#container\").on(\"mouseleave\", mouseleave);\n\n    totalSize = path.datum().value;\n  };\n\n\n  function initializeBreadcrumbTrail () {\n    let trail = containers.base.select(\"#sequence\")\n      .append(\"svg:svg\")\n      .attr(\"width\", config.width)\n      .attr(\"height\", 50)\n      .attr(\"id\", \"trail\");\n\n    trail.append(\"svg:text\")\n      .attr(\"id\", \"endlabel\")\n      .style(\"fill\", \"#000\");\n  }\n\n  function breadcrumbPoints (d, i) {\n    let points = [];\n    points.push(\"0,0\");\n    points.push(b.w + \",0\");\n    points.push(b.w + b.t + \",\" + (b.h / 2));\n    points.push(b.w + \",\" + b.h);\n    points.push(\"0,\" + b.h);\n    if (i > 0) {\n      points.push(b.t + \",\" + (b.h / 2));\n    }\n    return points.join(\" \");\n  }\n\n// Update the breadcrumb trail to show the current sequence and percentage.\n  function updateBreadcrumbs (nodeArray, percentageString) {\n\n    // Data join; key function combines name and depth (= position in sequence).\n    let trail = d3.select(\"#trail\")\n      .selectAll(\"g\")\n      .data(nodeArray, function(d) { return d.data.name + d.depth; });\n\n    // Remove exiting nodes.\n    trail.exit().remove();\n\n    // Add breadcrumb and label for entering nodes.\n    let entering = trail.enter().append(\"svg:g\");\n\n    entering.append(\"svg:polygon\")\n      .attr(\"points\", breadcrumbPoints)\n      .style(\"fill\", function(d) { return colors[d.data.name]; });\n\n    entering.append(\"svg:text\")\n      .attr(\"x\", (b.w + b.t) / 2)\n      .attr(\"y\", b.h / 2)\n      .attr(\"dy\", \"0.35em\")\n      .attr(\"text-anchor\", \"middle\")\n      .text(function(d) { return d.data.name; });\n\n    // Merge enter and update selections; set position for all nodes.\n    entering.merge(trail).attr(\"transform\", function(d, i) {\n      return \"translate(\" + i * (b.w + b.s) + \", 0)\";\n    });\n\n    // Now move and update the percentage at the end.\n    d3.select(\"#trail\").select(\"#endlabel\")\n      .attr(\"x\", (nodeArray.length + 0.5) * (b.w + b.s))\n      .attr(\"y\", b.h / 2)\n      .attr(\"dy\", \"0.35em\")\n      .attr(\"text-anchor\", \"middle\")\n      .text(percentageString);\n\n    // Make the breadcrumb trail visible, if it's hidden.\n    d3.select(\"#trail\")\n      .style(\"visibility\", \"visible\");\n\n  }\n\n  function drawLegend () {\n\n    // Dimensions of legend item: width, height, spacing, radius of rounded rect.\n    const legend_item = {\n      w: 75, h: 30, s: 3, r: 3\n    };\n\n    let legend = containers.base.select(\"#legend\").append(\"svg:svg\")\n      .attr(\"width\", legend_item.w)\n      .attr(\"height\", d3.keys(colors).length * (legend_item.h + legend_item.s));\n\n    let g = legend.selectAll(\"g\")\n      .data(d3.entries(colors))\n      .enter().append(\"svg:g\")\n      .attr(\"transform\", function(d, i) {\n        return \"translate(0,\" + i * (legend_item.h + legend_item.s) + \")\";\n      });\n\n    g.append(\"svg:rect\")\n      .attr(\"rx\", legend_item.r)\n      .attr(\"ry\", legend_item.r)\n      .attr(\"width\", legend_item.w)\n      .attr(\"height\", legend_item.h)\n      .style(\"fill\", function(d) { return d.value; });\n\n    g.append(\"svg:text\")\n      .attr(\"x\", legend_item.w / 2)\n      .attr(\"y\", legend_item.h / 2)\n      .attr(\"dy\", \"0.35em\")\n      .attr(\"text-anchor\", \"middle\")\n      .text(function(d) { return d.key; });\n  }\n\n  function toggleLegend () {\n    let legend = containers.base.select(\"#legend\");\n    if (legend.style(\"visibility\") === \"hidden\") {\n      legend.style(\"visibility\", \"visible\");\n    } else {\n      legend.style(\"visibility\", \"hidden\");\n    }\n  }\n\n  function mouseover(d) {\n    let percentage = (100 * d.value / totalSize).toPrecision(3);\n    let percentageString = percentage + \"%\";\n    if (percentage < 0.1) {\n      percentageString = \"< 0.1%\";\n    }\n\n    containers.base.select(\"#percentage\")\n      .text(percentageString);\n\n    containers.base.select(\"#explanation\")\n      .style(\"visibility\", \"visible\");\n\n    let sequenceArray = d.ancestors().reverse();\n    sequenceArray.shift(); // remove root node from the array\n    updateBreadcrumbs(sequenceArray, percentageString);\n\n    containers.vis.selectAll(\"path\")\n      .style(\"opacity\", 0.3);\n\n    containers.vis.selectAll(\"path\")\n      .filter(function(node) {\n        return (sequenceArray.indexOf(node) >= 0);\n      })\n      .style(\"opacity\", 1);\n  }\n\n  function mouseleave(d) {\n    containers.vis.select(\"#trail\")\n      .style(\"visibility\", \"hidden\");\n\n    containers.base.select(\"#explanation\")\n      .style(\"visibility\", \"visible\");\n\n    containers.vis.selectAll(\"path\").on(\"mouseover\", null);\n\n    containers.vis.selectAll(\"path\")\n      .transition()\n      .duration(1000)\n      .style(\"opacity\", 1)\n      .on(\"end\", function () {\n        d3.select(this).on(\"mouseover\", mouseover);\n      });\n\n    containers.vis.select(\"#explanation\")\n      .style(\"visibility\", \"hidden\");\n  }\n\n  function csvToJson (csv) {\n    let json = {\"name\": \"root\", \"children\": []};\n    for (let i = 0; i < csv.length; i++) {\n      let sequence = csv[i][0];\n      let size = +csv[i][1];\n      if (isNaN(size)) {\n        continue;\n      }\n      let parts = sequence.split(\"-\");\n      let currentNode = json;\n      for (let j = 0; j < parts.length; j++) {\n        let children = currentNode[\"children\"];\n        let nodeName = parts[j];\n        let childNode;\n        if (j + 1 < parts.length) {\n          let foundChild = false;\n          for (let k = 0; k < children.length; k++) {\n            if (children[k][\"name\"] == nodeName) {\n              childNode = children[k];\n              foundChild = true;\n              break;\n            }\n          }\n          if (!foundChild) {\n            childNode = {\"name\": nodeName, \"children\": []};\n            children.push(childNode);\n          }\n          currentNode = childNode;\n        } else {\n          childNode = {\"name\": nodeName, \"size\": size};\n          children.push(childNode);\n        }\n      }\n    }\n    return json;\n  }\n\n\n  return {\n    setConfig,\n    setScales,\n    setData,\n    csvToJson\n  }\n}\n\n\n\n// WEBPACK FOOTER //\n// ./src/charts/sunburst.js","import * as d3 from \"./helpers/d3-service\"\n\nimport {override} from \"./helpers/common\"\n\nexport default function Axis (_container) {\n\n  let config = {\n    margin: {\n      top: 60,\n      right: 30,\n      bottom: 40,\n      left: 70\n    },\n    width: 800,\n    height: 500,\n    tickSizes: null,\n    tickPadding: null,\n    xAxisFormat: null,\n    yAxisFormat: null,\n    y2AxisFormat: null,\n    keyType: null,\n    yTicks: null,\n    y2Ticks: null,\n    xTickSkip: null,\n    axisTransitionDuration: null,\n    ease: null,\n    grid: null,\n    hoverZoneSize: 30,\n    tickSpacing: 40,\n    dateFormat: \"%b %d, %Y\",\n    numberFormat: \".2f\"\n  }\n\n  let scales = {\n    xScale: null,\n    yScale: null,\n    y2Scale: null,\n    hasSecondAxis: null\n  }\n\n  const cache = {\n    container: _container,\n    background: null,\n    chartHeight: null,\n    chartWidth: null,\n    xAxis: null,\n    yAxis: null,\n    y2Axis: null,\n    horizontalGridLines: null,\n    verticalGridLines: null\n  }\n\n  function buildSVG () {\n    cache.chartWidth = config.width - config.margin.left - config.margin.right\n    cache.chartHeight = config.height - config.margin.top - config.margin.bottom\n\n    if (!cache.svg) {\n      cache.svg = cache.container.append(\"g\")\n          .classed(\"axis-group\", true)\n          .style(\"pointer-events\", \"none\")\n\n      cache.svg.append(\"g\").attr(\"class\", \"grid-lines-group\")\n\n      cache.svg.append(\"g\").attr(\"class\", \"axis x\")\n\n      cache.svg.append(\"g\").attr(\"class\", \"axis y\")\n\n      cache.svg.append(\"g\").attr(\"class\", \"axis y2\")\n    }\n\n    cache.svg.attr(\"transform\", `translate(${config.margin.left}, ${config.margin.top})`)\n  }\n\n  function formatXAxis () {\n    if (config.keyType === \"time\") {\n      if (config.xAxisFormat && config.xAxisFormat !== \"auto\") {\n        const formatter = d3.timeFormat(config.xAxisFormat)\n        cache.xAxis.tickFormat(formatter)\n      }\n    } else if (config.keyType === \"string\") {\n      cache.xAxis.tickValues(scales.xScale.domain().filter((d, i) => !(i % config.xTickSkip)))\n    } else if (config.keyType === \"number\") {\n      if (config.xAxisFormat && config.xAxisFormat !== \"auto\") {\n        const formatter = d3.format(config.xAxisFormat)\n        cache.xAxis.tickFormat(formatter)\n      }\n    }\n  }\n\n  function formatYAxis (axis) {\n    if (config.yAxisFormat === \"auto\") {\n      let yFormat = config.numberFormat\n      const yExtent = scales.yScale.domain()\n      if ((yExtent[1] - yExtent[0]) > 10000) {\n        yFormat = \".0s\"\n      } else if ((yExtent[1] - yExtent[0]) > 1000) {\n        yFormat = \".2s\"\n      }\n      axis.tickFormat(d3.format(yFormat))\n    } else if (typeof config.yAxisFormat === \"string\") {\n      axis.tickFormat(d3.format(config.yAxisFormat))\n    }\n  }\n\n  function buildAxis () {\n    cache.xAxis = d3.axisBottom(scales.xScale)\n        .tickSize(config.tickSizes, 0)\n        .tickPadding(config.tickPadding)\n\n    formatXAxis()\n\n    cache.yAxis = d3.axisLeft(scales.yScale)\n        .tickSize([config.tickSizes])\n        .tickPadding(config.tickPadding)\n\n    formatYAxis(cache.yAxis)\n\n    if (Number.isInteger(config.yTicks)) {\n      cache.yAxis.ticks(config.yTicks)\n    } else {\n      cache.yAxis.ticks(Math.ceil(cache.chartHeight / config.tickSpacing))\n    }\n\n    if (scales.hasSecondAxis) {\n      cache.y2Axis = d3.axisRight(scales.y2Scale)\n          .tickSize([config.tickSizes])\n          .tickPadding(config.tickPadding)\n\n      formatYAxis(cache.y2Axis)\n\n      if (!isNaN(config.y2Ticks)) {\n        cache.y2Axis.ticks(config.y2Ticks)\n      }\n    }\n  }\n\n  function drawAxis () {\n    buildSVG()\n    buildAxis()\n\n    cache.svg.select(\".axis.x\")\n        .attr(\"transform\", `translate(0, ${cache.chartHeight})`)\n        .call(cache.xAxis)\n\n    cache.svg.select(\".axis.y\")\n        .transition()\n        .duration(config.axisTransitionDuration)\n        .ease(config.ease)\n        .call(cache.yAxis)\n\n    if (scales.hasSecondAxis) {\n      cache.svg.select(\".axis.y2\")\n          .attr(\"transform\", `translate(${cache.chartWidth}, 0)`)\n          .transition()\n          .duration(config.axisTransitionDuration)\n          .ease(config.ease)\n          .call(cache.y2Axis)\n    }\n\n    return this\n  }\n\n  function drawGridLines () {\n    if (config.grid === \"horizontal\" || config.grid === \"full\") {\n      let ticks = null\n      if (Number.isInteger(config.yTicks)) {\n        ticks = config.yTicks\n      } else {\n        ticks = Math.ceil(cache.chartHeight / config.tickSpacing)\n      }\n\n      cache.horizontalGridLines = cache.svg.select(\".grid-lines-group\")\n          .selectAll(\"line.horizontal-grid-line\")\n          .data(scales.yScale.ticks(ticks))\n\n      cache.horizontalGridLines.enter()\n        .append(\"line\")\n        .attr(\"class\", \"horizontal-grid-line\")\n        .merge(cache.horizontalGridLines)\n        .transition()\n        .duration(config.axisTransitionDuration)\n        .attr(\"x2\", cache.chartWidth)\n        .attr(\"y1\", scales.yScale)\n        .attr(\"y2\", scales.yScale)\n\n      cache.horizontalGridLines.exit().remove()\n    }\n\n    if (config.grid === \"vertical\" || config.grid === \"full\") {\n      cache.verticalGridLines = cache.svg.select(\".grid-lines-group\")\n          .selectAll(\"line.vertical-grid-line\")\n          .data(cache.xAxis.tickValues())\n\n      cache.verticalGridLines.enter()\n        .append(\"line\")\n        .attr(\"class\", \"vertical-grid-line\")\n        .merge(cache.verticalGridLines)\n        .transition()\n        .duration(config.axisTransitionDuration)\n        .attr(\"y1\", 0)\n        .attr(\"y2\", cache.chartHeight)\n        .attr(\"x1\", scales.xScale)\n        .attr(\"x2\", scales.xScale)\n\n      cache.verticalGridLines.exit().remove()\n    }\n\n    return this\n  }\n\n  function setConfig (_config) {\n    config = override(config, _config)\n    return this\n  }\n\n  function setScales (_scales) {\n    scales = override(scales, _scales)\n    return this\n  }\n\n  return {\n    setConfig,\n    setScales,\n    drawAxis,\n    drawGridLines\n  }\n}\n\n\n\n// WEBPACK FOOTER //\n// ./src/charts/axis.js","import * as d3 from \"./helpers/d3-service\"\n\nimport {keys} from \"./helpers/constants\"\nimport {cloneData, override} from \"./helpers/common\"\n\nexport default function Tooltip (_container, isLegend = false) {\n\n  let config = {\n    margin: {\n      top: 2,\n      right: 2,\n      bottom: 2,\n      left: 2\n    },\n    width: 250,\n    height: 45,\n\n    // Animations\n    mouseChaseDuration: 0,\n    tooltipEase: d3.easeQuadInOut,\n\n    tooltipHeight: 48,\n    tooltipWidth: 160,\n\n    dateFormat: \"%b %d, %Y\",\n    numberFormat: \".2f\",\n    seriesOrder: [],\n\n    // from chart\n    keyType: \"time\"\n  }\n\n  let scales = {\n    colorScale: null\n  }\n\n  const cache = {\n    container: _container,\n    root: null,\n    chartWidth: null,\n    chartHeight: null,\n    tooltipDivider: null,\n    tooltipBody: null,\n    tooltipTitle: null,\n    tooltipBackground: null,\n    xPosition: null,\n    yPosition: null,\n    content: null,\n    title: null,\n    isEnabled: true\n  }\n\n  function buildSVG () {\n    cache.chartWidth = config.width - config.margin.left - config.margin.right\n    cache.chartHeight = config.height - config.margin.top - config.margin.bottom\n\n    if (!cache.root) {\n      cache.root = cache.container.append(\"div\")\n          .attr(\"class\", isLegend ? \"legend-group\" : \"tooltip-group\")\n          .style(\"position\", \"absolute\")\n          .style(\"pointer-events\", \"none\")\n\n      cache.tooltipTitle = cache.root.append(\"div\")\n          .attr(\"class\", \"tooltip-title\")\n\n      cache.tooltipBody = cache.root.append(\"div\")\n          .attr(\"class\", \"tooltip-body\")\n    }\n  }\n\n  function calculateTooltipPosition (_mouseX, _mouseY) {\n    const OFFSET = 4\n    const tooltipSize = cache.root.node().getBoundingClientRect()\n    const tooltipX = _mouseX\n    let avoidanceOffset = OFFSET\n    const tooltipY = _mouseY + config.margin.top - tooltipSize.height / 2\n\n    if (_mouseX > (cache.chartWidth / 2)) {\n      avoidanceOffset = -tooltipSize.width - OFFSET\n    }\n    return [tooltipX + avoidanceOffset, tooltipY]\n  }\n\n  function move () {\n    const xPosition = cache.xPosition === \"auto\"\n        ? cache.chartWidth\n        : cache.xPosition\n\n    const yPosition = cache.yPosition === \"auto\"\n        ? config.margin.top\n        : cache.yPosition\n\n    cache.root.transition()\n      .duration(config.mouseChaseDuration)\n      .ease(config.tooltipEase)\n      .style(\"top\", `${yPosition}px`)\n      .style(\"left\", function left () {\n        const width = cache.yPosition === \"auto\" ? this.getBoundingClientRect().width : 0\n        return `${xPosition + config.margin.left - width}px`\n      })\n    return this\n  }\n\n  function drawContent () {\n    const content = cache.content\n    const formatter = d3.format(config.numberFormat)\n\n    const tooltipItems = cache.tooltipBody.selectAll(\".tooltip-item\")\n        .data(content)\n    const tooltipItemsUpdate = tooltipItems.enter().append(\"div\")\n      .attr(\"class\", \"tooltip-item\")\n      .merge(tooltipItems)\n    tooltipItems.exit().remove()\n\n    const tooltipItem = tooltipItemsUpdate.selectAll(\".section\")\n      .data((d) => {\n        const legendData = [\n          {key: \"tooltip-color\", value: scales.colorScale(d[keys.ID])},\n          {key: \"tooltip-label\", value: d[keys.LABEL]}\n        ]\n        if (typeof d[keys.VALUE] !== \"undefined\") {\n          legendData.push({key: \"value\", value: d[keys.VALUE]})\n        }\n        return legendData\n      })\n    tooltipItem.enter().append(\"div\")\n      .merge(tooltipItem)\n      .attr(\"class\", (d) => [\"section\", d.key].join(\" \"))\n      .each(function each (d) {\n        const selection = d3.select(this)\n        if (d.key === \"tooltip-color\") {\n          selection.style(\"background\", d.value)\n        } else if (d.key === \"value\") {\n          selection.html(formatter(d.value))\n        } else {\n          selection.html(d.value)\n        }\n      })\n    tooltipItem.exit().remove()\n    return this\n  }\n\n  function drawTitle () {\n    let title = cache.title\n\n    if (typeof title === \"object\") {\n      title = d3.timeFormat(config.dateFormat)(title)\n    }\n\n    cache.tooltipTitle.html(title)\n    return this\n  }\n\n  function drawTooltip () {\n    buildSVG()\n    drawTitle()\n    drawContent()\n    move()\n    return this\n  }\n\n  function setupContent (_series) {\n    let series = _series\n\n    if (config.seriesOrder.length) {\n      series = sortByTopicsOrder(_series)\n    } else if (_series.length && _series[0][keys.LABEL]) {\n      series = sortByAlpha(_series)\n    }\n\n    cache.content = series\n    return this\n  }\n\n  function sortByTopicsOrder (_series, _order = seriesOrder) {\n    return _order.map((orderName) => _series.filter(({name}) => name === orderName)[0])\n  }\n\n  function sortByAlpha (_series) {\n    const series = cloneData(_series)\n    return series.sort((a, b) => a[keys.LABEL].localeCompare(b[keys.LABEL], \"en\", {numeric: false}))\n  }\n\n  function hide () {\n    if (!cache.root) { return null }\n    cache.root.style(\"display\", \"none\")\n    return this\n  }\n\n  function show () {\n    if (!cache.root) { return null }\n    cache.root.style(\"display\", \"block\")\n    return this\n  }\n\n  function setVisibility (_shouldBeVisible) {\n    cache.isEnabled = _shouldBeVisible\n    if (!cache.root) { return null }\n    if (cache.isEnabled) {\n      show()\n    } else {\n      hide()\n    }\n    return this\n  }\n\n  function setupTooltip (_dataPoint, _xPosition, _yPosition) {\n    buildSVG()\n    const [tooltipX, tooltipY] = calculateTooltipPosition(_xPosition, _yPosition)\n    setXPosition(tooltipX)\n    setYPosition(tooltipY)\n    setTitle(_dataPoint[keys.DATA])\n    setupContent(_dataPoint[keys.SERIES])\n\n    drawTooltip()\n    return this\n  }\n\n  function bindEvents (_dispatcher) {\n    _dispatcher.on(\"mouseOverPanel.tooltip\", show)\n      .on(\"mouseMovePanel.tooltip\", setupTooltip)\n      .on(\"mouseOutPanel.tooltip\", hide)\n    return this\n  }\n\n  function setConfig (_config) {\n    config = override(config, _config)\n    return this\n  }\n\n  function setScales (_scales) {\n    scales = override(scales, _scales)\n    return this\n  }\n\n  function setTitle (_title) {\n    cache.title = _title\n    return this\n  }\n\n  function setXPosition (_xPosition) {\n    cache.xPosition = _xPosition\n    return this\n  }\n\n  function setYPosition (_yPosition) {\n    cache.yPosition = _yPosition\n    return this\n  }\n\n  function setContent (_content) {\n    cache.content = _content\n    return this\n  }\n\n  return {\n    bindEvents,\n    setXPosition,\n    setYPosition,\n    setContent,\n    setTitle,\n    hide,\n    show,\n    drawTooltip,\n    setConfig,\n    setScales,\n    setVisibility\n  }\n}\n\n\n\n// WEBPACK FOOTER //\n// ./src/charts/tooltip.js","import Tooltip from \"./tooltip\"\n\nexport default function Legend (_container) {\n  const IS_LEGEND = true\n  return Tooltip(_container, IS_LEGEND)\n}\n\n\n\n// WEBPACK FOOTER //\n// ./src/charts/legend.js","import * as d3 from \"./helpers/d3-service\"\n\nimport {keys} from \"./helpers/constants\"\nimport {cloneData, invertScale, sortData, override} from \"./helpers/common\"\n\nexport default function Brush (_container) {\n\n  let config = {\n    margin: {\n      top: 60,\n      right: 30,\n      bottom: 40,\n      left: 70\n    },\n    width: 800,\n    height: 500,\n    keyType: null\n  }\n\n  let scales = {\n    xScale: null\n  }\n\n  const cache = {\n    container: _container,\n    dateRange: [null, null],\n    brush: null,\n    chartBrush: null,\n    handle: null,\n    chartWidth: null,\n    chartHeight: null,\n    isEnabled: true\n  }\n\n  let data = {\n    dataBySeries: null\n  }\n\n  let brushExtent = null\n\n  // events\n  const dispatcher = d3.dispatch(\"brushStart\", \"brushMove\", \"brushEnd\")\n\n  function buildSVG () {\n    cache.chartWidth = Math.max(config.width - config.margin.left - config.margin.right, 0)\n    cache.chartHeight = Math.max(config.height - config.margin.top - config.margin.bottom, 0)\n\n    if (!cache.svg) {\n      cache.svg = cache.container.append(\"g\")\n          .classed(\"brush-group\", true)\n    }\n  }\n\n  function buildBrush () {\n    cache.brush = cache.brush || d3.brushX()\n        .on(\"start\", handleBrushStart)\n        .on(\"brush\", handleBrushMove)\n        .on(\"end\", handleBrushEnd)\n\n    cache.brush.extent([[0, 0], [cache.chartWidth, cache.chartHeight]])\n\n    cache.chartBrush = cache.svg.call(cache.brush)\n\n    cache.chartBrush.selectAll(\".brush-rect\")\n      .attr(\"height\", cache.chartHeight)\n\n    moveBrush()\n  }\n\n  function getDataExtent () {\n    const selection = d3.event.selection\n    const dataExtent = selection.map((d) => invertScale(scales.xScale, d, config.keyType))\n    return dataExtent\n  }\n\n  function validateExtent (_brushExtent) {\n    return (Array.isArray(_brushExtent)\n      && _brushExtent[0] !== null\n      && typeof _brushExtent[0] !== \"undefined\"\n      && _brushExtent[1] !== null\n      && typeof _brushExtent[1] !== \"undefined\")\n  }\n\n  function clampBrush (_dataExtent, _brushExtent) {\n    return [Math.max(_dataExtent[0], _brushExtent[0]), Math.min(_dataExtent[1], _brushExtent[1])]\n  }\n\n  function moveBrush () {\n    if (brushExtent === null) {\n      return this\n    }\n    const dataExtent = scales.xScale.domain()\n    const extent = clampBrush(dataExtent, brushExtent)\n    if (extent) {\n      cache.svg.call(cache.brush.move, extent.map((d) => scales.xScale(d)))\n    }\n    return this\n  }\n\n  function handleBrushStart () {\n    if (!d3.event.sourceEvent || !d3.event.selection) {\n      return\n    }\n    dispatcher.call(\"brushStart\", this, getDataExtent(), config)\n  }\n\n  function handleBrushMove () {\n    if (!d3.event.sourceEvent || !d3.event.selection) {\n      return\n    }\n    dispatcher.call(\"brushMove\", this, getDataExtent(), config)\n  }\n\n  function handleBrushEnd () {\n    // Skip programatic setting and empty selection\n    if (!d3.event.sourceEvent || !d3.event.selection) {\n      return\n    }\n\n    const dataExtent = getDataExtent()\n    dispatcher.call(\"brushEnd\", this, dataExtent, config)\n  }\n\n  function drawBrush () {\n    if (!cache.isEnabled) {\n      destroy()\n    }\n\n    buildSVG()\n\n    if (data.dataBySeries) {\n      buildBrush()\n    }\n    return this\n  }\n\n  function on (...args) {\n    dispatcher.on(...args)\n    return this\n  }\n\n  function setVisibility (_isEnabled) {\n    cache.isEnabled = _isEnabled\n    return this\n  }\n\n  function setConfig (_config) {\n    config = override(config, _config)\n    return this\n  }\n\n  function setBrushExtent (_brushExtent) {\n    if (validateExtent(_brushExtent)) {\n      brushExtent = _brushExtent\n    } else {\n      brushExtent = null\n    }\n    return this\n  }\n\n  function setScales (_scales) {\n    scales = override(scales, _scales)\n    return this\n  }\n\n  function setData (_data) {\n    data = Object.assign({}, data, _data)\n    return this\n  }\n\n  function destroy () {\n    cache.svg.remove()\n    return this\n  }\n\n  return {\n    on,\n    setConfig,\n    setData,\n    setScales,\n    setBrushExtent,\n    drawBrush,\n    setVisibility,\n    destroy\n  }\n}\n\n\n\n// WEBPACK FOOTER //\n// ./src/charts/brush.js","import * as d3 from \"./helpers/d3-service\"\n\nimport {keys} from \"./helpers/constants\"\nimport {override} from \"./helpers/common\"\n\nexport default function Hover (_container) {\n\n  let config = {\n    margin: {\n      top: 60,\n      right: 30,\n      bottom: 40,\n      left: 70\n    },\n    width: 800,\n    height: 500,\n    dotRadius: null,\n    chartType: null\n  }\n\n  let scales = {\n    yScale: null,\n    y2Scale: null,\n    hasSecondAxis: null,\n    colorScale: null\n  }\n\n  const cache = {\n    container: _container,\n    svg: null,\n    chartWidth: null,\n    chartHeight: null,\n    dateRange: [null, null],\n    brush: null,\n    chartBrush: null,\n    handle: null,\n    data: null,\n    isEnabled: true\n  }\n\n  let data = {\n    stack: null,\n    groupKeys: null\n  }\n\n  // events\n  const dispatcher = d3.dispatch(\"hover\")\n\n  const getColor = (d) => scales.colorScale(d[keys.ID])\n\n  function buildSVG () {\n    cache.chartWidth = config.width - config.margin.left - config.margin.right\n    cache.chartHeight = config.height - config.margin.top - config.margin.bottom\n\n    if (!cache.svg) {\n      cache.svg = cache.container.append(\"g\")\n          .classed(\"hover-group\", true)\n          .style(\"pointer-events\", \"none\")\n    }\n  }\n\n  function drawHover (_dataPoint, _dataPointXPosition) {\n    buildSVG()\n\n    if (!isNaN(_dataPointXPosition)) {\n      moveVerticalMarker(_dataPointXPosition)\n      drawVerticalMarker()\n      if (config.chartType === \"stackedLine\"\n        || config.chartType === \"stackedArea\"\n        || config.chartType === \"stackedBar\") {\n        highlightStackedDataPoints(_dataPoint)\n      } else {\n        highlightDataPoints(_dataPoint)\n      }\n      dispatcher.call(\"hover\", this, _dataPoint)\n    }\n  }\n\n  function show () {\n    if (!cache.svg) { return null }\n    cache.svg.style(\"display\", \"block\")\n    return this\n  }\n\n  function hide () {\n    if (!cache.svg) { return null }\n    cache.svg.style(\"display\", \"none\")\n    return this\n  }\n\n  function highlightDataPoints (_dataPoint) {\n    const dotsData = _dataPoint[keys.SERIES]\n\n    drawHighlightDataPoints(dotsData)\n  }\n\n  function drawHighlightDataPoints (_dotsData) {\n    const dots = cache.svg.selectAll(\".dot\")\n        .data(_dotsData)\n\n    dots.enter()\n      .append(\"circle\")\n      .attr(\"class\", \"dot\")\n      .merge(dots)\n      .attr(\"cy\", (d) => {\n        if (config.chartType === \"stackedArea\" || data.groupKeys[0].indexOf(d[keys.ID]) > -1) {\n          return scales.yScale(d[keys.VALUE])\n        } else {\n          return scales.y2Scale(d[keys.VALUE])\n        }\n      })\n      .attr(\"r\", config.dotRadius)\n      .style(\"stroke\", \"none\")\n      .style(\"fill\", getColor)\n\n    dots.exit().remove()\n  }\n\n  function highlightStackedDataPoints (_dataPoint) {\n    const stackedDataPoint = {key: _dataPoint[keys.DATA]}\n    _dataPoint.series.forEach((d) => {\n      const id = d[keys.ID]\n      stackedDataPoint[id] = d[keys.VALUE]\n    })\n\n    const dotsStack = data.stack([stackedDataPoint])\n    const dotsData = dotsStack.map((d) => {\n      const dot = {value: d[0][1]}\n      dot[keys.ID] = d.key\n      return dot\n    })\n\n    drawHighlightDataPoints(dotsData)\n  }\n\n  function drawVerticalMarker () {\n    const verticalMarkerLine = cache.svg.selectAll(\"line\")\n        .data([0])\n\n    verticalMarkerLine.enter()\n      .append(\"line\")\n      .classed(\"vertical-marker\", true)\n      .merge(verticalMarkerLine)\n      .attr(\"y1\", 0)\n      .attr(\"y2\", cache.chartHeight)\n\n    verticalMarkerLine.exit().remove()\n  }\n\n  function moveVerticalMarker (_verticalMarkerXPosition) {\n    cache.svg.attr(\"transform\", `translate(${[_verticalMarkerXPosition, 0]})`)\n  }\n\n  function bindEvents (_dispatcher) {\n    _dispatcher.on(\"mouseOverPanel.hover\", show)\n      .on(\"mouseMovePanel.hover\", drawHover)\n      .on(\"mouseOutPanel.hover\", hide)\n    return this\n  }\n\n  function on (...args) {\n    dispatcher.on(...args)\n    return this\n  }\n\n  function setConfig (_config) {\n    config = override(config, _config)\n    return this\n  }\n\n  function setScales (_scales) {\n    scales = override(scales, _scales)\n    return this\n  }\n\n  function setData (_data) {\n    data = Object.assign({}, data, _data)\n    return this\n  }\n\n  return {\n    setConfig,\n    setScales,\n    setData,\n    bindEvents,\n    highlightDataPoints,\n    highlightStackedDataPoints,\n    drawVerticalMarker,\n    moveVerticalMarker,\n    on\n  }\n}\n\n\n\n// WEBPACK FOOTER //\n// ./src/charts/hover.js","import * as d3 from \"./helpers/d3-service\"\n\nimport {exclusiveToggle} from \"./interactors\"\n\nexport default function Binning (_container) {\n\n  let config = {\n    margin: {\n      top: 60,\n      right: 30,\n      bottom: 40,\n      left: 70\n    },\n    width: 800,\n    height: 500,\n    autoLabel: \"auto\",\n    binningToggles: [],\n    label: \"BIN:\"\n  }\n\n  const cache = {\n    container: _container,\n    root: null,\n    autoItem: null,\n    binningItems: null,\n    selectedBin: null,\n    isAuto: true,\n    isEnabled: true\n  }\n\n  // events\n  const dispatcher = d3.dispatch(\"change\")\n\n  function buildSVG () {\n\n    if (!cache.root) {\n      cache.root = cache.container.append(\"div\")\n          .attr(\"class\", \"binning-group\")\n          .style(\"float\", \"left\")\n\n      cache.label = cache.root.append(\"div\")\n          .attr(\"class\", \"bin-label\")\n          .text(config.label)\n\n      cache.autoItem = cache.root.append(\"div\")\n          .attr(\"class\", \"item item-auto toggleOnOff\")\n          .on(\"click.select\", function click () {\n            const isSelected = this.classList.contains(\"selected\")\n            const toggled = !isSelected\n            setAuto(toggled)\n            drawBinning()\n            dispatcher.call(\"change\", this, {name: config.autoLabel, isSelected: toggled})\n          })\n          .text(config.autoLabel)\n\n      cache.binningItems = cache.root.selectAll(\".toggleExclusive\")\n          .data(config.binningToggles)\n          .enter().append(\"div\")\n          .attr(\"class\", (d) => `item item-${d} toggleExclusive`)\n          .on(\"click.select\", function click (d) {\n            setBinning(d)\n            drawBinning()\n            const isSelected = this.classList.contains(\"selected\")\n            dispatcher.call(\"change\", this, {name: d, isSelected})\n          })\n          .text((d) => d)\n    }\n\n    const LINE_HEIGHT = 20\n    cache.root\n      .style(\"top\", `${config.margin.top - LINE_HEIGHT}px`)\n      .style(\"left\", `${config.margin.left}px`)\n\n    changeBinning(cache.selectedBin)\n    toggleAuto(cache.isAuto)\n  }\n\n  function changeBinning (_selectedItemName) {\n    if (_selectedItemName) {\n      exclusiveToggle(cache.binningItems, `.item-${_selectedItemName}`)\n    }\n  }\n\n  function toggleAuto (_shouldBeSelected) {\n    cache.autoItem\n      .classed(\"selected\", _shouldBeSelected)\n      .classed(\"dimmed\", !_shouldBeSelected)\n  }\n\n  function drawBinning () {\n    if (cache.isEnabled) {\n      buildSVG()\n    } else {\n      destroy()\n    }\n    return this\n  }\n\n  function setVisibility (_shouldBeVisible) {\n    cache.isEnabled = _shouldBeVisible\n    drawBinning()\n    return this\n  }\n\n  function setBinning (_selectedBin) {\n    cache.selectedBin = _selectedBin\n    return this\n  }\n\n  function setAuto (_isAuto) {\n    cache.isAuto = _isAuto\n    return this\n  }\n\n  function on (...args) {\n    dispatcher.on(...args)\n    return this\n  }\n\n  function setConfig (_config) {\n    config = Object.assign({}, config, _config)\n    return this\n  }\n\n  function destroy () {\n    cache.root.remove()\n  }\n\n  return {\n    on,\n    setConfig,\n    destroy,\n    drawBinning,\n    setBinning,\n    setAuto,\n    setVisibility\n  }\n}\n\n\n\n// WEBPACK FOOTER //\n// ./src/charts/binning.js","import * as d3 from \"./helpers/d3-service\"\n\n/**\n * Toggles selection on clickable elements. Will set classes \"selected\" and \"dimmed\".\n * @param  {Number} selector A valid selector of the elements to toggle\n * @example\n * barChart.on('customClick', britecharts.interactors.multiToggle('rect.bar'))\n *\n * @return {void}\n */\n\nexport function toggleOnOff (selector, bool) {\n  const shouldBeSelected = typeof bool === \"undefined\" ? !d3.select(selector).classed(\"selected\") : bool\n  d3.select(selector)\n    .classed(\"selected\", shouldBeSelected)\n    .classed(\"dimmed\", !shouldBeSelected)\n}\n\nexport function exclusiveToggle (othersSelection, selector) {\n  return toggle(othersSelection, selector, {\n    toggleOffIsEnabled: false,\n    toggleMultipleIsEnabled: false\n  })\n}\n\nexport function toggle (othersSelection, selector, options = {toggleOffIsEnabled: false, toggleMultipleIsEnabled: false}) {\n  /* eslint-disable consistent-this */\n  let hasSelection = false\n  const selectionNode = document.querySelector(selector)\n\n  othersSelection.classed(\"selected\", function selectedClass () {\n    const isSelected = this.classList.contains(\"selected\")\n    const hasJustBeenClicked = this === selectionNode\n    let shouldBeSelected = false\n\n    if (hasJustBeenClicked) {\n      shouldBeSelected = options.toggleOffIsEnabled ? !isSelected : true\n    } else {\n      shouldBeSelected = options.toggleMultipleIsEnabled ? isSelected : false\n    }\n\n    hasSelection = hasSelection || shouldBeSelected\n    return shouldBeSelected\n  })\n\n  othersSelection.classed(\"dimmed\", function dimmedClass () {\n    return hasSelection && !this.classList.contains(\"selected\")\n  })\n  /* eslint-enable consistent-this */\n}\n\nexport function blurOnEnter (selection) {\n  selection.on(\"keypress.enter\", function keypress () {\n    if (d3.event.key === \"Enter\") { this.blur() }\n  })\n}\n\n\n\n// WEBPACK FOOTER //\n// ./src/charts/interactors.js","import * as d3 from \"./helpers/d3-service\"\n\nimport {override, stringToType} from \"./helpers/common\"\nimport {blurOnEnter} from \"./interactors\"\n\nexport default function DomainEditor (_container) {\n\n  let config = {\n    margin: {\n      top: 60,\n      right: 30,\n      bottom: 40,\n      left: 70\n    },\n    width: 800,\n    height: 500,\n    keyType: null,\n    dateFormat: \"%b %d, %Y\",\n    numberFormat: \".2f\",\n    xDomain: \"auto\",\n    yDomain: \"auto\",\n    y2Domain: \"auto\",\n    xLock: false,\n    yLock: false,\n    y2Lock: false\n  }\n\n  const cache = {\n    container: _container,\n    root: null,\n    xHitZone: null,\n    yHitZone: null,\n    y2HitZone: null,\n    yMaxInput: null,\n    yMinInput: null,\n    yLockIcon: null,\n    y2MaxInput: null,\n    y2MinInput: null,\n    y2LockIcon: null,\n    xMinInput: null,\n    xMaxInput: null,\n    xLockIcon: null,\n    chartWidth: null,\n    chartHeight: null,\n    isEnabled: true\n  }\n\n  let scales = {\n    xScale: null,\n    yScale: null,\n    y2Scale: null,\n    hasSecondAxis: null\n  }\n\n  // events\n  const dispatcher = d3.dispatch(\"domainChange\", \"domainLockToggle\")\n\n  function buildSVG () {\n    cache.chartWidth = config.width - config.margin.left - config.margin.right\n    cache.chartHeight = config.height - config.margin.top - config.margin.bottom\n    const xDomain = config.xDomain === \"auto\" ? scales.xScale.domain() : config.xDomain\n    const yDomain = config.yDomain === \"auto\" ? scales.yScale.domain() : config.yDomain\n    const y2Domain = (config.y2Domain === \"auto\" && scales.y2Scale) ? scales.y2Scale.domain() : config.y2Domain\n\n    let xFormatter = (d) => d\n    if (config.keyType === \"time\") {\n      xFormatter = d3.utcFormat(config.dateFormat)\n    } else if (config.keyType === \"number\") {\n      xFormatter = d3.format(config.numberFormat)\n    }\n\n    const yFormatter = d3.format(config.numberFormat)\n    const y2Formatter = d3.format(config.numberFormat)\n\n    if (!cache.root) {\n      cache.root = cache.container\n          .append(\"div\")\n          .attr(\"class\", \"domain-input-group\")\n          .style(\"position\", \"absolute\")\n          .style(\"top\", 0)\n\n      // hit zones\n      cache.xHitZone = cache.root.append(\"div\")\n          .attr(\"class\", \"hit-zone x\")\n          .style(\"pointer-events\", \"all\")\n          .style(\"position\", \"absolute\")\n          .on(\"mouseover.dispatch\", showXEditor)\n          .on(\"mouseout.dispatch\", hideXEditor)\n\n      cache.yHitZone = cache.root.append(\"div\")\n          .attr(\"class\", \"hit-zone y\")\n          .style(\"pointer-events\", \"all\")\n          .style(\"position\", \"absolute\")\n          .on(\"mouseover.dispatch\", showYEditor)\n          .on(\"mouseout.dispatch\", hideYEditor)\n\n      cache.y2HitZone = cache.root.append(\"div\")\n          .attr(\"class\", \"hit-zone y2\")\n          .style(\"pointer-events\", \"all\")\n          .style(\"position\", \"absolute\")\n      if (scales.hasSecondAxis) {\n        cache.y2HitZone\n          .on(\"mouseover.dispatch\", showY2Editor)\n          .on(\"mouseout.dispatch\", hideY2Editor)\n      }\n\n      // y input group\n      cache.yMaxInput = cache.yHitZone.append(\"div\")\n        .attr(\"class\", \"domain-input y max\")\n        .style(\"position\", \"absolute\")\n        .attr(\"contentEditable\", true)\n        .on(\"blur\", function change () {\n          const domain = scales.yScale.domain()\n          dispatcher.call(\"domainChange\", this, {axis: \"y\", extent: [domain[0], Number(this.innerText)]})\n        })\n        .call(blurOnEnter)\n\n      cache.yMinInput = cache.yHitZone.append(\"div\")\n        .attr(\"class\", \"domain-input y min\")\n        .style(\"position\", \"absolute\")\n        .attr(\"contentEditable\", true)\n        .on(\"blur\", function change () {\n          const domain = scales.yScale.domain()\n          dispatcher.call(\"domainChange\", this, {axis: \"y\", extent: [Number(this.innerText), domain[1]]})\n        })\n        .call(blurOnEnter)\n\n      cache.yLockIcon = cache.yHitZone.append(\"div\")\n        .attr(\"class\", \"domain-lock y\")\n        .style(\"position\", \"absolute\")\n        .on(\"click\", function change () {\n          const isLocked = this.classList.contains(\"locked\")\n          this.classList.toggle(\"locked\", !isLocked)\n          dispatcher.call(\"domainLockToggle\", this, {isLocked: !isLocked, axis: \"y\"})\n        })\n\n      // y2 input group\n      cache.y2MaxInput = cache.y2HitZone.append(\"div\")\n        .attr(\"class\", \"domain-input y2 max\")\n        .style(\"position\", \"absolute\")\n        .attr(\"contentEditable\", true)\n        .on(\"blur\", function change () {\n          const domain = scales.y2Scale.domain()\n          dispatcher.call(\"domainChange\", this, {axis: \"y2\", extent: [domain[0], Number(this.innerText)]})\n        })\n        .call(blurOnEnter)\n\n      cache.y2MinInput = cache.y2HitZone.append(\"div\")\n        .attr(\"class\", \"domain-input y2 min\")\n        .style(\"position\", \"absolute\")\n        .attr(\"contentEditable\", true)\n        .on(\"blur\", function change () {\n          const domain = scales.y2Scale.domain()\n          dispatcher.call(\"domainChange\", this, {axis: \"y2\", extent: [Number(this.innerText), domain[1]]})\n        })\n        .call(blurOnEnter)\n\n      cache.y2LockIcon = cache.y2HitZone.append(\"div\")\n        .attr(\"class\", \"domain-lock y2\")\n        .style(\"position\", \"absolute\")\n        .on(\"click\", function change () {\n          const isLocked = this.classList.contains(\"locked\")\n          this.classList.toggle(\"locked\", !isLocked)\n          dispatcher.call(\"domainLockToggle\", this, {isLocked: !isLocked, axis: \"y2\"})\n        })\n\n      // x input group\n      cache.xMinInput = cache.xHitZone.append(\"div\")\n        .attr(\"class\", \"domain-input x min\")\n        .style(\"position\", \"absolute\")\n        .attr(\"contentEditable\", true)\n        .on(\"blur\", function change () {\n          const domain = scales.xScale.domain()\n          const min = stringToType(this.innerText, config.keyType)\n          dispatcher.call(\"domainChange\", this, {axis: \"x\", extent: [min, domain[1]]})\n        })\n        .call(blurOnEnter)\n\n      cache.xMaxInput = cache.xHitZone.append(\"div\")\n        .attr(\"class\", \"domain-input x max\")\n        .style(\"position\", \"absolute\")\n        .attr(\"contentEditable\", true)\n        .on(\"blur\", function change () {\n          const domain = scales.xScale.domain()\n          const max = stringToType(this.innerText, config.keyType)\n          dispatcher.call(\"domainChange\", this, {axis: \"x\", extent: [domain[0], max]})\n        })\n        .call(blurOnEnter)\n\n      cache.xLockIcon = cache.xHitZone.append(\"div\")\n        .attr(\"class\", \"domain-lock x\")\n        .style(\"position\", \"absolute\")\n        .on(\"click\", function change () {\n          const isLocked = this.classList.contains(\"locked\")\n          this.classList.toggle(\"locked\", !isLocked)\n          dispatcher.call(\"domainLockToggle\", this, {isLocked: !isLocked, axis: \"x\"})\n        })\n\n      hideYEditor()\n      hideY2Editor()\n      hideXEditor()\n    }\n\n    const HOVER_ZONE_SIZE = 40\n    const LOCK_SIZE = 12\n    const INPUT_HEIGHT = 12\n    const PADDING = 4\n    const INPUT_WIDTH = HOVER_ZONE_SIZE - PADDING\n\n    cache.xHitZone\n      .style(\"width\", `${cache.chartWidth + HOVER_ZONE_SIZE * 2}px`)\n      .style(\"height\", `${HOVER_ZONE_SIZE}px`)\n      .style(\"top\", `${config.margin.top + cache.chartHeight}px`)\n      .style(\"left\", `${config.margin.left - HOVER_ZONE_SIZE}px`)\n\n    cache.yHitZone\n      .style(\"width\", `${HOVER_ZONE_SIZE}px`)\n      .style(\"height\", `${cache.chartHeight + HOVER_ZONE_SIZE}px`)\n      .style(\"top\", `${config.margin.top - HOVER_ZONE_SIZE}px`)\n      .style(\"left\", `${config.margin.left - HOVER_ZONE_SIZE}px`)\n\n    cache.y2HitZone\n      .style(\"width\", `${HOVER_ZONE_SIZE}px`)\n      .style(\"height\", `${cache.chartHeight + HOVER_ZONE_SIZE}px`)\n      .style(\"top\", `${config.margin.top - HOVER_ZONE_SIZE}px`)\n      .style(\"left\", `${config.margin.left + cache.chartWidth}px`)\n\n    cache.yMaxInput\n      .style(\"width\", `${INPUT_WIDTH}px`)\n      .style(\"top\", `${HOVER_ZONE_SIZE}px`)\n      .text(yFormatter(yDomain[1]))\n\n    cache.yMinInput\n      .style(\"width\", `${INPUT_WIDTH}px`)\n      .style(\"top\", `${cache.chartHeight + HOVER_ZONE_SIZE - INPUT_HEIGHT}px`)\n      .text(yFormatter(yDomain[0]))\n\n    cache.yLockIcon\n      .classed(\"locked\", config.yLock)\n      .style(\"width\", `${LOCK_SIZE}px`)\n      .style(\"height\", `${LOCK_SIZE}px`)\n      .style(\"left\", `${HOVER_ZONE_SIZE - LOCK_SIZE}px`)\n      .style(\"top\", `${HOVER_ZONE_SIZE - LOCK_SIZE}px`)\n\n    cache.y2MaxInput\n      .style(\"width\", `${INPUT_WIDTH}px`)\n      .style(\"top\", `${HOVER_ZONE_SIZE}px`)\n      .style(\"left\", `${PADDING}px`)\n      .text(y2Formatter(y2Domain[1]))\n\n    cache.y2MinInput\n      .style(\"width\", `${INPUT_WIDTH}px`)\n      .style(\"top\", `${cache.chartHeight + HOVER_ZONE_SIZE - INPUT_HEIGHT}px`)\n      .style(\"left\", `${PADDING}px`)\n      .text(y2Formatter(y2Domain[0]))\n\n    cache.y2LockIcon\n      .classed(\"locked\", config.y2Lock)\n      .style(\"width\", `${LOCK_SIZE}px`)\n      .style(\"height\", `${LOCK_SIZE}px`)\n      .style(\"top\", `${HOVER_ZONE_SIZE - LOCK_SIZE}px`)\n\n    cache.xMinInput\n      .style(\"width\", `${INPUT_WIDTH}px`)\n      .style(\"top\", `${PADDING}px`)\n      .style(\"left\", `${HOVER_ZONE_SIZE}px`)\n      .text(xFormatter(xDomain[0]))\n\n    cache.xMaxInput\n      .style(\"width\", `${INPUT_WIDTH}px`)\n      .style(\"top\", `${PADDING}px`)\n      .style(\"left\", `${HOVER_ZONE_SIZE + cache.chartWidth - INPUT_WIDTH}px`)\n      .text(xFormatter(xDomain[1]))\n\n    cache.xLockIcon\n      .classed(\"locked\", config.xLock)\n      .style(\"width\", `${LOCK_SIZE}px`)\n      .style(\"height\", `${LOCK_SIZE}px`)\n      .style(\"left\", `${HOVER_ZONE_SIZE + cache.chartWidth}px`)\n  }\n\n  function showYEditor () {\n    cache.yHitZone.style(\"opacity\", \"1\")\n  }\n\n  function hideYEditor () {\n    cache.yHitZone.style(\"opacity\", \"0\")\n  }\n\n  function showY2Editor () {\n    cache.y2HitZone.style(\"opacity\", \"1\")\n  }\n\n  function hideY2Editor () {\n    cache.y2HitZone.style(\"opacity\", \"0\")\n  }\n\n  function showXEditor () {\n    cache.xHitZone.style(\"opacity\", \"1\")\n  }\n\n  function hideXEditor () {\n    cache.xHitZone.style(\"opacity\", \"0\")\n  }\n\n  function drawDomainEditor () {\n    if (cache.isEnabled) {\n      buildSVG()\n    } else {\n      destroy()\n    }\n    return this\n  }\n\n  function on (...args) {\n    dispatcher.on(...args)\n    return this\n  }\n\n  function setVisibility (_shouldBeVisible) {\n    cache.isEnabled = _shouldBeVisible\n    drawDomainEditor()\n    return this\n  }\n\n  function setScales (_scales) {\n    scales = override(scales, _scales)\n    return this\n  }\n\n  function setConfig (_config) {\n    config = override(config, _config)\n    return this\n  }\n\n  function destroy () {\n    if (cache.root) {\n      cache.root.remove()\n    }\n  }\n\n  return {\n    on,\n    setScales,\n    setConfig,\n    drawDomainEditor,\n    setVisibility,\n    destroy\n  }\n}\n\n\n\n// WEBPACK FOOTER //\n// ./src/charts/domain-editor.js","import * as d3 from \"./helpers/d3-service\"\n\nimport {override} from \"./helpers/common\"\nimport {blurOnEnter} from \"./interactors\"\n\nexport default function BrushRangeEditor (_container) {\n\n  let config = {\n    margin: {\n      top: 60,\n      right: 30,\n      bottom: 40,\n      left: 70\n    },\n    width: 800,\n    height: 500,\n    keyType: \"time\",\n    dateFormat: \"%b %d, %Y\",\n    numberFormat: \".2f\"\n  }\n\n  const cache = {\n    container: _container,\n    root: null,\n    inputMin: null,\n    inputMax: null,\n    rangeMin: null,\n    rangeMax: null,\n    chartWidth: null,\n    chartHeight: null,\n    isEnabled: true\n  }\n\n  let scales = {\n    xScale: null\n  }\n\n  // events\n  const dispatcher = d3.dispatch(\"rangeChange\")\n\n  function buildSVG () {\n    cache.chartWidth = config.width - config.margin.left - config.margin.right\n    cache.chartHeight = config.height - config.margin.top - config.margin.bottom\n\n    if (!cache.root) {\n      cache.root = cache.container\n          .append(\"div\")\n          .attr(\"class\", \"brush-range-input-group\")\n          .style(\"top\", 0)\n\n      cache.inputMax = cache.root.append(\"div\")\n        .attr(\"class\", \"brush-range-input max\")\n        .attr(\"contentEditable\", true)\n        .on(\"blur\", function change () {\n          cache.rangeMax = cache.inputMax.text()\n          dispatcher.call(\"rangeChange\", this, {value: cache.rangeMax, type: \"max\"})\n        })\n        .call(blurOnEnter)\n        .style(\"float\", \"right\")\n\n      cache.root.append(\"div\")\n        .attr(\"class\", \"separator\")\n        .text(\"-\")\n        .style(\"float\", \"right\")\n\n      cache.inputMin = cache.root.append(\"div\")\n        .attr(\"class\", \"brush-range-input min\")\n        .attr(\"contentEditable\", true)\n        .on(\"blur\", function change () {\n          cache.rangeMin = cache.inputMin.text()\n          dispatcher.call(\"rangeChange\", this, {value: cache.rangeMin, type: \"min\"})\n        })\n        .call(blurOnEnter)\n        .style(\"float\", \"right\")\n    }\n\n    const domain = scales.xScale.domain()\n    let rangeMin = cache.rangeMin === null ? domain[0] : cache.rangeMin\n    let rangeMax = cache.rangeMax === null ? domain[1] : cache.rangeMax\n    if (config.keyType === \"time\") {\n      const format = d3.utcFormat(config.dateFormat)\n      rangeMin = format(new Date(rangeMin))\n      rangeMax = format(new Date(rangeMax))\n    } else {\n      const format = d3.format(config.numberFormat)\n      rangeMin = format(rangeMin)\n      rangeMax = format(rangeMax)\n    }\n\n    cache.inputMin.text(rangeMin)\n    cache.inputMax.text(rangeMax)\n  }\n\n  function drawRangeEditor () {\n    if (cache.isEnabled) {\n      buildSVG()\n    } else {\n      destroy()\n    }\n    return this\n  }\n\n  function setRangeMin (_rangeMin) {\n    cache.rangeMin = _rangeMin\n    return this\n  }\n\n  function setRangeMax (_rangeMax) {\n    cache.rangeMax = _rangeMax\n    return this\n  }\n\n  function setVisibility (_shouldBeVisible) {\n    cache.isEnabled = _shouldBeVisible\n    drawRangeEditor()\n    return this\n  }\n\n  function on (...args) {\n    dispatcher.on(...args)\n    return this\n  }\n\n  function setConfig (_config) {\n    config = override(config, _config)\n    return this\n  }\n\n  function setScales (_scales) {\n    scales = override(scales, _scales)\n    return this\n  }\n\n  function destroy () {\n    if (cache.root) {\n      cache.root.remove()\n    }\n  }\n\n  return {\n    on,\n    setConfig,\n    drawRangeEditor,\n    setRangeMin,\n    setRangeMax,\n    setScales,\n    setVisibility\n  }\n}\n\n\n\n// WEBPACK FOOTER //\n// ./src/charts/brush-range-editor.js","import * as d3 from \"./helpers/d3-service\"\n\nimport {override} from \"./helpers/common\"\n\nexport default function Label (_container) {\n\n  let config = {\n    margin: {\n      top: 60,\n      right: 30,\n      bottom: 40,\n      left: 70\n    },\n    width: 800,\n    height: 500\n  }\n\n  const cache = {\n    container: _container,\n    root: null,\n    xAxisLabel: null,\n    yAxisLabel: null,\n    y2AxisLabel: null,\n    xLabel: null,\n    yLabel: null,\n    y2Label: null,\n    chartWidth: null,\n    chartHeight: null\n  }\n\n  // events\n  const dispatcher = d3.dispatch(\"axisLabelChange\")\n\n  function buildSVG () {\n    cache.chartWidth = config.width - config.margin.left - config.margin.right\n    cache.chartHeight = config.height - config.margin.top - config.margin.bottom\n\n    if (!cache.root) {\n      cache.root = cache.container\n          .append(\"div\")\n          .attr(\"class\", \"label-group\")\n          .style(\"position\", \"absolute\")\n          .style(\"top\", 0)\n          .style(\"white-space\", \"nowrap\")\n\n      cache.xAxisLabel = cache.root.append(\"div\")\n        .attr(\"class\", \"axis-label x\")\n        .style(\"position\", \"absolute\")\n        .attr(\"contentEditable\", true)\n        .on(\"blur\", function blur () {\n          config.xLabel = this.innerText\n          dispatcher.call(\"axisLabelChange\", this, {value: this.innerText, type: \"x\"})\n        })\n        .on(\"keypress\", function keypress () {\n          if (d3.event.key === \"Enter\") {\n            this.blur()\n          }\n        })\n        .style(\"transform\", \"translate(-50%)\")\n\n      cache.yAxisLabel = cache.root.append(\"div\")\n        .attr(\"class\", \"axis-label y\")\n        .style(\"position\", \"absolute\")\n        .attr(\"contentEditable\", true)\n        .on(\"blur\", function blur () {\n          config.yLabel = this.innerText\n          dispatcher.call(\"axisLabelChange\", this, {value: this.innerText, type: \"y\"})\n        })\n        .on(\"keypress\", function keypress () {\n          if (d3.event.key === \"Enter\") {\n            this.blur()\n          }\n        })\n        .style(\"left\", 0)\n        .style(\"transform\", \"translate(-50%) rotate(-90deg)\")\n\n      cache.y2AxisLabel = cache.root.append(\"div\")\n        .attr(\"class\", \"axis-label y2\")\n        .style(\"position\", \"absolute\")\n        .attr(\"contentEditable\", true)\n        .on(\"blur\", function blur () {\n          config.y2Label = this.innerText\n          dispatcher.call(\"axisLabelChange\", this, {value: this.innerText, type: \"y2\"})\n        })\n        .on(\"keypress\", function keypress () {\n          if (d3.event.key === \"Enter\") {\n            this.blur()\n          }\n        })\n        .style(\"transform\", \"translate(-50%) rotate(90deg)\")\n    }\n\n    cache.xAxisLabel\n        .text(config.xLabel)\n        .style(\"top\", function top () {\n          const textHeight = this.getBoundingClientRect().height\n          return `${config.height - textHeight}px`\n        })\n        .style(\"left\", `${config.margin.left + cache.chartWidth / 2}px`)\n\n    cache.yAxisLabel\n      .text(config.yLabel)\n      .style(\"top\", `${config.margin.top + cache.chartHeight / 2}px`)\n      .style(\"left\", function top () {\n        const textWidth = this.getBoundingClientRect().width\n        return `${textWidth / 2}px`\n      })\n\n    cache.y2AxisLabel\n      .text(config.y2Label)\n      .style(\"top\", `${config.margin.top + cache.chartHeight / 2}px`)\n      .style(\"left\", function top () {\n        const textWidth = this.getBoundingClientRect().width\n        return `${config.width - textWidth / 2}px`\n      })\n  }\n\n  function drawLabels () {\n    buildSVG()\n    return this\n  }\n\n  function setXLabels (_xLabel) {\n    config.xLabel = _xLabel\n    return this\n  }\n\n  function setYLabels (_yLabel) {\n    config.yLabel = _yLabel\n    return this\n  }\n\n  function setY2Labels (_y2Label) {\n    config.y2Label = _y2Label\n    return this\n  }\n\n  function on (...args) {\n    dispatcher.on(...args)\n    return this\n  }\n\n  function setConfig (_config) {\n    config = override(config, _config)\n    return this\n  }\n\n  return {\n    on,\n    setConfig,\n    setXLabels,\n    setYLabels,\n    setY2Labels,\n    drawLabels\n  }\n}\n\n\n\n// WEBPACK FOOTER //\n// ./src/charts/label.js","import * as d3 from \"./helpers/d3-service\"\n\nimport {keys} from \"./helpers/constants\"\nimport {invertScale, sortData, cloneData} from \"./helpers/common\"\n\n\nexport default function DataManager () {\n  /* eslint-disable no-magic-numbers */\n  let config = {\n    keyType: \"number\", // number, string, time,\n    range: [0, 100],\n    pointCount: 200,\n    groupCount: 2,\n    lineCount: 4\n  }\n  const cache = {\n    data: null,\n    baseDate: null\n  }\n\n  // accessors\n  const getKey = (d) => d[keys.DATA]\n  const getID = (d) => d[keys.ID]\n\n  const DAY_IN_MS = 1000 * 60 * 60 * 24\n\n  function generateRandomString (_length) {\n    return Math.random().toString(36).replace(/[^a-z0-9]+/g, \"\").substr(0, _length || 5)\n  }\n\n  function generateSeries (_dataKeys, _range, _allowNegative) {\n    let value = d3.randomUniform(..._range)()\n    const variabilityRatio = 50\n    const randomWalkStepSize = (_range[1] - _range[0]) / variabilityRatio\n    const rnd = d3.randomNormal(0, 1)\n    return _dataKeys.map((d) => {\n      value = value + rnd() * randomWalkStepSize\n      if (!_allowNegative && value < randomWalkStepSize) {\n        value = value + randomWalkStepSize\n      }\n      return {\n        value: value.toFixed(2),\n        key: config.keyType === \"time\" ? d.toISOString() : d\n      }\n    })\n  }\n\n  function generateTestDataset () {\n    let dataKeys = null\n    if (config.keyType === \"time\") {\n      cache.baseDate = new Date()\n      const previousDate = new Date(cache.baseDate.getTime() - DAY_IN_MS * config.pointCount)\n      dataKeys = d3.timeDay.range(previousDate, cache.baseDate)\n    } else if (config.keyType === \"string\") {\n      dataKeys = d3.range(0, config.pointCount).map(() => generateRandomString())\n      dataKeys.sort((a, b) => a.localeCompare(b, \"en\", {numeric: false}))\n    } else if (config.keyType === \"number\") {\n      dataKeys = d3.range(0, config.pointCount).map((d, i) => i)\n    }\n\n    const series = d3.range(config.lineCount).map((d) => ({\n      label: `Label ${d}`,\n      id: d,\n      group: d < config.groupCount ? d : 0,\n      values: generateSeries(dataKeys, config.range)\n    }))\n\n    cache.data = {series}\n\n    // console.log(\"generated data\", cache.data)\n\n    return cache.data\n  }\n\n  function cleanData (_data, _keyType, _dataType) {\n    const dataBySeries = cloneData(_data[keys.SERIES])\n    const flatData = []\n\n    // Normalize dataBySeries\n    dataBySeries.forEach((serie) => {\n      serie[keys.VALUES] = sortData(serie[keys.VALUES], _keyType)\n      serie[keys.VALUES].forEach((d) => {\n        d[keys.DATA] = _keyType === \"time\" ? new Date(d[keys.DATA]) : d[keys.DATA]\n        d[keys.VALUE] = Number(d[keys.VALUE])\n      })\n    })\n\n    dataBySeries.forEach((serie) => {\n      serie[keys.VALUES].forEach((d) => {\n        const dataPoint = {}\n        dataPoint[keys.LABEL] = serie[keys.LABEL]\n        dataPoint[keys.GROUP] = serie[keys.GROUP]\n        dataPoint[keys.ID] = serie[keys.ID]\n        dataPoint[keys.DATA] = _keyType === \"time\" ? new Date(d[keys.DATA]) : d[keys.DATA]\n        dataPoint[keys.VALUE] = d[keys.VALUE]\n        flatData.push(dataPoint)\n      })\n    })\n\n    const flatDataSorted = sortData(flatData, _keyType)\n\n    const dataByKey = d3.nest()\n      .key(getKey)\n      .entries(flatDataSorted)\n      .map((d) => {\n        const dataPoint = {}\n        dataPoint[keys.DATA] = _keyType === \"time\" ? new Date(d.key) : d.key\n        dataPoint[keys.SERIES] = d.values\n        return dataPoint\n      })\n\n    const groupKeys = {}\n    dataBySeries.forEach((d) => {\n      if (!groupKeys[d[keys.GROUP]]) {\n        groupKeys[d[keys.GROUP]] = []\n      }\n      groupKeys[d[keys.GROUP]].push(d[keys.ID])\n    })\n\n    const stackData = dataByKey\n        .map((d) => {\n          const points = {\n            key: d[keys.DATA]\n          }\n          d.series.forEach((dB) => {\n            points[dB[keys.ID]] = dB[keys.VALUE]\n          })\n\n          return points\n        })\n\n    const stack = d3.stack()\n        .keys(dataBySeries.map(getID))\n        .order(d3.stackOrderNone)\n        .offset(d3.stackOffsetNone)\n\n    return {dataBySeries, dataByKey, stack, stackData, flatDataSorted, groupKeys}\n  }\n\n  function getNearestDataPoint (_mouseX, _dataObject, _scales, _keyType) {\n    const keyFromInvertedX = invertScale(_scales.xScale, _mouseX, _keyType)\n    const bisectLeft = d3.bisector(getKey).left\n    const dataEntryIndex = bisectLeft(_dataObject.dataByKey, keyFromInvertedX)\n    const dataEntryForXPosition = _dataObject.dataByKey[dataEntryIndex]\n    const dataEntryForXPositionPrev = _dataObject.dataByKey[Math.max(dataEntryIndex - 1, 0)]\n\n    let nearestDataPoint = null\n    if (keyFromInvertedX && dataEntryForXPosition && dataEntryForXPositionPrev) {\n      if ((keyFromInvertedX - dataEntryForXPositionPrev.key)\n          < (dataEntryForXPosition.key - keyFromInvertedX)) {\n        nearestDataPoint = dataEntryForXPositionPrev\n      } else {\n        nearestDataPoint = dataEntryForXPosition\n      }\n    }\n    return nearestDataPoint\n  }\n\n  function filterByKey (_extent) {\n    const data = cloneData(cache.data)\n\n    data[keys.SERIES].forEach((series) => {\n      const values = series[keys.VALUES]\n      const allKeys = values.map(d => d[keys.DATA])\n      const extentMinIndex = allKeys.indexOf(_extent[0])\n      const extentMaxIndex = allKeys.indexOf(_extent[1])\n      series[keys.VALUES] = series[keys.VALUES].slice(extentMinIndex, extentMaxIndex)\n    })\n\n    return data\n  }\n\n  function filterByDate (_dateExtent) {\n    const data = cloneData(cache.data)\n\n    data[keys.SERIES].forEach((series) => {\n      series[keys.VALUES] = series[keys.VALUES].filter((d) => {\n        const epoch = new Date(d[keys.DATA]).getTime()\n        return epoch >= _dateExtent[0].getTime()\n          && epoch <= _dateExtent[1].getTime()\n      })\n    })\n\n    return data\n  }\n\n  function setConfig (_config) {\n    config = Object.assign({}, config, _config)\n    return this\n  }\n\n  function loadCSVData (filename) {\n    return new Promise((resolve, reject) => {\n      d3.text(filename, (text) => {\n        if(text) {\n          resolve(d3.csvParseRows(text));\n        } else {\n          reject(`Cannot load ${filename}`);\n        }\n      })\n    })\n  }\n\n  return {\n    generateTestDataset,\n    generateSeries,\n    cleanData,\n    getNearestDataPoint,\n    filterByDate,\n    filterByKey,\n    setConfig,\n    loadCSVData\n  }\n}\n\n\n\n\n// WEBPACK FOOTER //\n// ./src/charts/data-manager.js","import * as d3 from \"./helpers/d3-service\"\n\nexport default function Observer (_dataManager) {\n  const dispatcher = d3.dispatch(\"brushChange\", \"dataFilter\")\n  const dataManager = _dataManager\n\n  dispatcher.on(\"brushChange.observer\", (_e, _brushConfig) => {\n    const filtered = _brushConfig.keyType === \"time\" ? dataManager.filterByDate(_e)\n      : dataManager.filterByKey(_e)\n    pub(\"dataFilter\", filtered)\n  })\n\n  function sub (...args) {\n    dispatcher.on(...args)\n    return this\n  }\n\n  function pub (_channelName, ...args) {\n    dispatcher.call(_channelName, this, ...args)\n    return this\n  }\n\n  return {\n    sub,\n    pub\n  }\n}\n\n\n\n// WEBPACK FOOTER //\n// ./src/charts/observer.js"],"sourceRoot":""}